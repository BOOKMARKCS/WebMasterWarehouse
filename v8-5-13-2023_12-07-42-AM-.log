v8-version,10,8,168,25,-node.12,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7773e0000,0x7ff77b9ea000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ff8e7a50000,0x7ff8e7c64000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ff8e7630000,0x7ff8e76f3000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ff8e54c0000,0x7ff8e585c000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ff8e5f50000,0x7ff8e5fc1000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ff8e72f0000,0x7ff8e7405000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ff8e28c0000,0x7ff8e2aee000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ff8e5910000,0x7ff8e5918000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ff8e78a0000,0x7ff8e794e000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ff8e51c0000,0x7ff8e52d1000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ff8e7410000,0x7ff8e74b7000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ff8e5860000,0x7ff8e5904000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ff8e5bb0000,0x7ff8e5f39000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ff8e6710000,0x7ff8e68bd000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ff8e3a00000,0x7ff8e3a2d000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ff8e5120000,0x7ff8e5146000,0
shared-library,C:\\WINDOWS\\System32\\OLEAUT32.dll,0x7ff8e5a90000,0x7ff8e5b67000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ff8e4490000,0x7ff8e44b8000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ff8e5b70000,0x7ff8e5b99000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ff8e5000000,0x7ff8e509a000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ff8e52e0000,0x7ff8e53f3000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ff8e4e90000,0x7ff8e4ff6000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\bcrypt.dll,0x7ff8e4840000,0x7ff8e4868000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ff8da0f0000,0x7ff8da124000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ff8e46f0000,0x7ff8e46fc000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ff8e79d0000,0x7ff8e7a01000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ff8e3d60000,0x7ff8e3dad000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ff8e3d40000,0x7ff8e3d53000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ff8df620000,0x7ff8df6cb000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ff8e43f0000,0x7ff8e4459000,0
shared-library,C:\\WINDOWS\\System32\\bcryptprimitives.dll,0x7ff8e50a0000,0x7ff8e511b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ff8e3f90000,0x7ff8e3fa8000,0
shared-library-end
profiler,begin,1000
tick,0x7ff778532cd0,228881,0,0x0,6
new,CodeRange,0x7ff6f8310000,0
new,MemoryChunk,0x19e71c00000,262144
new,MemoryChunk,0x9d1c440000,262144
new,MemoryChunk,0x1173fc40000,262144
new,MemoryChunk,0x4fb6780000,262144
new,MemoryChunk,0x6f345c0000,262144
new,MemoryChunk,0x3eb1cbc0000,262144
heap-capacity,1031008
heap-available,4346312384
new,MemoryChunk,0x2f972880000,262144
tick,0x7ff777d70f89,234973,0,0x0,6
new,MemoryChunk,0x1f600740000,270336
new,MemoryChunk,0xf2fdb40000,262144
new,MemoryChunk,0x33cbf840000,262144
new,MemoryChunk,0x320a78c0000,262144
new,MemoryChunk,0x1c416d80000,262144
new,MemoryChunk,0x19ee5840000,262144
new,MemoryChunk,0x7ff6f8340000,262144
new,MemoryChunk,0x1301b580000,262144
code-creation,Builtin,2,239342,0x7ff77818b8a4,776,DeoptimizationEntry_Eager
code-creation,Builtin,2,239366,0x7ff77818bbe4,780,DeoptimizationEntry_Lazy
code-creation,Builtin,2,239375,0x7ff77818bf24,2280,RecordWriteSaveFP
code-creation,Builtin,2,239386,0x7ff77818c824,960,RecordWriteIgnoreFP
code-creation,Builtin,2,239395,0x7ff77818cc24,344,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,239404,0x7ff77818cda4,124,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,239413,0x7ff77818ce24,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,239421,0x7ff77818cea4,316,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,239430,0x7ff77818cfe4,368,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,239503,0x7ff77818d164,404,CallFunction_ReceiverIsAny
code-creation,Builtin,2,239515,0x7ff77818d324,100,CallBoundFunction
code-creation,Builtin,2,239523,0x7ff77818d3a4,828,CallWrappedFunction
code-creation,Builtin,2,239532,0x7ff77818d6e4,172,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,239540,0x7ff77818d7a4,172,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,239549,0x7ff77818d864,172,Call_ReceiverIsAny
code-creation,Builtin,2,239558,0x7ff77818d924,988,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,239567,0x7ff77818dd24,980,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,239576,0x7ff77818e124,1068,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,239586,0x7ff77818e564,1060,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,239595,0x7ff77818e9a4,1068,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,239603,0x7ff77818ede4,1060,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,239612,0x7ff77818f224,932,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,239621,0x7ff77818f5e4,932,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,239630,0x7ff77818f9a4,932,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,239639,0x7ff77818fd64,756,CallProxy
code-creation,Builtin,2,239647,0x7ff778190064,152,CallVarargs
code-creation,Builtin,2,239654,0x7ff778190124,948,CallWithSpread
code-creation,Builtin,2,239663,0x7ff7781904e4,1976,CallWithSpread_Baseline
code-creation,Builtin,2,239671,0x7ff778190ca4,1916,CallWithSpread_WithFeedback
code-creation,Builtin,2,239680,0x7ff778191424,944,CallWithArrayLike
code-creation,Builtin,2,239688,0x7ff7781917e4,1884,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,239696,0x7ff778191f64,156,CallForwardVarargs
code-creation,Builtin,2,239704,0x7ff778192024,156,CallFunctionForwardVarargs
code-creation,Builtin,2,239712,0x7ff7781920e4,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,239730,0x7ff7781921a4,232,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,239739,0x7ff7781922a4,320,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,239749,0x7ff778192424,32,ConstructFunction
code-creation,Builtin,2,239757,0x7ff778192464,100,ConstructBoundFunction
code-creation,Builtin,2,239765,0x7ff7781924e4,28,ConstructedNonConstructable
code-creation,Builtin,2,239774,0x7ff778192524,104,Construct
code-creation,Builtin,2,239782,0x7ff7781925a4,152,ConstructVarargs
code-creation,Builtin,2,239790,0x7ff778192664,976,ConstructWithSpread
code-creation,Builtin,2,239798,0x7ff778192a64,1772,ConstructWithSpread_Baseline
code-creation,Builtin,2,239807,0x7ff778193164,1760,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,239815,0x7ff778193864,960,ConstructWithArrayLike
code-creation,Builtin,2,239823,0x7ff778193c64,1712,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,239832,0x7ff778194324,196,ConstructForwardVarargs
code-creation,Builtin,2,239840,0x7ff778194424,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,239848,0x7ff778194524,796,Construct_Baseline
code-creation,Builtin,2,239856,0x7ff778194864,812,Construct_WithFeedback
code-creation,Builtin,2,239864,0x7ff778194ba4,472,JSConstructStubGeneric
code-creation,Builtin,2,239872,0x7ff778194da4,368,JSBuiltinsConstructStub
code-creation,Builtin,2,239881,0x7ff778194f24,652,FastNewObject
code-creation,Builtin,2,239888,0x7ff7781951e4,296,FastNewClosure
code-creation,Builtin,2,239896,0x7ff778195324,736,ConstructProxy
code-creation,Builtin,2,239903,0x7ff778195624,360,JSEntry
code-creation,Builtin,2,239911,0x7ff7781957a4,360,JSConstructEntry
code-creation,Builtin,2,239919,0x7ff778195924,360,JSRunMicrotasksEntry
code-creation,Builtin,2,239928,0x7ff778195aa4,100,JSEntryTrampoline
code-creation,Builtin,2,239935,0x7ff778195b24,100,JSConstructEntryTrampoline
code-creation,Builtin,2,239944,0x7ff778195ba4,288,ResumeGeneratorTrampoline
code-creation,Builtin,2,239953,0x7ff778195ce4,1300,StringFromCodePointAt
code-creation,Builtin,2,239990,0x7ff778196224,524,StringEqual
code-creation,Builtin,2,240009,0x7ff778196464,280,StringGreaterThan
code-creation,Builtin,2,240017,0x7ff7781965a4,280,StringGreaterThanOrEqual
code-creation,Builtin,2,240026,0x7ff7781966e4,280,StringLessThan
code-creation,Builtin,2,240034,0x7ff778196824,280,StringLessThanOrEqual
code-creation,Builtin,2,240042,0x7ff778196964,2220,StringSubstring
code-creation,Builtin,2,240050,0x7ff778197224,80,OrderedHashTableHealIndex
code-creation,Builtin,2,240058,0x7ff7781972a4,1084,InterpreterEntryTrampoline
code-creation,Builtin,2,240067,0x7ff7781976e4,1096,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,240076,0x7ff778197b64,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,240084,0x7ff778197be4,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,240093,0x7ff778197c64,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,240102,0x7ff778197ce4,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,240111,0x7ff778197d64,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,240120,0x7ff778197de4,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,240129,0x7ff778197e64,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,240138,0x7ff778197ee4,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,240146,0x7ff778197fe4,96,InterpreterOnStackReplacement
code-creation,Builtin,2,240154,0x7ff778198064,508,BaselineOutOfLinePrologue
code-creation,Builtin,2,240163,0x7ff778198264,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,240171,0x7ff7781982a4,96,BaselineOnStackReplacement
code-creation,Builtin,2,240179,0x7ff778198324,84,BaselineLeaveFrame
code-creation,Builtin,2,240188,0x7ff7781983a4,208,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,240196,0x7ff7781984a4,216,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,240205,0x7ff7781985a4,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,240213,0x7ff778198664,36,MaglevOnStackReplacement
code-creation,Builtin,2,240226,0x7ff7781986a4,564,MaglevOutOfLinePrologue
code-creation,Builtin,2,240234,0x7ff7781988e4,1008,CompileLazy
code-creation,Builtin,2,240244,0x7ff778198ce4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,240254,0x7ff778198d64,256,InstantiateAsmJs
code-creation,Builtin,2,240262,0x7ff778198ea4,32,NotifyDeoptimized
code-creation,Builtin,2,240270,0x7ff778198ee4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,240278,0x7ff778198f24,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,240287,0x7ff778198f64,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,240296,0x7ff778198fa4,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,240312,0x7ff778199024,268,CallApiCallback
code-creation,Builtin,2,240320,0x7ff778199164,248,CallApiGetter
code-creation,Builtin,2,240328,0x7ff778199264,12,HandleApiCall
code-creation,Builtin,2,240336,0x7ff7781992a4,12,HandleApiCallAsFunction
code-creation,Builtin,2,240345,0x7ff7781992e4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,240353,0x7ff778199324,64,AllocateInYoungGeneration
code-creation,Builtin,2,240361,0x7ff7781993a4,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,240370,0x7ff7781993e4,64,AllocateInOldGeneration
code-creation,Builtin,2,240379,0x7ff778199464,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,240388,0x7ff7781994a4,152,NewHeapNumber
code-creation,Builtin,2,240396,0x7ff778199564,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,240404,0x7ff778199724,508,GrowFastDoubleElements
code-creation,Builtin,2,240412,0x7ff778199924,404,GrowFastSmiOrObjectElements
code-creation,Builtin,2,240419,0x7ff778199ae4,480,DebugBreakTrampoline
code-creation,Builtin,2,240427,0x7ff778199ce4,300,RestartFrameTrampoline
code-creation,Builtin,2,240437,0x7ff778199e24,184,ToNumber
code-creation,Builtin,2,240445,0x7ff778199ee4,300,ToNumber_Baseline
code-creation,Builtin,2,240453,0x7ff77819a024,368,ToNumeric_Baseline
code-creation,Builtin,2,240461,0x7ff77819a1a4,104,PlainPrimitiveToNumber
code-creation,Builtin,2,240470,0x7ff77819a224,224,ToNumberConvertBigInt
code-creation,Builtin,2,240479,0x7ff77819a324,132,Typeof
code-creation,Builtin,2,240491,0x7ff77819a3e4,108,BigIntToI64
code-creation,Builtin,2,240498,0x7ff77819a464,4,BigIntToI32Pair
code-creation,Builtin,2,240506,0x7ff77819a4a4,240,I64ToBigInt
code-creation,Builtin,2,240513,0x7ff77819a5a4,4,I32PairToBigInt
code-creation,Builtin,2,240521,0x7ff77819a5e4,112,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,240528,0x7ff77819a664,4504,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,240534,0x7ff77819b824,17288,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,240539,0x7ff77819fbe4,13164,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,240545,0x7ff7781a2f64,628,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,240550,0x7ff7781a31e4,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,240555,0x7ff7781a3264,12,LoadIC_StringLength
code-creation,Builtin,2,240560,0x7ff7781a32a4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,240566,0x7ff7781a32e4,4340,LoadIC_NoFeedback
code-creation,Builtin,2,240571,0x7ff7781a43e4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,240576,0x7ff7781a4424,8360,StoreIC_NoFeedback
code-creation,Builtin,2,240581,0x7ff7781a64e4,4224,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,240587,0x7ff7781a75a4,184,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,240592,0x7ff7781a7664,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,240597,0x7ff7781a76e4,240,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,240603,0x7ff7781a77e4,240,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,240609,0x7ff7781a78e4,240,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,240615,0x7ff7781a79e4,240,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,240621,0x7ff7781a7ae4,14972,StoreFastElementIC_Standard
code-creation,Builtin,2,240627,0x7ff7781ab564,10412,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,240633,0x7ff7781ade24,14212,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,240638,0x7ff7781b15e4,6180,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,240644,0x7ff7781b2e24,8280,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,240650,0x7ff7781b4ea4,18904,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,240656,0x7ff7781b98a4,8280,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,240662,0x7ff7781bb924,10852,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,240668,0x7ff7781be3a4,1160,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,240673,0x7ff7781be864,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,240678,0x7ff7781be924,72,HasIndexedInterceptorIC
code-creation,Builtin,2,240683,0x7ff7781be9a4,164,EnqueueMicrotask
code-creation,Builtin,2,240688,0x7ff7781bea64,8,RunMicrotasksTrampoline
code-creation,Builtin,2,240693,0x7ff7781beaa4,3668,RunMicrotasks
code-creation,Builtin,2,240699,0x7ff7781bf924,3516,HasProperty
code-creation,Builtin,2,240704,0x7ff7781c06e4,1332,DeleteProperty
code-creation,Builtin,2,240709,0x7ff7781c0c24,2564,CopyDataProperties
code-creation,Builtin,2,240714,0x7ff7781c1664,11176,SetDataProperties
code-creation,Builtin,2,240719,0x7ff7781c4224,3244,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,240725,0x7ff7781c4ee4,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,240731,0x7ff7781c4f24,28,Abort
code-creation,Builtin,2,240735,0x7ff7781c4f64,28,AbortCSADcheck
code-creation,Builtin,2,240740,0x7ff7781c4fa4,12,EmptyFunction
code-creation,Builtin,2,240745,0x7ff7781c4fe4,12,Illegal
code-creation,Builtin,2,240750,0x7ff7781c5024,12,StrictPoisonPillThrower
code-creation,Builtin,2,240755,0x7ff7781c5064,12,UnsupportedThrower
code-creation,Builtin,2,240760,0x7ff7781c50a4,60,ReturnReceiver
code-creation,Builtin,2,240765,0x7ff7781c50e4,36,ArrayConstructor
code-creation,Builtin,2,240770,0x7ff7781c5124,400,ArrayConstructorImpl
code-creation,Builtin,2,240775,0x7ff7781c52e4,228,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,240804,0x7ff7781c53e4,228,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,240811,0x7ff7781c54e4,192,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,240817,0x7ff7781c55e4,192,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,240823,0x7ff7781c56e4,192,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,240830,0x7ff7781c57e4,192,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,240836,0x7ff7781c58e4,200,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,240842,0x7ff7781c59e4,200,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,240848,0x7ff7781c5ae4,284,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,240854,0x7ff7781c5c24,472,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,240860,0x7ff7781c5e24,244,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,240867,0x7ff7781c5f24,400,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,240873,0x7ff7781c60e4,244,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,240886,0x7ff7781c61e4,400,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,240892,0x7ff7781c63a4,244,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,240899,0x7ff7781c64a4,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,240905,0x7ff7781c6664,56,ArrayNArgumentsConstructor
code-creation,Builtin,2,240910,0x7ff7781c66a4,12,ArrayConcat
code-creation,Builtin,2,240915,0x7ff7781c66e4,12,ArrayPrototypeFill
code-creation,Builtin,2,240921,0x7ff7781c6724,928,ArrayIncludesSmi
code-creation,Builtin,2,240926,0x7ff7781c6ae4,928,ArrayIncludesSmiOrObject
code-creation,Builtin,2,240931,0x7ff7781c6ea4,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,240936,0x7ff7781c6f64,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,240942,0x7ff7781c7064,592,ArrayIncludes
code-creation,Builtin,2,240946,0x7ff7781c72e4,844,ArrayIndexOfSmi
code-creation,Builtin,2,240952,0x7ff7781c7664,844,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,240957,0x7ff7781c79e4,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,240962,0x7ff7781c7a64,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,240968,0x7ff7781c7ae4,596,ArrayIndexOf
code-creation,Builtin,2,240973,0x7ff7781c7d64,12,ArrayPop
code-creation,Builtin,2,240978,0x7ff7781c7da4,616,ArrayPrototypePop
code-creation,Builtin,2,240983,0x7ff7781c8024,12,ArrayPrototypeGroup
code-creation,Builtin,2,240988,0x7ff7781c8064,12,ArrayPrototypeGroupToMap
code-creation,Builtin,2,240993,0x7ff7781c80a4,12,ArrayPush
code-creation,Builtin,2,240998,0x7ff7781c80e4,2392,ArrayPrototypePush
code-creation,Builtin,2,241003,0x7ff7781c8a64,12,ArrayShift
code-creation,Builtin,2,241008,0x7ff7781c8aa4,12,ArrayUnshift
code-creation,Builtin,2,241013,0x7ff7781c8ae4,952,CloneFastJSArray
code-creation,Builtin,2,241018,0x7ff7781c8ea4,2160,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,241024,0x7ff7781c9724,976,ExtractFastJSArray
code-creation,Builtin,2,241029,0x7ff7781c9b24,268,ArrayPrototypeEntries
code-creation,Builtin,2,241034,0x7ff7781c9c64,256,ArrayPrototypeKeys
code-creation,Builtin,2,241040,0x7ff7781c9da4,268,ArrayPrototypeValues
code-creation,Builtin,2,241045,0x7ff7781c9ee4,4452,ArrayIteratorPrototypeNext
code-creation,Builtin,2,241050,0x7ff7781cb064,5000,FlattenIntoArray
code-creation,Builtin,2,241055,0x7ff7781cc424,4888,FlatMapIntoArray
code-creation,Builtin,2,241060,0x7ff7781cd764,384,ArrayPrototypeFlat
code-creation,Builtin,2,241065,0x7ff7781cd924,444,ArrayPrototypeFlatMap
code-creation,Builtin,2,241071,0x7ff7781cdae4,12,ArrayBufferConstructor
code-creation,Builtin,2,241076,0x7ff7781cdb24,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,241082,0x7ff7781cdb64,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,241099,0x7ff7781cdba4,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,241106,0x7ff7781cdbe4,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,241111,0x7ff7781cdc24,936,AsyncFunctionEnter
code-creation,Builtin,2,241116,0x7ff7781cdfe4,80,AsyncFunctionReject
code-creation,Builtin,2,241122,0x7ff7781ce064,76,AsyncFunctionResolve
code-creation,Builtin,2,241127,0x7ff7781ce0e4,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,241132,0x7ff7781ce124,1568,AsyncFunctionAwaitCaught
code-creation,Builtin,2,241138,0x7ff7781ce764,1568,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,241143,0x7ff7781ceda4,176,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,241149,0x7ff7781cee64,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,241154,0x7ff7781cef24,12,BigIntConstructor
code-creation,Builtin,2,241159,0x7ff7781cef64,12,BigIntAsUintN
code-creation,Builtin,2,241164,0x7ff7781cefa4,12,BigIntAsIntN
code-creation,Builtin,2,241169,0x7ff7781cefe4,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,241174,0x7ff7781cf024,12,BigIntPrototypeToString
code-creation,Builtin,2,241180,0x7ff7781cf064,12,BigIntPrototypeValueOf
code-creation,Builtin,2,241185,0x7ff7781cf0a4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,241197,0x7ff7781cf0e4,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,241206,0x7ff7781cf124,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,241213,0x7ff7781cf164,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,241222,0x7ff7781cf1a4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,241230,0x7ff7781cf1e4,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,241238,0x7ff7781cf224,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,241246,0x7ff7781cf264,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,241253,0x7ff7781cf2a4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,241260,0x7ff7781cf2e4,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,241267,0x7ff7781cf324,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,241274,0x7ff7781cf364,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,241282,0x7ff7781cf3a4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,241290,0x7ff7781cf3e4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,241298,0x7ff7781cf424,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,241306,0x7ff7781cf464,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,241315,0x7ff7781cf4a4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,241323,0x7ff7781cf4e4,12,CallSitePrototypeIsEval
code-creation,Builtin,2,241332,0x7ff7781cf524,12,CallSitePrototypeIsNative
code-creation,Builtin,2,241340,0x7ff7781cf564,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,241348,0x7ff7781cf5a4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,241357,0x7ff7781cf5e4,12,CallSitePrototypeToString
code-creation,Builtin,2,241365,0x7ff7781cf624,12,ConsoleDebug
code-creation,Builtin,2,241373,0x7ff7781cf664,12,ConsoleError
code-creation,Builtin,2,241380,0x7ff7781cf6a4,12,ConsoleInfo
code-creation,Builtin,2,241387,0x7ff7781cf6e4,12,ConsoleLog
code-creation,Builtin,2,241394,0x7ff7781cf724,12,ConsoleWarn
code-creation,Builtin,2,241402,0x7ff7781cf764,12,ConsoleDir
code-creation,Builtin,2,241410,0x7ff7781cf7a4,12,ConsoleDirXml
code-creation,Builtin,2,241417,0x7ff7781cf7e4,12,ConsoleTable
code-creation,Builtin,2,241425,0x7ff7781cf824,12,ConsoleTrace
code-creation,Builtin,2,241432,0x7ff7781cf864,12,ConsoleGroup
code-creation,Builtin,2,241439,0x7ff7781cf8a4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,241456,0x7ff7781cf8e4,12,ConsoleGroupEnd
code-creation,Builtin,2,241467,0x7ff7781cf924,12,ConsoleClear
code-creation,Builtin,2,241475,0x7ff7781cf964,12,ConsoleCount
code-creation,Builtin,2,241482,0x7ff7781cf9a4,12,ConsoleCountReset
code-creation,Builtin,2,241491,0x7ff7781cf9e4,12,ConsoleAssert
code-creation,Builtin,2,241499,0x7ff7781cfa24,12,ConsoleProfile
code-creation,Builtin,2,241507,0x7ff7781cfa64,12,ConsoleProfileEnd
code-creation,Builtin,2,241536,0x7ff7781cfaa4,12,ConsoleTime
code-creation,Builtin,2,241546,0x7ff7781cfae4,12,ConsoleTimeLog
code-creation,Builtin,2,241554,0x7ff7781cfb24,12,ConsoleTimeEnd
code-creation,Builtin,2,241562,0x7ff7781cfb64,12,ConsoleTimeStamp
code-creation,Builtin,2,241570,0x7ff7781cfba4,12,ConsoleContext
code-creation,Builtin,2,241578,0x7ff7781cfbe4,12,DataViewConstructor
code-creation,Builtin,2,241586,0x7ff7781cfc24,12,DateConstructor
code-creation,Builtin,2,241594,0x7ff7781cfc64,212,DatePrototypeGetDate
code-creation,Builtin,2,241603,0x7ff7781cfd64,212,DatePrototypeGetDay
code-creation,Builtin,2,241612,0x7ff7781cfe64,212,DatePrototypeGetFullYear
code-creation,Builtin,2,241620,0x7ff7781cff64,212,DatePrototypeGetHours
code-creation,Builtin,2,241629,0x7ff7781d0064,192,DatePrototypeGetMilliseconds
code-creation,Builtin,2,241637,0x7ff7781d0164,212,DatePrototypeGetMinutes
code-creation,Builtin,2,241646,0x7ff7781d0264,212,DatePrototypeGetMonth
code-creation,Builtin,2,241654,0x7ff7781d0364,212,DatePrototypeGetSeconds
code-creation,Builtin,2,241662,0x7ff7781d0464,124,DatePrototypeGetTime
code-creation,Builtin,2,241670,0x7ff7781d04e4,192,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,241679,0x7ff7781d05e4,192,DatePrototypeGetUTCDate
code-creation,Builtin,2,241688,0x7ff7781d06e4,192,DatePrototypeGetUTCDay
code-creation,Builtin,2,241696,0x7ff7781d07e4,192,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,241705,0x7ff7781d08e4,192,DatePrototypeGetUTCHours
code-creation,Builtin,2,241713,0x7ff7781d09e4,192,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,241721,0x7ff7781d0ae4,192,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,241730,0x7ff7781d0be4,192,DatePrototypeGetUTCMonth
code-creation,Builtin,2,241739,0x7ff7781d0ce4,192,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,241748,0x7ff7781d0de4,124,DatePrototypeValueOf
code-creation,Builtin,2,241756,0x7ff7781d0e64,372,DatePrototypeToPrimitive
code-creation,Builtin,2,241764,0x7ff7781d0fe4,12,DatePrototypeGetYear
code-creation,Builtin,2,241772,0x7ff7781d1024,12,DatePrototypeSetYear
code-creation,Builtin,2,241780,0x7ff7781d1064,12,DateNow
code-creation,Builtin,2,241788,0x7ff7781d10a4,12,DateParse
code-creation,Builtin,2,241795,0x7ff7781d10e4,12,DatePrototypeSetDate
code-creation,Builtin,2,241804,0x7ff7781d1124,12,DatePrototypeSetFullYear
code-creation,Builtin,2,241812,0x7ff7781d1164,12,DatePrototypeSetHours
code-creation,Builtin,2,241821,0x7ff7781d11a4,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,241830,0x7ff7781d11e4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,241838,0x7ff7781d1224,12,DatePrototypeSetMonth
code-creation,Builtin,2,241846,0x7ff7781d1264,12,DatePrototypeSetSeconds
code-creation,Builtin,2,241854,0x7ff7781d12a4,12,DatePrototypeSetTime
code-creation,Builtin,2,241862,0x7ff7781d12e4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,241871,0x7ff7781d1324,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,241879,0x7ff7781d1364,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,241887,0x7ff7781d13a4,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,241896,0x7ff7781d13e4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,241905,0x7ff7781d1424,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,241913,0x7ff7781d1464,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,241922,0x7ff7781d14a4,12,DatePrototypeToDateString
code-creation,Builtin,2,241931,0x7ff7781d14e4,12,DatePrototypeToISOString
code-creation,Builtin,2,241940,0x7ff7781d1524,12,DatePrototypeToUTCString
code-creation,Builtin,2,241949,0x7ff7781d1564,12,DatePrototypeToString
code-creation,Builtin,2,241957,0x7ff7781d15a4,12,DatePrototypeToTimeString
code-creation,Builtin,2,241966,0x7ff7781d15e4,12,DatePrototypeToJson
code-creation,Builtin,2,241974,0x7ff7781d1624,12,DateUTC
code-creation,Builtin,2,241982,0x7ff7781d1664,12,ErrorConstructor
code-creation,Builtin,2,241991,0x7ff7781d16a4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,242000,0x7ff7781d16e4,12,ErrorPrototypeToString
code-creation,Builtin,2,242008,0x7ff7781d1724,12,FunctionConstructor
code-creation,Builtin,2,242054,0x7ff7781d1764,80,FunctionPrototypeApply
code-creation,Builtin,2,242065,0x7ff7781d17e4,12,FunctionPrototypeBind
code-creation,Builtin,2,242073,0x7ff7781d1824,36,FunctionPrototypeCall
code-creation,Builtin,2,242081,0x7ff7781d1864,12,FunctionPrototypeToString
code-creation,Builtin,2,242090,0x7ff7781d18a4,200,CreateIterResultObject
code-creation,Builtin,2,242099,0x7ff7781d19a4,804,CreateGeneratorObject
code-creation,Builtin,2,242107,0x7ff7781d1ce4,12,GeneratorFunctionConstructor
code-creation,Builtin,2,242115,0x7ff7781d1d24,416,GeneratorPrototypeNext
code-creation,Builtin,2,242124,0x7ff7781d1ee4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,242133,0x7ff7781d20a4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,242141,0x7ff7781d2264,12,AsyncFunctionConstructor
code-creation,Builtin,2,242149,0x7ff7781d22a4,388,SuspendGeneratorBaseline
code-creation,Builtin,2,242157,0x7ff7781d2464,100,ResumeGeneratorBaseline
code-creation,Builtin,2,242165,0x7ff7781d24e4,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,242175,0x7ff7781d2524,80,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,242184,0x7ff7781d25a4,12,GlobalDecodeURI
code-creation,Builtin,2,242193,0x7ff7781d25e4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,242201,0x7ff7781d2624,12,GlobalEncodeURI
code-creation,Builtin,2,242209,0x7ff7781d2664,12,GlobalEncodeURIComponent
code-creation,Builtin,2,242218,0x7ff7781d26a4,12,GlobalEscape
code-creation,Builtin,2,242226,0x7ff7781d26e4,12,GlobalUnescape
code-creation,Builtin,2,242234,0x7ff7781d2724,12,GlobalEval
code-creation,Builtin,2,242242,0x7ff7781d2764,136,GlobalIsFinite
code-creation,Builtin,2,242249,0x7ff7781d2824,132,GlobalIsNaN
code-creation,Builtin,2,242257,0x7ff7781d28e4,12,JsonParse
code-creation,Builtin,2,242264,0x7ff7781d2924,12,JsonStringify
code-creation,Builtin,2,242272,0x7ff7781d2964,12,JsonRawJson
code-creation,Builtin,2,242280,0x7ff7781d29a4,12,JsonIsRawJson
code-creation,Builtin,2,242288,0x7ff7781d29e4,12,WebSnapshotSerialize
code-creation,Builtin,2,242296,0x7ff7781d2a24,12,WebSnapshotDeserialize
code-creation,Builtin,2,242303,0x7ff7781d2a64,5108,LoadIC
code-creation,Builtin,2,242311,0x7ff7781d3e64,4740,LoadIC_Megamorphic
code-creation,Builtin,2,242320,0x7ff7781d5124,4944,LoadIC_Noninlined
code-creation,Builtin,2,242328,0x7ff7781d64a4,44,LoadICTrampoline
code-creation,Builtin,2,242337,0x7ff7781d64e4,24,LoadICBaseline
code-creation,Builtin,2,242345,0x7ff7781d6524,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,242354,0x7ff7781d6564,8772,LoadSuperIC
code-creation,Builtin,2,242362,0x7ff7781d87e4,24,LoadSuperICBaseline
code-creation,Builtin,2,242370,0x7ff7781d8824,8404,KeyedLoadIC
code-creation,Builtin,2,242378,0x7ff7781da924,16260,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,242387,0x7ff7781de8e4,44,KeyedLoadICTrampoline
code-creation,Builtin,2,242396,0x7ff7781de924,24,KeyedLoadICBaseline
code-creation,Builtin,2,242404,0x7ff7781de964,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,242413,0x7ff7781de9a4,5348,StoreGlobalIC
code-creation,Builtin,2,242421,0x7ff7781dfea4,44,StoreGlobalICTrampoline
code-creation,Builtin,2,242431,0x7ff7781dfee4,24,StoreGlobalICBaseline
code-creation,Builtin,2,242439,0x7ff7781dff24,5852,StoreIC
code-creation,Builtin,2,242447,0x7ff7781e1624,44,StoreICTrampoline
code-creation,Builtin,2,242455,0x7ff7781e1664,24,StoreICBaseline
code-creation,Builtin,2,242463,0x7ff7781e16a4,5636,DefineNamedOwnIC
code-creation,Builtin,2,242471,0x7ff7781e2ce4,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,242480,0x7ff7781e2d24,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,242489,0x7ff7781e2d64,6408,KeyedStoreIC
code-creation,Builtin,2,242497,0x7ff7781e46a4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,242505,0x7ff7781e46e4,24,KeyedStoreICBaseline
code-creation,Builtin,2,242513,0x7ff7781e4724,6204,DefineKeyedOwnIC
code-creation,Builtin,2,242521,0x7ff7781e5f64,44,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,242530,0x7ff7781e5fa4,24,DefineKeyedOwnICBaseline
code-creation,Builtin,2,242540,0x7ff7781e5fe4,384,StoreInArrayLiteralIC
code-creation,Builtin,2,242549,0x7ff7781e61a4,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,242557,0x7ff7781e61e4,144,LookupContextTrampoline
code-creation,Builtin,2,242563,0x7ff7781e62a4,156,LookupContextBaseline
code-creation,Builtin,2,242570,0x7ff7781e6364,144,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,242577,0x7ff7781e6424,156,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,242586,0x7ff7781e64e4,3300,LoadGlobalIC
code-creation,Builtin,2,242603,0x7ff7781e71e4,3280,LoadGlobalICInsideTypeof
code-creation,Builtin,2,242612,0x7ff7781e7ee4,44,LoadGlobalICTrampoline
code-creation,Builtin,2,242621,0x7ff7781e7f24,24,LoadGlobalICBaseline
code-creation,Builtin,2,242629,0x7ff7781e7f64,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,242647,0x7ff7781e7fa4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,242657,0x7ff7781e7fe4,172,LookupGlobalICTrampoline
code-creation,Builtin,2,242665,0x7ff7781e80a4,156,LookupGlobalICBaseline
code-creation,Builtin,2,242673,0x7ff7781e8164,172,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,242682,0x7ff7781e8224,156,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,242692,0x7ff7781e82e4,2048,CloneObjectIC
code-creation,Builtin,2,242699,0x7ff7781e8b24,24,CloneObjectICBaseline
code-creation,Builtin,2,242708,0x7ff7781e8b64,2692,CloneObjectIC_Slow
code-creation,Builtin,2,242716,0x7ff7781e9624,3172,KeyedHasIC
code-creation,Builtin,2,242724,0x7ff7781ea2a4,24,KeyedHasICBaseline
code-creation,Builtin,2,242733,0x7ff7781ea2e4,3516,KeyedHasIC_Megamorphic
code-creation,Builtin,2,242741,0x7ff7781eb0a4,1608,IterableToList
code-creation,Builtin,2,242749,0x7ff7781eb724,1404,IterableToFixedArray
code-creation,Builtin,2,242758,0x7ff7781ebca4,772,IterableToListWithSymbolLookup
code-creation,Builtin,2,242768,0x7ff7781ebfe4,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,242777,0x7ff7781ec024,132,IterableToListMayPreserveHoles
code-creation,Builtin,2,242787,0x7ff7781ec0e4,1160,IterableToFixedArrayForWasm
code-creation,Builtin,2,242795,0x7ff7781ec5a4,1512,StringListFromIterable
code-creation,Builtin,2,242804,0x7ff7781ecba4,1184,FindOrderedHashMapEntry
code-creation,Builtin,2,242813,0x7ff7781ed064,4308,MapConstructor
code-creation,Builtin,2,242822,0x7ff7781ee164,1952,MapPrototypeSet
code-creation,Builtin,2,242831,0x7ff7781ee924,1492,MapPrototypeDelete
code-creation,Builtin,2,242840,0x7ff7781eef24,208,MapPrototypeGet
code-creation,Builtin,2,242848,0x7ff7781ef024,168,MapPrototypeHas
code-creation,Builtin,2,242857,0x7ff7781ef0e4,12,MapPrototypeClear
code-creation,Builtin,2,242865,0x7ff7781ef124,292,MapPrototypeEntries
code-creation,Builtin,2,242874,0x7ff7781ef264,144,MapPrototypeGetSize
code-creation,Builtin,2,242883,0x7ff7781ef324,500,MapPrototypeForEach
code-creation,Builtin,2,242891,0x7ff7781ef524,296,MapPrototypeKeys
code-creation,Builtin,2,242899,0x7ff7781ef664,296,MapPrototypeValues
code-creation,Builtin,2,242907,0x7ff7781ef7a4,944,MapIteratorPrototypeNext
code-creation,Builtin,2,242916,0x7ff7781efb64,1188,MapIteratorToList
code-creation,Builtin,2,242924,0x7ff7781f0024,12,NumberPrototypeToExponential
code-creation,Builtin,2,242933,0x7ff7781f0064,12,NumberPrototypeToFixed
code-creation,Builtin,2,242942,0x7ff7781f00a4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,242951,0x7ff7781f00e4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,242961,0x7ff7781f0124,324,SameValue
code-creation,Builtin,2,242969,0x7ff7781f02a4,200,SameValueNumbersOnly
code-creation,Builtin,2,242978,0x7ff7781f03a4,1384,Add_Baseline
code-creation,Builtin,2,242986,0x7ff7781f0924,1084,AddSmi_Baseline
code-creation,Builtin,2,242995,0x7ff7781f0d64,1368,Subtract_Baseline
code-creation,Builtin,2,243003,0x7ff7781f12e4,1104,SubtractSmi_Baseline
code-creation,Builtin,2,243012,0x7ff7781f1764,1464,Multiply_Baseline
code-creation,Builtin,2,243020,0x7ff7781f1d24,1192,MultiplySmi_Baseline
code-creation,Builtin,2,243029,0x7ff7781f21e4,1020,Divide_Baseline
code-creation,Builtin,2,243037,0x7ff7781f25e4,916,DivideSmi_Baseline
code-creation,Builtin,2,243047,0x7ff7781f29a4,836,Modulus_Baseline
code-creation,Builtin,2,243058,0x7ff7781f2d24,732,ModulusSmi_Baseline
code-creation,Builtin,2,243066,0x7ff7781f3024,880,Exponentiate_Baseline
code-creation,Builtin,2,243074,0x7ff7781f33a4,776,ExponentiateSmi_Baseline
code-creation,Builtin,2,243083,0x7ff7781f36e4,784,BitwiseAnd_Baseline
code-creation,Builtin,2,243092,0x7ff7781f3a24,376,BitwiseAndSmi_Baseline
code-creation,Builtin,2,243102,0x7ff7781f3ba4,784,BitwiseOr_Baseline
code-creation,Builtin,2,243110,0x7ff7781f3ee4,376,BitwiseOrSmi_Baseline
code-creation,Builtin,2,243119,0x7ff7781f4064,784,BitwiseXor_Baseline
code-creation,Builtin,2,243128,0x7ff7781f43a4,376,BitwiseXorSmi_Baseline
code-creation,Builtin,2,243137,0x7ff7781f4524,804,ShiftLeft_Baseline
code-creation,Builtin,2,243145,0x7ff7781f4864,400,ShiftLeftSmi_Baseline
code-creation,Builtin,2,243162,0x7ff7781f4a24,804,ShiftRight_Baseline
code-creation,Builtin,2,243172,0x7ff7781f4d64,388,ShiftRightSmi_Baseline
code-creation,Builtin,2,243181,0x7ff7781f4f24,924,ShiftRightLogical_Baseline
code-creation,Builtin,2,243189,0x7ff7781f52e4,656,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,243199,0x7ff7781f55a4,1320,Add_WithFeedback
code-creation,Builtin,2,243211,0x7ff7781f5ae4,1316,Subtract_WithFeedback
code-creation,Builtin,2,243219,0x7ff7781f6024,1408,Multiply_WithFeedback
code-creation,Builtin,2,243228,0x7ff7781f65e4,984,Divide_WithFeedback
code-creation,Builtin,2,243236,0x7ff7781f69e4,804,Modulus_WithFeedback
code-creation,Builtin,2,243245,0x7ff7781f6d24,844,Exponentiate_WithFeedback
code-creation,Builtin,2,243253,0x7ff7781f70a4,772,BitwiseAnd_WithFeedback
code-creation,Builtin,2,243262,0x7ff7781f73e4,768,BitwiseOr_WithFeedback
code-creation,Builtin,2,243271,0x7ff7781f7724,772,BitwiseXor_WithFeedback
code-creation,Builtin,2,243280,0x7ff7781f7a64,780,ShiftLeft_WithFeedback
code-creation,Builtin,2,243289,0x7ff7781f7da4,780,ShiftRight_WithFeedback
code-creation,Builtin,2,243298,0x7ff7781f80e4,900,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,243307,0x7ff7781f84a4,1676,Equal_Baseline
code-creation,Builtin,2,243315,0x7ff7781f8b64,896,StrictEqual_Baseline
code-creation,Builtin,2,243324,0x7ff7781f8f24,1260,LessThan_Baseline
code-creation,Builtin,2,243332,0x7ff7781f9424,1256,GreaterThan_Baseline
code-creation,Builtin,2,243341,0x7ff7781f9924,1260,LessThanOrEqual_Baseline
code-creation,Builtin,2,243350,0x7ff7781f9e24,1256,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,243359,0x7ff7781fa324,1616,Equal_WithFeedback
code-creation,Builtin,2,243368,0x7ff7781fa9a4,920,StrictEqual_WithFeedback
code-creation,Builtin,2,243376,0x7ff7781fad64,1240,LessThan_WithFeedback
code-creation,Builtin,2,243385,0x7ff7781fb264,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,243394,0x7ff7781fb764,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,243403,0x7ff7781fbc64,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,243412,0x7ff7781fc164,356,BitwiseNot_Baseline
code-creation,Builtin,2,243421,0x7ff7781fc2e4,464,Decrement_Baseline
code-creation,Builtin,2,243430,0x7ff7781fc4e4,468,Increment_Baseline
code-creation,Builtin,2,243438,0x7ff7781fc6e4,496,Negate_Baseline
code-creation,Builtin,2,243447,0x7ff7781fc8e4,344,BitwiseNot_WithFeedback
code-creation,Builtin,2,243456,0x7ff7781fca64,444,Decrement_WithFeedback
code-creation,Builtin,2,243465,0x7ff7781fcc24,448,Increment_WithFeedback
code-creation,Builtin,2,243473,0x7ff7781fce24,476,Negate_WithFeedback
code-creation,Builtin,2,243482,0x7ff7781fd024,264,ObjectAssign
code-creation,Builtin,2,243490,0x7ff7781fd164,876,ObjectCreate
code-creation,Builtin,2,243498,0x7ff7781fd4e4,12,ObjectDefineGetter
code-creation,Builtin,2,243507,0x7ff7781fd524,12,ObjectDefineProperties
code-creation,Builtin,2,243515,0x7ff7781fd564,12,ObjectDefineProperty
code-creation,Builtin,2,243524,0x7ff7781fd5a4,12,ObjectDefineSetter
code-creation,Builtin,2,243532,0x7ff7781fd5e4,1488,ObjectEntries
code-creation,Builtin,2,243541,0x7ff7781fdbe4,12,ObjectFreeze
code-creation,Builtin,2,243549,0x7ff7781fdc24,7020,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,243559,0x7ff7781ff7a4,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,243569,0x7ff7781ff7e4,608,ObjectGetOwnPropertyNames
code-creation,Builtin,2,243578,0x7ff7781ffa64,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,243586,0x7ff7781ffaa4,168,ObjectHasOwn
code-creation,Builtin,2,243597,0x7ff7781ffb64,388,ObjectIs
code-creation,Builtin,2,243605,0x7ff7781ffd24,12,ObjectIsFrozen
code-creation,Builtin,2,243613,0x7ff7781ffd64,12,ObjectIsSealed
code-creation,Builtin,2,243621,0x7ff7781ffda4,544,ObjectKeys
code-creation,Builtin,2,243629,0x7ff7781fffe4,12,ObjectLookupGetter
code-creation,Builtin,2,243637,0x7ff778200024,12,ObjectLookupSetter
code-creation,Builtin,2,243645,0x7ff778200064,3064,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,243655,0x7ff778200c64,236,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,243664,0x7ff778200d64,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,243673,0x7ff778200da4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,243681,0x7ff778200de4,12,ObjectPrototypeSetProto
code-creation,Builtin,2,243690,0x7ff778200e24,12,ObjectSeal
code-creation,Builtin,2,243698,0x7ff778200e64,1208,ObjectToString
code-creation,Builtin,2,243713,0x7ff778201324,1272,ObjectValues
code-creation,Builtin,2,243721,0x7ff778201824,296,OrdinaryHasInstance
code-creation,Builtin,2,243730,0x7ff778201964,368,InstanceOf
code-creation,Builtin,2,243739,0x7ff778201ae4,640,InstanceOf_WithFeedback
code-creation,Builtin,2,243748,0x7ff778201da4,660,InstanceOf_Baseline
code-creation,Builtin,2,243757,0x7ff778202064,268,ForInEnumerate
code-creation,Builtin,2,243766,0x7ff7782021a4,148,ForInPrepare
code-creation,Builtin,2,243774,0x7ff778202264,3464,ForInFilter
code-creation,Builtin,2,243782,0x7ff778203024,56,ReflectApply
code-creation,Builtin,2,243790,0x7ff778203064,64,ReflectConstruct
code-creation,Builtin,2,243799,0x7ff7782030e4,12,ReflectDefineProperty
code-creation,Builtin,2,243808,0x7ff778203124,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,243817,0x7ff778203164,12,ReflectOwnKeys
code-creation,Builtin,2,243825,0x7ff7782031a4,12,ReflectSet
code-creation,Builtin,2,243833,0x7ff7782031e4,12,RegExpCapture1Getter
code-creation,Builtin,2,243841,0x7ff778203224,12,RegExpCapture2Getter
code-creation,Builtin,2,243850,0x7ff778203264,12,RegExpCapture3Getter
code-creation,Builtin,2,243858,0x7ff7782032a4,12,RegExpCapture4Getter
code-creation,Builtin,2,243866,0x7ff7782032e4,12,RegExpCapture5Getter
code-creation,Builtin,2,243875,0x7ff778203324,12,RegExpCapture6Getter
code-creation,Builtin,2,243889,0x7ff778203364,12,RegExpCapture7Getter
code-creation,Builtin,2,243897,0x7ff7782033a4,12,RegExpCapture8Getter
code-creation,Builtin,2,243905,0x7ff7782033e4,12,RegExpCapture9Getter
code-creation,Builtin,2,243913,0x7ff778203424,2200,RegExpConstructor
code-creation,Builtin,2,243921,0x7ff778203ce4,12,RegExpInputGetter
code-creation,Builtin,2,243929,0x7ff778203d24,12,RegExpInputSetter
code-creation,Builtin,2,243938,0x7ff778203d64,12,RegExpLastMatchGetter
code-creation,Builtin,2,243946,0x7ff778203da4,12,RegExpLastParenGetter
code-creation,Builtin,2,243955,0x7ff778203de4,12,RegExpLeftContextGetter
code-creation,Builtin,2,243963,0x7ff778203e24,924,RegExpPrototypeCompile
code-creation,Builtin,2,243971,0x7ff7782041e4,12,RegExpPrototypeToString
code-creation,Builtin,2,243980,0x7ff778204224,12,RegExpRightContextGetter
code-creation,Builtin,2,243989,0x7ff778204264,256,RegExpExecAtom
code-creation,Builtin,2,243997,0x7ff7782043a4,1004,RegExpExecInternal
code-creation,Builtin,2,244005,0x7ff7782047a4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,244014,0x7ff7782047e4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,244022,0x7ff778204824,1172,FindOrderedHashSetEntry
code-creation,Builtin,2,244032,0x7ff778204ce4,2932,SetConstructor
code-creation,Builtin,2,244040,0x7ff778205864,172,SetPrototypeHas
code-creation,Builtin,2,244048,0x7ff778205924,1724,SetPrototypeAdd
code-creation,Builtin,2,244057,0x7ff778205fe4,1460,SetPrototypeDelete
code-creation,Builtin,2,244066,0x7ff7782065a4,12,SetPrototypeClear
code-creation,Builtin,2,244076,0x7ff7782065e4,296,SetPrototypeEntries
code-creation,Builtin,2,244086,0x7ff778206724,144,SetPrototypeGetSize
code-creation,Builtin,2,244095,0x7ff7782067e4,464,SetPrototypeForEach
code-creation,Builtin,2,244104,0x7ff7782069e4,296,SetPrototypeValues
code-creation,Builtin,2,244112,0x7ff778206b24,876,SetIteratorPrototypeNext
code-creation,Builtin,2,244166,0x7ff778206ea4,1124,SetOrSetIteratorToList
code-creation,Builtin,2,244249,0x7ff778207324,12,ShadowRealmConstructor
code-creation,Builtin,2,244267,0x7ff778207364,564,ShadowRealmGetWrappedValue
code-creation,Builtin,2,244275,0x7ff7782075a4,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,244283,0x7ff7782075e4,1392,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,244292,0x7ff778207b64,240,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,244300,0x7ff778207c64,72,ShadowRealmImportValueRejected
code-creation,Builtin,2,244321,0x7ff778207ce4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,244333,0x7ff778207d24,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,244341,0x7ff778207d64,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,244349,0x7ff778207da4,2176,AtomicsLoad
code-creation,Builtin,2,244356,0x7ff778208664,2256,AtomicsStore
code-creation,Builtin,2,244364,0x7ff778208f64,2908,AtomicsExchange
code-creation,Builtin,2,244371,0x7ff778209ae4,3200,AtomicsCompareExchange
code-creation,Builtin,2,244378,0x7ff77820a7a4,2944,AtomicsAdd
code-creation,Builtin,2,244385,0x7ff77820b364,2944,AtomicsSub
code-creation,Builtin,2,244393,0x7ff77820bf24,2944,AtomicsAnd
code-creation,Builtin,2,244400,0x7ff77820cae4,2944,AtomicsOr
code-creation,Builtin,2,244408,0x7ff77820d6a4,2944,AtomicsXor
code-creation,Builtin,2,244418,0x7ff77820e264,12,AtomicsNotify
code-creation,Builtin,2,244426,0x7ff77820e2a4,12,AtomicsIsLockFree
code-creation,Builtin,2,244434,0x7ff77820e2e4,12,AtomicsWait
code-creation,Builtin,2,244441,0x7ff77820e324,12,AtomicsWaitAsync
code-creation,Builtin,2,244449,0x7ff77820e364,12,StringFromCodePoint
code-creation,Builtin,2,244459,0x7ff77820e3a4,1240,StringFromCharCode
code-creation,Builtin,2,244467,0x7ff77820e8a4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,244476,0x7ff77820e8e4,4460,StringPrototypeMatchAll
code-creation,Builtin,2,244484,0x7ff77820fa64,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,244492,0x7ff77820faa4,1212,StringPrototypeReplace
code-creation,Builtin,2,244500,0x7ff77820ff64,2892,StringPrototypeSplit
code-creation,Builtin,2,244508,0x7ff778210ae4,12,StringRaw
code-creation,Builtin,2,244515,0x7ff778210b24,12,SymbolConstructor
code-creation,Builtin,2,244523,0x7ff778210b64,12,SymbolFor
code-creation,Builtin,2,244530,0x7ff778210ba4,12,SymbolKeyFor
code-creation,Builtin,2,244538,0x7ff778210be4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,244546,0x7ff778210c64,264,TypedArrayConstructor
code-creation,Builtin,2,244553,0x7ff778210da4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,244561,0x7ff778210de4,916,TypedArrayPrototypeByteLength
code-creation,Builtin,2,244568,0x7ff7782111a4,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,244576,0x7ff778211324,604,TypedArrayPrototypeLength
code-creation,Builtin,2,244584,0x7ff7782115a4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,244591,0x7ff7782115e4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,244598,0x7ff778211624,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,244606,0x7ff778211664,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,244614,0x7ff7782116a4,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,244623,0x7ff7782116e4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,244630,0x7ff778211724,444,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,244643,0x7ff7782118e4,24276,TypedArrayPrototypeMap
code-creation,Builtin,2,244651,0x7ff7782177e4,992,GenericJSToWasmWrapper
code-creation,Builtin,2,244659,0x7ff778217be4,1268,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,244667,0x7ff7782180e4,160,WasmSuspend
code-creation,Builtin,2,244675,0x7ff7782181a4,324,WasmResume
code-creation,Builtin,2,244687,0x7ff778218324,340,WasmReject
code-creation,Builtin,2,244696,0x7ff7782184a4,160,WasmCompileLazy
code-creation,Builtin,2,244704,0x7ff778218564,180,WasmDebugBreak
code-creation,Builtin,2,244713,0x7ff778218624,16,WasmOnStackReplace
code-creation,Builtin,2,244721,0x7ff778218664,140,WasmFloat32ToNumber
code-creation,Builtin,2,244729,0x7ff778218724,152,WasmFloat64ToNumber
code-creation,Builtin,2,244753,0x7ff7782187e4,4,WasmI32AtomicWait32
code-creation,Builtin,2,244760,0x7ff778218824,4,WasmI64AtomicWait32
code-creation,Builtin,2,244768,0x7ff778218864,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,244777,0x7ff7782188a4,4508,WeakMapConstructor
code-creation,Builtin,2,244785,0x7ff778219a64,276,WeakMapLookupHashIndex
code-creation,Builtin,2,244794,0x7ff778219ba4,220,WeakMapGet
code-creation,Builtin,2,244801,0x7ff778219ca4,180,WeakMapPrototypeHas
code-creation,Builtin,2,244808,0x7ff778219d64,252,WeakMapPrototypeSet
code-creation,Builtin,2,244815,0x7ff778219e64,152,WeakMapPrototypeDelete
code-creation,Builtin,2,244823,0x7ff778219f24,3104,WeakSetConstructor
code-creation,Builtin,2,244830,0x7ff77821ab64,180,WeakSetPrototypeHas
code-creation,Builtin,2,244838,0x7ff77821ac24,256,WeakSetPrototypeAdd
code-creation,Builtin,2,244845,0x7ff77821ad64,152,WeakSetPrototypeDelete
code-creation,Builtin,2,244852,0x7ff77821ae24,460,WeakCollectionDelete
code-creation,Builtin,2,244859,0x7ff77821b024,824,WeakCollectionSet
code-creation,Builtin,2,244867,0x7ff77821b364,12,SharedStructTypeConstructor
code-creation,Builtin,2,244876,0x7ff77821b3a4,12,SharedStructConstructor
code-creation,Builtin,2,244884,0x7ff77821b3e4,12,SharedArrayConstructor
code-creation,Builtin,2,244893,0x7ff77821b424,12,AtomicsMutexConstructor
code-creation,Builtin,2,244902,0x7ff77821b464,12,AtomicsMutexLock
code-creation,Builtin,2,244911,0x7ff77821b4a4,12,AtomicsMutexTryLock
code-creation,Builtin,2,244919,0x7ff77821b4e4,12,AtomicsConditionConstructor
code-creation,Builtin,2,244928,0x7ff77821b524,12,AtomicsConditionWait
code-creation,Builtin,2,244941,0x7ff77821b564,12,AtomicsConditionNotify
code-creation,Builtin,2,244950,0x7ff77821b5a4,308,AsyncGeneratorResolve
code-creation,Builtin,2,244959,0x7ff77821b6e4,104,AsyncGeneratorReject
code-creation,Builtin,2,244967,0x7ff77821b764,1628,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,244977,0x7ff77821bde4,1892,AsyncGeneratorReturn
code-creation,Builtin,2,244987,0x7ff77821c564,312,AsyncGeneratorResumeNext
code-creation,Builtin,2,244996,0x7ff77821c6a4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,245006,0x7ff77821c6e4,1028,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,245015,0x7ff77821cb24,1032,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,245024,0x7ff77821cf64,1032,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,245033,0x7ff77821d3a4,1600,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,245042,0x7ff77821da24,1600,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,245050,0x7ff77821e0a4,172,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,245058,0x7ff77821e164,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,245068,0x7ff77821e224,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,245077,0x7ff77821e2a4,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,245087,0x7ff77821e324,120,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,245097,0x7ff77821e3a4,184,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,245107,0x7ff77821e464,1716,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,245115,0x7ff77821eb24,1820,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,245125,0x7ff77821f264,1844,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,245135,0x7ff77821f9a4,104,AsyncIteratorValueUnwrap
code-creation,Builtin,2,245145,0x7ff77821fa24,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,245156,0x7ff77821fb24,220,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,245165,0x7ff77821fc24,200,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,245180,0x7ff77821fd24,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,245196,0x7ff77821fee4,392,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,245208,0x7ff7782200a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,245220,0x7ff7782201a4,232,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,245233,0x7ff7782202a4,216,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,245247,0x7ff7782203a4,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,245261,0x7ff778220564,408,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,245272,0x7ff778220724,4,DirectCEntry
code-creation,Builtin,2,245283,0x7ff778220764,1072,StringAdd_CheckNone
code-creation,Builtin,2,245295,0x7ff778220ba4,2212,SubString
code-creation,Builtin,2,245307,0x7ff778221464,84,DoubleToI
code-creation,Builtin,2,245318,0x7ff7782214e4,3072,GetProperty
code-creation,Builtin,2,245338,0x7ff778222124,3252,GetPropertyWithReceiver
code-creation,Builtin,2,245350,0x7ff778222de4,17428,SetProperty
code-creation,Builtin,2,245358,0x7ff778227224,14496,CreateDataProperty
code-creation,Builtin,2,245367,0x7ff77822aae4,8,MemCopyUint8Uint8
code-creation,Builtin,2,245374,0x7ff77822ab24,8,MemMove
code-creation,Builtin,2,245382,0x7ff77822ab64,188,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,245392,0x7ff77822ac24,12,IsTraceCategoryEnabled
code-creation,Builtin,2,245401,0x7ff77822ac64,12,Trace
code-creation,Builtin,2,245409,0x7ff77822aca4,12,FinalizationRegistryUnregister
code-creation,Builtin,2,245418,0x7ff77822ace4,420,AsyncModuleEvaluate
code-creation,Builtin,2,245427,0x7ff77822aea4,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,245435,0x7ff77822aee4,12,CallAsyncModuleRejected
code-creation,Builtin,2,245444,0x7ff77822af24,12,TemporalNowTimeZone
code-creation,Builtin,2,245453,0x7ff77822af64,12,TemporalNowInstant
code-creation,Builtin,2,245461,0x7ff77822afa4,12,TemporalNowPlainDateTime
code-creation,Builtin,2,245470,0x7ff77822afe4,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,245479,0x7ff77822b024,12,TemporalNowZonedDateTime
code-creation,Builtin,2,245489,0x7ff77822b064,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,245498,0x7ff77822b0a4,12,TemporalNowPlainDate
code-creation,Builtin,2,245507,0x7ff77822b0e4,12,TemporalNowPlainDateISO
code-creation,Builtin,2,245516,0x7ff77822b124,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,245525,0x7ff77822b164,12,TemporalPlainDateConstructor
code-creation,Builtin,2,245534,0x7ff77822b1a4,12,TemporalPlainDateFrom
code-creation,Builtin,2,245543,0x7ff77822b1e4,12,TemporalPlainDateCompare
code-creation,Builtin,2,245552,0x7ff77822b224,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,245562,0x7ff77822b264,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,245571,0x7ff77822b2a4,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,245580,0x7ff77822b2e4,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,245590,0x7ff77822b324,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,245600,0x7ff77822b364,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,245610,0x7ff77822b3a4,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,245619,0x7ff77822b3e4,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,245628,0x7ff77822b424,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,245638,0x7ff77822b464,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,245647,0x7ff77822b4a4,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,245657,0x7ff77822b4e4,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,245666,0x7ff77822b524,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,245684,0x7ff77822b564,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,245694,0x7ff77822b5a4,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,245711,0x7ff77822b5e4,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,245724,0x7ff77822b624,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,245736,0x7ff77822b664,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,245746,0x7ff77822b6a4,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,245756,0x7ff77822b6e4,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,245766,0x7ff77822b724,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,245775,0x7ff77822b764,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,245785,0x7ff77822b7a4,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,245811,0x7ff77822b7e4,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,245821,0x7ff77822b824,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,245834,0x7ff77822b864,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,245845,0x7ff77822b8a4,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,245854,0x7ff77822b8e4,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,245863,0x7ff77822b924,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,245872,0x7ff77822b964,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,245881,0x7ff77822b9a4,12,TemporalPlainTimeFrom
code-creation,Builtin,2,245890,0x7ff77822b9e4,12,TemporalPlainTimeCompare
code-creation,Builtin,2,245898,0x7ff77822ba24,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,245907,0x7ff77822ba64,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,245924,0x7ff77822baa4,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,245933,0x7ff77822bae4,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,245941,0x7ff77822bb24,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,245950,0x7ff77822bb64,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,245959,0x7ff77822bba4,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,245968,0x7ff77822bbe4,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,245977,0x7ff77822bc24,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,245986,0x7ff77822bc64,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,245994,0x7ff77822bca4,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,246003,0x7ff77822bce4,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,246011,0x7ff77822bd24,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,246020,0x7ff77822bd64,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,246029,0x7ff77822bda4,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,246038,0x7ff77822bde4,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,246047,0x7ff77822be24,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,246056,0x7ff77822be64,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,246065,0x7ff77822bea4,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,246076,0x7ff77822bee4,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,246086,0x7ff77822bf24,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,246096,0x7ff77822bf64,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,246105,0x7ff77822bfa4,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,246113,0x7ff77822bfe4,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,246122,0x7ff77822c024,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,246131,0x7ff77822c064,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,246140,0x7ff77822c0a4,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,246149,0x7ff77822c0e4,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,246159,0x7ff77822c124,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,246168,0x7ff77822c164,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,246177,0x7ff77822c1a4,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,246185,0x7ff77822c1e4,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,246196,0x7ff77822c224,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,246207,0x7ff77822c264,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,246215,0x7ff77822c2a4,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,246225,0x7ff77822c2e4,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,246234,0x7ff77822c324,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,246243,0x7ff77822c364,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,246253,0x7ff77822c3a4,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,246262,0x7ff77822c3e4,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,246271,0x7ff77822c424,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,246280,0x7ff77822c464,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,246288,0x7ff77822c4a4,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,246297,0x7ff77822c4e4,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,246305,0x7ff77822c524,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,246313,0x7ff77822c564,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,246322,0x7ff77822c5a4,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,246331,0x7ff77822c5e4,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,246339,0x7ff77822c624,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,246348,0x7ff77822c664,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,246357,0x7ff77822c6a4,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,246366,0x7ff77822c6e4,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,246377,0x7ff77822c724,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,246386,0x7ff77822c764,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,246397,0x7ff77822c7a4,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,246407,0x7ff77822c7e4,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,246417,0x7ff77822c824,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,246427,0x7ff77822c864,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,246437,0x7ff77822c8a4,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,246446,0x7ff77822c8e4,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,246455,0x7ff77822c924,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,246474,0x7ff77822c964,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,246483,0x7ff77822c9a4,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,246493,0x7ff77822c9e4,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,246502,0x7ff77822ca24,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,246510,0x7ff77822ca64,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,246518,0x7ff77822caa4,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,246528,0x7ff77822cae4,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,246537,0x7ff77822cb24,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,246545,0x7ff77822cb64,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,246554,0x7ff77822cba4,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,246562,0x7ff77822cbe4,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,246570,0x7ff77822cc24,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,246578,0x7ff77822cc64,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,246587,0x7ff77822cca4,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,246595,0x7ff77822cce4,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,246603,0x7ff77822cd24,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,246613,0x7ff77822cd64,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,246628,0x7ff77822cda4,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,246646,0x7ff77822cde4,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,246662,0x7ff77822ce24,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,246673,0x7ff77822ce64,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,246687,0x7ff77822cea4,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,246702,0x7ff77822cee4,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,246716,0x7ff77822cf24,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,246731,0x7ff77822cf64,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,246745,0x7ff77822cfa4,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,246759,0x7ff77822cfe4,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,246773,0x7ff77822d024,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,246798,0x7ff77822d064,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,246812,0x7ff77822d0a4,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,246825,0x7ff77822d0e4,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,246840,0x7ff77822d124,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,246853,0x7ff77822d164,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,246867,0x7ff77822d1a4,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,246876,0x7ff77822d1e4,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,246884,0x7ff77822d224,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,246893,0x7ff77822d264,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,246903,0x7ff77822d2a4,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,246911,0x7ff77822d2e4,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,246919,0x7ff77822d324,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,246935,0x7ff77822d364,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,246945,0x7ff77822d3a4,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,246954,0x7ff77822d3e4,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,246963,0x7ff77822d424,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,246972,0x7ff77822d464,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,246980,0x7ff77822d4a4,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,246990,0x7ff77822d4e4,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,247000,0x7ff77822d524,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,247018,0x7ff77822d564,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,247028,0x7ff77822d5a4,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,247036,0x7ff77822d5e4,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,247044,0x7ff77822d624,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,247053,0x7ff77822d664,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,247061,0x7ff77822d6a4,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,247071,0x7ff77822d6e4,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,247083,0x7ff77822d724,12,TemporalDurationConstructor
code-creation,Builtin,2,247091,0x7ff77822d764,12,TemporalDurationFrom
code-creation,Builtin,2,247100,0x7ff77822d7a4,12,TemporalDurationCompare
code-creation,Builtin,2,247108,0x7ff77822d7e4,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,247116,0x7ff77822d824,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,247125,0x7ff77822d864,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,247134,0x7ff77822d8a4,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,247142,0x7ff77822d8e4,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,247151,0x7ff77822d924,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,247162,0x7ff77822d964,12,TemporalDurationPrototypeSeconds
tick,0x7ff8e7aeed54,247184,0,0x0,6
code-creation,Builtin,2,247217,0x7ff77822d9a4,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,247253,0x7ff77822d9e4,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,247263,0x7ff77822da24,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,247272,0x7ff77822da64,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,247281,0x7ff77822daa4,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,247290,0x7ff77822dae4,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,247299,0x7ff77822db24,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,247308,0x7ff77822db64,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,247316,0x7ff77822dba4,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,247325,0x7ff77822dbe4,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,247334,0x7ff77822dc24,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,247342,0x7ff77822dc64,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,247351,0x7ff77822dca4,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,247360,0x7ff77822dce4,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,247369,0x7ff77822dd24,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,247379,0x7ff77822dd64,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,247387,0x7ff77822dda4,12,TemporalInstantConstructor
code-creation,Builtin,2,247395,0x7ff77822dde4,12,TemporalInstantFrom
code-creation,Builtin,2,247403,0x7ff77822de24,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,247413,0x7ff77822de64,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,247423,0x7ff77822dea4,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,247434,0x7ff77822dee4,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,247463,0x7ff77822df24,12,TemporalInstantCompare
code-creation,Builtin,2,247474,0x7ff77822df64,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,247485,0x7ff77822dfa4,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,247495,0x7ff77822dfe4,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,247506,0x7ff77822e024,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,247517,0x7ff77822e064,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,247527,0x7ff77822e0a4,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,247537,0x7ff77822e0e4,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,247548,0x7ff77822e124,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,247558,0x7ff77822e164,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,247568,0x7ff77822e1a4,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,247578,0x7ff77822e1e4,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,247588,0x7ff77822e224,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,247598,0x7ff77822e264,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,247609,0x7ff77822e2a4,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,247617,0x7ff77822e2e4,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,247626,0x7ff77822e324,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,247635,0x7ff77822e364,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,247643,0x7ff77822e3a4,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,247651,0x7ff77822e3e4,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,247660,0x7ff77822e424,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,247670,0x7ff77822e464,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,247680,0x7ff77822e4a4,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,247690,0x7ff77822e4e4,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,247699,0x7ff77822e524,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,247708,0x7ff77822e564,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,247722,0x7ff77822e5a4,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,247735,0x7ff77822e5e4,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,247746,0x7ff77822e624,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,247755,0x7ff77822e664,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,247765,0x7ff77822e6a4,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,247832,0x7ff77822e6e4,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,247847,0x7ff77822e724,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,247857,0x7ff77822e764,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,247866,0x7ff77822e7a4,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,247874,0x7ff77822e7e4,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,247883,0x7ff77822e824,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,247893,0x7ff77822e864,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,247901,0x7ff77822e8a4,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,247907,0x7ff77822e8e4,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,247913,0x7ff77822e924,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,247919,0x7ff77822e964,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,247925,0x7ff77822e9a4,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,247931,0x7ff77822e9e4,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,247948,0x7ff77822ea24,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,247954,0x7ff77822ea64,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,247959,0x7ff77822eaa4,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,247965,0x7ff77822eae4,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,247971,0x7ff77822eb24,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,247977,0x7ff77822eb64,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,247983,0x7ff77822eba4,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,247989,0x7ff77822ebe4,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,247995,0x7ff77822ec24,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,248001,0x7ff77822ec64,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,248007,0x7ff77822eca4,12,TemporalTimeZoneFrom
code-creation,Builtin,2,248012,0x7ff77822ece4,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,248018,0x7ff77822ed24,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,248024,0x7ff77822ed64,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,248030,0x7ff77822eda4,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,248036,0x7ff77822ede4,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,248042,0x7ff77822ee24,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,248048,0x7ff77822ee64,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,248054,0x7ff77822eea4,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,248060,0x7ff77822eee4,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,248066,0x7ff77822ef24,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,248072,0x7ff77822ef64,12,TemporalCalendarConstructor
code-creation,Builtin,2,248078,0x7ff77822efa4,12,TemporalCalendarFrom
code-creation,Builtin,2,248083,0x7ff77822efe4,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,248089,0x7ff77822f024,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,248095,0x7ff77822f064,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,248101,0x7ff77822f0a4,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,248107,0x7ff77822f0e4,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,248113,0x7ff77822f124,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,248121,0x7ff77822f164,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,248128,0x7ff77822f1a4,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,248134,0x7ff77822f1e4,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,248140,0x7ff77822f224,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,248145,0x7ff77822f264,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,248151,0x7ff77822f2a4,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,248157,0x7ff77822f2e4,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,248163,0x7ff77822f324,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,248168,0x7ff77822f364,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,248174,0x7ff77822f3a4,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,248180,0x7ff77822f3e4,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,248186,0x7ff77822f424,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,248192,0x7ff77822f464,3144,TemporalCalendarPrototypeFields
code-creation,Builtin,2,248198,0x7ff7782300e4,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,248204,0x7ff778230124,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,248209,0x7ff778230164,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,248215,0x7ff7782301a4,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,248221,0x7ff7782301e4,1568,StringFixedArrayFromIterable
code-creation,Builtin,2,248227,0x7ff778230824,1568,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,248233,0x7ff778230e64,272,AggregateErrorConstructor
code-creation,Builtin,2,248238,0x7ff778230fa4,816,ArrayPrototypeAt
code-creation,Builtin,2,248244,0x7ff7782312e4,636,ArrayPrototypeConcat
code-creation,Builtin,2,248249,0x7ff778231564,5052,ArrayPrototypeCopyWithin
code-creation,Builtin,2,248264,0x7ff778232924,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,248270,0x7ff778232a24,584,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,248277,0x7ff778232ca4,4092,ArrayEveryLoopContinuation
code-creation,Builtin,2,248283,0x7ff778233ca4,1500,ArrayEvery
code-creation,Builtin,2,248288,0x7ff7782342a4,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,248294,0x7ff7782343e4,912,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,248300,0x7ff7782347a4,4364,ArrayFilterLoopContinuation
code-creation,Builtin,2,248305,0x7ff7782358e4,4208,ArrayFilter
code-creation,Builtin,2,248310,0x7ff778236964,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,248316,0x7ff778236a64,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,248322,0x7ff778236aa4,304,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,248328,0x7ff778236be4,504,ArrayFindLoopContinuation
code-creation,Builtin,2,248334,0x7ff778236de4,1492,ArrayPrototypeFind
code-creation,Builtin,2,248340,0x7ff7782373e4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,248345,0x7ff7782374e4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,248352,0x7ff778237524,304,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,248358,0x7ff778237664,500,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,248364,0x7ff778237864,1492,ArrayPrototypeFindIndex
code-creation,Builtin,2,248369,0x7ff778237e64,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,248375,0x7ff778238064,1688,ArrayPrototypeFindLast
code-creation,Builtin,2,248381,0x7ff778238724,444,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,248387,0x7ff7782388e4,1684,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,248392,0x7ff778238fa4,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,248398,0x7ff7782390a4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,248404,0x7ff7782391a4,3956,ArrayForEachLoopContinuation
code-creation,Builtin,2,248410,0x7ff77823a124,1368,ArrayForEach
code-creation,Builtin,2,248415,0x7ff77823a6a4,3504,ArrayFrom
code-creation,Builtin,2,248420,0x7ff77823b464,156,ArrayIsArray
code-creation,Builtin,2,248427,0x7ff77823b524,400,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,248433,0x7ff77823b6e4,44,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,248440,0x7ff77823b724,148,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,248446,0x7ff77823b7e4,324,ConvertToLocaleString
code-creation,Builtin,2,248451,0x7ff77823b964,772,JoinStackPush
code-creation,Builtin,2,248456,0x7ff77823bca4,288,JoinStackPop
code-creation,Builtin,2,248461,0x7ff77823bde4,6392,ArrayPrototypeJoin
code-creation,Builtin,2,248467,0x7ff77823d6e4,5384,ArrayPrototypeToLocaleString
code-creation,Builtin,2,248472,0x7ff77823ec24,240,ArrayPrototypeToString
code-creation,Builtin,2,248478,0x7ff77823ed24,6236,TypedArrayPrototypeJoin
code-creation,Builtin,2,248483,0x7ff7782405a4,5172,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,248489,0x7ff7782419e4,3732,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,248495,0x7ff7782428a4,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,248501,0x7ff7782429e4,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,248506,0x7ff778242ae4,492,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,248512,0x7ff778242ce4,3992,ArrayMapLoopContinuation
code-creation,Builtin,2,248518,0x7ff778243ca4,3856,ArrayMap
code-creation,Builtin,2,248523,0x7ff778244be4,876,ArrayOf
code-creation,Builtin,2,248529,0x7ff778244f64,420,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,248539,0x7ff778245124,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,248549,0x7ff778245224,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,248558,0x7ff778245324,3988,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,248567,0x7ff7782462e4,1964,ArrayReduceRight
code-creation,Builtin,2,248576,0x7ff778246aa4,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,248586,0x7ff778246b64,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,248595,0x7ff778246c64,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,248605,0x7ff778246d64,4044,ArrayReduceLoopContinuation
code-creation,Builtin,2,248614,0x7ff778247d64,1576,ArrayReduce
code-creation,Builtin,2,248622,0x7ff7782483a4,3196,ArrayPrototypeReverse
code-creation,Builtin,2,248631,0x7ff778249024,3592,ArrayPrototypeShift
code-creation,Builtin,2,248637,0x7ff778249e64,5148,ArrayPrototypeSlice
code-creation,Builtin,2,248643,0x7ff77824b2a4,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,248649,0x7ff77824b3a4,556,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,248655,0x7ff77824b5e4,4080,ArraySomeLoopContinuation
code-creation,Builtin,2,248660,0x7ff77824c5e4,1492,ArraySome
code-creation,Builtin,2,248666,0x7ff77824cbe4,13676,ArrayPrototypeSplice
code-creation,Builtin,2,248671,0x7ff778250164,1716,GenericArrayToReversed
code-creation,Builtin,2,248677,0x7ff778250824,1780,ArrayPrototypeToReversed
code-creation,Builtin,2,248682,0x7ff778250f24,5100,ArrayTimSortIntoCopy
code-creation,Builtin,2,248688,0x7ff778252324,2232,ArrayPrototypeToSorted
code-creation,Builtin,2,248701,0x7ff778252be4,8468,ArrayPrototypeToSpliced
code-creation,Builtin,2,248709,0x7ff778254d24,3076,ArrayPrototypeUnshift
code-creation,Builtin,2,248718,0x7ff778255964,1020,GenericArrayWith
code-creation,Builtin,2,248724,0x7ff778255d64,1156,ArrayPrototypeWith
code-creation,Builtin,2,248732,0x7ff778256224,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,248742,0x7ff7782563a4,500,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,248748,0x7ff7782565a4,212,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,248754,0x7ff7782566a4,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,248761,0x7ff778256824,212,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,248770,0x7ff778256924,100,ArrayBufferIsView
code-creation,Builtin,2,248777,0x7ff7782569a4,400,ToInteger
code-creation,Builtin,2,248784,0x7ff778256b64,3112,FastCreateDataProperty
code-creation,Builtin,2,248793,0x7ff7782577a4,616,CheckSameObject
code-creation,Builtin,2,248805,0x7ff778257a24,932,BooleanConstructor
code-creation,Builtin,2,248814,0x7ff778257de4,160,BooleanPrototypeToString
code-creation,Builtin,2,248823,0x7ff778257ea4,156,BooleanPrototypeValueOf
code-creation,Builtin,2,248831,0x7ff778257f64,1152,BigIntAddNoThrow
code-creation,Builtin,2,248838,0x7ff778258424,1236,BigIntAdd
code-creation,Builtin,2,248846,0x7ff778258924,1152,BigIntSubtractNoThrow
code-creation,Builtin,2,248854,0x7ff778258de4,1240,BigIntSubtract
code-creation,Builtin,2,248870,0x7ff7782592e4,340,BigIntMultiplyNoThrow
code-creation,Builtin,2,248878,0x7ff778259464,452,BigIntMultiply
code-creation,Builtin,2,248886,0x7ff778259664,560,BigIntDivideNoThrow
code-creation,Builtin,2,248894,0x7ff7782598a4,668,BigIntDivide
code-creation,Builtin,2,248903,0x7ff778259b64,1032,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,248910,0x7ff778259fa4,1180,BigIntBitwiseAnd
code-creation,Builtin,2,248918,0x7ff77825a464,288,BigIntUnaryMinus
code-creation,Builtin,2,248926,0x7ff77825a5a4,1108,ToString
code-creation,Builtin,2,248934,0x7ff77825aa24,156,StringPrototypeToString
code-creation,Builtin,2,248942,0x7ff77825aae4,156,StringPrototypeValueOf
code-creation,Builtin,2,248950,0x7ff77825aba4,2192,StringToList
code-creation,Builtin,2,248957,0x7ff77825b464,800,StringPrototypeCharAt
code-creation,Builtin,2,248965,0x7ff77825b7a4,688,StringPrototypeCharCodeAt
code-creation,Builtin,2,248974,0x7ff77825ba64,1208,StringPrototypeCodePointAt
code-creation,Builtin,2,248982,0x7ff77825bf24,420,StringPrototypeConcat
code-creation,Builtin,2,248991,0x7ff77825c0e4,988,StringConstructor
code-creation,Builtin,2,248999,0x7ff77825c4e4,1176,StringAddConvertLeft
code-creation,Builtin,2,249007,0x7ff77825c9a4,1204,StringAddConvertRight
code-creation,Builtin,2,249016,0x7ff77825ce64,584,StringCharAt
code-creation,Builtin,2,249024,0x7ff77825d0e4,16,FastNewClosureBaseline
code-creation,Builtin,2,249033,0x7ff77825d124,204,FastNewFunctionContextEval
code-creation,Builtin,2,249042,0x7ff77825d224,204,FastNewFunctionContextFunction
code-creation,Builtin,2,249051,0x7ff77825d324,256,CreateRegExpLiteral
code-creation,Builtin,2,249060,0x7ff77825d464,1056,CreateShallowArrayLiteral
code-creation,Builtin,2,249069,0x7ff77825d8a4,500,CreateEmptyArrayLiteral
code-creation,Builtin,2,249078,0x7ff77825daa4,1828,CreateShallowObjectLiteral
code-creation,Builtin,2,249087,0x7ff77825e1e4,392,ObjectConstructor
code-creation,Builtin,2,249095,0x7ff77825e3a4,180,CreateEmptyLiteralObject
code-creation,Builtin,2,249103,0x7ff77825e464,544,NumberConstructor
code-creation,Builtin,2,249112,0x7ff77825e6a4,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,249121,0x7ff77825e6e4,60,StringToNumber
code-creation,Builtin,2,249137,0x7ff77825e724,184,NonNumberToNumber
code-creation,Builtin,2,249145,0x7ff77825e7e4,240,NonNumberToNumeric
code-creation,Builtin,2,249154,0x7ff77825e8e4,36,ToNumeric
code-creation,Builtin,2,249162,0x7ff77825e924,1040,NumberToString
code-creation,Builtin,2,249170,0x7ff77825ed64,104,ToBoolean
code-creation,Builtin,2,249178,0x7ff77825ede4,100,ToBooleanForBaselineJump
code-creation,Builtin,2,249187,0x7ff77825ee64,608,ToLength
code-creation,Builtin,2,249195,0x7ff77825f0e4,1088,ToName
code-creation,Builtin,2,249203,0x7ff77825f564,756,ToObject
code-creation,Builtin,2,249212,0x7ff77825f864,232,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,249221,0x7ff77825f964,232,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,249230,0x7ff77825fa64,232,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,249239,0x7ff77825fb64,376,OrdinaryToPrimitive_Number
code-creation,Builtin,2,249248,0x7ff77825fce4,376,OrdinaryToPrimitive_String
code-creation,Builtin,2,249257,0x7ff77825fe64,228,FastConsoleAssert
code-creation,Builtin,2,249265,0x7ff77825ff64,156,DataViewPrototypeGetBuffer
code-creation,Builtin,2,249275,0x7ff778260024,752,DataViewPrototypeGetByteLength
code-creation,Builtin,2,249284,0x7ff778260324,424,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,249293,0x7ff7782604e4,804,DataViewPrototypeGetUint8
code-creation,Builtin,2,249304,0x7ff778260824,804,DataViewPrototypeGetInt8
code-creation,Builtin,2,249315,0x7ff778260b64,888,DataViewPrototypeGetUint16
code-creation,Builtin,2,249323,0x7ff778260ee4,884,DataViewPrototypeGetInt16
code-creation,Builtin,2,249333,0x7ff778261264,1044,DataViewPrototypeGetUint32
code-creation,Builtin,2,249341,0x7ff7782616a4,920,DataViewPrototypeGetInt32
code-creation,Builtin,2,249350,0x7ff778261a64,1076,DataViewPrototypeGetFloat32
code-creation,Builtin,2,249359,0x7ff778261ea4,1140,DataViewPrototypeGetFloat64
code-creation,Builtin,2,249368,0x7ff778262324,1212,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,249377,0x7ff7782627e4,1240,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,249386,0x7ff778262ce4,1204,DataViewPrototypeSetUint8
code-creation,Builtin,2,249395,0x7ff7782631a4,1204,DataViewPrototypeSetInt8
code-creation,Builtin,2,249404,0x7ff778263664,1280,DataViewPrototypeSetUint16
code-creation,Builtin,2,249413,0x7ff778263ba4,1280,DataViewPrototypeSetInt16
code-creation,Builtin,2,249420,0x7ff7782640e4,1316,DataViewPrototypeSetUint32
code-creation,Builtin,2,249428,0x7ff778264624,1316,DataViewPrototypeSetInt32
code-creation,Builtin,2,249436,0x7ff778264b64,1280,DataViewPrototypeSetFloat32
code-creation,Builtin,2,249454,0x7ff7782650a4,1344,DataViewPrototypeSetFloat64
code-creation,Builtin,2,249462,0x7ff778265624,1220,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,249470,0x7ff778265b24,1220,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,249479,0x7ff778266024,832,FinalizationRegistryConstructor
code-creation,Builtin,2,249487,0x7ff7782663a4,1268,FinalizationRegistryRegister
code-creation,Builtin,2,249497,0x7ff7782668a4,684,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,249508,0x7ff778266b64,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,249516,0x7ff778266ce4,956,FastFunctionPrototypeBind
code-creation,Builtin,2,249525,0x7ff7782670a4,92,IncBlockCounter
code-creation,Builtin,2,249534,0x7ff778267124,228,GetTemplateObject
code-creation,Builtin,2,249542,0x7ff778267224,92,ForInNext
code-creation,Builtin,2,249568,0x7ff7782672a4,144,GetImportMetaObjectBaseline
code-creation,Builtin,2,249586,0x7ff778267364,112,GetIteratorWithFeedback
code-creation,Builtin,2,249595,0x7ff7782673e4,100,GetIteratorBaseline
code-creation,Builtin,2,249603,0x7ff778267464,272,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,249612,0x7ff7782675a4,1072,CallIteratorWithFeedback
code-creation,Builtin,2,249621,0x7ff7782679e4,292,MathAbs
code-creation,Builtin,2,249630,0x7ff778267b24,428,MathCeil
code-creation,Builtin,2,249638,0x7ff778267ce4,436,MathFloor
code-creation,Builtin,2,249645,0x7ff778267ea4,480,MathRound
code-creation,Builtin,2,249653,0x7ff7782680a4,432,MathTrunc
code-creation,Builtin,2,249660,0x7ff778268264,376,MathPow
code-creation,Builtin,2,249668,0x7ff7782683e4,416,MathMax
code-creation,Builtin,2,249676,0x7ff7782685a4,424,MathMin
code-creation,Builtin,2,249684,0x7ff778268764,324,MathAcos
code-creation,Builtin,2,249691,0x7ff7782688e4,324,MathAcosh
code-creation,Builtin,2,249699,0x7ff778268a64,324,MathAsin
code-creation,Builtin,2,249710,0x7ff778268be4,324,MathAsinh
code-creation,Builtin,2,249718,0x7ff778268d64,324,MathAtan
code-creation,Builtin,2,249725,0x7ff778268ee4,416,MathAtan2
code-creation,Builtin,2,249733,0x7ff7782690a4,324,MathAtanh
code-creation,Builtin,2,249741,0x7ff778269224,324,MathCbrt
code-creation,Builtin,2,249749,0x7ff7782693a4,168,MathClz32
code-creation,Builtin,2,249757,0x7ff778269464,324,MathCos
code-creation,Builtin,2,249765,0x7ff7782695e4,324,MathCosh
code-creation,Builtin,2,249773,0x7ff778269764,324,MathExp
code-creation,Builtin,2,249781,0x7ff7782698e4,324,MathExpm1
code-creation,Builtin,2,249789,0x7ff778269a64,276,MathFround
code-creation,Builtin,2,249797,0x7ff778269ba4,304,MathImul
code-creation,Builtin,2,249805,0x7ff778269ce4,324,MathLog
code-creation,Builtin,2,249813,0x7ff778269e64,324,MathLog1p
code-creation,Builtin,2,249820,0x7ff778269fe4,324,MathLog10
code-creation,Builtin,2,249827,0x7ff77826a164,324,MathLog2
code-creation,Builtin,2,249835,0x7ff77826a2e4,324,MathSin
code-creation,Builtin,2,249845,0x7ff77826a464,176,MathSign
code-creation,Builtin,2,249865,0x7ff77826a524,324,MathSinh
code-creation,Builtin,2,249873,0x7ff77826a6a4,272,MathSqrt
code-creation,Builtin,2,249880,0x7ff77826a7e4,324,MathTan
code-creation,Builtin,2,249887,0x7ff77826a964,324,MathTanh
code-creation,Builtin,2,249895,0x7ff77826aae4,1048,MathHypot
code-creation,Builtin,2,249902,0x7ff77826af24,340,MathRandom
code-creation,Builtin,2,249909,0x7ff77826b0a4,2360,NumberPrototypeToString
code-creation,Builtin,2,249918,0x7ff77826b9e4,152,NumberIsFinite
code-creation,Builtin,2,249925,0x7ff77826baa4,332,NumberIsInteger
code-creation,Builtin,2,249933,0x7ff77826bc24,128,NumberIsNaN
code-creation,Builtin,2,249941,0x7ff77826bce4,364,NumberIsSafeInteger
code-creation,Builtin,2,249949,0x7ff77826be64,156,NumberPrototypeValueOf
code-creation,Builtin,2,249957,0x7ff77826bf24,192,NumberParseFloat
code-creation,Builtin,2,249965,0x7ff77826c024,248,ParseInt
code-creation,Builtin,2,249974,0x7ff77826c124,84,NumberParseInt
code-creation,Builtin,2,249982,0x7ff77826c1a4,824,Add
code-creation,Builtin,2,249991,0x7ff77826c4e4,424,Subtract
code-creation,Builtin,2,249998,0x7ff77826c6a4,576,Multiply
code-creation,Builtin,2,250007,0x7ff77826c924,492,Divide
code-creation,Builtin,2,250014,0x7ff77826cb24,596,Modulus
code-creation,Builtin,2,250022,0x7ff77826cda4,516,Exponentiate
code-creation,Builtin,2,250030,0x7ff77826cfe4,352,Negate
code-creation,Builtin,2,250038,0x7ff77826d164,108,BitwiseNot
code-creation,Builtin,2,250046,0x7ff77826d1e4,108,Decrement
code-creation,Builtin,2,250054,0x7ff77826d264,108,Increment
code-creation,Builtin,2,250062,0x7ff77826d2e4,428,ShiftLeft
code-creation,Builtin,2,250068,0x7ff77826d4a4,428,ShiftRight
code-creation,Builtin,2,250073,0x7ff77826d664,548,ShiftRightLogical
code-creation,Builtin,2,250079,0x7ff77826d8a4,184,BitwiseAnd
code-creation,Builtin,2,250085,0x7ff77826d964,420,BitwiseOr
code-creation,Builtin,2,250090,0x7ff77826db24,420,BitwiseXor
code-creation,Builtin,2,250095,0x7ff77826dce4,796,LessThan
code-creation,Builtin,2,250101,0x7ff77826e024,796,LessThanOrEqual
code-creation,Builtin,2,250106,0x7ff77826e364,792,GreaterThan
code-creation,Builtin,2,250112,0x7ff77826e6a4,792,GreaterThanOrEqual
code-creation,Builtin,2,250120,0x7ff77826e9e4,852,Equal
code-creation,Builtin,2,250128,0x7ff77826ed64,332,StrictEqual
code-creation,Builtin,2,250137,0x7ff77826eee4,3296,ObjectFromEntries
code-creation,Builtin,2,250146,0x7ff77826fbe4,764,CreateObjectWithoutProperties
code-creation,Builtin,2,250154,0x7ff77826fee4,140,ObjectIsExtensible
code-creation,Builtin,2,250162,0x7ff77826ffa4,144,ObjectPreventExtensions
code-creation,Builtin,2,250171,0x7ff778270064,140,ObjectGetPrototypeOf
code-creation,Builtin,2,250179,0x7ff778270124,300,ObjectSetPrototypeOf
code-creation,Builtin,2,250187,0x7ff778270264,80,ObjectPrototypeToString
code-creation,Builtin,2,250196,0x7ff7782702e4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,250204,0x7ff778270364,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,250213,0x7ff778270424,868,FulfillPromise
code-creation,Builtin,2,250222,0x7ff7782707a4,1008,RejectPromise
code-creation,Builtin,2,250230,0x7ff778270ba4,2604,NewPromiseCapability
code-creation,Builtin,2,250236,0x7ff7782715e4,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,250242,0x7ff7782716e4,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,250248,0x7ff7782717a4,1312,PerformPromiseThen
code-creation,Builtin,2,250253,0x7ff778271ce4,664,PromiseReject
code-creation,Builtin,2,250259,0x7ff778271fa4,296,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,250265,0x7ff7782720e4,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,250272,0x7ff778272164,4548,PromiseAll
code-creation,Builtin,2,250277,0x7ff778273364,4864,PromiseAllSettled
code-creation,Builtin,2,250284,0x7ff7782746a4,1140,PromiseAllResolveElementClosure
code-creation,Builtin,2,250290,0x7ff778274b24,1456,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,250297,0x7ff7782750e4,1464,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,250305,0x7ff7782756a4,1204,PromiseAnyRejectElementClosure
code-creation,Builtin,2,250313,0x7ff778275b64,2744,PromiseAny
code-creation,Builtin,2,250319,0x7ff778276624,2996,PromiseConstructor
code-creation,Builtin,2,250327,0x7ff7782771e4,304,PromisePrototypeCatch
code-creation,Builtin,2,250335,0x7ff778277324,92,PromiseValueThunkFinally
code-creation,Builtin,2,250345,0x7ff7782773a4,88,PromiseThrowerFinally
code-creation,Builtin,2,250353,0x7ff778277424,1052,PromiseCatchFinally
code-creation,Builtin,2,250362,0x7ff778277864,1052,PromiseThenFinally
code-creation,Builtin,2,250371,0x7ff778277ca4,1732,PromisePrototypeFinally
code-creation,Builtin,2,250380,0x7ff7782783a4,1520,PromiseRace
code-creation,Builtin,2,250388,0x7ff7782789a4,340,PromiseFulfillReactionJob
code-creation,Builtin,2,250415,0x7ff778278b24,444,PromiseRejectReactionJob
code-creation,Builtin,2,250424,0x7ff778278ce4,156,PromiseResolveTrampoline
code-creation,Builtin,2,250432,0x7ff778278da4,692,PromiseResolve
code-creation,Builtin,2,250440,0x7ff778279064,740,ResolvePromise
code-creation,Builtin,2,250449,0x7ff778279364,2264,PromisePrototypeThen
code-creation,Builtin,2,250458,0x7ff778279c64,1308,PromiseResolveThenableJob
code-creation,Builtin,2,250466,0x7ff77827a1a4,456,ProxyConstructor
code-creation,Builtin,2,250474,0x7ff77827a3a4,2452,ProxyDeleteProperty
code-creation,Builtin,2,250483,0x7ff77827ad64,2744,ProxyGetProperty
code-creation,Builtin,2,250504,0x7ff77827b824,1048,ProxyGetPrototypeOf
code-creation,Builtin,2,250514,0x7ff77827bc64,2396,ProxyHasProperty
code-creation,Builtin,2,250523,0x7ff77827c5e4,760,ProxyIsExtensible
code-creation,Builtin,2,250534,0x7ff77827c8e4,812,ProxyPreventExtensions
code-creation,Builtin,2,250542,0x7ff77827cc24,1196,ProxyRevocable
code-creation,Builtin,2,250551,0x7ff77827d0e4,136,ProxyRevoke
code-creation,Builtin,2,250559,0x7ff77827d1a4,2892,ProxySetProperty
code-creation,Builtin,2,250568,0x7ff77827dd24,1300,ProxySetPrototypeOf
code-creation,Builtin,2,250576,0x7ff77827e264,208,ReflectIsExtensible
code-creation,Builtin,2,250586,0x7ff77827e364,216,ReflectPreventExtensions
code-creation,Builtin,2,250595,0x7ff77827e464,184,ReflectGetPrototypeOf
code-creation,Builtin,2,250606,0x7ff77827e524,332,ReflectSetPrototypeOf
code-creation,Builtin,2,250617,0x7ff77827e6a4,300,ReflectGet
code-creation,Builtin,2,250627,0x7ff77827e7e4,156,ReflectDeleteProperty
code-creation,Builtin,2,250638,0x7ff77827e8a4,144,ReflectHas
code-creation,Builtin,2,250647,0x7ff77827e964,5168,RegExpPrototypeExecSlow
code-creation,Builtin,2,250659,0x7ff77827fda4,5196,RegExpPrototypeExec
code-creation,Builtin,2,250671,0x7ff778281224,2464,RegExpPrototypeMatchAll
code-creation,Builtin,2,250684,0x7ff778281be4,9468,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,250698,0x7ff7782840e4,8836,RegExpMatchFast
code-creation,Builtin,2,250709,0x7ff7782863a4,3692,RegExpPrototypeMatch
code-creation,Builtin,2,250719,0x7ff778287224,6192,RegExpReplace
code-creation,Builtin,2,250728,0x7ff778288a64,524,RegExpPrototypeReplace
code-creation,Builtin,2,250741,0x7ff778288ca4,1352,RegExpSearchFast
code-creation,Builtin,2,250752,0x7ff778289224,1624,RegExpPrototypeSearch
code-creation,Builtin,2,250766,0x7ff7782898a4,204,RegExpPrototypeSourceGetter
code-creation,Builtin,2,250778,0x7ff7782899a4,5640,RegExpSplit
code-creation,Builtin,2,250787,0x7ff77828afe4,484,RegExpPrototypeSplit
code-creation,Builtin,2,250799,0x7ff77828b1e4,2224,RegExpPrototypeTest
code-creation,Builtin,2,250810,0x7ff77828baa4,1260,RegExpPrototypeTestFast
code-creation,Builtin,2,250821,0x7ff77828bfa4,240,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,250831,0x7ff77828c0a4,256,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,250843,0x7ff77828c1e4,256,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,250862,0x7ff77828c324,256,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,250874,0x7ff77828c464,256,RegExpPrototypeLinearGetter
code-creation,Builtin,2,250885,0x7ff77828c5a4,256,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,250895,0x7ff77828c6e4,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,250907,0x7ff77828c824,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,250920,0x7ff77828c964,256,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,250931,0x7ff77828caa4,2500,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,250942,0x7ff77828d4a4,1260,StringPrototypeAt
code-creation,Builtin,2,250951,0x7ff77828d9a4,3020,StringPrototypeEndsWith
code-creation,Builtin,2,250960,0x7ff77828e5a4,488,CreateHTML
code-creation,Builtin,2,250968,0x7ff77828e7a4,164,StringPrototypeAnchor
code-creation,Builtin,2,250977,0x7ff77828e864,128,StringPrototypeBig
code-creation,Builtin,2,250986,0x7ff77828e924,128,StringPrototypeBlink
code-creation,Builtin,2,250995,0x7ff77828e9e4,128,StringPrototypeBold
code-creation,Builtin,2,251188,0x7ff77828eaa4,172,StringPrototypeFontcolor
code-creation,Builtin,2,251198,0x7ff77828eb64,172,StringPrototypeFontsize
code-creation,Builtin,2,251206,0x7ff77828ec24,128,StringPrototypeFixed
code-creation,Builtin,2,251215,0x7ff77828ece4,128,StringPrototypeItalics
code-creation,Builtin,2,251224,0x7ff77828eda4,172,StringPrototypeLink
code-creation,Builtin,2,251233,0x7ff77828ee64,128,StringPrototypeSmall
code-creation,Builtin,2,251241,0x7ff77828ef24,128,StringPrototypeStrike
code-creation,Builtin,2,251249,0x7ff77828efe4,128,StringPrototypeSub
code-creation,Builtin,2,251258,0x7ff77828f0a4,128,StringPrototypeSup
code-creation,Builtin,2,251266,0x7ff77828f164,1052,StringPrototypeIncludes
code-creation,Builtin,2,251274,0x7ff77828f5a4,644,StringPrototypeIndexOf
code-creation,Builtin,2,251282,0x7ff77828f864,356,StringPrototypeIterator
code-creation,Builtin,2,251300,0x7ff77828f9e4,1744,StringIteratorPrototypeNext
code-creation,Builtin,2,251309,0x7ff7782900e4,1264,StringPrototypeMatch
code-creation,Builtin,2,251318,0x7ff7782905e4,1264,StringPrototypeSearch
code-creation,Builtin,2,251327,0x7ff778290ae4,812,StringPrototypePadStart
code-creation,Builtin,2,251336,0x7ff778290e24,816,StringPrototypePadEnd
code-creation,Builtin,2,251347,0x7ff778291164,120,StringRepeat
code-creation,Builtin,2,251357,0x7ff7782911e4,404,StringPrototypeRepeat
code-creation,Builtin,2,251366,0x7ff7782913a4,10564,StringPrototypeReplaceAll
code-creation,Builtin,2,251376,0x7ff778293d24,3100,StringPrototypeSlice
code-creation,Builtin,2,251385,0x7ff778294964,3048,StringPrototypeStartsWith
code-creation,Builtin,2,251395,0x7ff778295564,3036,StringPrototypeSubstr
code-creation,Builtin,2,251404,0x7ff778296164,2952,StringPrototypeSubstring
code-creation,Builtin,2,251415,0x7ff778296d24,6160,StringPrototypeTrim
code-creation,Builtin,2,251425,0x7ff778298564,5656,StringPrototypeTrimStart
code-creation,Builtin,2,251434,0x7ff778299ba4,5220,StringPrototypeTrimEnd
code-creation,Builtin,2,251444,0x7ff77829b024,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,251455,0x7ff77829b0e4,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,251464,0x7ff77829b1a4,176,SymbolPrototypeToString
code-creation,Builtin,2,251473,0x7ff77829b264,156,SymbolPrototypeValueOf
code-creation,Builtin,2,251482,0x7ff77829b324,1148,TypedArrayPrototypeAt
code-creation,Builtin,2,251491,0x7ff77829b7a4,10052,CreateTypedArray
code-creation,Builtin,2,251500,0x7ff77829df24,1760,TypedArrayPrototypeEvery
code-creation,Builtin,2,251509,0x7ff77829e624,432,TypedArrayPrototypeEntries
code-creation,Builtin,2,251517,0x7ff77829e7e4,4212,TypedArrayPrototypeFilter
code-creation,Builtin,2,251525,0x7ff77829f864,1776,TypedArrayPrototypeFind
code-creation,Builtin,2,251533,0x7ff77829ff64,1780,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,251541,0x7ff7782a0664,1764,TypedArrayPrototypeFindLast
code-creation,Builtin,2,251550,0x7ff7782a0d64,1768,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,251559,0x7ff7782a1464,1644,TypedArrayPrototypeForEach
code-creation,Builtin,2,251567,0x7ff7782a1ae4,2368,TypedArrayFrom
code-creation,Builtin,2,251575,0x7ff7782a2464,420,TypedArrayPrototypeKeys
code-creation,Builtin,2,251582,0x7ff7782a2624,1040,TypedArrayOf
code-creation,Builtin,2,251589,0x7ff7782a2a64,1748,TypedArrayPrototypeReduce
code-creation,Builtin,2,251597,0x7ff7782a3164,1740,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,251609,0x7ff7782a3864,3412,TypedArrayPrototypeSet
code-creation,Builtin,2,251615,0x7ff7782a45e4,3752,TypedArrayPrototypeSlice
code-creation,Builtin,2,251621,0x7ff7782a54a4,1776,TypedArrayPrototypeSome
code-creation,Builtin,2,251626,0x7ff7782a5ba4,944,TypedArrayMergeSort
code-creation,Builtin,2,251632,0x7ff7782a5f64,2300,TypedArrayPrototypeSort
code-creation,Builtin,2,251637,0x7ff7782a6864,3156,TypedArrayPrototypeSubArray
code-creation,Builtin,2,251642,0x7ff7782a74e4,1784,TypedArrayPrototypeToReversed
code-creation,Builtin,2,251648,0x7ff7782a7be4,3332,TypedArrayPrototypeToSorted
code-creation,Builtin,2,251654,0x7ff7782a8924,432,TypedArrayPrototypeValues
code-creation,Builtin,2,251659,0x7ff7782a8ae4,3196,TypedArrayPrototypeWith
code-creation,Builtin,2,251665,0x7ff7782a9764,1012,WeakRefConstructor
code-creation,Builtin,2,251670,0x7ff7782a9b64,184,WeakRefDeref
code-creation,Builtin,2,251676,0x7ff7782a9c24,660,NewSloppyArgumentsElements
code-creation,Builtin,2,251681,0x7ff7782a9ee4,304,NewStrictArgumentsElements
code-creation,Builtin,2,251687,0x7ff7782aa024,332,NewRestArgumentsElements
code-creation,Builtin,2,251692,0x7ff7782aa1a4,1544,FastNewSloppyArguments
code-creation,Builtin,2,251698,0x7ff7782aa7e4,524,FastNewStrictArguments
code-creation,Builtin,2,251703,0x7ff7782aaa24,572,FastNewRestArguments
code-creation,Builtin,2,251709,0x7ff7782aac64,648,StringSlowFlatten
code-creation,Builtin,2,251714,0x7ff7782aaf24,2052,StringIndexOf
code-creation,Builtin,2,251720,0x7ff7782ab764,2028,TestTurbofanType
code-creation,Builtin,2,251725,0x7ff7782abf64,152,CheckTurbofanType
code-creation,Builtin,2,251730,0x7ff7782ac024,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,251737,0x7ff7782ac064,20,TestHelperPlus1
code-creation,Builtin,2,251743,0x7ff7782ac0a4,20,TestHelperPlus2
code-creation,Builtin,2,251748,0x7ff7782ac0e4,100,NewSmiBox
code-creation,Builtin,2,251754,0x7ff7782ac164,24,ReturnTwoValues
code-creation,Builtin,2,251759,0x7ff7782ac1a4,32,Load_FastSmiElements_0
code-creation,Builtin,2,251765,0x7ff7782ac1e4,32,Load_FastObjectElements_0
code-creation,Builtin,2,251770,0x7ff7782ac224,152,Load_FastDoubleElements_0
code-creation,Builtin,2,251776,0x7ff7782ac2e4,32,Store_FastSmiElements_0
code-creation,Builtin,2,251781,0x7ff7782ac324,96,Store_FastObjectElements_0
code-creation,Builtin,2,251787,0x7ff7782ac3a4,48,Store_FastDoubleElements_0
code-creation,Builtin,2,251792,0x7ff7782ac3e4,40,Delete_FastSmiElements_0
code-creation,Builtin,2,251798,0x7ff7782ac424,40,Delete_FastObjectElements_0
code-creation,Builtin,2,251803,0x7ff7782ac464,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,251809,0x7ff7782ac4a4,284,SortCompareDefault
code-creation,Builtin,2,251814,0x7ff7782ac5e4,96,SortCompareUserFn
code-creation,Builtin,2,251819,0x7ff7782ac664,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,251825,0x7ff7782ac6a4,312,Copy
code-creation,Builtin,2,251830,0x7ff7782ac7e4,5756,MergeAt
code-creation,Builtin,2,251835,0x7ff7782ade64,792,GallopLeft
code-creation,Builtin,2,251840,0x7ff7782ae1a4,832,GallopRight
code-creation,Builtin,2,251845,0x7ff7782ae524,3808,ArrayTimSort
code-creation,Builtin,2,251850,0x7ff7782af424,2120,ArrayPrototypeSort
code-creation,Builtin,2,251856,0x7ff7782afca4,3524,StringFastLocaleCompare
code-creation,Builtin,2,251861,0x7ff7782b0aa4,104,WasmInt32ToHeapNumber
code-creation,Builtin,2,251874,0x7ff7782b0b24,24,WasmFuncRefToJS
code-creation,Builtin,2,251879,0x7ff7782b0b64,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,251885,0x7ff7782b0be4,76,WasmTaggedToFloat64
code-creation,Builtin,2,251890,0x7ff7782b0c64,72,WasmMemoryGrow
code-creation,Builtin,2,251895,0x7ff7782b0ce4,100,WasmTableInit
code-creation,Builtin,2,251900,0x7ff7782b0d64,100,WasmTableCopy
code-creation,Builtin,2,251905,0x7ff7782b0de4,84,WasmTableFill
code-creation,Builtin,2,251911,0x7ff7782b0e64,72,WasmTableGrow
code-creation,Builtin,2,251916,0x7ff7782b0ee4,80,WasmTableGet
code-creation,Builtin,2,251921,0x7ff7782b0f64,152,WasmTableSet
code-creation,Builtin,2,251926,0x7ff7782b1024,148,WasmTableGetFuncRef
code-creation,Builtin,2,251932,0x7ff7782b10e4,108,WasmTableSetFuncRef
code-creation,Builtin,2,251938,0x7ff7782b1164,96,WasmRefFunc
code-creation,Builtin,2,251943,0x7ff7782b11e4,144,WasmAllocateFixedArray
code-creation,Builtin,2,251948,0x7ff7782b12a4,44,WasmThrow
code-creation,Builtin,2,251953,0x7ff7782b12e4,56,WasmRethrow
code-creation,Builtin,2,251958,0x7ff7782b1324,44,WasmRethrowExplicitContext
code-creation,Builtin,2,251964,0x7ff7782b1364,44,WasmTriggerTierUp
code-creation,Builtin,2,251969,0x7ff7782b13a4,32,WasmStackGuard
code-creation,Builtin,2,251974,0x7ff7782b13e4,32,WasmStackOverflow
code-creation,Builtin,2,251979,0x7ff7782b1424,40,WasmTraceMemory
code-creation,Builtin,2,251985,0x7ff7782b1464,32,WasmTraceEnter
code-creation,Builtin,2,251991,0x7ff7782b14a4,40,WasmTraceExit
code-creation,Builtin,2,251995,0x7ff7782b14e4,340,WasmAllocateJSArray
code-creation,Builtin,2,252001,0x7ff7782b1664,108,WasmAllocateStructWithRtt
code-creation,Builtin,2,252007,0x7ff7782b16e4,136,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,252012,0x7ff7782b17a4,92,WasmArrayNewSegment
code-creation,Builtin,2,252017,0x7ff7782b1824,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,252023,0x7ff7782b18e4,72,WasmArrayCopy
code-creation,Builtin,2,252027,0x7ff7782b1964,244,WasmAllocateObjectWrapper
code-creation,Builtin,2,252033,0x7ff7782b1a64,48,WasmSubtypeCheck
code-creation,Builtin,2,252038,0x7ff7782b1aa4,8,WasmInt32ToNumber
code-creation,Builtin,2,252043,0x7ff7782b1ae4,116,WasmUint32ToNumber
code-creation,Builtin,2,252048,0x7ff7782b1b64,148,UintPtr53ToNumber
code-creation,Builtin,2,252053,0x7ff7782b1c24,96,WasmAtomicNotify
code-creation,Builtin,2,252059,0x7ff7782b1ca4,116,WasmI32AtomicWait64
code-creation,Builtin,2,252064,0x7ff7782b1d24,116,WasmI64AtomicWait64
code-creation,Builtin,2,252069,0x7ff7782b1da4,1288,CallRefIC
code-creation,Builtin,2,252075,0x7ff7782b22e4,1544,WasmGetOwnProperty
code-creation,Builtin,2,252080,0x7ff7782b2924,40,WasmTrap
code-creation,Builtin,2,252085,0x7ff7782b2964,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,252090,0x7ff7782b29a4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,252096,0x7ff7782b29e4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,252101,0x7ff7782b2a24,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,252107,0x7ff7782b2a64,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,252112,0x7ff7782b2aa4,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,252117,0x7ff7782b2ae4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,252123,0x7ff7782b2b24,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,252128,0x7ff7782b2b64,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,252134,0x7ff7782b2ba4,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,252140,0x7ff7782b2be4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,252146,0x7ff7782b2c24,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,252151,0x7ff7782b2c64,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,252156,0x7ff7782b2ca4,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,252162,0x7ff7782b2ce4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,252167,0x7ff7782b2d24,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,252173,0x7ff7782b2d64,1016,ExperimentalWasmConvertArrayToString
code-creation,Builtin,2,252178,0x7ff7782b3164,880,ExperimentalWasmConvertStringToArray
code-creation,Builtin,2,252184,0x7ff7782b34e4,152,WasmStringNewWtf8
code-creation,Builtin,2,252189,0x7ff7782b35a4,104,WasmStringNewWtf8Array
code-creation,Builtin,2,252195,0x7ff7782b3624,140,WasmStringNewWtf16
code-creation,Builtin,2,252200,0x7ff7782b36e4,104,WasmStringNewWtf16Array
code-creation,Builtin,2,252205,0x7ff7782b3764,48,WasmStringConst
code-creation,Builtin,2,252211,0x7ff7782b37a4,108,WasmStringMeasureUtf8
code-creation,Builtin,2,252216,0x7ff7782b3824,108,WasmStringMeasureWtf8
code-creation,Builtin,2,252221,0x7ff7782b38a4,156,WasmStringEncodeWtf8
code-creation,Builtin,2,252227,0x7ff7782b3964,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,252232,0x7ff7782b3a24,108,WasmStringEncodeWtf16
code-creation,Builtin,2,252239,0x7ff7782b3aa4,728,WasmStringEncodeWtf16Array
code-creation,Builtin,2,252245,0x7ff7782b3da4,20,WasmStringConcat
code-creation,Builtin,2,252250,0x7ff7782b3de4,88,WasmStringEqual
code-creation,Builtin,2,252255,0x7ff7782b3e64,136,WasmStringIsUSVSequence
code-creation,Builtin,2,252260,0x7ff7782b3f24,40,WasmStringAsWtf8
code-creation,Builtin,2,252266,0x7ff7782b3f64,228,WasmStringViewWtf8Advance
code-creation,Builtin,2,252271,0x7ff7782b4064,172,WasmStringViewWtf8Encode
code-creation,Builtin,2,252276,0x7ff7782b4124,176,WasmStringViewWtf8Slice
code-creation,Builtin,2,252282,0x7ff7782b41e4,512,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,252287,0x7ff7782b4424,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,252293,0x7ff7782b44e4,2248,WasmStringViewWtf16Slice
code-creation,Builtin,2,252298,0x7ff7782b4de4,100,WasmStringAsIter
code-creation,Builtin,2,252303,0x7ff7782b4e64,1156,WasmStringViewIterNext
code-creation,Builtin,2,252308,0x7ff7782b5324,1260,WasmStringViewIterAdvance
code-creation,Builtin,2,252314,0x7ff7782b5824,1216,WasmStringViewIterRewind
code-creation,Builtin,2,252319,0x7ff7782b5d24,3088,WasmStringViewIterSlice
code-creation,Builtin,2,252325,0x7ff7782b6964,48,WasmExternInternalize
code-creation,Builtin,2,252330,0x7ff7782b69a4,72,WasmExternExternalize
code-creation,Builtin,2,252335,0x7ff7782b6a24,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,252341,0x7ff7782b6ae4,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,252347,0x7ff7782b6b24,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,252363,0x7ff7782b6ba4,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,252369,0x7ff7782b6c24,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,252375,0x7ff7782b6c64,224,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,252381,0x7ff7782b6d64,252,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,252387,0x7ff7782b6e64,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,252393,0x7ff7782b6ea4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,252399,0x7ff7782b6ee4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,252404,0x7ff7782b6f24,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,252410,0x7ff7782b6f64,136,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,252416,0x7ff7782b7024,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,252421,0x7ff7782b7064,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,252427,0x7ff7782b70a4,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,252433,0x7ff7782b70e4,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,252438,0x7ff7782b7124,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,252497,0x7ff7782b7164,3560,Load_GenericElementsAccessor_0
code-creation,Builtin,2,252506,0x7ff7782b7f64,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,252599,0x7ff7782b7fa4,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,252614,0x7ff7782b7fe4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,252624,0x7ff7782b8024,172,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,252635,0x7ff7782b80e4,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,252648,0x7ff7782b81a4,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,252658,0x7ff7782b8224,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,252670,0x7ff7782b8264,160,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,252681,0x7ff7782b8324,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,252692,0x7ff7782b83a4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,252703,0x7ff7782b83e4,156,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,252714,0x7ff7782b84a4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,252724,0x7ff7782b84e4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,252733,0x7ff7782b8524,604,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,252746,0x7ff7782b87a4,224,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,252756,0x7ff7782b88a4,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,252765,0x7ff7782b88e4,196,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,252777,0x7ff7782b89e4,252,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,252787,0x7ff7782b8ae4,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,252796,0x7ff7782b8b24,196,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,252805,0x7ff7782b8c24,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,252813,0x7ff7782b8c64,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,252828,0x7ff7782b8ca4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,252839,0x7ff7782b8d64,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,252848,0x7ff7782b8da4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,252857,0x7ff7782b8de4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,252865,0x7ff7782b8ea4,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,252874,0x7ff7782b8ee4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,252892,0x7ff7782b8f24,184,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,252900,0x7ff7782b8fe4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,252909,0x7ff7782b9024,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,252918,0x7ff7782b9064,184,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,252929,0x7ff7782b9124,136,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,252938,0x7ff7782b91e4,172,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,252944,0x7ff7782b92a4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,252951,0x7ff7782b9364,12,CollatorConstructor
code-creation,Builtin,2,252959,0x7ff7782b93a4,12,CollatorInternalCompare
code-creation,Builtin,2,252967,0x7ff7782b93e4,12,CollatorPrototypeCompare
code-creation,Builtin,2,252975,0x7ff7782b9424,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,252984,0x7ff7782b9464,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,252995,0x7ff7782b94a4,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,253002,0x7ff7782b94e4,12,DatePrototypeToLocaleString
code-creation,Builtin,2,253008,0x7ff7782b9524,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,253014,0x7ff7782b9564,12,DateTimeFormatConstructor
code-creation,Builtin,2,253019,0x7ff7782b95a4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,253025,0x7ff7782b95e4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,253031,0x7ff7782b9624,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,253037,0x7ff7782b9664,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,253044,0x7ff7782b96a4,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,253052,0x7ff7782b96e4,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,253059,0x7ff7782b9724,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,253065,0x7ff7782b9764,12,DisplayNamesConstructor
code-creation,Builtin,2,253071,0x7ff7782b97a4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,253076,0x7ff7782b97e4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,253082,0x7ff7782b9824,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,253088,0x7ff7782b9864,12,DurationFormatConstructor
code-creation,Builtin,2,253097,0x7ff7782b98a4,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,253107,0x7ff7782b98e4,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,253114,0x7ff7782b9924,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,253120,0x7ff7782b9964,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,253126,0x7ff7782b99a4,12,IntlGetCanonicalLocales
code-creation,Builtin,2,253134,0x7ff7782b99e4,12,IntlSupportedValuesOf
code-creation,Builtin,2,253140,0x7ff7782b9a24,12,ListFormatConstructor
code-creation,Builtin,2,253149,0x7ff7782b9a64,228,ListFormatPrototypeFormat
code-creation,Builtin,2,253156,0x7ff7782b9b64,228,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,253163,0x7ff7782b9c64,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,253169,0x7ff7782b9ca4,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,253175,0x7ff7782b9ce4,12,LocaleConstructor
code-creation,Builtin,2,253180,0x7ff7782b9d24,12,LocalePrototypeBaseName
code-creation,Builtin,2,253186,0x7ff7782b9d64,12,LocalePrototypeCalendar
code-creation,Builtin,2,253191,0x7ff7782b9da4,12,LocalePrototypeCalendars
code-creation,Builtin,2,253197,0x7ff7782b9de4,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,253203,0x7ff7782b9e24,12,LocalePrototypeCollation
code-creation,Builtin,2,253209,0x7ff7782b9e64,12,LocalePrototypeCollations
code-creation,Builtin,2,253214,0x7ff7782b9ea4,12,LocalePrototypeHourCycle
code-creation,Builtin,2,253220,0x7ff7782b9ee4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,253226,0x7ff7782b9f24,12,LocalePrototypeLanguage
code-creation,Builtin,2,253231,0x7ff7782b9f64,12,LocalePrototypeMaximize
code-creation,Builtin,2,253237,0x7ff7782b9fa4,12,LocalePrototypeMinimize
code-creation,Builtin,2,253243,0x7ff7782b9fe4,12,LocalePrototypeNumeric
code-creation,Builtin,2,253248,0x7ff7782ba024,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,253254,0x7ff7782ba064,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,253260,0x7ff7782ba0a4,12,LocalePrototypeRegion
code-creation,Builtin,2,253266,0x7ff7782ba0e4,12,LocalePrototypeScript
code-creation,Builtin,2,253272,0x7ff7782ba124,12,LocalePrototypeTextInfo
code-creation,Builtin,2,253278,0x7ff7782ba164,12,LocalePrototypeTimeZones
code-creation,Builtin,2,253286,0x7ff7782ba1a4,12,LocalePrototypeToString
code-creation,Builtin,2,253292,0x7ff7782ba1e4,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,253300,0x7ff7782ba224,12,NumberFormatConstructor
code-creation,Builtin,2,253306,0x7ff7782ba264,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,253315,0x7ff7782ba2a4,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,253321,0x7ff7782ba2e4,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,253329,0x7ff7782ba324,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,253336,0x7ff7782ba364,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,253342,0x7ff7782ba3a4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,253348,0x7ff7782ba3e4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,253354,0x7ff7782ba424,12,PluralRulesConstructor
code-creation,Builtin,2,253370,0x7ff7782ba464,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,253376,0x7ff7782ba4a4,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,253382,0x7ff7782ba4e4,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,253388,0x7ff7782ba524,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,253394,0x7ff7782ba564,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,253400,0x7ff7782ba5a4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,253408,0x7ff7782ba5e4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,253415,0x7ff7782ba624,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,253424,0x7ff7782ba664,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,253430,0x7ff7782ba6a4,12,SegmenterConstructor
code-creation,Builtin,2,253436,0x7ff7782ba6e4,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,253443,0x7ff7782ba724,12,SegmenterPrototypeSegment
code-creation,Builtin,2,253450,0x7ff7782ba764,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,253456,0x7ff7782ba7a4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,253462,0x7ff7782ba7e4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,253468,0x7ff7782ba824,12,SegmentsPrototypeIterator
code-creation,Builtin,2,253474,0x7ff7782ba864,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,253480,0x7ff7782ba8a4,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,253486,0x7ff7782ba8e4,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,253493,0x7ff7782ba924,196,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,253501,0x7ff7782baa24,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,253507,0x7ff7782baa64,640,StringToLowerCaseIntl
code-creation,Builtin,2,253513,0x7ff7782bad24,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,253519,0x7ff7782bad64,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,253524,0x7ff7782bada4,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,253538,0x7ff7782bade4,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,253547,0x7ff7782bae24,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,253553,0x7ff7782bae64,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,253560,0x7ff7782baea4,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,253566,0x7ff7782baee4,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,253572,0x7ff7782baf24,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,253578,0x7ff7782baf64,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,253584,0x7ff7782bafa4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,253590,0x7ff7782bafe4,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,253596,0x7ff7782bb024,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,253602,0x7ff7782bb064,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,253608,0x7ff7782bb0a4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,253614,0x7ff7782bb0e4,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,253620,0x7ff7782bb124,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,253626,0x7ff7782bb164,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,253632,0x7ff7782bb1a4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,253638,0x7ff7782bb1e4,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,253644,0x7ff7782bb224,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,253651,0x7ff7782bb264,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,253657,0x7ff7782bb2a4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,253663,0x7ff7782bb2e4,24,Wide
code-creation,BytecodeHandler,0,253668,0x7ff7782bb324,24,ExtraWide
code-creation,BytecodeHandler,0,253673,0x7ff7782bb364,104,DebugBreakWide
code-creation,BytecodeHandler,0,253678,0x7ff7782bb3e4,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,253684,0x7ff7782bb464,164,DebugBreak0
code-creation,BytecodeHandler,0,253689,0x7ff7782bb524,104,DebugBreak1
code-creation,BytecodeHandler,0,253694,0x7ff7782bb5a4,104,DebugBreak2
code-creation,BytecodeHandler,0,253699,0x7ff7782bb624,104,DebugBreak3
code-creation,BytecodeHandler,0,253704,0x7ff7782bb6a4,104,DebugBreak4
code-creation,BytecodeHandler,0,253709,0x7ff7782bb724,104,DebugBreak5
code-creation,BytecodeHandler,0,253714,0x7ff7782bb7a4,104,DebugBreak6
code-creation,BytecodeHandler,0,253719,0x7ff7782bb824,32,Ldar
code-creation,BytecodeHandler,0,253724,0x7ff7782bb864,60,LdaZero
code-creation,BytecodeHandler,0,253729,0x7ff7782bb8a4,68,LdaSmi
code-creation,BytecodeHandler,0,253733,0x7ff7782bb924,64,LdaUndefined
code-creation,BytecodeHandler,0,253738,0x7ff7782bb9a4,64,LdaNull
code-creation,BytecodeHandler,0,253743,0x7ff7782bba24,64,LdaTheHole
code-creation,BytecodeHandler,0,253748,0x7ff7782bbaa4,24,LdaTrue
code-creation,BytecodeHandler,0,253753,0x7ff7782bbae4,24,LdaFalse
code-creation,BytecodeHandler,0,253758,0x7ff7782bbb24,68,LdaConstant
code-creation,BytecodeHandler,0,253766,0x7ff7782bbba4,128,LdaContextSlot
code-creation,BytecodeHandler,0,253773,0x7ff7782bbc64,128,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,253781,0x7ff7782bbd24,80,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,253789,0x7ff7782bbda4,80,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,253798,0x7ff7782bbe24,32,Star
code-creation,BytecodeHandler,0,253805,0x7ff7782bbe64,48,Mov
code-creation,BytecodeHandler,0,253812,0x7ff7782bbea4,40,PushContext
code-creation,BytecodeHandler,0,253820,0x7ff7782bbee4,36,PopContext
code-creation,BytecodeHandler,0,253886,0x7ff7782bbf24,56,TestReferenceEqual
code-creation,BytecodeHandler,0,253901,0x7ff7782bbf64,60,TestUndetectable
code-creation,BytecodeHandler,0,253911,0x7ff7782bbfa4,44,TestNull
code-creation,BytecodeHandler,0,253918,0x7ff7782bbfe4,44,TestUndefined
code-creation,BytecodeHandler,0,253923,0x7ff7782bc024,364,TestTypeOf
code-creation,BytecodeHandler,0,253928,0x7ff7782bc1a4,5708,LdaGlobal
code-creation,BytecodeHandler,0,253933,0x7ff7782bd824,4436,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,253938,0x7ff7782be9a4,160,StaGlobal
code-creation,BytecodeHandler,0,253943,0x7ff7782bea64,164,StaContextSlot
code-creation,BytecodeHandler,0,253948,0x7ff7782beb24,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,253953,0x7ff7782beba4,124,LdaLookupSlot
code-creation,BytecodeHandler,0,253959,0x7ff7782bec24,256,LdaLookupContextSlot
code-creation,BytecodeHandler,0,253964,0x7ff7782bed64,4840,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,253969,0x7ff7782c0064,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,253978,0x7ff7782c00e4,256,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,253988,0x7ff7782c0224,4776,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,253997,0x7ff7782c14e4,220,StaLookupSlot
code-creation,BytecodeHandler,0,254007,0x7ff7782c15e4,5288,GetNamedProperty
code-creation,BytecodeHandler,0,254015,0x7ff7782c2aa4,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,254023,0x7ff7782c2b64,200,GetKeyedProperty
code-creation,BytecodeHandler,0,254035,0x7ff7782c2c64,172,LdaModuleVariable
code-creation,BytecodeHandler,0,254043,0x7ff7782c2d24,304,StaModuleVariable
code-creation,BytecodeHandler,0,254050,0x7ff7782c2e64,176,SetNamedProperty
code-creation,BytecodeHandler,0,254058,0x7ff7782c2f24,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,254066,0x7ff7782c2fe4,168,SetKeyedProperty
code-creation,BytecodeHandler,0,254074,0x7ff7782c30a4,168,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,254083,0x7ff7782c3164,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,254090,0x7ff7782c3224,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,254098,0x7ff7782c3324,1520,Add
code-creation,BytecodeHandler,0,254105,0x7ff7782c3924,1496,Sub
code-creation,BytecodeHandler,0,254112,0x7ff7782c3f24,1620,Mul
code-creation,BytecodeHandler,0,254119,0x7ff7782c45a4,1200,Div
code-creation,BytecodeHandler,0,254127,0x7ff7782c4a64,992,Mod
code-creation,BytecodeHandler,0,254134,0x7ff7782c4e64,1032,Exp
code-creation,BytecodeHandler,0,254142,0x7ff7782c52a4,992,BitwiseOr
code-creation,BytecodeHandler,0,254150,0x7ff7782c56a4,992,BitwiseXor
code-creation,BytecodeHandler,0,254158,0x7ff7782c5aa4,992,BitwiseAnd
code-creation,BytecodeHandler,0,254165,0x7ff7782c5ea4,1008,ShiftLeft
code-creation,BytecodeHandler,0,254181,0x7ff7782c62a4,1008,ShiftRight
code-creation,BytecodeHandler,0,254188,0x7ff7782c66a4,1128,ShiftRightLogical
code-creation,BytecodeHandler,0,254196,0x7ff7782c6b24,1400,AddSmi
code-creation,BytecodeHandler,0,254203,0x7ff7782c70a4,1384,SubSmi
code-creation,BytecodeHandler,0,254212,0x7ff7782c7624,1460,MulSmi
code-creation,BytecodeHandler,0,254219,0x7ff7782c7be4,1152,DivSmi
code-creation,BytecodeHandler,0,254227,0x7ff7782c80a4,872,ModSmi
code-creation,BytecodeHandler,0,254238,0x7ff7782c8424,916,ExpSmi
code-creation,BytecodeHandler,0,254246,0x7ff7782c87e4,500,BitwiseOrSmi
code-creation,BytecodeHandler,0,254254,0x7ff7782c89e4,500,BitwiseXorSmi
code-creation,BytecodeHandler,0,254262,0x7ff7782c8be4,500,BitwiseAndSmi
code-creation,BytecodeHandler,0,254271,0x7ff7782c8de4,524,ShiftLeftSmi
code-creation,BytecodeHandler,0,254279,0x7ff7782c9024,512,ShiftRightSmi
code-creation,BytecodeHandler,0,254287,0x7ff7782c9264,820,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,254295,0x7ff7782c95a4,656,Inc
code-creation,BytecodeHandler,0,254302,0x7ff7782c9864,656,Dec
code-creation,BytecodeHandler,0,254310,0x7ff7782c9b24,652,Negate
code-creation,BytecodeHandler,0,254317,0x7ff7782c9de4,500,BitwiseNot
code-creation,BytecodeHandler,0,254325,0x7ff7782c9fe4,120,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,254371,0x7ff7782ca064,44,LogicalNot
code-creation,BytecodeHandler,0,254385,0x7ff7782ca0a4,200,TypeOf
code-creation,BytecodeHandler,0,254393,0x7ff7782ca1a4,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,254401,0x7ff7782ca224,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,254409,0x7ff7782ca2a4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,254418,0x7ff7782ca2e4,360,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,254426,0x7ff7782ca464,1100,CallAnyReceiver
code-creation,BytecodeHandler,0,254433,0x7ff7782ca8e4,1100,CallProperty
code-creation,BytecodeHandler,0,254440,0x7ff7782cad64,1112,CallProperty0
code-creation,BytecodeHandler,0,254451,0x7ff7782cb1e4,1124,CallProperty1
code-creation,BytecodeHandler,0,254459,0x7ff7782cb664,1140,CallProperty2
code-creation,BytecodeHandler,0,254467,0x7ff7782cbae4,1052,CallUndefinedReceiver
code-creation,BytecodeHandler,0,254475,0x7ff7782cbf24,1052,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,254483,0x7ff7782cc364,1076,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,254491,0x7ff7782cc7a4,1092,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,254499,0x7ff7782ccc24,1100,CallWithSpread
code-creation,BytecodeHandler,0,254506,0x7ff7782cd0a4,128,CallRuntime
code-creation,BytecodeHandler,0,254513,0x7ff7782cd164,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,254521,0x7ff7782cd224,84,CallJSRuntime
code-creation,BytecodeHandler,0,254528,0x7ff7782cd2a4,1336,InvokeIntrinsic
code-creation,BytecodeHandler,0,254536,0x7ff7782cd7e4,1020,Construct
code-creation,BytecodeHandler,0,254548,0x7ff7782cdbe4,508,ConstructWithSpread
code-creation,BytecodeHandler,0,254557,0x7ff7782cdde4,1904,TestEqual
code-creation,BytecodeHandler,0,254566,0x7ff7782ce564,1048,TestEqualStrict
code-creation,BytecodeHandler,0,254575,0x7ff7782ce9a4,1624,TestLessThan
code-creation,BytecodeHandler,0,254583,0x7ff7782cf024,1624,TestGreaterThan
code-creation,BytecodeHandler,0,254591,0x7ff7782cf6a4,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,254598,0x7ff7782cfd24,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,254606,0x7ff7782d03a4,872,TestInstanceOf
code-creation,BytecodeHandler,0,254614,0x7ff7782d0724,156,TestIn
code-creation,BytecodeHandler,0,254622,0x7ff7782d07e4,116,ToName
code-creation,BytecodeHandler,0,254629,0x7ff7782d0864,220,ToNumber
code-creation,BytecodeHandler,0,254636,0x7ff7782d0964,240,ToNumeric
code-creation,BytecodeHandler,0,254644,0x7ff7782d0a64,116,ToObject
code-creation,BytecodeHandler,0,254651,0x7ff7782d0ae4,120,ToString
code-creation,BytecodeHandler,0,254659,0x7ff7782d0b64,404,CreateRegExpLiteral
code-creation,BytecodeHandler,0,254667,0x7ff7782d0d24,1456,CreateArrayLiteral
code-creation,BytecodeHandler,0,254675,0x7ff7782d12e4,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,254682,0x7ff7782d1364,792,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,254690,0x7ff7782d16a4,2216,CreateObjectLiteral
code-creation,BytecodeHandler,0,254698,0x7ff7782d1f64,228,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,254707,0x7ff7782d2064,172,CloneObject
code-creation,BytecodeHandler,0,254714,0x7ff7782d2124,208,GetTemplateObject
code-creation,BytecodeHandler,0,254722,0x7ff7782d2224,328,CreateClosure
code-creation,BytecodeHandler,0,254729,0x7ff7782d23a4,116,CreateBlockContext
code-creation,BytecodeHandler,0,254736,0x7ff7782d2424,132,CreateCatchContext
code-creation,BytecodeHandler,0,254744,0x7ff7782d24e4,268,CreateFunctionContext
code-creation,BytecodeHandler,0,254751,0x7ff7782d2624,268,CreateEvalContext
code-creation,BytecodeHandler,0,254759,0x7ff7782d2764,132,CreateWithContext
code-creation,BytecodeHandler,0,254766,0x7ff7782d2824,1596,CreateMappedArguments
code-creation,BytecodeHandler,0,254774,0x7ff7782d2e64,588,CreateUnmappedArguments
code-creation,BytecodeHandler,0,254782,0x7ff7782d30e4,644,CreateRestParameter
code-creation,BytecodeHandler,0,254790,0x7ff7782d33a4,880,JumpLoop
code-creation,BytecodeHandler,0,254805,0x7ff7782d3724,44,Jump
tick,0x7ff778811789,254847,0,0x0,6
code-creation,BytecodeHandler,0,254876,0x7ff7782d3764,56,JumpConstant
code-creation,BytecodeHandler,0,254925,0x7ff7782d37a4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,254937,0x7ff7782d3824,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,254945,0x7ff7782d38a4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,254954,0x7ff7782d3924,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,254963,0x7ff7782d39a4,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,254972,0x7ff7782d3a24,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,254981,0x7ff7782d3aa4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,254989,0x7ff7782d3b24,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,254997,0x7ff7782d3ba4,160,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,255005,0x7ff7782d3c64,156,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,255013,0x7ff7782d3d24,144,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,255021,0x7ff7782d3de4,144,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,255029,0x7ff7782d3ea4,68,JumpIfTrue
code-creation,BytecodeHandler,0,255036,0x7ff7782d3f24,68,JumpIfFalse
code-creation,BytecodeHandler,0,255044,0x7ff7782d3fa4,68,JumpIfNull
code-creation,BytecodeHandler,0,255051,0x7ff7782d4024,68,JumpIfNotNull
code-creation,BytecodeHandler,0,255059,0x7ff7782d40a4,68,JumpIfUndefined
code-creation,BytecodeHandler,0,255067,0x7ff7782d4124,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,255075,0x7ff7782d41a4,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,255083,0x7ff7782d4224,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,255091,0x7ff7782d42a4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,255099,0x7ff7782d4324,468,ForInEnumerate
code-creation,BytecodeHandler,0,255107,0x7ff7782d4524,260,ForInPrepare
code-creation,BytecodeHandler,0,255114,0x7ff7782d4664,64,ForInContinue
code-creation,BytecodeHandler,0,255122,0x7ff7782d46e4,264,ForInNext
code-creation,BytecodeHandler,0,255129,0x7ff7782d4824,48,ForInStep
code-creation,BytecodeHandler,0,255137,0x7ff7782d4864,36,SetPendingMessage
code-creation,BytecodeHandler,0,255145,0x7ff7782d48a4,116,Throw
code-creation,BytecodeHandler,0,255152,0x7ff7782d4924,116,ReThrow
code-creation,BytecodeHandler,0,255159,0x7ff7782d49a4,112,Return
code-creation,BytecodeHandler,0,255166,0x7ff7782d4a24,192,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,255175,0x7ff7782d4b24,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,255184,0x7ff7782d4be4,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,255193,0x7ff7782d4ca4,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,255201,0x7ff7782d4d64,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,255209,0x7ff7782d4de4,520,SuspendGenerator
code-creation,BytecodeHandler,0,255217,0x7ff7782d5024,140,ResumeGenerator
code-creation,BytecodeHandler,0,255225,0x7ff7782d50e4,164,GetIterator
code-creation,BytecodeHandler,0,255248,0x7ff7782d51a4,116,Debugger
code-creation,BytecodeHandler,0,255256,0x7ff7782d5224,124,IncBlockCounter
code-creation,BytecodeHandler,0,255264,0x7ff7782d52a4,56,Abort
code-creation,BytecodeHandler,0,255272,0x7ff7782d52e4,32,Star0
code-creation,BytecodeHandler,0,255279,0x7ff7782d5324,60,Illegal
code-creation,BytecodeHandler,0,255289,0x7ff7782d5364,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,255298,0x7ff7782d53e4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,255307,0x7ff7782d5464,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,255316,0x7ff7782d54e4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,255325,0x7ff7782d5564,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,255334,0x7ff7782d55e4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,255344,0x7ff7782d5664,32,Ldar.Wide
code-creation,BytecodeHandler,0,255351,0x7ff7782d56a4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,255360,0x7ff7782d56e4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,255369,0x7ff7782d5724,96,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,255427,0x7ff7782d57a4,96,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,255441,0x7ff7782d5824,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,255451,0x7ff7782d5864,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,255461,0x7ff7782d58a4,32,Star.Wide
code-creation,BytecodeHandler,0,255469,0x7ff7782d58e4,48,Mov.Wide
code-creation,BytecodeHandler,0,255478,0x7ff7782d5924,40,PushContext.Wide
code-creation,BytecodeHandler,0,255486,0x7ff7782d5964,36,PopContext.Wide
code-creation,BytecodeHandler,0,255496,0x7ff7782d59a4,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,255504,0x7ff7782d59e4,4584,LdaGlobal.Wide
code-creation,BytecodeHandler,0,255513,0x7ff7782d6be4,4512,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,255523,0x7ff7782d7da4,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,255531,0x7ff7782d7e64,164,StaContextSlot.Wide
code-creation,BytecodeHandler,0,255541,0x7ff7782d7f24,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,255550,0x7ff7782d7fa4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,255559,0x7ff7782d8064,260,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,255568,0x7ff7782d81a4,4924,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,255578,0x7ff7782d94e4,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,255588,0x7ff7782d95a4,260,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,255598,0x7ff7782d96e4,4864,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,255609,0x7ff7782daa24,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,255619,0x7ff7782dab24,5344,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,255629,0x7ff7782dc024,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,255639,0x7ff7782dc124,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,255648,0x7ff7782dc1e4,172,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,255657,0x7ff7782dc2a4,308,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,255667,0x7ff7782dc3e4,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,255676,0x7ff7782dc4a4,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,255686,0x7ff7782dc564,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,255696,0x7ff7782dc624,172,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,255705,0x7ff7782dc6e4,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,255715,0x7ff7782dc7a4,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,255725,0x7ff7782dc8a4,1492,Add.Wide
code-creation,BytecodeHandler,0,255734,0x7ff7782dcea4,1468,Sub.Wide
code-creation,BytecodeHandler,0,255743,0x7ff7782dd464,1588,Mul.Wide
code-creation,BytecodeHandler,0,255751,0x7ff7782ddaa4,1208,Div.Wide
code-creation,BytecodeHandler,0,255760,0x7ff7782ddf64,1004,Mod.Wide
code-creation,BytecodeHandler,0,255768,0x7ff7782de364,1044,Exp.Wide
code-creation,BytecodeHandler,0,255777,0x7ff7782de7a4,1016,BitwiseOr.Wide
code-creation,BytecodeHandler,0,255785,0x7ff7782deba4,1016,BitwiseXor.Wide
code-creation,BytecodeHandler,0,255793,0x7ff7782defa4,1016,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,255801,0x7ff7782df3a4,1032,ShiftLeft.Wide
code-creation,BytecodeHandler,0,255809,0x7ff7782df7e4,1032,ShiftRight.Wide
code-creation,BytecodeHandler,0,255817,0x7ff7782dfc24,1152,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,255826,0x7ff7782e00e4,1376,AddSmi.Wide
code-creation,BytecodeHandler,0,255834,0x7ff7782e0664,1356,SubSmi.Wide
code-creation,BytecodeHandler,0,255841,0x7ff7782e0be4,1472,MulSmi.Wide
code-creation,BytecodeHandler,0,255850,0x7ff7782e11e4,1156,DivSmi.Wide
code-creation,BytecodeHandler,0,255860,0x7ff7782e16a4,868,ModSmi.Wide
code-creation,BytecodeHandler,0,255868,0x7ff7782e1a24,912,ExpSmi.Wide
code-creation,BytecodeHandler,0,255881,0x7ff7782e1de4,508,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,255900,0x7ff7782e1fe4,508,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,255912,0x7ff7782e21e4,508,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,255922,0x7ff7782e23e4,532,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,255963,0x7ff7782e2624,520,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,255974,0x7ff7782e2864,828,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,255984,0x7ff7782e2ba4,624,Inc.Wide
code-creation,BytecodeHandler,0,255992,0x7ff7782e2e24,624,Dec.Wide
code-creation,BytecodeHandler,0,255999,0x7ff7782e30a4,656,Negate.Wide
code-creation,BytecodeHandler,0,256007,0x7ff7782e3364,512,BitwiseNot.Wide
code-creation,BytecodeHandler,0,256014,0x7ff7782e35a4,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,256023,0x7ff7782e3664,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,256031,0x7ff7782e36e4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,256041,0x7ff7782e3724,364,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,256051,0x7ff7782e38a4,1104,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,256060,0x7ff7782e3d24,1104,CallProperty.Wide
code-creation,BytecodeHandler,0,256070,0x7ff7782e41a4,1112,CallProperty0.Wide
code-creation,BytecodeHandler,0,256079,0x7ff7782e4624,1124,CallProperty1.Wide
code-creation,BytecodeHandler,0,256089,0x7ff7782e4aa4,1140,CallProperty2.Wide
code-creation,BytecodeHandler,0,256097,0x7ff7782e4f24,1052,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,256106,0x7ff7782e5364,1056,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,256115,0x7ff7782e57a4,1076,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,256124,0x7ff7782e5be4,1096,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,256133,0x7ff7782e6064,1104,CallWithSpread.Wide
code-creation,BytecodeHandler,0,256142,0x7ff7782e64e4,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,256151,0x7ff7782e65a4,176,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,256159,0x7ff7782e6664,88,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,256167,0x7ff7782e66e4,1340,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,256175,0x7ff7782e6c24,976,Construct.Wide
code-creation,BytecodeHandler,0,256184,0x7ff7782e7024,456,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,256193,0x7ff7782e7224,1928,TestEqual.Wide
code-creation,BytecodeHandler,0,256201,0x7ff7782e79e4,1056,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,256210,0x7ff7782e7e24,1612,TestLessThan.Wide
code-creation,BytecodeHandler,0,256218,0x7ff7782e84a4,1612,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,256226,0x7ff7782e8b24,1612,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,256235,0x7ff7782e91a4,1612,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,256244,0x7ff7782e9824,876,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,256252,0x7ff7782e9ba4,156,TestIn.Wide
code-creation,BytecodeHandler,0,256260,0x7ff7782e9c64,120,ToName.Wide
code-creation,BytecodeHandler,0,256268,0x7ff7782e9ce4,224,ToNumber.Wide
code-creation,BytecodeHandler,0,256276,0x7ff7782e9de4,244,ToNumeric.Wide
code-creation,BytecodeHandler,0,256284,0x7ff7782e9ee4,120,ToObject.Wide
code-creation,BytecodeHandler,0,256292,0x7ff7782e9f64,408,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,256300,0x7ff7782ea124,1384,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,256309,0x7ff7782ea6a4,792,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,256318,0x7ff7782ea9e4,2144,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,256326,0x7ff7782eb264,176,CloneObject.Wide
code-creation,BytecodeHandler,0,256335,0x7ff7782eb324,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,256343,0x7ff7782eb3e4,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,256352,0x7ff7782eb564,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,256362,0x7ff7782eb5e4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,256370,0x7ff7782eb6a4,268,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,256379,0x7ff7782eb7e4,268,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,256388,0x7ff7782eb924,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,256396,0x7ff7782eb9e4,912,JumpLoop.Wide
code-creation,BytecodeHandler,0,256404,0x7ff7782ebda4,44,Jump.Wide
code-creation,BytecodeHandler,0,256449,0x7ff7782ebde4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,256461,0x7ff7782ebe24,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,256470,0x7ff7782ebea4,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,256479,0x7ff7782ebf24,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,256489,0x7ff7782ebfa4,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,256501,0x7ff7782ec024,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,256511,0x7ff7782ec0a4,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,256522,0x7ff7782ec124,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,256532,0x7ff7782ec1a4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,256541,0x7ff7782ec224,160,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,256562,0x7ff7782ec2e4,156,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,256571,0x7ff7782ec3a4,144,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,256580,0x7ff7782ec464,144,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,256589,0x7ff7782ec524,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,256599,0x7ff7782ec5a4,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,256607,0x7ff7782ec624,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,256615,0x7ff7782ec6a4,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,256623,0x7ff7782ec724,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,256632,0x7ff7782ec7a4,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,256641,0x7ff7782ec824,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,256649,0x7ff7782ec8a4,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,256657,0x7ff7782ec924,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,256667,0x7ff7782ec9a4,472,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,256676,0x7ff7782ecba4,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,256684,0x7ff7782ecce4,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,256693,0x7ff7782ecd64,268,ForInNext.Wide
code-creation,BytecodeHandler,0,256700,0x7ff7782ecea4,48,ForInStep.Wide
code-creation,BytecodeHandler,0,256707,0x7ff7782ecee4,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,256716,0x7ff7782ecfa4,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,256725,0x7ff7782ed064,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,256733,0x7ff7782ed0e4,528,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,256742,0x7ff7782ed324,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,256750,0x7ff7782ed3e4,168,GetIterator.Wide
code-creation,BytecodeHandler,0,256758,0x7ff7782ed4a4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,256767,0x7ff7782ed564,56,Abort.Wide
code-creation,BytecodeHandler,0,256776,0x7ff7782ed5a4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,256785,0x7ff7782ed624,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,256794,0x7ff7782ed6a4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,256803,0x7ff7782ed724,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,256813,0x7ff7782ed7a4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,256822,0x7ff7782ed824,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,256830,0x7ff7782ed8a4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,256838,0x7ff7782ed8e4,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,256846,0x7ff7782ed924,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,256855,0x7ff7782ed964,92,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,256864,0x7ff7782ed9e4,92,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,256873,0x7ff7782eda64,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,256882,0x7ff7782edaa4,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,256891,0x7ff7782edae4,32,Star.ExtraWide
code-creation,BytecodeHandler,0,256899,0x7ff7782edb24,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,256910,0x7ff7782edb64,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,256967,0x7ff7782edba4,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,256979,0x7ff7782edbe4,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,256989,0x7ff7782edc24,4572,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,256998,0x7ff7782eee24,4504,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,257007,0x7ff7782effe4,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,257016,0x7ff7782f00a4,160,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,257025,0x7ff7782f0164,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,257035,0x7ff7782f01e4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,257043,0x7ff7782f02a4,256,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,257052,0x7ff7782f03e4,4912,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,257062,0x7ff7782f1724,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,257072,0x7ff7782f17e4,256,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,257081,0x7ff7782f1924,4852,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,257090,0x7ff7782f2c24,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,257098,0x7ff7782f2d24,5320,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,257108,0x7ff7782f4224,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,257118,0x7ff7782f42e4,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,257127,0x7ff7782f43a4,168,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,257137,0x7ff7782f4464,304,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,257146,0x7ff7782f45a4,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,257156,0x7ff7782f4664,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,257166,0x7ff7782f4724,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,257176,0x7ff7782f47e4,168,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,257195,0x7ff7782f48a4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,257204,0x7ff7782f4964,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,257213,0x7ff7782f4a64,1488,Add.ExtraWide
code-creation,BytecodeHandler,0,257221,0x7ff7782f5064,1468,Sub.ExtraWide
code-creation,BytecodeHandler,0,257230,0x7ff7782f5624,1588,Mul.ExtraWide
code-creation,BytecodeHandler,0,257239,0x7ff7782f5c64,1208,Div.ExtraWide
code-creation,BytecodeHandler,0,257247,0x7ff7782f6124,1000,Mod.ExtraWide
code-creation,BytecodeHandler,0,257255,0x7ff7782f6524,1044,Exp.ExtraWide
code-creation,BytecodeHandler,0,257263,0x7ff7782f6964,1012,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,257272,0x7ff7782f6d64,1016,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,257281,0x7ff7782f7164,1016,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,257290,0x7ff7782f7564,1028,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,257299,0x7ff7782f79a4,1028,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,257308,0x7ff7782f7de4,1148,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,257320,0x7ff7782f8264,1376,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,257328,0x7ff7782f87e4,1356,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,257335,0x7ff7782f8d64,1468,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,257343,0x7ff7782f9324,1152,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,257353,0x7ff7782f97e4,864,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,257361,0x7ff7782f9b64,912,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,257370,0x7ff7782f9f24,508,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,257379,0x7ff7782fa124,508,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,257388,0x7ff7782fa324,508,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,257396,0x7ff7782fa524,528,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,257404,0x7ff7782fa764,516,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,257412,0x7ff7782fa9a4,828,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,257424,0x7ff7782face4,624,Inc.ExtraWide
code-creation,BytecodeHandler,0,257435,0x7ff7782faf64,620,Dec.ExtraWide
code-creation,BytecodeHandler,0,257444,0x7ff7782fb1e4,656,Negate.ExtraWide
code-creation,BytecodeHandler,0,257471,0x7ff7782fb4a4,508,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,257485,0x7ff7782fb6a4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,257496,0x7ff7782fb724,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,257505,0x7ff7782fb7a4,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,257514,0x7ff7782fb7e4,360,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,257525,0x7ff7782fb964,1100,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,257535,0x7ff7782fbde4,1100,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,257544,0x7ff7782fc264,1108,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,257553,0x7ff7782fc6e4,1120,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,257563,0x7ff7782fcb64,1136,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,257571,0x7ff7782fcfe4,1048,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,257582,0x7ff7782fd424,1052,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,257592,0x7ff7782fd864,1076,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,257602,0x7ff7782fdca4,1092,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,257611,0x7ff7782fe124,1100,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,257622,0x7ff7782fe5a4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,257631,0x7ff7782fe664,176,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,257640,0x7ff7782fe724,84,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,257650,0x7ff7782fe7a4,1336,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,257660,0x7ff7782fece4,972,Construct.ExtraWide
code-creation,BytecodeHandler,0,257669,0x7ff7782ff0e4,452,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,257678,0x7ff7782ff2e4,1928,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,257686,0x7ff7782ffaa4,1052,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,257696,0x7ff7782ffee4,1608,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,257705,0x7ff778300564,1608,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,257714,0x7ff778300be4,1608,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,257725,0x7ff778301264,1608,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,257735,0x7ff7783018e4,876,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,257744,0x7ff778301c64,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,257752,0x7ff778301d24,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,257779,0x7ff778301da4,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,257787,0x7ff778301ea4,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,257795,0x7ff778301fa4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,257804,0x7ff778302024,408,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,257814,0x7ff7783021e4,1380,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,257822,0x7ff778302764,792,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,257831,0x7ff778302aa4,2140,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,257864,0x7ff778303324,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,257879,0x7ff7783033e4,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,257888,0x7ff7783034a4,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,257896,0x7ff778303624,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,257905,0x7ff7783036a4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,257914,0x7ff778303764,264,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,257923,0x7ff7783038a4,264,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,257933,0x7ff7783039e4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,257945,0x7ff778303aa4,908,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,257955,0x7ff778303e64,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,257962,0x7ff778303ea4,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,257971,0x7ff778303ee4,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,257980,0x7ff778303f64,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,257988,0x7ff778303fe4,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,257996,0x7ff778304064,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,258005,0x7ff7783040e4,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,258015,0x7ff778304164,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,258024,0x7ff7783041e4,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,258034,0x7ff778304264,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,258041,0x7ff7783042e4,160,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,258051,0x7ff7783043a4,156,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,258070,0x7ff778304464,140,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,258079,0x7ff778304524,140,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,258088,0x7ff7783045e4,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,258096,0x7ff778304664,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,258104,0x7ff7783046e4,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,258114,0x7ff778304764,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,258123,0x7ff7783047e4,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,258132,0x7ff778304864,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,258142,0x7ff7783048e4,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,258151,0x7ff778304964,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,258161,0x7ff7783049e4,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,258172,0x7ff778304a64,472,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,258182,0x7ff778304c64,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,258192,0x7ff778304da4,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,258201,0x7ff778304e24,264,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,258210,0x7ff778304f64,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,258218,0x7ff778304fa4,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,258227,0x7ff778305064,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,258235,0x7ff778305124,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,258243,0x7ff7783051a4,528,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,258252,0x7ff7783053e4,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,258260,0x7ff7783054a4,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,258270,0x7ff778305564,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,258280,0x7ff7783055e4,56,Abort.ExtraWide
new,MemoryChunk,0x209d2940000,262144
tick,0x7ff777c73c1a,261118,0,0x0,5
new,MemoryChunk,0x2dcd6640000,262144
new,MemoryChunk,0x2ccab9c0000,262144
new,MemoryChunk,0x13674f00000,262144
code-creation,Eval,10,267323,0x13674f31b06,5, node:internal/main/repl:1:1,0x13674f31970,~
script-source,389,node:internal/main/repl,'use strict';\x0d\n\x0d\n// Create the REPL if `-i` or `--interactive` is passed\x2C or if\x0d\n// the main module is not specified and stdin is a TTY.\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\n\x0d\nconst {\x0d\n  evalScript\x2C\x0d\n} = require('internal/process/execution');\x0d\n\x0d\nconst console = require('internal/console/global');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nprepareMainThreadExecution();\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\nif (process.env.NODE_REPL_EXTERNAL_MODULE) {\x0d\n  require('internal/modules/cjs/loader')\x0d\n    .Module\x0d\n    ._load(process.env.NODE_REPL_EXTERNAL_MODULE\x2C undefined\x2C true);\x0d\n} else {\x0d\n  // --input-type flag not supported in REPL\x0d\n  if (getOptionValue('--input-type')) {\x0d\n    // If we can't write to stderr\x2C we'd like to make this a noop\x2C\x0d\n    // so use console.error.\x0d\n    console.error('Cannot specify --input-type for REPL');\x0d\n    // TODO(joyeecheung): should be kInvalidCommandLineArgument.\x0d\n    process.exit(kGenericUserError);\x0d\n  }\x0d\n\x0d\n  const esmLoader = require('internal/process/esm_loader');\x0d\n  esmLoader.loadESM(() => {\x0d\n    console.log(`Welcome to Node.js ${process.version}.\\n` +\x0d\n      'Type ".help" for more information.');\x0d\n\x0d\n    const cliRepl = require('internal/repl');\x0d\n    cliRepl.createInternalRepl(process.env\x2C (err\x2C repl) => {\x0d\n      if (err) {\x0d\n        throw err;\x0d\n      }\x0d\n      repl.on('exit'\x2C () => {\x0d\n        if (repl._flushing) {\x0d\n          repl.pause();\x0d\n          return repl.once('flushHistory'\x2C () => {\x0d\n            process.exit();\x0d\n          });\x0d\n        }\x0d\n        process.exit();\x0d\n      });\x0d\n    });\x0d\n\x0d\n    // If user passed '-e' or '--eval' along with `-i` or `--interactive`\x2C\x0d\n    // evaluate the code in the current context.\x0d\n    if (getOptionValue('[has_eval_string]')) {\x0d\n      evalScript('[eval]'\x2C\x0d\n                 getOptionValue('--eval')\x2C\x0d\n                 getOptionValue('--inspect-brk')\x2C\x0d\n                 getOptionValue('--print'));\x0d\n    }\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x13674f31b06,389,0,2069,C0O0C4O2069,,
code-creation,JS,10,267551,0x13674f31c8e,241, node:internal/main/repl:1:1,0x13674f31a80,~
code-source-info,0x13674f31c8e,389,0,2069,C0O0C22O210C28O210C33O151C38O182C43O284C49O284C54O267C60O342C66O342C70O342C72O408C78O408C83O389C89O485C92O485C97O459C102O461C107O515C110O548C113O576C116O588C121O592C127O624C133O624C138O668C143O681C151O696C156O700C165O682C172O804C178O808C184O945C187O953C195O953C200O1071C203O1079C208O1079C213O1132C219O1132C224O1185C234O1185C240O2068,,
code-creation,JS,10,268299,0x13674f32576,46,prepareMainThreadExecution node:internal/process/pre_execution:39:36,0x19ee586fed8,~
script-source,69,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  refreshOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n  ERR_NO_CRYPTO\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupFetch();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n  setupCodeCoverage();\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules() {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  require('internal/process/per_thread').refreshHrtimeBuffer();\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: getOptionValue('--build-snapshot')\x2C\x0d\n    value: process.argv[0]\x2C\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x2C\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\nfunction setupFetch() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      getOptionValue('--no-experimental-fetch')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let undici;\x0d\n  function lazyUndici() {\x0d\n    if (undici) {\x0d\n      return undici;\x0d\n    }\x0d\n\x0d\n    undici = require('internal/deps/undici/undici');\x0d\n    return undici;\x0d\n  }\x0d\n\x0d\n  async function fetch(input\x2C init = undefined) {\x0d\n    return lazyUndici().fetch(input\x2C init);\x0d\n  }\x0d\n\x0d\n  defineOperation(globalThis\x2C 'fetch'\x2C fetch);\x0d\n\x0d\n  function lazyInterface(name) {\x0d\n    return {\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      get() {\x0d\n        return lazyUndici()[name];\x0d\n      }\x2C\x0d\n      set(value) {\x0d\n        exposeInterface(globalThis\x2C name\x2C value);\x0d\n      }\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(globalThis\x2C {\x0d\n    FormData: lazyInterface('FormData')\x2C\x0d\n    Headers: lazyInterface('Headers')\x2C\x0d\n    Request: lazyInterface('Request')\x2C\x0d\n    Response: lazyInterface('Response')\x2C\x0d\n  });\x0d\n\x0d\n  // The WebAssembly Web API: https://webassembly.github.io/spec/web-api\x0d\n  internalBinding('wasm_web_api').setImplementation((streamState\x2C source) => {\x0d\n    require('internal/wasm_web_api').wasmStreamingCallback(streamState\x2C source);\x0d\n  });\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    defineReplaceableLazyAttribute(\x0d\n      globalThis\x2C\x0d\n      'internal/crypto/webcrypto'\x2C\x0d\n      ['crypto']\x2C\x0d\n      false\x2C\x0d\n      function cryptoThisCheck() {\x0d\n        if (this !== globalThis && this != null)\x0d\n          throw new ERR_INVALID_THIS(\x0d\n            'nullish or must be the global object');\x0d\n      }\x2C\x0d\n    );\x0d\n    exposeLazyInterfaces(\x0d\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\x0d\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\x0d\n    );\x0d\n  } else {\x0d\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                           get crypto() {\x0d\n                             throw new ERR_NO_CRYPTO();\x0d\n                           }\x2C\x0d\n                         }\x2C 'crypto') });\x0d\n\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupCodeCoverage() {\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd. Don't do anything if the\x0d\n  // --experimental-test-coverage flag is present\x2C as the test runner will\x0d\n  // handle coverage.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !getOptionValue('--experimental-test-coverage')) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/browser when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (process.config.variables.node_no_browser_globals ||\x0d\n      getOptionValue('--no-experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      const { report } = require('internal/process/report');\x0d\n      return report;\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  if (getOptionValue('--report-on-signal')) {\x0d\n    const { addSignalHandler } = require('internal/process/report');\x0d\n    addSignalHandler();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    writeHeapSnapshot();\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x2C\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x2C\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = BuiltinModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const { initializeCJS } = require('internal/modules/cjs/loader');\x0d\n  initializeCJS();\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  const { initializeESM } = require('internal/modules/esm/utils');\x0d\n  initializeESM();\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled\x2C getSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // Initialize the environment flag of source maps.\x0d\n  getSourceMapsEnabled();\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x2C\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n};\x0d\n
code-source-info,0x13674f32576,69,851,999,C20O904C30O928C36O946C40O904C45O998,,
tick,0x7ff77852d7a6,270027,0,0x0,3,0x7ff777ca8e40,0x13674f31cf9
code-creation,JS,10,270256,0x13674f33cb6,307,prepareExecution node:internal/process/pre_execution:55:26,0x19ee5870300,~
code-source-info,0x13674f33cb
code-creation,JS,10,270427,0x13674f33fa6,10,refreshRuntimeOptions node:internal/process/pre_execution:127:31,0x19ee58703a0,~
code-source-info,0x13674f33fa6,69,3711,3739,C0O3719C5O3719C9O3738,,
code-creation,JS,10,270505,0x13674f3408e,22,refreshOptions node:internal/options:39:24,0x19ee585c368,~
script-source,59,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n};\x0d\n
code-source-info,0x13674f3408e,59,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,JS,10,270802,0x13674f343f6,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0x2f9728bf6b0,~
script-source,24,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x2C\x0d\n};\x0d\n
code-source-info,0x13674f343f6,24,31787,31829,C0O31795C5O31806C11O31804C18O31828,,
code-creation,JS,10,273629,0x13674f36c9e,460,patchProcessObject node:internal/process/pre_execution:131:28,0x19ee58703f0,~
code-source-info,0x13674f36c9e,69,3770,5904,C0O3805C6O3805C11O3852C19O3852C24O3886C30O3886C35O3924C40O3925C44O3953C55O3974C62O4112C68O4112C79O4168C85O4172C92O3953C97O4189C101O4206C105O4222C109O4239C113O4251C116O4259C126O4277C130O4267C134O4292C141O4319C148O4323C155O4338C161O4372C168O4376C175O4338C182O4456C188O4456C196O4491C199O4499C207O4514C215O4530C222O4534C226O4514C231O4507C241O4760C247O4760C252O4835C258O4835C263O4807C268O4879C272O5066C281O5066C286O5113C295O5113C300O5167C309O5167C314O5228C323O5228C328O5287C337O5287C342O5348C351O5348C356O5413C365O5413C370O5479C379O5479C384O5551C393O5551C398O5622C407O5622C412O5683C421O5683C426O5754C437O5754C442O5825C453O5825C459O5903,,
code-creation,JS,10,274027,0x13674f371ce,82,getOptionValue node:internal/options:44:24,0x19ee585c3b8,~
code-source-info,0x13674f371ce,59,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,JS,10,274156,0x13674f37326,33,getCLIOptionsFromBinding node:internal/options:18:34,0x19ee585c1a0,~
code-source-info,0x13674f37326,59,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,JS,10,274919,0x13674f3796e,37,set node:internal/bootstrap/node:116:8,0xf2fdb44d08,~
script-source,10,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapNode()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/loaders.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nsetupPrepareStackTrace();\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    exiting_aliased_Uint32Array\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n{\x0d\n  const exitingAliasedUint32Array = process[exiting_aliased_Uint32Array];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitingAliasedUint32Array[0] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      exitingAliasedUint32Array[0] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n{\x0d\n  const warnIntegerCoercionDeprecation = deprecate(\x0d\n    () => {}\x2C\x0d\n    'Implicit coercion to integer for exit code is deprecated.'\x2C\x0d\n    'DEP0164'\x2C\x0d\n  );\x0d\n\x0d\n  let exitCode;\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitCode;\x0d\n    }\x2C\x0d\n    set(code) {\x0d\n      if (perThreadSetup.isDeprecatedExitCode(code)) {\x0d\n        warnIntegerCoercionDeprecation();\x0d\n      }\x0d\n      exitCode = code;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\x0d\n  // The `reviver` argument of the JSONParse method will visit all the values of\x0d\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\x0d\n  // explicitly freeze the config outside of this method\x0d\n  return ObjectFreeze(value);\x0d\n});\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  value: processConfig\x2C\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.constrainedMemory = rawMethods.constrainedMemory;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n  queueMicrotask\x2C\x0d\n} = require('internal/process/task_queues');\x0d\n\x0d\n// Non-standard extensions:\x0d\ndefineOperation(globalThis\x2C 'queueMicrotask'\x2C queueMicrotask);\x0d\n\x0d\nconst timers = require('timers');\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\ndefineLazyProperties(\x0d\n  globalThis\x2C\x0d\n  'internal/structured_clone'\x2C\x0d\n  ['structuredClone']\x2C\x0d\n);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x2C\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x2C\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x2C\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n  delete bufferBinding.zeroFill;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x13674f3796e,10,4242,4389,C0O4258C7O4277C12O4277C19O4316C24O4316C27O4366C29O4375C36O4388,,
code-creation,JS,10,276344,0x13674f38796,72,isDeprecatedExitCode node:internal/process/per_thread:438:30,0xf2fdb7e2b8,~
script-source,26,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\nlet hrValues;\x0d\nlet hrBigintValues;\x0d\n\x0d\nfunction refreshHrtimeBuffer() {\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  hrValues = new Uint32Array(binding.hrtimeBuffer);\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  hrBigintValues = new BigUint64Array(binding.hrtimeBuffer\x2C 0\x2C 1);\x0d\n}\x0d\n\x0d\n// Create the buffers.\x0d\nrefreshHrtimeBuffer();\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x2C\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const warnIntegerCoercionDeprecationSync = deprecate(\x0d\n    () => {}\x2C\x0d\n    'Implicit coercion to integer for exit code is deprecated.'\x2C\x0d\n    'DEP0164'\x2C\x0d\n    true\x2C\x0d\n  );\x0d\n\x0d\n  function exit(code) {\x0d\n    const {\x0d\n      handleProcessExit\x2C\x0d\n    } = require('internal/modules/esm/handle_process_exit');\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (isDeprecatedExitCode(code)) {\x0d\n      // Emit the deprecation warning synchronously since deprecation warning is\x0d\n      // generally emitted in a next tick but we have no next tick timing here.\x0d\n      warnIntegerCoercionDeprecationSync();\x0d\n    }\x0d\n\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || kNoFailure);\x0d\n\x0d\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\x0d\n    // That function spoofs the stack pointer to cause the stack guard\x0d\n    // check to throw the termination exception. Because v8 performs\x0d\n    // stack guard check upon every function call\x2C we give it a chance.\x0d\n    //\x0d\n    // Without this\x2C user code after `process.exit()` would take effect.\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\x0d\n    nop();\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvvar }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvvar) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isDeprecatedExitCode(code) {\x0d\n  if (code !== null && code !== undefined) {\x0d\n    const value =\x0d\n      typeof code === 'string' && code !== '' ? Number(code) : code;\x0d\n    // Check if the value is an integer.\x0d\n    if (\x0d\n      typeof value !== 'number' ||\x0d\n      !NumberIsInteger(value) ||\x0d\n      value < NumberMIN_SAFE_INTEGER ||\x0d\n      value > NumberMAX_SAFE_INTEGER\x0d\n    ) {\x0d\n      return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n  refreshHrtimeBuffer\x2C\x0d\n  isDeprecatedExitCode\x2C\x0d\n};\x0d\n
code-source-info,0x13674f38796,26,13287,13692,C0O13299C8O13368C16O13401C23O13410C26O13410C35O13478C41O13527C44O13527C52O13568C54O13566C61O13609C63O13607C68O13648C69O13660C70O13676C71O13689,,
tick,0x7ff8e7a76acf,279466,0,0x0,3,0x7ff777ca8e40,0x13674f3797a,0x13674f36d03,0x13674f33cd6,0x13674f3259e,0x13674f31cf9
code-creation,JS,10,279898,0x13674f39966,376,initializeGlobalConsole node:internal/console/constructor:687:33,0x320a78e60c8,~
script-source,38,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\n\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x2C\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x2C\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x2C\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x2C\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = stream.isTTY && (\x0d\n          typeof stream.getColorDepth === 'function' ?\x0d\n            stream.getColorDepth() > 2 : true);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x2C\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x2C\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = { __proto__: null };\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x2C\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  globalConsole[kBindProperties](true\x2C 'auto');\x0d\n\x0d\n  const {\x0d\n    namespace: {\x0d\n      addSerializeCallback\x2C\x0d\n      isBuildingSnapshot\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/v8/startup_snapshot');\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime\x2C // exported for tests\x0d\n};\x0d\n
code-source-info,0x13674f39966,38,21106,22144,C0O21106C12O21127C19O21141C21O21140C30O21158C35O21172C42O21186C44O21185C53O21202C59O21320C67O21320C72O21247C77O21256C82O21285C87O21366C95O21371C100O21396C106O21414C111O21443C112O21450C113O21494C121O21494C126O21476C131O21551C143O21570C148O21551C153O21607C160O21607C165O21658C172O21684C177O21684C185O21658C191O21742C198O21742C203O21742C205O21778C215O21778C237O21771C267O21771C270O21830C276O21830C283O21849C287O21870C293O21870C298O21760C365O22013C370O22013C375O22143,,
code-creation,JS,10,281929,0x13674f3b626,94,value node:internal/console/constructor:200:20,0x320a78e5720,~
code-source-info,0x13674f3b626,38,5922,6584,C0O5922C15O5944C16O5944C18O5963C19O5963C21O5978C33O6029C38O6131C46O6242C60O6306C65O6408C73O6523C87O5978C93O6583,,
code-creation,JS,10,282157,0x13674f3bcae,414,value node:internal/console/constructor:230:20,0x320a78e57e0,~
code-source-info,0x13674f3bcae,38,6689,8125,C17O6746C27O6809C34O6853C52O6924C55O6894C73O6997C86O7096C89O7066C104O7147C111O7191C126O7232C129O7232C144O7286C151O7308C166O7342C169O7338C187O7435C191O7445C198O7467C213O7501C216O7497C235O7524C239O7537C246O7559C261O7589C275O7612C279O7625C286O7647C300O7677C314O7695C318O7710C325O7732C340O7762C354O7778C358O7803C365O7847C380O7888C394O7928C398O7948C407O6746C413O8124,,
code-creation,JS,10,282326,0x13674f3c216,18,createWriteErrorHandler node:internal/console/constructor:354:33,0x320a78e5a88,~
code-source-info,0x13674f3c216,38,11010,11885,C0O11010C13O11040C17O11882,,
code-creation,JS,10,282480,0x13674f3c726,25,isBuildingSnapshot node:internal/v8/startup_snapshot:17:28,0x1c416d92688,~
script-source,47,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n  ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  // For now this is the only way to build a snapshot.\x0d\n  return require('internal/options').getOptionValue('--build-snapshot');\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x2C\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    prepareMainThreadExecution(true);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x13674f3c726,47,393,530,C0O457C6O464C11O491C19O492C24O527,,
code-creation,JS,10,283036,0x13674f3cc0e,63,addReadOnlyProcessAlias node:internal/process/pre_execution:183:33,0x19ee5870440,~
code-source-info,0x13674f3cc0e,69,5940,6200,C16O5993C21O5993C26O6020C28O6038C36O6068C43O6158C49O6177C56O6038C62O6199,,
code-creation,JS,10,283239,0x13674f3ce4e,46,setupTraceCategoryState node:internal/process/pre_execution:384:33,0x19ee5870888,~
code-source-info,0x13674f3ce4e,69,11667,11898,C0O11710C6O11710C11O11683C16O11783C22O11783C27O11754C32O11826C35O11851C40O11826C45O11897,,
code-creation,JS,10,283345,0x13674f3cfe6,77,toggleTraceCategoryState node:internal/process/per_thread:426:34,0xf2fdb7e268,~
code-source-info,0x13674f3cfe6,26,12947,13254,C0O12972C4O13002C10O13038C16O13070C21O13114C26O13115C33O13059C39O13141C44O13162C49O13162C55O13182C61O13215C66O13236C71O13236C76O13253,,
code-creation,JS,10,283406,0x13674f3d15e,22,setupPerfHooks node:internal/process/pre_execution:390:24,0x19ee58708d8,~
code-source-info,0x13674f3d15e,69,11925,11987,C0O11933C6O11933C11O11963C16O11964C21O11986,,
code-creation,JS,10,283456,0x13674f3d256,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x1c416d8eb78,~
script-source,45,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x2C\x0d\n};\x0d\n
code-source-info,0x13674f3d256,45,549,589,C0O557C5O570C11O568C18O588,,
code-creation,JS,10,283642,0x13674f3d4c6,62,setupInspectorHooks node:internal/process/pre_execution:394:29,0x19ee5870928,~
code-source-info,0x13674f3d4c6,69,12019,12586,C0O12368C6O12372C11O12397C17O12467C23O12467C28O12434C33O12449C38O12514C44O12514C49O12542C54O12543C61O12585,,
code-creation,JS,10,283801,0x13674f3d756,126,setupWarningHandler node:internal/process/pre_execution:196:29,0x19ee5870490,~
code-source-info,0x13674f3d756,69,6232,6742,C0O6232C11O6299C19O6299C24O6253C30O6269C36O6339C46O6343C57O6388C62O6392C69O6409C74O6425C79O6433C90O6433C96O6564C103O6568C108O6599C120O6599C125O6741,,
code-creation,JS,10,284002,0x13674f3dd7e,189,setupFetch node:internal/process/pre_execution:217:20,0x19ee58704e0,~
code-source-info,0x13674f3dd7e,69,6800,7978,C0O6800C24O6808C29O6820C34O6827C39O6837C49O6871C55O6871C61O6921C62O6928C63O6943C64O6943C66O7215C77O7231C86O7215C91O7523C102O7546C113O7575C124O7616C135O7656C146O7697C154O7523C159O7810C167O7810C172O7841C182O7842C188O7977,,
code-creation,JS,10,284156,0x13674f3e28e,33,lazyInterface node:internal/process/pre_execution:239:25,0x13674f3db90,~
code-source-info,0x13674f3e28e,69,7287,7517,C0O7287C9O7301C14O7370C22O7431C32O7512,,
code-creation,JS,10,284326,0x13674f3e8c6,178,setupWebCrypto node:internal/process/pre_execution:267:24,0x19ee5870590,~
code-source-info,0x13674f3e8c6,69,8111,9082,C0O8119C3O8131C8O8138C13O8148C21O8182C27O8182C33O8243C34O8250C35O8261C41O8265C46O8290C52O8310C59O8349C77O8310C82O8632C89O8661C100O8632C107O8775C114O8796C127O8866C158O8866C171O8775C177O9081,,
new,MemoryChunk,0x7ff6f8380000,262144
new,MemoryChunk,0xde6be00000,262144
code-creation,JS,11,284695,0x7ff6f8383080,2540,defineLazyProperties node:internal/util:514:30,0xf2fdb75168,^
script-source,15,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          const emitWarning = useEmitSync ?\x0d\n            require('internal/process/warning').emitWarningSync :\x0d\n            process.emitWarning;\x0d\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = { __proto__: null };\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\x0d\n  const descriptors = { __proto__: null };\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let lazyLoadedValue;\x0d\n    function set(value) {\x0d\n      ObjectDefineProperty(target\x2C key\x2C {\x0d\n        __proto__: null\x2C\x0d\n        writable: true\x2C\x0d\n        value\x2C\x0d\n      });\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n    function get() {\x0d\n      mod ??= require(id);\x0d\n      if (lazyLoadedValue === undefined) {\x0d\n        lazyLoadedValue = mod[key];\x0d\n        set(lazyLoadedValue);\x0d\n      }\x0d\n      return lazyLoadedValue;\x0d\n    }\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n    descriptors[key] = {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      get\x2C\x0d\n      set\x2C\x0d\n    };\x0d\n  }\x0d\n  ObjectDefineProperties(target\x2C descriptors);\x0d\n}\x0d\n\x0d\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let value;\x0d\n    let setterCalled = false;\x0d\n\x0d\n    function get() {\x0d\n      if (check !== undefined) {\x0d\n        FunctionPrototypeCall(check\x2C this);\x0d\n      }\x0d\n      if (setterCalled) {\x0d\n        return value;\x0d\n      }\x0d\n      mod ??= require(id);\x0d\n      value ??= mod[key];\x0d\n      return value;\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    function set(val) {\x0d\n      setterCalled = true;\x0d\n      value = val;\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    ObjectDefineProperty(target\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      get\x2C\x0d\n      set: writable ? set : undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\x0d\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return new _DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nconst kEnumerableProperty = { __proto__: null };\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = { __proto__: null };\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nconst crossRelmRegexes = new SafeWeakMap();\x0d\nfunction getCrossRelmRegex(regex) {\x0d\n  const cached = crossRelmRegexes.get(regex);\x0d\n  if (cached) return cached;\x0d\n\x0d\n  let flagString = '';\x0d\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\x0d\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\x0d\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\x0d\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\x0d\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\x0d\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\x0d\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\x0d\n\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\x0d\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\x0d\n  return crossRelmRegex;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\x0d\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\x0d\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\x0d\n}\x0d\n\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Helper function to lazy-load an initialize-once value.\x0d\n * @template T Return value of initializer\x0d\n * @param {()=>T} initializer Initializer of the lazily loaded value.\x0d\n * @returns {()=>T}\x0d\n */\x0d\nfunction getLazy(initializer) {\x0d\n  let value;\x0d\n  let initialized = false;\x0d\n  return function() {\x0d\n    if (initialized === false) {\x0d\n      value = initializer();\x0d\n      initialized = true;\x0d\n    }\x0d\n    return value;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage objects to a specified directory.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getLazy\x2C\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n};\x0d\n
code-source-info,0x7ff6f8383080,15,14819,15761,,,
tick,0x7ff7787f0d2f,286401,0,0x0,0,0x7ff777ca8e40,0xf2fdb75bdc,0x13674f3e92a,0x13674f33cfb,0x13674f3259e,0x13674f31cf9
code-creation,JS,11,286452,0x7ff6f8383b00,628,requireBuiltin node:internal/bootstrap/loaders:355:24,0x2f9728bec78,^
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'test'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x2C\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = BuiltinModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Determine if a core module can be loaded without the node: prefix. This\x0d\n  // function does not validate if the module actually exists.\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return !schemelessBlockList.has(id);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    // TODO(aduh95): move this to C++\x2C alongside the initialization of the class.\x0d\n    ObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x2C\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x7ff6f8383b00,9,11497,11851,,,
code-creation,JS,11,287025,0x7ff6f8383e00,1228,compileForInternalLoader node:internal/bootstrap/loaders:318:27,0x2f9728bea00,^
code-source-info,0x7ff6f8383e00,9,10444,11268,,,
code-creation,JS,11,287049,0x7ff6f8384380,536,internalBinding node:internal/bootstrap/loaders:171:45,0x2f9728be338,^
code-source-info,0x7ff6f8384380,9,5441,5686,,,
code-creation,JS,11,287118,0x7ff6f8384640,236,SafeMap node:internal/per_context/primordials:408:16,0x2f9728b8320,^
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x2C\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n\x0d\n/**\x0d\n * Creates a class that can be safely iterated over.\x0d\n *\x0d\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\x0d\n * `primordials` object\x2C it's important to use const references to the\x0d\n * primordials that they use.\x0d\n *\x0d\n * @template {Iterable} T\x0d\n * @template {*} TReturn\x0d\n * @template {*} TNext\x0d\n * @param {(self: T) => IterableIterator<T>} factory\x0d\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\x0d\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\x0d\n */\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x2C\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x2C\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\x0d\n    )\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C () => {\x0d\n        if (--pendingPromises === 0) resolve();\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = async (promises\x2C mapFn) => {\x0d\n  for (let i = 0; i < promises.length; i++) {\x0d\n    try {\x0d\n      await (mapFn != null ? mapFn(promises[i]\x2C i) : promises[i]);\x0d\n    } catch {\x0d\n      // In all settled\x2C we can ignore errors.\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\n/**\x0d\n * @param {RegExp} pattern\x0d\n * @returns {RegExp}\x0d\n */\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} str\x0d\n * @param {RegExp} regexp\x0d\n * @returns {number}\x0d\n */\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x7ff6f8384640,6,12034,12051,,,
code-creation,JS,11,288343,0x7ff6f83847c0,556,getOptionValue node:internal/options:44:24,0x19ee585c3b8,^
code-source-info,0x7ff6f83847c0,59,1028,1278,,,
code-creation,JS,11,288373,0x7ff6f8384a80,132,exposeLazyInterfaces node:internal/util:597:30,0xf2fdb75b60,^
code-source-info,0x7ff6f8384a80,15,16739,16812,,,
code-creation,JS,10,288625,0xde6be051ee,74,setupCustomEvent node:internal/process/pre_execution:315:26,0x19ee5870658,~
code-source-info,0xde6be051ee,69,9755,10025,C0O9763C3O9775C8O9782C13O9792C21O9826C27O9826C33O9889C34O9896C35O9929C41O9929C46O9913C51O9966C58O9982C67O9966C73O10024,,
code-creation,JS,10,288736,0xde6be053c6,64,setupCodeCoverage node:internal/process/pre_execution:300:27,0x19ee5870608,~
code-source-info,0xde6be053c6,69,9112,9618,C0O9424C3O9436C8O9440C16O9468C22O9468C28O9523C31O9531C38O9561C44O9588C49O9592C54O9561C58O9552C63O9617,,
code-creation,JS,10,288822,0xde6be055a6,75,setupDebugEnv node:internal/process/pre_execution:346:23,0x19ee5870770,~
code-source-info,0xde6be055a6,69,10551,10767,C0O10559C6O10559C11O10592C19O10620C24O10624C29O10593C34O10640C42O10644C48O10689C54O10689C59O10726C64O10740C69O10741C74O10766,,
code-creation,JS,10,288958,0xde6be0590e,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x33cbf85afc0,~
script-source,21,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = { __proto__: null };\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x2C\x0d\n};\x0d\n
code-source-info,0xde6be0590e,21,550,1008,C0O566C7O577C13O603C24O718C38O718C45O763C56O764C63O793C74O794C82O845C94O860C110O845C115O845C117O884C126O896C138O974C145O986C152O1007,,
code-creation,JS,10,289192,0xde6be05f76,31,initializeReport node:internal/process/pre_execution:334:26,0x19ee58706f8,~
code-source-info,0xde6be05f76,69,10291,10525,C0O10299C11O10320C16O10416C24O10299C30O10524,,
code-creation,JS,10,289261,0xde6be06106,35,initializeSourceMapsHandlers node:internal/process/pre_execution:580:38,0x19ee5870ba8,~
code-source-info,0xde6be06106,69,18516,18772,C0O18584C6O18584C11O18532C16O18554C21O18636C26O18665C30O18746C34O18771,,
code-creation,JS,10,289342,0xde6be06246,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:45:30,0x19ee585b368,~
script-source,58,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectKeys\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst { setMaybeCacheGeneratedSourceMap } = internalBinding('errors');\x0d\nconst { getLazy } = require('internal/util');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst getCjsSourceMapCache = getLazy(() => {\x0d\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\n  return new IterableWeakMap();\x0d\n});\x0d\n\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\n\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    const { normalizeReferrerURL } = require('internal/modules/helpers');\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    debug(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\x0d\n      __proto__: null\x2C\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\nsetMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(RegExpPrototypeSymbolSplit(/\\n|\\u2028|\\u2029/\x2C content)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const fs = require('fs');\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = { __proto__: null };\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of getCjsSourceMapCache()) {\x0d\n    obj[value.filename] = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: value.lineLengths\x2C\x0d\n      data: value.data\x2C\x0d\n      url: value.url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (entry === undefined) {\x0d\n    for (const value of getCjsSourceMapCache()) {\x0d\n      const filename = value.filename;\x0d\n      const cachedSourceURL = value.sourceURL;\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        entry = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (entry === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  let sourceMap = entry.sourceMap;\x0d\n  if (sourceMap === undefined) {\x0d\n    sourceMap = new SourceMap(entry.data);\x0d\n    entry.sourceMap = sourceMap;\x0d\n  }\x0d\n  return sourceMap;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0xde6be06246,58,1602,1752,C0O1610C6O1654C11O1675C17O1675C22O1654C26O1724C30O1749,,
code-creation,JS,10,289849,0xde6be06e96,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:52:30,0x19ee585b3b8,~
code-source-info,0xde6be06e96,58,1785,2424,C0O1796C8O1796C13O1907C19O1907C24O1843C29O1870C34O1937C38O1967C42O2026C48O2026C53O1998C58O2083C64O2142C70O2305C76O2305C81O2277C86O2338C90O2397C92O2415C99O2423,,
code-creation,JS,10,289934,0xde6be0700e,30,validateBoolean node:internal/validators:217:25,0xf2fdb6dc08,~
script-source,14,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nfunction validateNumber(value\x2C name\x2C min = undefined\x2C max) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n      ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {any} options\x0d\n * @param {string} key\x0d\n * @param {boolean} defaultValue\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction getOwnPropertyValueOrDefault(options\x2C key\x2C defaultValue) {\x0d\n  return options == null || !ObjectPrototypeHasOwnProperty(options\x2C key) ?\x0d\n    defaultValue :\x0d\n    options[key];\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = null) => {\x0d\n    const allowArray = getOwnPropertyValueOrDefault(options\x2C 'allowArray'\x2C false);\x0d\n    const allowFunction = getOwnPropertyValueOrDefault(options\x2C 'allowFunction'\x2C false);\x0d\n    const nullable = getOwnPropertyValueOrDefault(options\x2C 'nullable'\x2C false);\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nfunction validateStringArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    validateString(value[i]\x2C `${name}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nfunction validateBooleanArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    validateBoolean(value[i]\x2C `${name}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/*\x0d\n  The rules for the Link header field are described here:\x0d\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\x0d\n\x0d\n  This regex validates any string surrounded by angle brackets\x0d\n  (not necessarily a valid URI reference) followed by zero or more\x0d\n  link-params separated by semicolons.\x0d\n*/\x0d\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nfunction validateLinkHeaderFormat(value\x2C name) {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\x0d\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nfunction validateLinkHeaderValue(hints) {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateInternalField\x2C\x0d\n};\x0d\n
code-source-info,0xde6be0700e,14,5816,5930,C0O5835C6O5872C22O5878C27O5872C29O5929,,
code-creation,JS,10,290795,0xde6be08736,348,initializeDeprecations node:internal/process/pre_execution:412:32,0x19ee5870978,~
code-source-info,0xde6be08736,69,12817,14797,C0O12847C6O12847C11O12833C16O12903C24O12903C29O13098C35O13098C40O13140C46O13140C51O13194C73O13186C101O13186C104O13530C112O13550C116O13593C127O13668C138O13760C149O13714C158O13578C167O13821C170O13548C174O13175C239O14105C245O14105C250O14084C255O14135C257O14164C268O14185C275O14331C279O14164C284O14368C288O14399C294O14435C304O14513C311O14417C316O14415C320O14602C326O14644C337O14626C342O14624C347O14796,,
code-creation,JS,10,290902,0xde6be08ace,53,initializeWASI node:internal/process/pre_execution:551:24,0x19ee5870ab8,~
code-source-info,0xde6be08ace,69,17568,17781,C0O17602C6O17602C11O17584C16O17670C21O17674C29O17674C35O17690C37O17722C43O17722C47O17715C52O17780,,
code-creation,JS,10,290983,0xde6be08cd6,72,initializeDns node:internal/dns/utils:202:23,0x19ee5869ef8,~
script-source,67,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    addDeserializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = this._handle.getServers() || [];\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(ArrayPrototypeJoin(orig\x2C '\x2C'));\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x2C\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = { __proto__: null };\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x2C\x0d\n};\x0d\n
code-source-info,0xde6be08cd6,67,5650,6030,C0O5679C8O5679C13O5720C15O5746C28O5755C36O5859C38O5868C44O5894C49O5899C54O5928C55O5935C56O5946C66O5946C71O6029,,
code-creation,JS,10,291462,0xde6be09946,21,assert node:internal/assert:11:16,0x33cbf859f98,~
script-source,20,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0xde6be09946,20,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,JS,10,291609,0xde6be09f16,447,readPolicyFromDisk node:internal/process/pre_execution:501:28,0x19ee5870a68,~
code-source-info,0xde6be09f
code-creation,JS,10,291708,0xde6be0a33e,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:324:40,0x19ee58706a8,~
code-source-info,0xde6be0a33e,69,10068,10262,C0O10076C8O10081C14O10122C15O10129C16O10165C22O10165C27O10146C32O10217C38O10251C43O10251C48O10261,,
code-creation,JS,10,291746,0xde6be0a4de,35,initializeReportSignalHandlers node:internal/process/pre_execution:354:40,0x19ee58707c0,~
code-source-info,0xde6be0a4de,69,10871,11025,C0O10879C8O10883C14O10957C20O10957C25O10936C30O10998C34O11024,,
code-creation,JS,10,291798,0xde6be0a786,136,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:361:46,0x19ee5870810,~
code-source-info,0xde6be0a786,69,11074,11631,C0O11074C17O11097C27O11097C31O11097C33O11143C37O11161C38O11168C39O11174C47O11174C52O11204C60O11205C65O11266C73O11266C78O11244C84O11353C89O11361C100O11361C106O11493C113O11497C118O11526C130O11526C135O11630,,
code-creation,JS,10,291870,0xde6be0aaae,138,setupChildProcessIpcChannel node:internal/process/pre_execution:473:37,0x19ee58709c8,~
code-source-info,0xde6be0aaae,69,14837,15383,C0O14845C3O14857C8O14861C14O14900C20O14900C25O14946C33O14969C38O14973C46O14946C52O15000C53O15010C57O15000C61O15094C64O15109C73O15170C76O15178C81O15182C90O15230C93O15245C102O15289C108O15289C113O15313C118O15314C124O15354C127O15369C132O15354C137O15382,,
code-creation,JS,10,291934,0xde6be0acce,63,initializeClusterIPC node:internal/process/pre_execution:492:30,0x19ee5870a18,~
code-source-info,0xde6be0acce,69,15416,15664,C0O15424C3O15436C10O15440C18O15455C23O15459C29O15498C35O15498C40O15531C45O15531C49O15622C52O15637C62O15663,,
code-creation,JS,10,291979,0xde6be0ae26,54,runDeserializeCallbacks node:internal/v8/startup_snapshot:30:33,0x1c416d92860,~
code-source-info,0xde6be0ae26,47,766,912,C0O809C5O802C11O809C16O854C21O875C26O875C33O832C40O845C44O889C48O774C53O911,,
code-creation,JS,10,292025,0xde6be0af7e,52,setupUserModules node:internal/process/pre_execution:117:26,0x19ee5870350,~
code-source-info,0xde6be0af7e,69,3405,3677,C0O3413C3O3413C6O3439C9O3439C12O3483C18O3483C23O3526C28O3544C34O3526C38O3575C41O3575C44O3645C47O3645C51O3676,,
code-creation,JS,10,292062,0xde6be0b0b6,21,initializeCJSLoader node:internal/process/pre_execution:558:29,0x19ee5870b08,~
code-source-info,0xde6be0b0b6,69,17813,17909,C0O17847C6O17847C11O17829C16O17890C20O17908,,
code-creation,JS,10,292256,0xde6be0b666,539,initializeCJS node:internal/modules/cjs/loader:313:23,0x19ee5857530,~
script-source,57,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  ArrayPrototypeFlatMap\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x2C\x0d\n  initializeCJS\x2C\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  setOwnProperty\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\x0d\nconst policy = getLazy(\x0d\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\x0d\n);\x0d\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\x0d\n\x0d\nconst getCascadedLoader = getLazy(\x0d\n  () => require('internal/process/esm_loader').esmLoader\x2C\x0d\n);\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = { __proto__: null };\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction internalRequire(module\x2C id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C module\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(id);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    // TODO(rafaelgss): remove the necessity of this branch\x0d\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n  }\x0d\n  this[require_private_symbol] = internalRequire;\x0d\n}\x0d\n\x0d\nModule._cache = { __proto__: null };\x0d\nModule._pathCache = { __proto__: null };\x0d\nModule._extensions = { __proto__: null };\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst builtinModules = [];\x0d\n// This function is called during pre-execution\x2C before any user code is run.\x0d\nfunction initializeCJS() {\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n  ObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: pendingDeprecation ? deprecate(\x0d\n      getModuleParent\x2C\x0d\n      'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n        'require.main to find program entry point instead.'\x2C\x0d\n      'DEP0144'\x2C\x0d\n    ) : getModuleParent\x2C\x0d\n    set: pendingDeprecation ? deprecate(\x0d\n      setModuleParent\x2C\x0d\n      'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n        'require.main to find program entry point instead.'\x2C\x0d\n      'DEP0144'\x2C\x0d\n    ) : setModuleParent\x2C\x0d\n  });\x0d\n  Module._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n  for (const { 0: id\x2C 1: mod } of BuiltinModule.map) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n      ArrayPrototypePush(builtinModules\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const allBuiltins = new SafeSet(\x0d\n    ArrayPrototypeFlatMap(builtinModules\x2C (bm) => [bm\x2C `node:${bm}`])\x2C\x0d\n  );\x0d\n  BuiltinModule.getSchemeOnlyModuleNames().forEach((builtin) => allBuiltins.add(`node:${builtin}`));\x0d\n  ObjectFreeze(builtinModules);\x0d\n  Module.builtinModules = builtinModules;\x0d\n\x0d\n  Module.isBuiltin = function isBuiltin(moduleName) {\x0d\n    return allBuiltins.has(moduleName);\x0d\n  };\x0d\n\x0d\n  initializeCjsConditions();\x0d\n\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    Module._initPaths();\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const filtered = filterOwnProperties(JSONParse(json)\x2C [\x0d\n      'name'\x2C\x0d\n      'main'\x2C\x0d\n      'exports'\x2C\x0d\n      'imports'\x2C\x0d\n      'type'\x2C\x0d\n    ]);\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet _readPackage = readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = _readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = _readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x2C\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (getOptionValue('--preserve-symlinks') && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        getCjsConditions())\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} request a relative or absolute file path\x0d\n * @param {Array<string>} paths file system directories to search as file paths\x0d\n * @param {boolean} isMain if the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist and request is inside the path\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath && _stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (getOptionValue('--preserve-symlinks')) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (getOptionValue('--preserve-symlinks-main')) {\x0d\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the --preserve-symlinks-main option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n\x0d\n    const extensions = [''];\x0d\n    if (exts !== undefined) {\x0d\n      ArrayPrototypePushApply(extensions\x2C exts);\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if ((\x0d\n    StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n    BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n  ) || (\x0d\n    BuiltinModule.canBeRequiredByUsers(request) &&\x0d\n    BuiltinModule.canBeRequiredWithoutScheme(request)\x0d\n  )) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeSlice(modulePaths);\x0d\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\x0d\n    } else {\x0d\n      paths = modulePaths;\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadBuiltinModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (\x0d\n    (\x0d\n      StringPrototypeStartsWith(request\x2C 'node:') &&\x0d\n      BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(request\x2C 5))\x0d\n    ) || (\x0d\n      BuiltinModule.canBeRequiredByUsers(request) &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(request)\x0d\n    )\x0d\n  ) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = readPackageScope(parentPath) || {};\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                getCjsConditions())\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const cascadedLoader = getCascadedLoader();\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !cascadedLoader.cjsCache.has(this))\x0d\n    cascadedLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\n// Note: when using the experimental policy mechanism this function is overridden\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\nlet Script;\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    if (Script === undefined) {\x0d\n      ({ Script } = require('vm'));\x0d\n    }\x0d\n    const script = new Script(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      importModuleDynamically: async (specifier\x2C _\x2C importAssertions) => {\x0d\n        const cascadedLoader = getCascadedLoader();\x0d\n        return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                                     importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return script.runInThisContext({\x0d\n      displayErrors: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const result = internalCompileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n        const cascadedLoader = getCascadedLoader();\x0d\n        return cascadedLoader.import(specifier\x2C normalizeReferrerURL(filename)\x2C\x0d\n                                     importAssertions);\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance) {\x0d\n      const { enrichCJSError } = require('internal/modules/esm/translators');\x0d\n      enrichCJSError(err\x2C content);\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x2C\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    internalRequire(parent\x2C requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers &&\x0d\n        BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0xde6be0b
tick,0x7ff77748ed34,295262,0,0x0,3,0x7ff777ca8e40,0xde6be0b0c6,0xde6be0af81,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,JS,10,295391,0xde6be0e9b6,13,desc.value node:internal/per_context/primordials:382:32,0x2f9728b8148,~
code-source-info,0xde6be0e9b6,6,11280,11341,C0O11298C7O11305C12O11328,,
code-creation,JS,10,295457,0xde6be0ead6,13,SafeIterator node:internal/per_context/primordials:327:16,0x2f9728b7898,~
code-source-info,0xde6be0ead6,6,9488,9550,C0O9508C3O9525C7O9523C12O9549,,
code-creation,JS,10,295524,0xde6be0ecde,13,next node:internal/per_context/primordials:330:9,0x2f9728b78e8,~
code-source-info,0xde6be0ecde,6,9560,9607,C0O9572C3O9589C8O9579C12O9600,,
code-creation,JS,10,295575,0xde6be0edce,19,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x2f9728be848,~
code-source-info,0xde6be0edce,9,8043,8096,C0O8055C7O8083C12O8083C18O8091,,
code-creation,JS,11,295827,0x7ff6f8384bc0,3960,initializeCJS node:internal/modules/cjs/loader:313:23,0x19ee5857530,^
code-source-info,0x7ff6f8384bc0,57,8829,10442,,,
code-creation,JS,11,295869,0x7ff6f8385bc0,412,getCLIOptionsFromBinding node:internal/options:18:34,0x19ee585c1a0,^
code-source-info,0x7ff6f8385bc0,59,514,620,,,
code-creation,JS,11,295896,0x7ff6f8385e00,100,next node:internal/per_context/primordials:330:9,0x2f9728b78e8,^
code-source-info,0x7ff6f8385e00,6,9560,9607,,,
code-creation,JS,11,295925,0x7ff6f8385f00,180,canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36,0x2f9728be848,^
code-source-info,0x7ff6f8385f00,9,8043,8096,,,
code-creation,JS,10,296093,0xde6be0f4fe,32, node:internal/modules/cjs/loader:340:43,0xde6be0b370,~
code-source-info,0xde6be0f4fe,57,9852,9878,C0O9860C9O9861C21O9873C31O9878,,
code-creation,JS,10,296291,0xde6be0f6de,19,getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34,0x2f9728be898,~
code-source-info,0xde6be0f6de,9,8133,8186,C0O8143C11O8160C14O8150C18O8181,,
code-creation,JS,10,296369,0xde6be0f92e,26, node:internal/modules/cjs/loader:342:52,0xde6be0b3c0,~
code-source-info,0xde6be0f92e,57,9939,9986,C0O9964C5O9964C15O9976C20O9964C25O9986,,
code-creation,JS,10,296504,0xde6be0fc56,158,initializeCjsConditions node:internal/modules/helpers:40:33,0x19ee585f7f0,~
script-source,61,node:internal/modules/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nlet cjsConditions;\x0d\nfunction initializeCjsConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\n  cjsConditions = new SafeSet([\x0d\n    'require'\x2C\x0d\n    'node'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\nfunction getCjsConditions() {\x0d\n  if (cjsConditions === undefined) {\x0d\n    initializeCjsConditions();\x0d\n  }\x0d\n  return cjsConditions;\x0d\n}\x0d\n\x0d\nfunction loadBuiltinModule(filename\x2C request) {\x0d\n  const mod = BuiltinModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load built-in module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = getCjsConditions();\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadBuiltinModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod[require_private_symbol](mod\x2C filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\x0d\n        ));\x0d\n      }\x0d\n      return mod[require_private_symbol](mod\x2C specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      // When no policy manifest\x2C the original prototype.require is sustained\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} referrer\x0d\n * @returns {string}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0xde6be0fc56,61,1020,1391,C0O1051C8O1051C13O1103C21O1103C26O1161C37O1274C50O1341C95O1366C142O1290C150O1288C157O1390,,
code-creation,JS,10,297155,0xde6be1061e,28,getEmbedderOptions node:internal/options:32:28,0x19ee585c318,~
code-source-info,0xde6be1061e,59,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,JS,10,297311,0xde6be109d6,315,Module._initPaths node:internal/modules/cjs/loader:1405:29,0x19ee5858300,~
code-source-info,0xde6be109d
code-creation,JS,10,297790,0xde6be10dfe,837,resolve node:path:162:10,0x320a78dae90,~
script-source,33,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction formatExt(ext) {\x0d\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0xde6be10dfe
code-creation,JS,10,301580,0xde6be14446,17,isPathSeparator node:path:52:25,0x320a78daab8,~
code-source-info,0xde6be14446,33,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,JS,10,301633,0xde6be14546,35,isWindowsDeviceRoot node:path:60:29,0x320a78dad50,~
code-source-info,0xde6be14546,33,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,JS,10,301818,0xde6be1477e,444,normalizeString node:path:66:25,0x320a78dada0,~
code-source-info,0xde6be1477e
code-creation,JS,10,302178,0xde6be14e4e,90,initializeESMLoader node:internal/process/pre_execution:563:29,0x19ee5870b58,~
code-source-info,0xde6be14e4e,69,17941,18475,C0O17975C6O17975C11O17957C16O18017C19O18170C27O18174C33O18293C39O18293C44O18241C49O18249C54O18267C59O18340C65O18340C70O18360C72O18370C76O18385C78O18405C82O18430C84O18449C89O18474,,
code-creation,JS,10,302295,0xde6be14fb6,32,initializeESM node:internal/modules/esm/utils:92:23,0x19ee58612d8,~
script-source,63,node:internal/modules/esm/utils,'use strict';\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst {\x0d\n  setImportModuleDynamicallyCallback\x2C\x0d\n  setInitializeImportMetaObjectCallback\x2C\x0d\n} = internalBinding('module_wrap');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst callbackMap = new SafeWeakMap();\x0d\nfunction setCallbackForWrap(wrap\x2C data) {\x0d\n  callbackMap.set(wrap\x2C data);\x0d\n}\x0d\n\x0d\nlet defaultConditions;\x0d\nfunction getDefaultConditions() {\x0d\n  assert(defaultConditions !== undefined);\x0d\n  return defaultConditions;\x0d\n}\x0d\n\x0d\nlet defaultConditionsSet;\x0d\nfunction getDefaultConditionsSet() {\x0d\n  assert(defaultConditionsSet !== undefined);\x0d\n  return defaultConditionsSet;\x0d\n}\x0d\n\x0d\n// This function is called during pre-execution\x2C before any user code is run.\x0d\nfunction initializeDefaultConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n  defaultConditions = ObjectFreeze([\x0d\n    'node'\x2C\x0d\n    'import'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n  defaultConditionsSet = new SafeSet(defaultConditions);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return getDefaultConditionsSet();\x0d\n}\x0d\n\x0d\nfunction initializeImportMetaObject(wrap\x2C meta) {\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n}\x0d\n\x0d\nfunction initializeESM() {\x0d\n  initializeDefaultConditions();\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setCallbackForWrap\x2C\x0d\n  initializeESM\x2C\x0d\n  getDefaultConditions\x2C\x0d\n  getConditionsSet\x2C\x0d\n};\x0d\n
code-source-info,0xde6be14fb6,63,2551,2853,C0O2559C3O2559C6O2712C14O2712C18O2782C26O2782C31O2852,,
code-creation,JS,10,302616,0xde6be154ee,181,initializeDefaultConditions node:internal/modules/esm/utils:43:37,0x19ee5861198,~
code-source-info,0xde6be154ee,63,1045,1403,C0O1076C8O1076C13O1128C21O1128C26O1186C37O1224C50O1295C95O1320C140O1244C147O1242C153O1346C160O1381C165O1369C173O1367C180O1402,,
code-creation,JS,10,302719,0xde6be156e6,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x19ee5855920,~
code-source-info,0xde6be156e6,57,2376,2416,C0O2381C4O2414,,
code-creation,JS,10,302778,0xde6be157ee,53,loadPreloadModules node:internal/process/pre_execution:596:28,0x19ee5870c48,~
code-source-info,0xde6be157ee,69,19070,19402,C0O19159C8O19159C13O19191C15O19228C21O19235C26O19317C32O19317C37O19270C42O19281C47O19362C52O19401,,
code-creation,JS,10,302879,0xde6be159f6,165,Module._preloadModules node:internal/modules/cjs/loader:1435:34,0x19ee5858390,~
code-source-info,0xde6be159f6,57,46675,47279,C0O46691C5O46696C11O46725C12O46732C13O46738C17O46751C23O46951C33O46951C42O47003C45O47025C53O47050C58O47050C63O47025C68O47016C85O47080C88O47086C95O47091C100O47114C106O47127C114O47143C116O47143C119O47180C121O47196C125O47185C130O47214C135O47246C139O47214C144O47205C149O47167C153O47255C157O47268C164O47278,,
code-creation,JS,10,303028,0xde6be15cce,189,Module node:internal/modules/cjs/loader:219:16,0x19ee5857170,~
code-source-info,0xde6be15cce,57,6457,7091,C14O6480C16O6488C20O6497C22O6509C25O6514C30O6514C35O6507C39O6530C52O6530C57O6570C62O6588C67O6588C73O6610C84O6610C89O6650C90O6664C94O6675C95O6687C99O6699C101O6713C105O6726C107O6757C112O6757C118O6765C126O6780C128O6819C133O6819C138O6864C143O6864C149O6962C159O6994C162O6994C171O6962C176O7041C178O7046C183O7070C188O7090,,
code-creation,JS,10,303252,0xde6be1604e,453,dirname node:path:657:10,0x320a78db070,~
code-source-info,0xde6be1604e,33,21376,24004,C0O21390C8O21390C13O21442C18O21455C19O21463C24O21477C26O21488C27O21508C30O21530C32O21551C39O21551C45O21594C47O21602C52O21724C55O21731C67O21766C68O21809C71O21813C77O21875C81O21906C86O21926C92O21926C98O21910C104O22037C107O22060C108O22135C110O22129C120O22171C123O22171C129O22155C135O22221C140O22120C144O22246C146O22252C153O22263C158O22309C163O22391C165O22385C175O22428C178O22428C184O22412C190O22480C195O22376C199O22509C201O22515C208O22526C213O22576C218O22666C220O22660C230O22706C233O22706C239O22690C245O22760C250O22651C254O22793C256O22799C261O22870C263O22882C264O22911C266O22917C271O23147C273O23168C280O23262C283O23266C291O23311C297O23311C305O23350C307O23346C312O23371C314O23394C324O23417C330O23417C336O23401C349O23469C350O23511C353O23539C355O23563C357O23567C361O23574C363O23574C368O23599C373O23619C376O23619C382O23603C388O23667C392O23699C397O23719C401O23810C403O23587C408O23550C412O23855C414O23863C419O23880C421O23892C426O23909C428O23920C429O23930C434O23957C447O23964C452O23999,,
code-creation,JS,10,303468,0xde6be164c6,28,setOwnProperty node:internal/util:637:24,0xf2fdb75d60,~
code-source-info,0xde6be164c6,15,17817,17992,C0O17840C5O17873C12O17955C22O17847C27O17989,,
code-creation,JS,10,303549,0xde6be1664e,45,updateChildren node:internal/modules/cjs/loader:200:24,0x19ee5857080,~
code-source-info,0xde6be1664e,57,5804,5981,C0O5848C7O5854C15O5869C19O5887C23O5895C26O5895C33O5942C38O5942C44O5980,,
code-creation,JS,10,303609,0xde6be16846,40, node:internal/util:708:18,0xf2fdb760b8,~
code-source-info,0xde6be16846,15,20165,20291,C0O20175C10O20211C13O20219C19O20217C25O20241C29O20253C35O20273C39O20286,,
code-creation,JS,10,303661,0xde6be1695e,28, node:internal/modules/cjs/loader:117:3,0x19ee5856e50,~
code-source-info,0xde6be1695e,57,3657,3748,C0O3664C8O3664C20O3706C27O3748,,
code-creation,JS,10,303733,0xde6be16ab6,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x19ee5871e10,~
script-source,70,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x2C\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x2C\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0xde6be16ab6,70,3472,3560,C0O3480C7O3494C12O3507C17O3530C22O3530C29O3517C35O3540C39O3557,,
code-creation,JS,10,304164,0xde6be170ae,252,Module._nodeModulePaths node:internal/modules/cjs/loader:715:37,0x19ee5857a00,~
code-source-info,0xde6be170ae
code-creation,JS,11,304425,0x7ff6f8386040,2040,Module._nodeModulePaths node:internal/modules/cjs/loader:715:37,0x19ee5857a00,^
code-source-info,0x7ff6f8386040,57,22130,23682,,,
code-creation,JS,11,304457,0x7ff6f83868c0,184, node:internal/modules/cjs/loader:340:43,0xde6be0b370,^
code-source-info,0x7ff6f83868c0,57,9852,9878,,,
code-creation,JS,11,304490,0x7ff6f8386a00,236,SafeSet node:internal/per_context/primordials:421:16,0x2f9728b8550,^
code-source-info,0x7ff6f8386a00,6,12376,12393,,,
code-creation,JS,11,304518,0x7ff6f8386b80,204,isPathSeparator node:path:52:25,0x320a78daab8,^
code-source-info,0x7ff6f8386b80,33,1794,1876,,,
code-creation,JS,11,304587,0x7ff6f8386d00,3032,normalizeString node:path:66:25,0x320a78dada0,^
code-source-info,0x7ff6f8386d00,33,2226,4212,,,
code-creation,JS,10,304702,0xde6be1778e,127,internalRequire node:internal/modules/cjs/loader:160:25,0x19ee5856f40,~
code-source-info,0xde6be1778e,57,4796,5109,C0O4814C8O4814C13O4843C15O4850C20O4865C36O4871C41O4865C42O4983C51O4995C60O5013C63O5027C76O5027C93O5086C102O5098C126O5108,,
code-creation,JS,10,304949,0xde6be17b5e,676,Module._load node:internal/modules/cjs/loader:900:24,0x19ee5857c60,~
code-source-info,0xde6be17b5e
code-creation,JS,10,305245,0xde6be1804e,89,logger node:internal/util/debuglog:94:18,0x33cbf85b520,~
code-source-info,0xde6be1804e,21,2947,3148,C0O2947C3O2980C24O3005C30O3022C34O3012C38O3027C39O3043C45O3060C51O3069C55O3050C60O3074C61O3091C65O3098C72O3111C77O3107C83O3098C88O3136,,
code-creation,JS,10,305325,0xde6be182a6,3, node:internal/per_context/primordials:333:21,0x2f9728b7938,~
code-source-info,0xde6be182a6,6,9629,9660,C0O9641C2O9653,,
code-creation,JS,10,305415,0xde6be1837e,140,debug node:internal/util/debuglog:75:15,0x33cbf85b480,~
code-source-info,0xde6be1837e,21,2416,2822,C0O2416C3O2436C6O2436C9O2547C16O2568C22O2555C30O2553C36O2588C42O2625C47O2628C50O2625C54O2654C75O2679C81O2696C85O2686C89O2701C90O2717C96O2734C102O2743C106O2724C111O2748C112O2765C116O2772C123O2785C128O2781C134O2772C139O2810,,
code-creation,JS,10,305501,0xde6be1852e,41,init node:internal/util/debuglog:71:16,0x33cbf85b430,~
code-source-info,0xde6be1852e,21,2314,2400,C0O2324C10O2330C14O2328C16O2368C26O2378C33O2376C40O2399,,
code-creation,JS,10,305545,0xde6be1861e,2,testEnabled node:internal/util/debuglog:31:19,0xde6be057e8,~
code-source-info,0xde6be1861e,21,988,999,C0O994C1O999,,
code-creation,JS,10,305610,0xde6be18796,116,debuglogImpl node:internal/util/debuglog:48:22,0x33cbf85b1e8,~
code-source-info,0xde6be18796,21,1483,2043,C0O1483C9O1503C18O1517C23O1545C34O1579C39O1587C43O1579C45O1599C55O1599C59O1632C71O1643C75O1648C83O1978C97O1996C99O1994C103O2017C112O2034C115O2040,,
code-creation,JS,10,305677,0xde6be1894e,10, node:internal/modules/cjs/loader:307:66,0x19ee58574e0,~
code-source-info,0xde6be1894e,57,8667,8694,C0O8680C2O8686C9O8693,,
code-creation,JS,10,305714,0xde6be189fe,2,noop node:internal/util/debuglog:46:14,0x33cbf85b198,~
code-source-info,0xde6be189fe,21,1449,1457,C1O1456,,
code-creation,JS,10,305768,0xde6be18bee,58,reportModuleToWatchMode node:internal/modules/cjs/loader:206:33,0x19ee58570d0,~
code-source-info,0xde6be18bee,57,6017,6145,C0O6033C5O6037C13O6078C19O6091C22O6099C32O6123C41O6124C51O6099C57O6144,,
code-creation,JS,10,305827,0xde6be18d3e,13, node:internal/modules/cjs/loader:119:45,0x19ee5856ea0,~
code-source-info,0xde6be18d3e,57,3799,3842,C0O3817C3O3813C8O3817C12O3842,,
code-creation,JS,10,306114,0xde6be1927e,941,Module._resolveFilename node:internal/modules/cjs/loader:998:35,0x19ee5857cd0,~
code-source-info,0xde6be1927e
code-creation,JS,10,306411,0xde6be198f6,28,canBeRequiredByUsers node:internal/bootstrap/loaders:247:30,0x2f9728be7f8,~
code-source-info,0xde6be198f6,9,7762,7862,C0O7786C5O7800C10O7804C15O7804C21O7818C23O7836C27O7857,,
code-creation,JS,10,306562,0xde6be19c16,408,Module._resolveLookupPaths node:internal/modules/cjs/loader:799:38,0x19ee5857a90,~
code-source-info,0xde6be19c
code-creation,JS,10,306751,0xde6be19f96,76,trySelfParentPath node:internal/modules/cjs/loader:522:27,0x19ee5857880,~
code-source-info,0xde6be19f96,57,15317,15592,C0O15331C4O15344C5O15357C6O15374C12O15405C16O15414C17O15436C24O15439C29O15462C36O15465C44O15509C47O15524C52O15524C59O15532C62O15537C66O15530C69O15541C72O15564C73O15577C75O15591,,
code-creation,JS,10,306890,0xde6be1a23e,247,trySelf node:internal/modules/cjs/loader:536:17,0x19ee58578d0,~
code-source-info,0xde6be1a23e,57,15612,16546,C0O15639C4O15656C5O15669C6O15712C9O15712C17O15689C22O15700C27O15751C31O15767C37O15790C38O15803C39O15822C47O15841C48O15854C49O15864C51O15898C55O15890C60O15911C65O15938C70O15984C82O15942C89O16001C94O16019C97O16053C102O16058C107O16019C112O16017C118O16084C119O16097C123O16153C129O16153C134O16127C139O16199C144O16258C149O16280C153O16258C160O16323C163O16323C170O16350C173O16350C183O16228C195O16206C200O16392C212O16415C215O16421C222O16426C227O16461C234O16505C238O16467C243O16461C244O16530C246O16530,,
code-creation,JS,10,307044,0xde6be1a596,132,readPackageScope node:internal/modules/cjs/loader:416:26,0x19ee58576a0,~
code-source-info,0xde6be1a596,57,11833,12367,C0O11877C7O11911C10O11877C16O11924C18O11953C25O12008C28O11970C34O12019C47O12031C54O12088C61O12127C66O12131C70O12092C77O12157C78O12170C79O12190C86O12215C88O12213C92O12190C97O12226C99O12237C106O12259C112O12279C118O12297C119O12325C121O12325C126O11943C130O12351C131O12364,,
code-creation,JS,10,307185,0xde6be1a966,201,readPackage node:internal/modules/cjs/loader:374:21,0x19ee58575b0,~
code-source-info,0xde6be1a966,57,10746,11506,C0O10782C5O10787C13O10787C20O10847C25O10864C30O10864C36O10882C38O10910C40O10926C41O10947C46O10965C51O10965C57O11004C71O11043C76O11054C78O11085C83O11102C90O11102C96O11129C97O11142C101O11181C108O11201C111O11201C121O11181C127O11315C132O11332C137O11332C143O11362C145O11378C157O11401C162O11408C166O11425C174O11454C180O11465C187O11476C191O11472C194O11435C198O11490C200O11490,,
code-creation,JS,10,307374,0xde6be1ac9e,199,read node:internal/modules/package_json_reader:16:14,0x19ee58600a0,~
script-source,62,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x2C\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0xde6be1ac9e,62,307,993,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C55O404C62O415C66O513C73O515C79O523C86O569C92O569C97O550C102O601C106O634C112O671C115O682C127O733C132O767C142O680C148O806C154O854C159O854C164O886C169O895C174O895C180O944C185O950C190O950C196O976C198O990,,
code-creation,JS,10,307607,0xde6be1b0de,232,toNamespacedPath node:path:622:19,0x320a78db020,~
code-source-info,0xde6be1b0de,33,20182,21297,C0O20248C6O20285C12O20292C17O20306C19O20318C20O20347C25O20353C30O20353C36O20392C43O20399C48O20412C50O20424C51O20432C58O20436C66O20483C68O20479C73O20541C81O20545C89O20592C91O20588C96O20637C104O20637C110O20690C112O20703C114O20699C121O20734C123O20730C128O20834C133O20856C139O20856C148O20896C151O20929C156O20961C161O20961C167O20941C175O21015C181O21015C189O21062C191O21058C198O21083C204O21083C212O21130C214O21126C219O21233C224O21250C228O21265C229O21280C231O21292,,
code-creation,JS,10,308047,0xde6be1cb3e,55,filterOwnProperties node:internal/util:618:29,0xf2fdb75d10,~
code-source-info,0xde6be1cb3e,15,17363,17617,C0O17400C5O17437C7O17449C11O17442C16O17481C18O17485C22O17495C27O17499C34O17552C36O17574C39O17566C43O17458C48O17424C52O17598C54O17614,,
code-creation,JS,10,308356,0xde6be1cfbe,845,Module._findPath node:internal/modules/cjs/loader:596:28,0x19ee5857970,~
code-source-info,0xde6be1cfbe
code-creation,JS,10,308701,0xde6be1d5d6,109,isAbsolute node:path:406:13,0x320a78daf30,~
code-source-info,0xde6be1d5d6,33,13200,13619,C0O13214C8O13214C13O13266C18O13279C19O13287C24O13301C25O13314C26O13335C33O13335C39O13376C42O13383C50O13451C58O13465C66O13501C72O13501C80O13540C82O13536C92O13577C98O13577C104O13561C108O13614,,
code-creation,JS,10,308835,0xde6be1d80e,85,stat node:internal/modules/cjs/loader:174:14,0x19ee5856f90,~
code-source-info,0xde6be1d80e,57,5126,5535,C0O5142C5O5158C10O5158C17O5189C23O5235C28O5245C33O5245C39O5265C41O5291C43O5305C44O5329C49O5329C54O5362C61O5395C66O5477C71O5487C76O5487C82O5518C84O5532,,
code-creation,JS,10,309031,0xde6be1d98e,42,toRealPath node:internal/modules/cjs/loader:488:20,0x19ee5857790,~
code-source-info,0xde6be1d98e,57,14304,14421,C0O14323C5O14333C10O14346C17O14367C20O14378C28O14397C35O14333C41O14418,,
code-creation,JS,10,309584,0xde6be1de46,1081,realpathSync node:fs:2510:22,0x1c416dac430,~
script-source,49,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x2C\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\n\x0d\nconst { createBlobFromFilePath } = require('internal/blob');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const ReadFileContext = require('internal/fs/read_file_context');\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | Buffer | URL } path\x0d\n * @returns {Promise<Blob>}\x0d\n */\x0d\nfunction openAsBlob(path\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const type = options.type || '';\x0d\n  validateString(type\x2C 'options.type');\x0d\n  // The underlying implementation here returns the Blob synchronously for now.\x0d\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\x0d\n  // this API returns a Promise.\x0d\n  return PromiseResolve(createBlobFromFilePath(getValidatedPath(path)\x2C { type }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    if (params !== undefined) {\x0d\n      validateObject(params\x2C 'options'\x2C { nullable: true });\x0d\n    }\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer?.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\x0d\n    if (offsetOrOptions !== undefined) {\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C { nullable: true });\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offsetOrOptions ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = buffer;\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = maybeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n\x0d\n    callback(err\x2C getStatFsFromBinding(stats));\x0d\n  };\x0d\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\nfunction statfsSync(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C\x0d\n                               options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatFsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n\x0d\n  let watcher;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n  // e.g. Linux due to the limitations of inotify.\x0d\n  if (options.recursive && !isOSX && !isWindows) {\x0d\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\n    watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n    watcher[watchers.kFSWatchStart](filename);\x0d\n  } else {\x0d\n    watcher = new watchers.FSWatcher();\x0d\n    watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                    options.persistent\x2C\x0d\n                                    options.recursive\x2C\x0d\n                                    options.encoding);\x0d\n  }\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  openAsBlob\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statfs\x2C\x0d\n  statSync\x2C\x0d\n  statfsSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  fs\x2C\x0d\n  'internal/fs/dir'\x2C\x0d\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\x0d\n);\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0xde6be1de
tick,0x7ff777500ff8,313948,0,0x0,3,0x7ff777ca8e40,0xde6be1d9b1,0xde6be1d235,0xde6be1958f,0xde6be17c37,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,JS,10,314093,0xde6be24886,135,getOptions node:internal/fs/utils:317:20,0x320a78fa550,~
script-source,54,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x2C\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x2C\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x2C\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x2C\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nclass StatFs {\x0d\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\x0d\n    this.type = type;\x0d\n    this.bsize = bsize;\x0d\n    this.blocks = blocks;\x0d\n    this.bfree = bfree;\x0d\n    this.bavail = bavail;\x0d\n    this.files = files;\x0d\n    this.ffree = ffree;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStatFsFromBinding(stats) {\x0d\n  return new StatFs(\x0d\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x2C\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  validateInteger(mode\x2C 'mode'\x2C min\x2C max);\x0d\n  return mode;\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C name);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n};\x0d\n
code-source-info,0xde6be24886,54,7562,8188,C9O7589C16O7608C27O7669C29O7691C30O7702C36O7742C41O7787C43O7811C47O7827C54O7863C60O7903C78O7909C83O7903C84O7999C91O8008C96O8027C99O8050C104O8027C108O8078C114O8107C119O8135C127O8107C132O8170C134O8185,,
code-creation,JS,10,315302,0xde6be2682e,48,assertEncoding node:internal/fs/utils:154:24,0x320a78fa028,~
code-source-info,0xde6be2682e,54,3708,3890,C0O3724C6O3741C9O3748C14O3748C21O3792C24O3820C40O3826C45O3820C47O3889,,
code-creation,JS,10,315425,0xde6be26946,20,toPathIfFileURL node:internal/url:1289:25,0x320a78f3cc0,~
script-source,40,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Int8Array\x2C\x0d\n  IteratorPrototype\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x2C\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  parse\x2C\x0d\n  updateUrl\x2C\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst FORWARD_SLASH = /\\//g;\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst searchParams = Symbol('query');\x0d\n\x0d\nconst updateActions = {\x0d\n  kProtocol: 0\x2C\x0d\n  kHost: 1\x2C\x0d\n  kHostname: 2\x2C\x0d\n  kPort: 3\x2C\x0d\n  kUsername: 4\x2C\x0d\n  kPassword: 5\x2C\x0d\n  kPathname: 6\x2C\x0d\n  kSearch: 7\x2C\x0d\n  kHash: 8\x2C\x0d\n  kHref: 9\x2C\x0d\n};\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  href = '';\x0d\n  origin = '';\x0d\n  protocol = '';\x0d\n  hostname = '';\x0d\n  pathname = '';\x0d\n  search = '';\x0d\n  username = '';\x0d\n  password = '';\x0d\n  port = '';\x0d\n  hash = '';\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = {};\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n\x0d\n            // Two different key may result same after `toUSVString()`\x2C we only\x0d\n            // leave the later one. Refers to WPT.\x0d\n            if (visited[typedKey] !== undefined) {\x0d\n              this[searchParams][visited[typedKey]] = typedValue;\x0d\n            } else {\x0d\n              visited[typedKey] = ArrayPrototypePush(this[searchParams]\x2C\x0d\n                                                     typedKey\x2C\x0d\n                                                     typedValue) - 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      this[searchParams] = init ? parseParams(init) : [];\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x2C\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  get size() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n    return this[searchParams].length / 2;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    if (this[context]) {\x0d\n      this[context].search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    if (this[context]) {\x0d\n      this[context].search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    if (this[context]) {\x0d\n      this[context].search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this[context]) {\x0d\n      this[context].search = this.toString();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  size: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction isURL(self) {\x0d\n  return self != null && ObjectPrototypeHasOwnProperty(self\x2C context);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    this[context] = new URLContext();\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      base = `${base}`;\x0d\n    }\x0d\n\x0d\n    const isValid = parse(input\x2C\x0d\n                          base\x2C\x0d\n                          this.#onParseComplete);\x0d\n\x0d\n    if (!isValid) {\x0d\n      throw new ERR_INVALID_URL(input);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  #onParseComplete = (href\x2C origin\x2C protocol\x2C hostname\x2C pathname\x2C\x0d\n                      search\x2C username\x2C password\x2C port\x2C hash) => {\x0d\n    const ctx = this[context];\x0d\n    ctx.href = href;\x0d\n    ctx.origin = origin;\x0d\n    ctx.protocol = protocol;\x0d\n    ctx.hostname = hostname;\x0d\n    ctx.pathname = pathname;\x0d\n    ctx.search = search;\x0d\n    ctx.username = username;\x0d\n    ctx.password = password;\x0d\n    ctx.port = port;\x0d\n    ctx.hash = hash;\x0d\n    if (this[searchParams]) {\x0d\n      this[searchParams][searchParams] = parseParams(search);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  toString() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].href;\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].href;\x0d\n  }\x0d\n\x0d\n  set href(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const valid = updateUrl(this[context].href\x2C updateActions.kHref\x2C `${value}`\x2C this.#onParseComplete);\x0d\n    if (!valid) { throw ERR_INVALID_URL(`${value}`); }\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].origin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].protocol;\x0d\n  }\x0d\n\x0d\n  set protocol(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kProtocol\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kUsername\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kPassword\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    const port = this[context].port;\x0d\n    const suffix = port.length > 0 ? `:${port}` : '';\x0d\n    return this[context].hostname + suffix;\x0d\n  }\x0d\n\x0d\n  set host(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kHost\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].hostname;\x0d\n  }\x0d\n\x0d\n  set hostname(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kHostname\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].port;\x0d\n  }\x0d\n\x0d\n  set port(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kPort\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].pathname;\x0d\n  }\x0d\n\x0d\n  set pathname(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kPathname\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].search;\x0d\n  }\x0d\n\x0d\n  set search(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kSearch\x2C toUSVString(value)\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    // Create URLSearchParams on demand to greatly improve the URL performance.\x0d\n    if (this[searchParams] == null) {\x0d\n      this[searchParams] = new URLSearchParams(this[context].search);\x0d\n      this[searchParams][context] = this;\x0d\n    }\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].hash;\x0d\n  }\x0d\n\x0d\n  set hash(value) {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    updateUrl(this[context].href\x2C updateActions.kHash\x2C `${value}`\x2C this.#onParseComplete);\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    if (!isURL(this))\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    return this[context].href;\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      // TODO(@anonrig): Remove this try/catch by calling `parse` directly.\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  createObjectURL: kEnumerableProperty\x2C\x0d\n  revokeObjectURL: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i = qs[0] === '?' ? 1 : 0;\x0d\n  let pairStart = i;\x0d\n  let lastPos = i;\x0d\n  for (; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x2C\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x2C\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = { __proto__: URLSearchParamsIteratorPrototype };\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x2C\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = { __proto__: IteratorPrototype };\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x2C\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x2C\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x2C\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x2C\x0d\n    );\x0d\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: url.hostname && StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x2C\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\x0d\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return StringPrototypeSlice(pathname\x2C 1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\x0d\n    if (hostnameEndIndex === -1) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (hostnameEndIndex === 2) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x2C\x0d\n      );\x0d\n    }\x0d\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  encodeStr\x2C\x0d\n  isURL\x2C\x0d\n};\x0d\n
code-source-info,0xde6be26946,40,37384,37509,C0O37405C3O37410C9O37445C11O37466C12O37470C15O37477C19O37506,,
code-creation,JS,10,317406,0xde6be2933e,17,isURLInstance node:internal/url:1285:23,0x320a78f3c70,~
code-source-info,0xde6be2933e,40,37257,37356,C0O37278C3O37299C6O37324C12O37346C16O37353,,
code-creation,JS,10,317477,0xde6be2949e,81, node:internal/fs/utils:690:38,0x320a78faff0,~
code-source-info,0xde6be2949e,54,19372,19652,C14O19406C22O19439C25O19439C31O19466C36O19497C49O19472C54O19466C55O19565C68O19565C74O19604C76O19634C78O19634C80O19651,,
code-creation,JS,10,317540,0xde6be296ae,110, node:internal/fs/utils:359:35,0x320a78fa5f0,~
code-source-info,0xde6be296ae,54,8938,9548,C16O9003C21O9057C26O9057C31O9154C37O9177C41O9206C45O9223C51O9223C60O9275C64O9296C69O9296C76O9342C77O9349C78O9372C94O9372C100O9492C104O9515C106O9515C107O9534C109O9545,,
code-creation,JS,10,317590,0xde6be29826,16,isUint8Array node:internal/util/types:13:22,0xf2fdb76ec8,~
script-source,16,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0xde6be29826,16,269,356,C0O282C5O289C12O336C15O353,,
code-creation,JS,10,317791,0xde6be29c9e,23,splitRoot node:fs:2462:33,0x1c416dac308,~
code-source-info,0xde6be29c9e,49,68776,68856,C0O68789C9O68830C12O68796C19O68847C22O68851,,
code-creation,JS,10,317828,0xde6be29dee,39,SideEffectFreeRegExpPrototypeExec node:internal/util:657:43,0xf2fdb75e00,~
code-source-info,0xde6be29dee,15,18345,18519,C0O18409C3O18409C7O18382C12O18433C17O18485C22O18495C33O18440C38O18516,,
code-creation,JS,10,317876,0xde6be29f86,52,getInternalGlobal node:internal/util:648:27,0xf2fdb75db0,~
code-source-info,0xde6be29f86,15,18043,18299,C0O18051C7O18164C13O18164C18O18144C23O18184C28O18225C33O18201C41O18199C47O18274C51O18296,,
code-creation,Eval,10,318232,0xde6be2a9ce,5, node:vm:1:1,0xde6be2a610,~
script-source,390,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x2C\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n      const { setCallbackForWrap } = require('internal/modules/esm/utils');\x0d\n      setCallbackForWrap(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x2C\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  return internalCompileFunction(code\x2C params\x2C options).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0xde6be2a9ce,390,0,11160,C0O0C4O11160,,
code-creation,JS,10,318726,0xde6be2b3c6,580, node:vm:1:1,0xde6be2a948,~
code-source-info,0xde6be2b3c
code-creation,JS,10,319012,0xde6be2ccd6,82,runInNewContext node:vm:293:25,0xde6be2ac30,~
code-source-info,0xde6be2ccd6,390,9266,9601,C0O9302C6O9342C13O9364C22O9383C28O9428C33O9399C40O9460C47O9485C53O9503C61O9523C64O9530C70O9557C75O9558C81O9598,,
code-creation,JS,10,319092,0xde6be2dbb6,214,getContextOptions node:vm:187:27,0xde6be2aaa0,~
code-source-info,0xde6be2dbb6,390,5818,6886,C0O5833C4O5852C5O5862C6O5889C11O5910C19O5944C28O5980C32O6019C43O6062C49O6087C54O6117C62O6087C67O6169C73O6196C78O6226C86O6196C91O6275C97O6319C102O6342C110O6319C115O6458C120O6432C125O6441C130O6486C134O6520C142O6520C147O6592C151O6623C159O6623C164O6689C171O6723C177O6732C183O6719C187O6760C193O6794C198O6817C206O6794C211O6861C213O6883,,
code-creation,JS,10,319223,0xde6be2e3a6,286,createContext node:vm:216:23,0xde6be2aaf0,~
code-source-info,0xde6be2e3a6,390,6946,8109,C4O6946C16O6977C23O6996C28O7000C34O7033C36O7054C37O7065C45O7065C50O7119C64O7126C74O7163C87O7174C92O7187C97O7208C102O7244C110O7244C115O7285C119O7316C127O7316C132O7361C136O7400C144O7400C149O7477C151O7497C153O7506C157O7550C168O7566C176O7604C184O7604C189O7669C197O7669C202O7754C204O7763C208O7803C216O7817C225O7894C232O7803C237O7914C239O7932C244O7960C249O7977C255O8009C278O8009C283O8085C285O8106,,
code-creation,JS,10,319298,0xde6be2e676,31,isContext node:internal/vm:25:19,0x19ee585d310,~
script-source,60,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  compileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { __proto__: null\x2C allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nfunction internalCompileFunction(code\x2C params\x2C options) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateStringArray(params\x2C 'params');\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { __proto__: null\x2C nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x2C\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (typeof result.cachedDataRejected === 'boolean') {\x0d\n    result.function.cachedDataRejected = result.cachedDataRejected;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    const { setCallbackForWrap } = require('internal/modules/esm/utils');\x0d\n    setCallbackForWrap(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n};\x0d\n
code-source-info,0xde6be2e676,60,461,582,C0O475C8O490C16O475C21O553C26O560C30O579,,
code-creation,JS,10,319564,0xde6be2eb7e,128, node:internal/validators:247:3,0xf2fdb6dca8,~
code-source-info,0xde6be2eb7e,14,6515,7081,C16O6574C27O6574C33O6661C44O6661C50O6746C61O6746C67O6809C75O6857C79O6871C82O6871C96O6948C104O7015C120O7021C125O7015C127O7080,,
code-creation,JS,10,319608,0xde6be2ed16,27,getOwnPropertyValueOrDefault node:internal/validators:228:38,0xf2fdb6dc58,~
code-source-info,0xde6be2ed16,14,6087,6235,C0O6121C7O6148C10O6148C23O6226C26O6232,,
new,MemoryChunk,0x38242ac0000,262144
code-creation,JS,10,320230,0x38242ad1ede,19,createScript node:vm:257:22,0xde6be2ab40,~
code-source-info,0x38242ad1ede,390,8134,8191,C0O8155C13O8162C18O8188,,
code-creation,JS,10,320341,0x38242ad22c6,369,Script node:vm:66:14,0xde6be2ad70,~
code-source-info,0x38242ad22c6,390,2083,3957,C14O2100C21O2121C25O2144C31O2186C38O2208C49O2240C59O2240C64O2305C76O2350C84O2373C92O2398C97O2417C105O2451C114O2484C124O2543C134O2543C139O2594C149O2594C154O2648C164O2648C169O2706C177O2739C180O2739C186O2779C206O2785C211O2779C212O2932C222O2932C230O3233C232O3233C259O3233C286O3433C288O3433C289O3493C293O3545C303O3545C308O3694C316O3694C321O3662C326O3763C334O3763C339O3740C344O3809C352O3881C360O3809C368O3956,,
code-creation,JS,10,320433,0x38242ad2616,155, node:internal/validators:115:3,0xf2fdb6d990,~
code-source-info,0x38242ad2616,14,2928,3402,C36O3071C42O3111C58O3117C63O3111C64O3178C69O3183C75O3216C91O3222C96O3216C97O3283C99O3293C106O3308C111O3324C121O3363C134O3376C147O3330C152O3324C154O3401,,
code-creation,Script,10,320506,0x38242ad290e,5, evalmachine.<anonymous>:1:1,0x38242ad2848,~
script-source,391,evalmachine.<anonymous>,this
code-source-info,0x38242ad290e,391,0,4,C0O0C4O4,,
code-creation,JS,10,320570,0x38242ad2ac6,33,runInNewContext node:vm:143:18,0xde6be2ae60,~
code-source-info,0x38242ad2ac6,390,4686,4845,C0O4734C10O4763C15O4734C21O4809C26O4809C32O4840,,
code-creation,JS,10,320628,0x38242ad2bee,109,runInContext node:vm:131:15,0xde6be2ae10,~
code-source-info,0x38242ad2bee,390,4282,4665,C0O4319C5O4319C9O4393C14O4393C20O4369C25O4384C30O4470C39O4499C47O4499C54O4523C59O4537C66O4569C77O4544C82O4595C83O4608C92O4634C103O4615C108O4660,,
code-creation,JS,10,320670,0x38242ad2d96,35,validateContext node:vm:149:25,0xde6be2aa00,~
code-source-info,0x38242ad2d96,390,4876,5076,C0O4902C5O4907C11O4945C27O4951C32O4945C34O5075,,
code-creation,JS,10,320737,0x38242ad3056,188,getRunInContextArgs node:vm:156:29,0xde6be2aa50,~
code-source-info,0x38242ad3056,390,5108,5788,C9O5139C16O5158C24O5158C29O5221C34O5233C36O5267C41O5298C54O5298C59O5371C70O5398C80O5427C93O5498C101O5498C106O5558C114O5558C119O5620C126O5634C130O5660C139O5669C148O5696C157O5712C166O5734C175O5756C187O5785,,
code-creation,JS,10,321003,0x38242ad33de,63,handleErrorFromBinding node:internal/fs/utils:342:32,0x320a78fa5a0,~
code-source-info,0x38242ad33de,54,8282,8793,C0O8301C6O8365C11O8365C16O8388C24O8388C29O8446C31O8446C32O8473C38O8705C43O8732C51O8705C56O8779C60O8769C62O8792,,
code-creation,JS,10,321066,0x38242ad353e,54,nextPart node:fs:2488:31,0x1c416dac3e0,~
code-source-info,0x38242ad353e,49,69547,69798,C0O69574C4O69570C9O69607C14O69607C20O69691C22O69702C24O69698C31O69732C33O69728C38O69761C40O69770C41O69584C47O69561C51O69783C53O69793,,
code-creation,JS,10,321180,0x38242ad3686,34,isFileType node:fs:202:20,0x1c416daa618,~
code-source-info,0x38242ad3686,49,5295,5543,C0O5432C2O5437C6O5445C10O5480C15O5487C20O5504C22O5519C24O5517C30O5527C33O5540,,
code-creation,JS,11,321524,0x7ff6f8387980,6324,resolve node:path:162:10,0x320a78dae90,^
code-source-info,0x7ff6f8387980,33,4971,9882,,,
code-creation,JS,11,321552,0x7ff6f83892c0,392,isWindowsDeviceRoot node:path:60:29,0x320a78dad50,^
code-source-info,0x7ff6f83892c0,33,1991,2136,,,
code-creation,JS,11,321571,0x7ff6f8389500,260,getOwnPropertyValueOrDefault node:internal/validators:228:38,0xf2fdb6dc58,^
code-source-info,0x7ff6f8389500,14,6087,6235,,,
code-creation,JS,11,321593,0x7ff6f83896c0,568,nextPart node:fs:2488:31,0x1c416dac3e0,^
code-source-info,0x7ff6f83896c0,49,69547,69798,,,
code-creation,JS,11,321614,0x7ff6f8389980,272,validateString node:internal/validators:161:24,0xf2fdb6da30,^
code-source-info,0x7ff6f8389980,14,4283,4395,,,
code-creation,JS,10,322003,0x38242ad4356,72,encodeRealpathResult node:fs:2475:30,0x1c416dac390,~
code-source-info,0x38242ad4356,49,69136,69402,C0O69159C4O69184C10O69204C17O69213C22O69230C24O69244C25O69265C30O69272C35O69272C41O69301C48O69310C53O69331C55O69347C56O69372C61O69389C66O69372C71O69399,,
code-creation,JS,10,322080,0x38242ad4576,60,loadBuiltinModule node:internal/modules/helpers:60:27,0x19ee585f890,~
code-source-info,0x38242ad4576,61,1557,1848,C0O1594C5O1608C10O1612C15O1612C21O1630C24O1637C33O1668C41O1668C46O1798C51O1798C55O1829C57O1840C59O1847,,
code-creation,JS,10,322186,0x38242ad47e6,245,Module.load node:internal/modules/cjs/loader:1121:33,0x19ee5857e00,~
code-source-info,0x38242ad47e6,57,36265,37117,C0O36281C8O36327C16O36281C21O36337C26O36350C32O36337C36O36362C38O36376C42O36391C45O36411C52O36428C55O36433C60O36433C66O36411C71O36402C75O36476C78O36476C83O36555C91O36559C101O36612C106O36623C112O36638C124O36644C129O36638C130O36686C133O36693C140O36704C144O36715C150O36736C151O36748C155O36784C160O36784C164O36898C169O36935C174O36946C186O36987C191O36994C196O36994C203O37008C205O37006C210O37046C215O37055C220O37055C227O37086C232O37095C237O37095C244O37116,,
code-creation,JS,10,322316,0x38242ad4ad6,99,findLongestRegisteredExtension node:internal/modules/cjs/loader:508:40,0x19ee5857830,~
code-source-info,0x38242ad4ad6,57,14846,15287,C0O14875C5O14880C10O14880C16O14907C18O14932C20O14959C22O15028C36O14981C44O15028C49O15043C51O15062C55O15072C56O15082C61O15089C63O15137C68O15156C74O15196C77O15207C84O15218C89O15238C91O15262C92O14965C96O15271C98O15284,,
code-creation,JS,10,322463,0x38242ad4cee,417,basename node:path:753:11,0x320a78db0c0,~
code-source-info,0x38242ad4cee
code-creation,JS,10,322678,0x38242ad52de,482,Module._extensions..js node:internal/modules/cjs/loader:1284:37,0x19ee5858008,~
code-source-info,0x38242ad52de
code-creation,JS,10,322860,0x38242ad5736,378,readFileSync node:fs:454:22,0x1c416daaa78,~
code-source-info,0x38242ad5736,49,12159,13585,C0O12180C5O12201C10O12190C17O12246C22O12246C27O12301C35O12319C38O12322C43O12345C56O12322C62O12378C65O12378C71O12421C76O12439C79O12421C88O12455C95O12477C97O12487C99O12534C101O12581C102O12590C107O12604C112O12635C124O12644C130O12695C132O12711C133O12720C138O12746C143O12802C159O12758C165O12817C167O12824C174O12865C175O12859C182O12872C187O12734C193O13001C198O13017C208O13017C214O13043C233O13055C239O13106C240O13120C245O13138C250O13173C257O13173C264O13138C269O13211C271O13218C278O13253C279O13253C284O12898C288O13271C292O13291C297O13294C302O13294C307O13314C308O13323C313O13387C318O13403C323O13403C332O13435C334O13443C339O13474C346O13474C353O13511C359O13537C364O13554C369O13537C375O13568C377O13582,,
code-creation,JS,10,323048,0x38242ad5bde,30,isEncoding node:buffer:579:40,0x33cbf872e48,~
script-source,23,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  isAscii: bindingIsAscii\x2C\x0d\n  isUtf8: bindingIsUtf8\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isTypedArray\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = { __proto__: null };\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\x0d\n * rather than the contents of the view.\x0d\n * @param {TypedArray} view\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @returns {Buffer}\x0d\n */\x0d\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\x0d\n  if (!isTypedArray(view)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\x0d\n  }\x0d\n\x0d\n  const viewLength = TypedArrayPrototypeGetLength(view);\x0d\n  if (viewLength === 0) {\x0d\n    return Buffer.alloc(0);\x0d\n  }\x0d\n\x0d\n  if (offset !== undefined || length !== undefined) {\x0d\n    if (offset !== undefined) {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n      if (offset >= viewLength) return Buffer.alloc(0);\x0d\n    } else {\x0d\n      offset = 0;\x0d\n    }\x0d\n    let end;\x0d\n    if (length !== undefined) {\x0d\n      validateInteger(length\x2C 'length'\x2C 0);\x0d\n      end = offset + length;\x0d\n    } else {\x0d\n      end = viewLength;\x0d\n    }\x0d\n\x0d\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\x0d\n  }\x0d\n\x0d\n  return fromArrayLike(new Uint8Array(\x0d\n    TypedArrayPrototypeGetBuffer(view)\x2C\x0d\n    TypedArrayPrototypeGetByteOffset(view)\x2C\x0d\n    TypedArrayPrototypeGetByteLength(view)));\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x2C\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = { __proto__: null };\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x2C\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x2C\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nfunction isUtf8(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsUtf8(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\x0d\n}\x0d\n\x0d\nfunction isAscii(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsAscii(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  isUtf8\x2C\x0d\n  isAscii\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/blob'\x2C\x0d\n  ['Blob'\x2C 'resolveObjectURL']\x2C\x0d\n);\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/file'\x2C\x0d\n  ['File']\x2C\x0d\n);\x0d\n
code-source-info,0x38242ad5bde,23,16772,16907,C0O16788C6O16836C12O16843C20O16862C23O16862C28O16890C29O16904,,
code-creation,JS,10,325042,0x38242ad895e,30,normalizeEncoding node:internal/util:177:27,0xf2fdb74810,~
code-source-info,0x38242ad895e,15,4808,4916,C0O4819C7O4842C14O4860C19O4873C21O4887C22O4891C25O4898C29O4913,,
code-creation,JS,10,325078,0x38242ad8a46,9,isUint32 node:internal/validators:51:18,0xf2fdb6d8a0,~
code-source-info,0x38242ad8a46,14,1013,1060,C0O1026C2O1050C5O1039C8O1057,,
code-creation,JS,10,325137,0x38242ad8bbe,113,openSync node:fs:580:18,0x1c416daac08,~
code-source-info,0x38242ad8bbe,49,15356,15746,C0O15381C5O15388C11O15435C16O15435C21O15460C37O15467C44O15520C51O15522C58O15548C63O15556C70O15561C73O15572C78O15572C95O15556C101O15697C106O15697C110O15729C112O15743,,
code-creation,JS,10,325187,0x38242ad8d3e,37, node:internal/fs/utils:702:42,0x320a78fb040,~
code-source-info,0x38242ad8d3e,54,19699,19838,C14O19755C19O19755C24O19790C29O19790C34O19823C36O19835,,
code-creation,JS,10,325279,0x38242ad9116,515,stringToFlags node:internal/fs/utils:577:23,0x320a78fae60,~
code-source-info,0x38242ad9116,54,16163,17437,C14O16192C20O16230C25O16230C30O16263C32O16276C33O16287C38O16313C42O16329C43O16340C202O16373C206O16389C207O16441C214O16459C216O16457C219O16466C220O16484C224O16498C225O16552C232O16568C234O16566C237O16575C238O16594C245O16611C247O16609C253O16621C255O16619C258O16630C259O16682C266O16699C268O16697C274O16709C276O16707C282O16720C284O16718C287O16727C288O16747C295O16764C297O16762C303O16774C305O16772C308O16781C309O16833C316O16850C318O16848C324O16860C326O16858C332O16869C334O16867C337O16876C338O16895C345O16913C347O16911C353O16923C355O16921C358O16932C359O16984C366O17002C368O17000C374O17012C376O17010C382O17023C384O17021C387O17030C388O17082C395O17100C397O17098C403O17110C405O17108C411O17121C413O17119C416O17128C417O17148C424O17166C426O17164C432O17176C434O17174C437O17183C438O17235C445O17253C447O17251C453O17263C455O17261C461O17272C463O17270C466O17279C467O17331C474O17349C476O17347C482O17359C484O17357C490O17368C492O17366C495O17375C496O17386C509O17392C514O17386,,
code-creation,JS,10,325401,0x38242ad94ee,86,parseFileMode node:internal/validators:70:23,0xf2fdb6d8f0,~
code-source-info,0x38242ad94ee,14,1723,2023,C0O1747C11O1765C17O1803C24O1827C27O1807C34O1863C41O1908C52O1869C57O1863C58O1931C66O1939C73O1975C78O1975C83O2007C85O2020,,
code-creation,JS,10,325461,0x38242ad9696,148, node:internal/validators:138:40,0xf2fdb6d9e0,~
code-source-info,0x38242ad9696,14,3652,4097,C16O3692C22O3730C38O3736C43O3730C44O3793C49O3798C55O3829C71O3835C76O3829C77O3904C87O3966C90O3984C92O3994C99O4009C104O4023C114O4062C127O4075C140O4029C145O4023C147O4096,,
tick,0x7ff8e7aef6f4,325775,1,0x7ff77762b420,6,0x7ff77812e530,0x38242ad8c1d,0x38242ad576e,0x38242ad531a,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,JS,10,325985,0x38242ad9856,66,tryStatSync node:fs:408:21,0x1c416daa988,~
code-source-info,0x38242ad9856,49,11088,11306,C0O11120C2O11141C7O11149C22O11149C28O11194C36O11218C38O11235C43O11238C48O11238C53O11258C58O11264C62O11258C63O11290C65O11303,,
code-creation,JS,10,326103,0x38242ad99ce,96,tryCreateBuffer node:fs:418:25,0x1c416daa9d8,~
code-source-info,0x38242ad99ce,49,11334,11634,C0O11372C2O11385C7O11407C9O11418C11O11416C16O11441C23O11447C28O11441C29O11492C34O11508C39O11508C45O11532C57O11538C58O11567C65O11581C67O11591C72O11594C77O11594C93O11617C95O11631,,
code-creation,JS,10,326155,0x38242ad9b26,17,allocUnsafe node:buffer:422:42,0x33cbf872750,~
code-source-info,0x38242ad9b26,23,12712,12770,C0O12724C5O12724C9O12745C12O12752C16O12767,,
code-creation,JS,10,326198,0x38242ad9c2e,54, node:buffer:398:36,0x33cbf8726b0,~
code-source-info,0x38242ad9c2e,23,11986,12146,C0O12001C8O12001C13O12034C14O12045C21O12061C23O12058C28O12081C33O12113C46O12087C51O12081C53O12145,,
code-creation,JS,10,326269,0x38242ad9db6,177,validateNumber node:internal/validators:176:24,0xf2fdb6db68,~
code-source-info,0x38242ad9db6,14,4631,5087,C19O4672C25O4708C41O4714C46O4708C47O4768C54O4794C66O4826C83O4876C86O4876C92O4904C110O4975C136O5007C151O5051C169O4910C174O4904C176O5086,,
code-creation,JS,10,326340,0x38242ad9f7e,119,allocate node:buffer:447:18,0x33cbf872840,~
code-source-info,0x38242ad9f7e,23,13439,13767,C0O13451C1O13460C6O13473C11O13480C16O13497C17O13506C20O13525C24O13534C27O13515C32O13549C34O13561C39O13572C41O13570C44O13558C49O13592C52O13592C55O13621C62O13636C67O13647C75O13621C81O13671C88O13685C94O13682C100O13696C103O13696C106O13714C108O13723C109O13732C114O13739C118O13764,,
code-creation,JS,10,326442,0x38242ada13e,86,tryReadSync node:fs:433:21,0x1c416daaa28,~
code-source-info,0x38242ada13e,49,11658,11903,C0O11708C2O11721C7O11746C12O11761C29O11761C35O11798C47O11804C48O11833C55O11847C57O11857C62O11860C67O11860C83O11883C85O11900,,
code-creation,JS,10,326550,0x38242ada38e,281,readSync node:fs:711:18,0x1c416daad28,~
code-source-info,0x38242ada38e,49,19177,20344,C0O19177C2O19230C7O19235C13O19260C18O19260C22O19302C25O19336C32O19343C43O19395C47O19439C55O19454C63O19439C68O19517C76O19635C79O19527C87O19546C93O19562C100O19573C105O19590C114O19660C118O19693C122O19722C135O19722C140O19770C147O19788C148O19799C153O19813C154O19822C155O19844C161O19855C166O19869C182O19875C187O19869C188O20001C193O20049C204O20001C209O20067C214O20094C218O20114C226O20114C231O20171C233O20193C238O20201C263O20201C269O20295C274O20295C278O20327C280O20341,,
code-creation,JS,10,326693,0x38242ada61e,52, node:internal/fs/utils:708:40,0x320a78fb090,~
code-source-info,0x38242ada61e,54,19883,20012,C14O19913C22O19917C29O19942C30O19951C31O19962C44O19962C49O19999C51O20009,,
code-creation,JS,10,326747,0x38242ada78e,51, node:internal/validators:354:40,0xf2fdb6de88,~
code-source-info,0x38242ada78e,14,9777,10013,C14O9811C19O9816C25O9850C30O9881C43O9856C48O9850C50O10012,,
code-creation,JS,10,326804,0x38242ada8e6,151, node:internal/validators:94:3,0xf2fdb6d940,~
code-source-info,0x38242ada8e6,14,2282,2670,C12O2302C25O2332C32O2366C38O2404C54O2410C59O2404C60O2464C65O2469C71O2500C87O2506C92O2500C93O2560C95O2570C102O2585C107O2599C117O2638C130O2651C143O2605C148O2599C150O2669,,
code-creation,JS,10,326876,0x38242adaad6,103, node:internal/fs/utils:658:3,0x320a78faf50,~
code-source-info,0x38242adaad6,54,18455,18845,C0O18496C1O18507C6O18521C22O18527C27O18521C28O18587C29O18598C34O18612C50O18618C55O18612C56O18678C58O18689C64O18698C69O18723C82O18813C95O18729C100O18723C102O18844,,
code-creation,JS,10,326955,0x38242adadd6,148, node:internal/fs/utils:896:42,0x320a78fb3b0,~
code-source-info,0x38242adadd6,54,25269,25751,C0O25294C6O25335C11O25335C18O25378C24O25419C29O25442C32O25437C34O25434C44O25468C50O25475C53O25462C58O25491C71O25569C74O25564C92O25589C98O25596C114O25497C119O25491C122O25673C127O25704C140O25679C145O25673C147O25750,,
code-creation,JS,10,327074,0x38242adaf96,47,closeSync node:fs:530:19,0x1c416daab68,~
code-source-info,0x38242adaf96,49,14175,14303,C0O14185C5O14190C11O14227C13O14234C18O14242C31O14242C36O14272C41O14272C46O14302,,
code-creation,JS,10,327169,0x38242adb0de,162,toString node:buffer:833:46,0x33cbf874788,~
code-source-info,0x38242adb0de,23,25414,26006,C0O25414C2O25456C8O25463C13O25489C20O25507C25O25489C31O25515C32O25543C37O25556C38O25566C43O25577C48O25596C50O25606C55O25619C57O25629C58O25643C65O25660C71O25689C76O25701C83O25725C90O25740C92O25748C97O25763C99O25773C100O25779C104O25824C109O25824C115O25846C116O25864C119O25864C124O25893C126O25921C133O25927C138O25921C139O25979C156O25979C161O26003,,
code-creation,JS,10,327297,0x38242adb39e,499,getEncodingOps node:buffer:728:24,0x33cbf8745f8,~
code-source-info,0x38242adb39e
code-creation,JS,10,327445,0x38242adb79e,12,slice node:buffer:643:12,0x33cbf8730a0,~
code-source-info,0x38242adb79e,23,18664,18710,C0O18689C5O18689C11O18710,,
code-creation,JS,11,328094,0x7ff6f8389b40,1520,read node:internal/modules/package_json_reader:16:14,0x19ee58600a0,^
code-source-info,0x7ff6f8389b40,62,307,993,,,
code-creation,JS,11,328130,0x7ff6f838a1c0,308,isFileType node:fs:202:20,0x1c416daa618,^
code-source-info,0x7ff6f838a1c0,49,5295,5543,,,
code-creation,JS,11,328167,0x7ff6f838a380,1900,toNamespacedPath node:path:622:19,0x320a78db020,^
code-source-info,0x7ff6f838a380,33,20182,21297,,,
code-creation,JS,11,328199,0x7ff6f838ab80,1216,readPackageScope node:internal/modules/cjs/loader:416:26,0x19ee58576a0,^
code-source-info,0x7ff6f838ab80,57,11833,12367,,,
code-creation,JS,10,328350,0x38242adc436,463,Module._compile node:internal/modules/cjs/loader:1229:37,0x19ee5857f78,~
code-source-info,0x38242adc
code-creation,JS,10,328541,0x38242adcb86,301,wrapSafe node:internal/modules/cjs/loader:1168:18,0x19ee5857ef8,~
code-source-info,0x38242adcb86,57,37846,39563,C0O37846C9O37890C17O37926C22O37933C27O37933C33O37953C41O37988C49O38002C54O37991C71O38045C78O38056C85O38074C89O38138C102O38045C108O38466C114O38489C128O38559C139O38489C144O38602C154O38602C159O38657C163O38694C170O38718C182O38840C186O38857C197O38694C203O39199C209O39222C223O39292C234O39222C239O39335C243O39344C255O39369C260O39381C267O39392C272O39451C280O39451C285O39432C290O39503C293O39503C298O39545C300O39545,,
code-creation,JS,10,328719,0x38242add28e,438,internalCompileFunction node:internal/vm:31:33,0x19ee585d488,~
code-source-info,0x38242add28e
code-creation,JS,10,328821,0x38242add656,69,validateStringArray node:internal/validators:306:29,0xf2fdb6dd98,~
code-source-info,0x38242add656,14,8554,8700,C0O8573C5O8573C10O8617C12O8630C16O8622C21O8650C26O8670C32O8678C42O8686C53O8650C58O8639C63O8604C68O8699,,
code-creation,JS,10,328882,0x38242add7fe,95, node:internal/validators:288:39,0xf2fdb6dd48,~
code-source-info,0x38242add7fe,14,8065,8351,C16O8102C21O8107C27O8135C43O8141C48O8135C49O8207C56O8214C61O8249C66O8272C71O8290C87O8296C92O8290C94O8350,,
code-creation,Eval,10,329193,0x38242ade376,5, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:1:1,0x38242ade120,~
script-source,392,C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js,const JB_NODE_DEBUGGER_ATTACH_TO_KNOWN_HELPERS = 'JB_NODE_DEBUGGER_ATTACH_TO_KNOWN_HELPERS';\nconst INTERPRETER_DIR_MACRO = '[interpreter dir]';\n\ntry {\n  if (process.env.PORT_PUBLISHER) {\n    publishDebugPort()\n    return;\n  }\n\n  if (hasInspectArg()) {\n    return;\n  }\n\n  if (isElectronRendererProcess()) {\n    return;\n  }\n\n  if (isKnownHelperProcess()) {\n    return;\n  }\n  try {\n    if (!require('worker_threads').isMainThread) {\n      // will be attached using WIP NodeWorker domain\n      return;\n    }\n  }\n  catch (ignored) {\n  }\n  let asyncInspectorOpenSupported = isAsyncInspectorOpenSupported();\n\n  let inspector = require("inspector");\n  const debugConnectionForwarder = require('./debugConnectionForwarder');\n  const {execFile\x2C execFileSync} = require('child_process');\n  let port = findAvailablePort(inspector);\n  if (debugConnectionForwarder.shouldForwardDebugConnection()) {\n    debugConnectionForwarder.forwardDebugConnectionAndWait(port);\n    return;\n  }\n\n  let launchPortPublisher = asyncInspectorOpenSupported ? execFileSync : execFile;\n  const interpreter = process.env["JB_INTERPRETER"] || process.execPath;\n  let publisherEnv = Object.assign({}\x2C process.env\x2C {\n    PORT_PUBLISHER: true\x2C\n    JB_IDE_PORT: process.env["JB_IDE_PORT"]\x2C\n    JB_IDE_HOST: process.env["JB_IDE_HOST"]\x2C\n    JB_DEBUG_PORT: port\x2C\n    NODE_OPTIONS: ''\n  });\n  launchPortPublisher(interpreter\x2C [__filename]\x2C {\n    env: publisherEnv\x2C\n    stdio: 'inherit'\n  });\n  if (!asyncInspectorOpenSupported) {\n    inspector.open(port\x2C getBindHost()\x2C true);\n  }\n\n}\ncatch (e) {\n  console.error("Error in JetBrains node debug connector: "\x2C e)\n}\n\nfunction publishDebugPort() {\n  let idePort = process.env["JB_IDE_PORT"];\n  let ideHost = process.env["JB_IDE_HOST"] || '127.0.0.1';\n  let debugPort = process.env["JB_DEBUG_PORT"];\n\n  const net = require('net');\n  const TIMEOUT = 15000;\n  const socket = net.createConnection({host: ideHost\x2C port: idePort}\x2C () => {\n    socket.on('data'\x2C (d) => {\n      clearTimeout(timeoutId);\n      socket.destroy();\n    });\n\n    socket.write(debugPort\x2C "utf8");\n    const timeoutId = setTimeout(() => {\n      process.stderr.write("Debugger didn't connect during timeout\\n")\n      return socket.destroy();\n    }\x2C TIMEOUT);\n  });\n  socket.setNoDelay(true);\n  socket.on('error'\x2C err => {\n    console.error("Error in debuggerConnector: " + err.message + "\\n" + err.stack);\n    if (process.env.JB_WSL_MSG) {\n      console.error("\\n" + process.env.JB_WSL_MSG +"\\n")\n    }\n    process.exit(0);\n  });\n}\n\nfunction hasInspectArg() {\n  return process.execArgv.find(\n      arg => arg === "--inspect" || arg === "--inspect-brk" || arg.startsWith("--inspect-brk=") || arg.startsWith("--inspect=")\n  );\n}\n\nfunction isElectronRendererProcess() {\n  return process.type && process.type === "renderer" ||\n         process.argv.indexOf("--type=renderer") >= 0;\n}\n\n/**\n * Helper processes are Node.js processes that are known not to run application code\x2C\n * so it's safe not to attach a debugger to them.\n *\n * Benefits of skipping attaching debugger to helper processes:\n * 1. Less debugger related output in the console. Several lines are printed in the console each time debugger is attached.\n * 2. Workaround for a more serious problem:\n *    Attaching debugger to short-living Node.js processes could terminate whole process tree (WEB-55884\x2C WEB-56885).\n *    See org.jetbrains.debugger.connection.VmConnection#close.\n * @returns {boolean} true if the current process is a helper process\n */\nfunction isKnownHelperProcess() {\n  if (process.env[JB_NODE_DEBUGGER_ATTACH_TO_KNOWN_HELPERS]) {\n    return false\n  }\n  const helperProcessInfoList = [\n    ['/node_modules/npm/bin/npm-cli.js'\x2C 'prefix'\x2C '-g']\x2C // "npm prefix -g" is run by npm.cmd on Windows\n    ['/node_modules/update-notifier/check.js']\x2C // check for npm/yarn available updates\n\n    // npm/Yarn script (e.g. "npm run start") spawns the process hierarchy\x2C\n    // where the root Node.js process doesn't run application code\n    ['/node_modules/npm/bin/npm-cli.js'\x2C 'run']\x2C\n    [INTERPRETER_DIR_MACRO + '/npm'\x2C 'run']\x2C // ~/.nvm/versions/node/v18.12.1/bin/npm ('npm' and 'node' are the same folder)\n    ['/Yarn/bin/yarn.js'\x2C 'run']\x2C\n    ['/usr/local/bin/npm'\x2C 'run']\n  ]\n  return helperProcessInfoList.some((helperProcessInfo) => {\n    const matched = isHelperInfoMatched(helperProcessInfo)\n    if (isVerboseLoggingEnabled()) {\n      if (matched) {\n        logMessage('Skipping attaching debugger to ' + process.argv + ' as it is matched as a helper process ' + helperProcessInfo\n                     + '. Set ' + JB_NODE_DEBUGGER_ATTACH_TO_KNOWN_HELPERS + '=1 environment variable to force attaching debugger to it.')\n      }\n      else {\n        logMessage(process.argv + ' is not matched as a helper process ' + helperProcessInfo)\n      }\n    }\n    return matched\n  })\n}\n\nfunction isHelperInfoMatched(helperProcessInfo) {\n  const argv = process.argv;\n  if (argv.length <= helperProcessInfo.length || helperProcessInfo.length === 0) {\n    return false;\n  }\n  if (!matchPathSuffix(helperProcessInfo[0]\x2C argv[1])) {\n    return false;\n  }\n  for (let i = 1; i < helperProcessInfo.length; i++) {\n    if (helperProcessInfo[i] !== argv[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction matchPathSuffix(pathSuffix\x2C path) {\n  if (pathSuffix.startsWith(INTERPRETER_DIR_MACRO)) {\n    const expectedPath = require('path').dirname(process.execPath) + pathSuffix.substring(INTERPRETER_DIR_MACRO.length);\n    return toSystemIndependentPath(path) === toSystemIndependentPath(expectedPath);\n  }\n  return toSystemIndependentPath(path).endsWith(pathSuffix);\n}\n\nfunction toSystemIndependentPath(path ) {\n  return path.replace(/\\\\/g\x2C '/');\n}\n\n/**\n * inspector.open(...\x2C...\x2Cfalse) doesn't work properly on some node versions. It opens the port but debugger can't attach.\n */\nfunction isAsyncInspectorOpenSupported() {\n  try {\n    let versions = process.versions.node.split(".");\n    let major = parseInt(versions[0]);\n    let minor = parseInt(versions[1]);\n    let asyncInspectorOpenSupported = major >= 11 || (major === 10 && minor >= 7);\n    return asyncInspectorOpenSupported;\n  }\n  catch (e) {\n    process.stderr.write("Cannot parse node version: " + process.versions.node + "\\n" + e.message);\n    return false;\n  }\n}\n\nfunction findAvailablePort(inspector) {\n  try {\n    let closeAuxiliaryInspector = !isAsyncInspectorOpenSupported();\n    if (closeAuxiliaryInspector) {\n      process.stderr.write("[IntelliJ is searching for port] ")\n    }\n\n    inspector.open(0\x2C getBindHost()\x2C false);\n    let url = inspector.url();\n    let schemeSeparatorIndex = url.indexOf("://");\n    let slashIndex = url.indexOf("/"\x2C schemeSeparatorIndex + 3);\n    let colonIndex = url.substr(0\x2C slashIndex).lastIndexOf(":");\n    let portString = url.substr(colonIndex + 1\x2C slashIndex - colonIndex - 1);\n    let port = Number(portString);\n    if (!port) throw Error("failed to parse " + url);\n\n    if (closeAuxiliaryInspector) {\n      inspector.close()\n    }\n\n    return port;\n  }\n  catch(e) {\n    inspector.close();\n    throw e;\n  }\n}\n\n/**\n * @return host to listen on for inspector connections. If undefined\x2C localhost will be used.\n */\nfunction getBindHost() {\n  return process.env.JETBRAINS_NODE_BIND_HOST;\n}\n\nfunction isVerboseLoggingEnabled() {\n  return process.env.JB_NODE_DEBUGGER_ENABLE_VERBOSE_LOGGING != null;\n}\n\nfunction logMessage(message) {\n  console.log('[debugConnector pid:' + process.pid + '] ' + message);\n}\n
code-source-info,0x38242ade376,392,0,7444,C0O0C4O7444,,
code-creation,JS,10,329483,0x38242adea06,496, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:1:1,0x38242ade2f0,~
code-source-info,0x38242adea06,392,0,7444,C0O0C82O49C84O49C86O123C88O123C93O153C98O165C104O169C110O191C113O214C114O221C115O233C120O256C121O263C122O275C127O310C128O317C129O329C134O359C135O366C139O383C147O388C153O413C159O490C160O497C178O568C182O568C186O620C194O620C199O677C207O677C212O751C220O751C226O725C231O735C236O790C241O851C247O851C253O914C259O914C264O955C265O962C266O996C277O1073C282O1081C288O1084C294O1106C299O1114C304O1145C309O1152C318O1163C323O1171C335O1221C340O1229C346O1232C354O1266C359O1274C365O1277C375O1313C379O1152C385O1368C396O1382C408O1406C415O1348C420O1449C424O1499C434O1510C448O1499C467O1553C472O1561C486O1561C495O7443,,
code-creation,JS,10,329764,0x38242adf956,19,importModuleDynamicallyWrap node:internal/vm/module:426:37,0x19ee5865228,~
script-source,64,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  getConstructorOf\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINK_FAILURE\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n      const { setCallbackForWrap } = require('internal/modules/esm/utils');\x0d\n      setCallbackForWrap(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = kEmptyObject) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x2C\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = { __proto__: { constructor } };\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x2C\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = kEmptyObject) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      validateFunction(initializeImportMeta\x2C 'options.initializeImportMeta');\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C 'options.importModuleDynamically');\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          throw new ERR_VM_MODULE_LINK_FAILURE(`request for '${identifier}' resolved to an errored module`\x2C module.error);\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await SafePromiseAllReturnVoid(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = kEmptyObject) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x38242adf956,64,11957,12415,C0O11957C13O12027C18O12412,,
code-creation,JS,10,330700,0x38242ae08de,18,setCallbackForWrap node:internal/modules/esm/utils:26:28,0x19ee5860f40,~
code-source-info,0x38242ae08de,63,591,640,C0O609C5O621C10O621C17O639,,
code-creation,JS,10,330834,0x38242ae0c56,176,makeRequireFunction node:internal/modules/helpers:74:29,0x19ee585f8e0,~
code-source-info,0x38242ae0c56,61,2131,4317,C0O2131C22O2168C25O2172C29O2168C31O2194C33O2206C53O2239C58O2243C69O2259C73O2239C75O2287C80O2287C83O2287C85O2320C91O2329C97O2358C106O3597C111O3917C113O3933C117O4080C119O4094C123O4108C138O4148C146O4108C151O4217C154O4245C158O4236C162O4263C165O4286C169O4277C173O4299C175O4314,,
code-creation,JS,10,330981,0x38242ae1156,5,get node:internal/bootstrap/node:365:8,0xf2fdb44f00,~
code-source-info,0x38242ae1156,10,12870,12905,C0O12882C4O12898,,
code-creation,JS,10,331046,0x38242ae12de,25,hasInspectArg C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:91:23,0x38242ade3f8,~
code-source-info,0x38242ae12de,392,2521,2692,C0O2528C4O2543C9O2552C19O2552C24O2690,,
code-creation,JS,10,331105,0x38242ae141e,43, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:93:7,0x38242ae1228,~
code-source-info,0x38242ae141e,392,2564,2685,C0O2575C2O2575C9O2598C14O2625C22O2625C29O2661C37O2661C42O2685,,
code-creation,JS,10,331169,0x38242ae158e,54,isElectronRendererProcess C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:97:35,0x38242ade448,~
code-source-info,0x38242ae158e,392,2728,2845,C0O2735C4O2750C10O2758C14O2766C21O2771C26O2798C30O2806C35O2811C43O2811C50O2838C53O2843,,
code-creation,JS,10,331267,0x38242ae1aee,74,isKnownHelperProcess C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:113:30,0x38242ade498,~
code-source-info,0x38242ae1aee,392,3508,4817,C0O3515C4O3527C11O3531C13O3530C18O3580C19O3592C20O3629C37O4023C42O4045C58O4246C68O4246C73O4815,,
code-creation,JS,10,331372,0x38242ae1c8e,107, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:128:37,0x38242ae1868,~
code-source-info,0x38242ae1c8e,392,4251,4814,C0O4296C3O4296C8O4339C11O4343C16O4378C20O4401C26O4448C30O4456C34O4446C40O4461C46O4504C52O4545C58O4558C60O4556C66O4599C70O4401C76O4692C79O4703C83O4711C90O4716C96O4757C100O4692C104O4796C106O4810,,
code-creation,JS,10,331470,0x38242ae1e1e,103,isHelperInfoMatched C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:143:29,0x38242ade4e8,~
code-source-info,0x38242ae1e1e,392,4847,5231,C0O4884C4O4892C9O4909C14O4937C18O4916C23O4965C29O4972C34O4985C35O4998C36O5005C40O5043C46O5052C50O5010C57O5064C58O5077C59O5097C62O5122C66O5102C71O5141C73O5162C79O5177C82O5174C85O5166C90O5191C91O5204C92O5131C97O5084C101O5217C102O5229,,
code-creation,JS,10,331554,0x38242ae1fe6,16,isVerboseLoggingEnabled C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:223:33,0x38242ade6c8,~
code-source-info,0x38242ae1fe6,392,7263,7339,C0O7270C4O7285C9O7289C14O7329C15O7337,,
code-creation,JS,10,331640,0x38242ae20fe,14,require node:internal/modules/helpers:117:31,0x38242ae0b28,~
code-source-info,0x38242ae20fe,61,3623,3750,C0O3718C3O3729C8O3729C13O3743,,
code-creation,JS,10,331715,0x38242ae2246,127,Module.require node:internal/modules/cjs/loader:1149:36,0x19ee5857e70,~
code-source-info,0x38242ae2246,57,37329,37632,C0O37339C8O37339C13O37368C15O37375C20O37390C36O37396C41O37390C42O37508C51O37520C60O37538C63O37552C76O37552C93O37609C102O37621C126O37631,,
code-creation,JS,10,331813,0x38242ae2446,10, node:internal/modules/helpers:35:66,0x19ee585f588,~
code-source-info,0x38242ae2446,61,935,962,C0O948C2O954C9O961,,
code-creation,JS,10,331895,0x38242ae25b6,129,compileForPublicLoader node:internal/bootstrap/loaders:263:25,0x2f9728be8e8,~
code-source-info,0x38242ae25b6,9,8283,8971,C0O8303C6O8450C16O8493C33O8456C38O8450C39O8532C44O8532C48O8575C54O8767C61O8798C69O8767C75O8823C80O8841C90O8857C93O8873C98O8857C102O8839C106O8900C111O8900C115O8926C120O8926C124O8958C128O8966,,
code-creation,Eval,10,332125,0x38242ae29d6,5, node:worker_threads:1:1,0x38242ae2890,~
script-source,393,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x38242ae29d6,393,0,728,C0O0C4O728,,
code-creation,JS,10,332225,0x38242ae2be6,180, node:worker_threads:1:1,0x38242ae2950,~
code-source-info,0x38242ae2be6,393,0,728,C0O150C3O150C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O304C46O304C51O192C56O208C61O227C66O256C71O281C76O376C79O376C84O349C89O407C96O429C102O446C108O462C114O481C120O506C126O535C132O560C138O579C144O592C150O606C156O659C162O680C168O703C174O422C179O727,,
code-creation,Eval,10,333157,0x38242ae3e86,5, node:internal/worker:1:1,0x38242ae3878,~
script-source,394,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { Atomics\x2C SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  internalEventLoopUtilization\x2C\x0d\n} = require('internal/perf/event_loop_utilization');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURLInstance\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst workerThreadsChannel = dc.channel('worker_threads');\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\n// SharedArrayBuffers can be disabled with --no-harmony-sharedarraybuffer.\x0d\n// Atomics can be disabled with --no-harmony-atomics.\x0d\nif (isMainThread && SharedArrayBuffer !== undefined && Atomics !== undefined) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    Atomics.add(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    super();\x0d\n    debug(`[${threadId}] create new worker`\x2C filename\x2C options);\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x2C\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURLInstance(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURLInstance(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x2C\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = { __proto__: null };\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    let name = '';\x0d\n    if (options.name) {\x0d\n      validateString(options.name\x2C 'options.name');\x0d\n      name = StringPrototypeTrim(options.name);\x0d\n    }\x0d\n\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\x0d\n                                   name);\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x2C\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n    if (workerThreadsChannel.hasSubscribers) {\x0d\n      workerThreadsChannel.publish({\x0d\n        worker: this\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot(options) {\x0d\n    const {\x0d\n      HeapSnapshotStream\x2C\x0d\n      getHeapSnapshotOptions\x2C\x0d\n    } = require('internal/heap_utils');\x0d\n    const optionsArray = getHeapSnapshotOptions(options);\x0d\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  return internalEventLoopUtilization(\x0d\n    this[kLoopStartTime]\x2C\x0d\n    this[kHandle].loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0x38242ae3e86,394,0,16018,C0O0C4O16018,,
code-creation,JS,10,334084,0x38242ae5206,1256, node:internal/worker:1:1,0x38242ae3e00,~
code-source-info,0x38242ae5206,394,0,16018,C0O0C253O28C259O54C265O76C271O99C276O116C282O142C288O160C294O172C300O190C306O202C312O221C318O238C324O262C330O284C335O296C341O307C347O331C352O342C357O356C363O384C368O412C374O414C380O423C385O486C393O486C398O521C406O521C410O521C412O563C420O563C424O563C426O627C434O627C440O592C446O698C454O698C460O724C464O698C466O913C470O744C476O771C482O791C488O827C494O860C500O885C506O953C514O953C520O934C526O1002C534O1002C538O1002C540O1262C544O1045C550O1066C556O1085C562O1102C568O1112C574O1135C580O1155C586O1187C592O1212C598O1236C604O1302C612O1302C618O1281C624O1393C632O1393C638O1345C644O1360C650O1375C656O1444C664O1444C670O1427C676O1513C684O1513C690O1479C696O1494C702O1798C706O1798C712O1559C717O1580C722O1613C727O1635C733O1656C739O1671C745O1701C751O1729C757O1750C763O1767C768O1844C772O1844C776O1844C778O1884C782O1884C786O1884C788O1925C792O1925C796O1925C798O1962C802O1962C806O1962C808O2001C812O2001C816O2001C818O2056C822O2056C826O2056C828O2116C832O2116C836O2116C838O2169C842O2169C846O2169C848O2221C852O2221C856O2221C858O2266C862O2266C866O2266C868O2308C872O2308C876O2308C878O2367C886O2367C892O2400C908O2401C914O2367C916O2464C924O2464C929O2529C939O2529C944O2526C946O2563C947O2563C949O2602C951O2602C956O2602C958O2751C970O2814C977O2834C983O2863C992O2847C997O2845C1001O2915C1007O2923C1011O2915C1013O2933C1023O2947C1029O3453C1039O9000C1049O9654C1059O9758C1069O9937C1079O10862C1163O13958C1165O13958C1170O13958C1172O15762C1180O15784C1186O15805C1192O15822C1201O15858C1207O15873C1220O15920C1226O15943C1232O15966C1238O15992C1244O16005C1250O15777C1255O16017,,
code-creation,Eval,10,334567,0x38242ae6fce,5, node:internal/perf/event_loop_utilization:1:1,0x38242ae6e38,~
script-source,395,node:internal/perf/event_loop_utilization,'use strict';\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\x0d\n  }\x2C\x0d\n  loopIdleTime\x2C\x0d\n  milestones\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // Get the original milestone timestamps that calculated from the beginning\x0d\n  // of the process.\x0d\n  return internalEventLoopUtilization(\x0d\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\x0d\n    loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\x0d\n  if (loopStart <= 0) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\x0d\n  // and offset it by the loopStart time (which is also calculated from the\x0d\n  // beginning of the process).\x0d\n  const now = process.hrtime();\x0d\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\x0d\n\x0d\n  if (!util1) {\x0d\n    return {\x0d\n      idle: loopIdleTime\x2C\x0d\n      active\x2C\x0d\n      utilization: active / (loopIdleTime + active)\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const idleDelta = loopIdleTime - util1.idle;\x0d\n  const activeDelta = active - util1.active;\x0d\n  const utilization = activeDelta / (idleDelta + activeDelta);\x0d\n  return {\x0d\n    idle: idleDelta\x2C\x0d\n    active: activeDelta\x2C\x0d\n    utilization\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalEventLoopUtilization\x2C\x0d\n  eventLoopUtilization\x2C\x0d\n};\x0d\n
code-source-info,0x38242ae6fce,395,0,1587,C0O0C4O1587,,
code-creation,JS,10,334707,0x38242ae717e,85, node:internal/perf/event_loop_utilization:1:1,0x38242ae6f48,~
code-source-info,0x38242ae717e,395,0,1587,C0O0C29O128C32O128C37O39C42O46C48O94C54O111C60O1505C67O1527C73O1560C79O1520C84O1586,,
code-creation,Eval,10,335556,0x38242ae821e,5, node:internal/worker/io:1:1,0x38242ae7da8,~
script-source,396,node:internal/worker/io,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  handle_onclose: handleOnCloseSymbol\x2C\x0d\n  oninit: onInitSymbol\x2C\x0d\n  no_message_symbol: noMessageSymbol\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  broadcastChannel\x2C\x0d\n  drainMessagePort\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\x0d\n  stopMessagePort\x2C\x0d\n  checkMessagePort\x2C\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\nconst {\x0d\n  getEnvMessagePort\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst { Readable\x2C Writable } = require('stream');\x0d\nconst {\x0d\n  Event\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n} = require('internal/event_target');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst kData = Symbol('kData');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\x0d\nconst kLastEventId = Symbol('kLastEventId');\x0d\nconst kName = Symbol('kName');\x0d\nconst kOrigin = Symbol('kOrigin');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnMessageError = Symbol('kOnMessageError');\x0d\nconst kPort = Symbol('kPort');\x0d\nconst kPorts = Symbol('kPorts');\x0d\nconst kWaitingStreams = Symbol('kWaitingStreams');\x0d\nconst kWritableCallbacks = Symbol('kWritableCallbacks');\x0d\nconst kSource = Symbol('kSource');\x0d\nconst kStartedReading = Symbol('kStartedReading');\x0d\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\x0d\nconst kCurrentlyReceivingPorts =\x0d\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\x0d\nconst kType = Symbol('kType');\x0d\n\x0d\nconst messageTypes = {\x0d\n  UP_AND_RUNNING: 'upAndRunning'\x2C\x0d\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\x0d\n  ERROR_MESSAGE: 'errorMessage'\x2C\x0d\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\x0d\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\x0d\n  LOAD_SCRIPT: 'loadScript'\x2C\x0d\n};\x0d\n\x0d\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\x0d\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\x0d\n// not provide methods that are not present in the Browser and not documented\x0d\n// on our side (e.g. stopMessagePort).\x0d\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\x0d\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\n// Save a copy of the original set of methods as a shallow clone.\x0d\nconst MessagePortPrototype = ObjectCreate(\x0d\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\x0d\n  messagePortPrototypePropertyDescriptors);\x0d\n// Set up the new inheritance chain.\x0d\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\x0d\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\x0d\n// Copy methods that are inherited from HandleWrap\x2C because\x0d\n// changing the prototype of MessagePort.prototype implicitly removed them.\x0d\nMessagePort.prototype.ref = MessagePortPrototype.ref;\x0d\nMessagePort.prototype.unref = MessagePortPrototype.unref;\x0d\nMessagePort.prototype.hasRef = function() {\x0d\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n};\x0d\n\x0d\nfunction validateMessagePort(port\x2C name) {\x0d\n  if (!checkMessagePort(port))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'MessagePort'\x2C port);\x0d\n}\x0d\n\x0d\nfunction isMessageEvent(value) {\x0d\n  return value != null && kData in value;\x0d\n}\x0d\n\x0d\nclass MessageEvent extends Event {\x0d\n  constructor(type\x2C {\x0d\n    data = null\x2C\x0d\n    origin = ''\x2C\x0d\n    lastEventId = ''\x2C\x0d\n    source = null\x2C\x0d\n    ports = []\x2C\x0d\n  } = kEmptyObject) {\x0d\n    super(type);\x0d\n    this[kData] = data;\x0d\n    this[kOrigin] = `${origin}`;\x0d\n    this[kLastEventId] = `${lastEventId}`;\x0d\n    this[kSource] = source;\x0d\n    this[kPorts] = [...ports];\x0d\n\x0d\n    if (this[kSource] !== null)\x0d\n      validateMessagePort(this[kSource]\x2C 'init.source');\x0d\n    for (let i = 0; i < this[kPorts].length; i++)\x0d\n      validateMessagePort(this[kPorts][i]\x2C `init.ports[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(MessageEvent.prototype\x2C {\x0d\n  data: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kData];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  origin: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kOrigin];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  lastEventId: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kLastEventId];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  source: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kSource];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  ports: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kPorts];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\x0d\nObjectDefineProperty(\x0d\n  MessagePort.prototype\x2C\x0d\n  kCreateEvent\x2C\x0d\n  {\x0d\n    __proto__: null\x2C\x0d\n    value: function(data\x2C type) {\x0d\n      if (type !== 'message' && type !== 'messageerror') {\x0d\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\x0d\n      }\x0d\n      const ports = this[kCurrentlyReceivingPorts];\x0d\n      this[kCurrentlyReceivingPorts] = undefined;\x0d\n      return new MessageEvent(type\x2C { data\x2C ports });\x0d\n    }\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n\x0d\n// This is called from inside the `MessagePort` constructor.\x0d\nfunction oninit() {\x0d\n  initNodeEventTarget(this);\x0d\n  setupPortReferencing(this\x2C this\x2C 'message');\x0d\n  this[kCurrentlyReceivingPorts] = undefined;\x0d\n}\x0d\n\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'message');\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  value: oninit\x2C\x0d\n});\x0d\n\x0d\nclass MessagePortCloseEvent extends Event {\x0d\n  constructor() {\x0d\n    super('close');\x0d\n  }\x0d\n}\x0d\n\x0d\n// This is called after the underlying `uv_async_t` has been closed.\x0d\nfunction onclose() {\x0d\n  this.dispatchEvent(new MessagePortCloseEvent());\x0d\n}\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: onclose\x2C\x0d\n});\x0d\n\x0d\nMessagePort.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function')\x0d\n    this.once('close'\x2C cb);\x0d\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: function inspect() {  // eslint-disable-line func-name-matching\x0d\n    let ref;\x0d\n    try {\x0d\n      // This may throw when `this` does not refer to a native object\x2C\x0d\n      // e.g. when accessing the prototype directly.\x0d\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n    } catch { return this; }\x0d\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\x0d\n                        ref === undefined ? {\x0d\n                          active: false\x2C\x0d\n                        } : {\x0d\n                          active: true\x2C\x0d\n                          refed: ref\x2C\x0d\n                        }\x2C\x0d\n                        this);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\x0d\n  // Keep track of whether there are any workerMessage listeners:\x0d\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\x0d\n  // If there are none or all are removed\x2C unref() the channel so the worker\x0d\n  // can shutdown gracefully.\x0d\n  port.unref();\x0d\n  eventEmitter.on('newListener'\x2C function(name) {\x0d\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  eventEmitter.on('removeListener'\x2C function(name) {\x0d\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  const origNewListener = eventEmitter[kNewListener];\x0d\n  eventEmitter[kNewListener] = function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) newListener(size - 1);\x0d\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\x0d\n  };\x0d\n  const origRemoveListener = eventEmitter[kRemoveListener];\x0d\n  eventEmitter[kRemoveListener] = function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) removeListener(size);\x0d\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\x0d\n  };\x0d\n\x0d\n  function newListener(size) {\x0d\n    if (size === 0) {\x0d\n      port.ref();\x0d\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function removeListener(size) {\x0d\n    if (size === 0) {\x0d\n      stopMessagePort(port);\x0d\n      port.unref();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nclass ReadableWorkerStdio extends Readable {\x0d\n  constructor(port\x2C name) {\x0d\n    super();\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kIncrementsPortRef] = true;\x0d\n    this[kStartedReading] = false;\x0d\n    this.on('end'\x2C () => {\x0d\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n        if (--this[kPort][kWaitingStreams] === 0)\x0d\n          this[kPort].unref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  _read() {\x0d\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n      this[kStartedReading] = true;\x0d\n      if (this[kPort][kWaitingStreams]++ === 0)\x0d\n        this[kPort].ref();\x0d\n    }\x0d\n\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\x0d\n      stream: this[kName]\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass WritableWorkerStdio extends Writable {\x0d\n  constructor(port\x2C name) {\x0d\n    super({ decodeStrings: false });\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kWritableCallbacks] = [];\x0d\n  }\x0d\n\x0d\n  _writev(chunks\x2C cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: ArrayPrototypeMap(chunks\x2C\x0d\n                                ({ chunk\x2C encoding }) => ({ chunk\x2C encoding }))\x2C\x0d\n    });\x0d\n    ArrayPrototypePush(this[kWritableCallbacks]\x2C cb);\x0d\n    if (this[kPort][kWaitingStreams]++ === 0)\x0d\n      this[kPort].ref();\x0d\n  }\x0d\n\x0d\n  _final(cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\x0d\n    });\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  [kStdioWantsMoreDataCallback]() {\x0d\n    const cbs = this[kWritableCallbacks];\x0d\n    this[kWritableCallbacks] = [];\x0d\n    ArrayPrototypeForEach(cbs\x2C (cb) => cb());\x0d\n    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)\x0d\n      this[kPort].unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createWorkerStdio() {\x0d\n  const port = getEnvMessagePort();\x0d\n  port[kWaitingStreams] = 0;\x0d\n  return {\x0d\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\x0d\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\x0d\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction receiveMessageOnPort(port) {\x0d\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\x0d\n  if (message === noMessageSymbol) return undefined;\x0d\n  return { message };\x0d\n}\x0d\n\x0d\nfunction onMessageEvent(type\x2C data) {\x0d\n  this.dispatchEvent(new MessageEvent(type\x2C { data }));\x0d\n}\x0d\n\x0d\nfunction isBroadcastChannel(value) {\x0d\n  return value?.[kType] === 'BroadcastChannel';\x0d\n}\x0d\n\x0d\nclass BroadcastChannel extends EventTarget {\x0d\n  /**\x0d\n   * @param {string} name\x0d\n   */\x0d\n  constructor(name) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    super();\x0d\n    this[kType] = 'BroadcastChannel';\x0d\n    this[kName] = `${name}`;\x0d\n    this[kHandle] = broadcastChannel(this[kName]);\x0d\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\x0d\n    this[kOnMessageError] =\x0d\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\x0d\n    this[kHandle].on('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C options) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (depth < 0)\x0d\n      return 'BroadcastChannel';\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `BroadcastChannel ${inspect({\x0d\n      name: this[kName]\x2C\x0d\n      active: this[kHandle] !== undefined\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get name() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle] === undefined)\x0d\n      return;\x0d\n    this[kHandle].off('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\x0d\n    this[kOnMessage] = undefined;\x0d\n    this[kOnMessageError] = undefined;\x0d\n    this[kHandle].close();\x0d\n    this[kHandle] = undefined;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {any} message\x0d\n   * @returns {void}\x0d\n   */\x0d\n  postMessage(message) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n    if (this[kHandle] === undefined)\x0d\n      throw new DOMException('BroadcastChannel is closed.');\x0d\n    if (this[kHandle].postMessage(message) === undefined)\x0d\n      throw new DOMException('Message could not be posted.');\x0d\n  }\x0d\n\x0d\n  // The ref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  ref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].ref();\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // The unref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  unref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].unref();\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  close: kEnumerableProperty\x2C\x0d\n  postMessage: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\x0d\n\x0d\nmodule.exports = {\x0d\n  drainMessagePort\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  MessageEvent\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n  createWorkerStdio\x2C\x0d\n  BroadcastChannel\x2C\x0d\n};\x0d\n
code-source-info,0x38242ae821e,396,0,15986,C0O0C4O15986,,
code-creation,JS,10,336756,0x38242aea1ae,1696, node:internal/worker/io:1:1,0x38242ae8198,~
code-source-info,0x38242aea1ae
tick,0x7ff77880408d,337146,1,0x7ff7776556e0,3,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x38242ae541c,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae2be9,0x7ff6f83840eb,0x38242ae25e2,0x38242ad45a9,0xde6be17c95,0x38242ae2292,0x38242ae2106,0x38242adea99,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,Eval,10,337739,0x38242aec936,5, node:stream:1:1,0x38242aec730,~
script-source,397,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  streamReturningOperators\x2C\x0d\n  promiseReturningOperators\x2C\x0d\n} = require('internal/streams/operators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst compose = require('internal/streams/compose');\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst internalBuffer = require('internal/buffer');\x0d\n\x0d\nconst promises = require('stream/promises');\x0d\nconst utils = require('internal/streams/utils');\x0d\n\x0d\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\x0d\nStream.isDisturbed = utils.isDisturbed;\x0d\nStream.isErrored = utils.isErrored;\x0d\nStream.isReadable = utils.isReadable;\x0d\nStream.Readable = require('internal/streams/readable');\x0d\nfor (const key of ObjectKeys(streamReturningOperators)) {\x0d\n  const op = streamReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nfor (const key of ObjectKeys(promiseReturningOperators)) {\x0d\n  const op = promiseReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return ReflectApply(op\x2C this\x2C args);\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nStream.Writable = require('internal/streams/writable');\x0d\nStream.Duplex = require('internal/streams/duplex');\x0d\nStream.Transform = require('internal/streams/transform');\x0d\nStream.PassThrough = require('internal/streams/passthrough');\x0d\nStream.pipeline = pipeline;\x0d\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\x0d\nStream.addAbortSignal = addAbortSignal;\x0d\nStream.finished = eos;\x0d\nStream.destroy = destroyer;\x0d\nStream.compose = compose;\x0d\n\x0d\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.pipeline;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(eos\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.finished;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Backwards-compat with node 0.4.x\x0d\nStream.Stream = Stream;\x0d\n\x0d\nStream._isUint8Array = require('internal/util/types').isUint8Array;\x0d\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\x0d\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\x0d\n                                       chunk.byteOffset\x2C\x0d\n                                       chunk.byteLength);\x0d\n};\x0d\n
code-source-info,0x38242aec936,397,0,4630,C0O0C4O4630,,
code-creation,JS,10,338133,0x38242aed02e,1007, node:stream:1:1,0x38242aec8b0,~
code-source-info,0x38242aed02e
code-creation,Eval,10,338998,0x38242aee33e,5, node:internal/streams/operators:1:1,0x38242aee038,~
script-source,398,node:internal/streams/operators,'use strict';\x0d\n\x0d\nconst { AbortController } = require('internal/abort_controller');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kWeakHandler } = require('internal/event_target');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\nconst staticCompose = require('internal/streams/compose');\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kEmpty = Symbol('kEmpty');\x0d\nconst kEof = Symbol('kEof');\x0d\n\x0d\nfunction compose(stream\x2C options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  if (isNodeStream(stream) && !isWritable(stream)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\x0d\n  }\x0d\n\x0d\n  const composedStream = staticCompose(this\x2C stream);\x0d\n\x0d\n  if (options?.signal) {\x0d\n    // Not validating as we already validated before\x0d\n    addAbortSignalNoValidate(\x0d\n      options.signal\x2C\x0d\n      composedStream\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return composedStream;\x0d\n}\x0d\n\x0d\nfunction map(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let concurrency = 1;\x0d\n  if (options?.concurrency != null) {\x0d\n    concurrency = MathFloor(options.concurrency);\x0d\n  }\x0d\n\x0d\n  validateInteger(concurrency\x2C 'concurrency'\x2C 1);\x0d\n\x0d\n  return async function* map() {\x0d\n    const ac = new AbortController();\x0d\n    const stream = this;\x0d\n    const queue = [];\x0d\n    const signal = ac.signal;\x0d\n    const signalOpt = { signal };\x0d\n\x0d\n    const abort = () => ac.abort();\x0d\n    if (options?.signal?.aborted) {\x0d\n      abort();\x0d\n    }\x0d\n\x0d\n    options?.signal?.addEventListener('abort'\x2C abort);\x0d\n\x0d\n    let next;\x0d\n    let resume;\x0d\n    let done = false;\x0d\n\x0d\n    function onDone() {\x0d\n      done = true;\x0d\n    }\x0d\n\x0d\n    async function pump() {\x0d\n      try {\x0d\n        for await (let val of stream) {\x0d\n          if (done) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            val = fn(val\x2C signalOpt);\x0d\n          } catch (err) {\x0d\n            val = PromiseReject(err);\x0d\n          }\x0d\n\x0d\n          if (val === kEmpty) {\x0d\n            continue;\x0d\n          }\x0d\n\x0d\n          if (typeof val?.catch === 'function') {\x0d\n            val.catch(onDone);\x0d\n          }\x0d\n\x0d\n          queue.push(val);\x0d\n          if (next) {\x0d\n            next();\x0d\n            next = null;\x0d\n          }\x0d\n\x0d\n          if (!done && queue.length && queue.length >= concurrency) {\x0d\n            await new Promise((resolve) => {\x0d\n              resume = resolve;\x0d\n            });\x0d\n          }\x0d\n        }\x0d\n        queue.push(kEof);\x0d\n      } catch (err) {\x0d\n        const val = PromiseReject(err);\x0d\n        PromisePrototypeThen(val\x2C undefined\x2C onDone);\x0d\n        queue.push(val);\x0d\n      } finally {\x0d\n        done = true;\x0d\n        if (next) {\x0d\n          next();\x0d\n          next = null;\x0d\n        }\x0d\n        options?.signal?.removeEventListener('abort'\x2C abort);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    pump();\x0d\n\x0d\n    try {\x0d\n      while (true) {\x0d\n        while (queue.length > 0) {\x0d\n          const val = await queue[0];\x0d\n\x0d\n          if (val === kEof) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          if (val !== kEmpty) {\x0d\n            yield val;\x0d\n          }\x0d\n\x0d\n          queue.shift();\x0d\n          if (resume) {\x0d\n            resume();\x0d\n            resume = null;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        await new Promise((resolve) => {\x0d\n          next = resolve;\x0d\n        });\x0d\n      }\x0d\n    } finally {\x0d\n      ac.abort();\x0d\n\x0d\n      done = true;\x0d\n      if (resume) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction asIndexedPairs(options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return async function* asIndexedPairs() {\x0d\n    let index = 0;\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError({ cause: options.signal.reason });\x0d\n      }\x0d\n      yield [index++\x2C val];\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nasync function some(fn\x2C options = undefined) {\x0d\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nasync function every(fn\x2C options = undefined) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\x0d\n  return !(await some.call(this\x2C async (...args) => {\x0d\n    return !(await fn(...args));\x0d\n  }\x2C options));\x0d\n}\x0d\n\x0d\nasync function find(fn\x2C options) {\x0d\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\x0d\n    return result;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nasync function forEach(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function forEachFn(value\x2C options) {\x0d\n    await fn(value\x2C options);\x0d\n    return kEmpty;\x0d\n  }\x0d\n  // eslint-disable-next-line no-unused-vars\x0d\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\x0d\n}\x0d\n\x0d\nfunction filter(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function filterFn(value\x2C options) {\x0d\n    if (await fn(value\x2C options)) {\x0d\n      return value;\x0d\n    }\x0d\n    return kEmpty;\x0d\n  }\x0d\n  return map.call(this\x2C filterFn\x2C options);\x0d\n}\x0d\n\x0d\n// Specific to provide better error to reduce since the argument is only\x0d\n// missing if the stream has no items in it - but the code is still appropriate\x0d\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\x0d\n  constructor() {\x0d\n    super('reduce');\x0d\n    this.message = 'Reduce of an empty stream requires an initial value';\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function reduce(reducer\x2C initialValue\x2C options) {\x0d\n  if (typeof reducer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let hasInitialValue = arguments.length > 1;\x0d\n  if (options?.signal?.aborted) {\x0d\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    this.once('error'\x2C () => {}); // The error is already propagated\x0d\n    await finished(this.destroy(err));\x0d\n    throw err;\x0d\n  }\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  if (options?.signal) {\x0d\n    const opts = { once: true\x2C [kWeakHandler]: this };\x0d\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\x0d\n  }\x0d\n  let gotAnyItemFromStream = false;\x0d\n  try {\x0d\n    for await (const value of this) {\x0d\n      gotAnyItemFromStream = true;\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (!hasInitialValue) {\x0d\n        initialValue = value;\x0d\n        hasInitialValue = true;\x0d\n      } else {\x0d\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\x0d\n      }\x0d\n    }\x0d\n    if (!gotAnyItemFromStream && !hasInitialValue) {\x0d\n      throw new ReduceAwareErrMissingArgs();\x0d\n    }\x0d\n  } finally {\x0d\n    ac.abort();\x0d\n  }\x0d\n  return initialValue;\x0d\n}\x0d\n\x0d\nasync function toArray(options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  const result = [];\x0d\n  for await (const val of this) {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    }\x0d\n    ArrayPrototypePush(result\x2C val);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction flatMap(fn\x2C options) {\x0d\n  const values = map.call(this\x2C fn\x2C options);\x0d\n  return async function* flatMap() {\x0d\n    for await (const val of values) {\x0d\n      yield* val;\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction toIntegerOrInfinity(number) {\x0d\n  // We coerce here to align with the spec\x0d\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\x0d\n  number = Number(number);\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (number < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\x0d\n  }\x0d\n  return number;\x0d\n}\x0d\n\x0d\nfunction drop(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* drop() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- <= 0) {\x0d\n        yield val;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction take(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* take() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- > 0) {\x0d\n        yield val;\x0d\n      } else {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nmodule.exports.streamReturningOperators = {\x0d\n  asIndexedPairs\x2C\x0d\n  drop\x2C\x0d\n  filter\x2C\x0d\n  flatMap\x2C\x0d\n  map\x2C\x0d\n  take\x2C\x0d\n  compose\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.promiseReturningOperators = {\x0d\n  every\x2C\x0d\n  forEach\x2C\x0d\n  reduce\x2C\x0d\n  toArray\x2C\x0d\n  some\x2C\x0d\n  find\x2C\x0d\n};\x0d\n
code-source-info,0x38242aee33e,398,0,10533,C0O0C4O10533,,
code-creation,JS,10,339861,0x38242aeee06,504, node:internal/streams/operators:1:1,0x38242aee2b8,~
code-source-info,0x38242aeee
code-creation,Eval,10,340765,0x38242af0a56,5, node:internal/abort_controller:1:1,0x38242af0590,~
script-source,399,node:internal/abort_controller,'use strict';\x0d\n\x0d\n// Modeled very closely on the AbortController implementation\x0d\n// in https://github.com/mysticatea/abort-controller (MIT license)\x0d\n\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  WeakRef\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  defineEventHandler\x2C\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kWeakHandler\x2C\x0d\n} = require('internal/event_target');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\n\x0d\nconst {\x0d\n  clearTimeout\x2C\x0d\n  setTimeout\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst {\x0d\n  messaging_deserialize_symbol: kDeserialize\x2C\x0d\n  messaging_transfer_symbol: kTransfer\x2C\x0d\n  messaging_transfer_list_symbol: kTransferList\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nlet _MessageChannel;\x0d\nlet makeTransferable;\x0d\n\x0d\n// Loading the MessageChannel and makeTransferable have to be done lazily\x0d\n// because otherwise we'll end up with a require cycle that ends up with\x0d\n// an incomplete initialization of abort_controller.\x0d\n\x0d\nfunction lazyMessageChannel() {\x0d\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\x0d\n  return new _MessageChannel();\x0d\n}\x0d\n\x0d\nfunction lazyMakeTransferable(obj) {\x0d\n  makeTransferable ??=\x0d\n    require('internal/worker/js_transferable').makeTransferable;\x0d\n  return makeTransferable(obj);\x0d\n}\x0d\n\x0d\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\x0d\nconst timeOutSignals = new SafeSet();\x0d\n\x0d\nconst kAborted = Symbol('kAborted');\x0d\nconst kReason = Symbol('kReason');\x0d\nconst kCloneData = Symbol('kCloneData');\x0d\nconst kTimeout = Symbol('kTimeout');\x0d\nconst kMakeTransferable = Symbol('kMakeTransferable');\x0d\n\x0d\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\x0d\n  if (depth < 0)\x0d\n    return self;\x0d\n\x0d\n  const opts = ObjectAssign({}\x2C options\x2C {\x0d\n    depth: options.depth === null ? null : options.depth - 1\x2C\x0d\n  });\x0d\n\x0d\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n}\x0d\n\x0d\nfunction validateThisAbortSignal(obj) {\x0d\n  if (obj?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_THIS('AbortSignal');\x0d\n}\x0d\n\x0d\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\x0d\n// presence of the timer alone to keep the AbortSignal from being garbage\x0d\n// collected if it otherwise no longer accessible. We also don't want the\x0d\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\x0d\n// the AbortSignal in a WeakRef and have the setTimeout callback close\x0d\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\x0d\n// the created timer object. Separately\x2C we add the signal to a\x0d\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\x0d\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\x0d\n  const timeout = setTimeout(() => {\x0d\n    const signal = weakRef.deref();\x0d\n    if (signal !== undefined) {\x0d\n      timeOutSignals.delete(signal);\x0d\n      abortSignal(\x0d\n        signal\x2C\x0d\n        new DOMException(\x0d\n          'The operation was aborted due to timeout'\x2C\x0d\n          'TimeoutError'));\x0d\n    }\x0d\n  }\x2C delay);\x0d\n  timeout.unref();\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nclass AbortSignal extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get aborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return !!this[kAborted];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get reason() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return this[kReason];\x0d\n  }\x0d\n\x0d\n  throwIfAborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    if (this[kAborted]) {\x0d\n      throw this[kReason];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      aborted: this.aborted\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} reason\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static abort(\x0d\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    return createAbortSignal({ aborted: true\x2C reason });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} delay\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static timeout(delay) {\x0d\n    validateUint32(delay\x2C 'delay'\x2C false);\x0d\n    const signal = createAbortSignal();\x0d\n    signal[kTimeout] = true;\x0d\n    clearTimeoutRegistry.register(\x0d\n      signal\x2C\x0d\n      setWeakAbortSignalTimeout(new WeakRef(signal)\x2C delay));\x0d\n    return signal;\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n    if (this[kTimeout] &&\x0d\n        type === 'abort' &&\x0d\n        !this.aborted &&\x0d\n        !weak &&\x0d\n        size === 1) {\x0d\n      // If this is a timeout signal\x2C and we're adding a non-weak abort\x0d\n      // listener\x2C then we don't want it to be gc'd while the listener\x0d\n      // is attached and the timer still hasn't fired. So\x2C we retain a\x0d\n      // strong ref that is held for as long as the listener is registered.\x0d\n      timeOutSignals.add(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\x0d\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\x0d\n    if (this[kTimeout] && type === 'abort' && size === 0) {\x0d\n      timeOutSignals.delete(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    validateThisAbortSignal(this);\x0d\n    const aborted = this.aborted;\x0d\n    if (aborted) {\x0d\n      const reason = this.reason;\x0d\n      return {\x0d\n        data: { aborted\x2C reason }\x2C\x0d\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const { port1\x2C port2 } = this[kCloneData];\x0d\n    this[kCloneData] = undefined;\x0d\n\x0d\n    this.addEventListener('abort'\x2C () => {\x0d\n      port1.postMessage(this.reason);\x0d\n      port1.close();\x0d\n    }\x2C { once: true });\x0d\n\x0d\n    return {\x0d\n      data: { port: port2 }\x2C\x0d\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    if (!this.aborted) {\x0d\n      const { port1\x2C port2 } = lazyMessageChannel();\x0d\n      port1.unref();\x0d\n      port2.unref();\x0d\n      this[kCloneData] = {\x0d\n        port1\x2C\x0d\n        port2\x2C\x0d\n      };\x0d\n      return [port2];\x0d\n    }\x0d\n    return [];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\x0d\n    if (aborted) {\x0d\n      this[kAborted] = aborted;\x0d\n      this[kReason] = reason;\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    port.onmessage = ({ data }) => {\x0d\n      abortSignal(this\x2C data);\x0d\n      port.close();\x0d\n      port.onmessage = undefined;\x0d\n    };\x0d\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\x0d\n    // The unref() has to be called *after* setting the onmessage handler.\x0d\n    port.unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClonedAbortSignal() {\x0d\n  return createAbortSignal({ transferable: true });\x0d\n}\x0d\nClonedAbortSignal.prototype[kDeserialize] = () => {};\x0d\n\x0d\nObjectDefineProperties(AbortSignal.prototype\x2C {\x0d\n  aborted: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortSignal'\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   aborted? : boolean\x2C\x0d\n *   reason? : any\x2C\x0d\n *   transferable? : boolean\x0d\n * }} [init]\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction createAbortSignal(init = kEmptyObject) {\x0d\n  const {\x0d\n    aborted = false\x2C\x0d\n    reason = undefined\x2C\x0d\n    transferable = false\x2C\x0d\n  } = init;\x0d\n  const signal = new EventTarget();\x0d\n  ObjectSetPrototypeOf(signal\x2C AbortSignal.prototype);\x0d\n  signal[kAborted] = aborted;\x0d\n  signal[kReason] = reason;\x0d\n  return transferable ? lazyMakeTransferable(signal) : signal;\x0d\n}\x0d\n\x0d\nfunction abortSignal(signal\x2C reason) {\x0d\n  if (signal[kAborted]) return;\x0d\n  signal[kAborted] = true;\x0d\n  signal[kReason] = reason;\x0d\n  const event = new Event('abort'\x2C {\x0d\n    [kTrustEvent]: true\x2C\x0d\n  });\x0d\n  signal.dispatchEvent(event);\x0d\n}\x0d\n\x0d\nclass AbortController {\x0d\n  #signal;\x0d\n\x0d\n  /**\x0d\n   * @type {AbortSignal}\x0d\n   */\x0d\n  get signal() {\x0d\n    this.#signal ??= createAbortSignal();\x0d\n    return this.#signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} reason\x0d\n   */\x0d\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    abortSignal(this.#signal ??= createAbortSignal()\x2C reason);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      signal: this.signal\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  static [kMakeTransferable]() {\x0d\n    const controller = new AbortController();\x0d\n    controller.#signal = createAbortSignal({ transferable: true });\x0d\n    return controller;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\x0d\n * @param {AbortSignal} signal\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction transferableAbortSignal(signal) {\x0d\n  if (signal?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  return lazyMakeTransferable(signal);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an AbortController with a transferable AbortSignal\x0d\n */\x0d\nfunction transferableAbortController() {\x0d\n  return AbortController[kMakeTransferable]();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {AbortSignal} signal\x0d\n * @param {any} resource\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nasync function aborted(signal\x2C resource) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateObject(resource\x2C 'resource'\x2C { nullable: false\x2C allowFunction: true\x2C allowArray: true });\x0d\n  if (signal.aborted)\x0d\n    return PromiseResolve();\x0d\n  const abortPromise = createDeferredPromise();\x0d\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C { [kWeakHandler]: resource\x2C once: true });\x0d\n  return abortPromise.promise;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(AbortController.prototype\x2C {\x0d\n  signal: kEnumerableProperty\x2C\x0d\n  abort: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortController'\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortController\x2C\x0d\n  AbortSignal\x2C\x0d\n  ClonedAbortSignal\x2C\x0d\n  aborted\x2C\x0d\n  transferableAbortSignal\x2C\x0d\n  transferableAbortController\x2C\x0d\n};\x0d\n
code-source-info,0x38242af0a56,399,0,10535,C0O0C4O10535,,
code-creation,JS,10,341322,0x38242af22e6,975, node:internal/abort_controller:1:1,0x38242af09d0,~
code-source-info,0x38242af22e
code-creation,JS,10,341440,0x38242af289e,10,<instance_members_initializer> node:internal/abort_controller:317:1,0x38242af1438,~
code-source-info,0x38242af289e,399,8231,8914,C4O8258C9O8914,,
code-creation,JS,10,341601,0x38242af3a26,27,SafeFinalizationRegistry node:internal/per_context/primordials:435:16,0x2f9728b8780,~
code-source-info,0x38242af3a26,6,12842,12887,C3O12862C5O12862C11O12862C26O12886,,
code-creation,JS,10,341804,0x38242af40ae,155,defineEventHandler node:internal/event_target:1049:28,0x1c416d8ab58,~
script-source,43,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateAbortSignal\x2C validateObject\x2C validateString\x2C validateInternalField } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('kHandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x2C\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nconst isTrustedDescriptor = {\x0d\n  __proto__: null\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: isTrusted\x2C\x0d\n};\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C isTrustedDescriptor);\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {boolean} [bubbles]\x0d\n   * @param {boolean} [cancelable]\x0d\n   */\x0d\n  initEvent(type\x2C bubbles = false\x2C cancelable = false) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n\x0d\n    if (this[kIsBeingDispatched]) {\x0d\n      return;\x0d\n    }\x0d\n    this[kType] = `${type}`;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#cancelable = !!cancelable;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.#cancelable || !this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    initEvent: kEnumerableProperty\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x2C\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\nconst kFlagOnce = 1 << 0;\x0d\nconst kFlagCapture = 1 << 1;\x0d\nconst kFlagPassive = 1 << 2;\x0d\nconst kFlagNodeStyle = 1 << 3;\x0d\nconst kFlagWeak = 1 << 4;\x0d\nconst kFlagRemoved = 1 << 5;\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n\x0d\n    let flags = 0b0;\x0d\n    if (once)\x0d\n      flags |= kFlagOnce;\x0d\n    if (capture)\x0d\n      flags |= kFlagCapture;\x0d\n    if (passive)\x0d\n      flags |= kFlagPassive;\x0d\n    if (isNodeStyleListener)\x0d\n      flags |= kFlagNodeStyle;\x0d\n    if (weak)\x0d\n      flags |= kFlagWeak;\x0d\n    this.flags = flags;\x0d\n\x0d\n    this.removed = false;\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get once() {\x0d\n    return Boolean(this.flags & kFlagOnce);\x0d\n  }\x0d\n  get capture() {\x0d\n    return Boolean(this.flags & kFlagCapture);\x0d\n  }\x0d\n  get passive() {\x0d\n    return Boolean(this.flags & kFlagPassive);\x0d\n  }\x0d\n  get isNodeStyleListener() {\x0d\n    return Boolean(this.flags & kFlagNodeStyle);\x0d\n  }\x0d\n  get weak() {\x0d\n    return Boolean(this.flags & kFlagWeak);\x0d\n  }\x0d\n  get removed() {\x0d\n    return Boolean(this.flags & kFlagRemoved);\x0d\n  }\x0d\n  set removed(value) {\x0d\n    if (value)\x0d\n      this.flags |= kFlagRemoved;\x0d\n    else\x0d\n      this.flags &= ~kFlagRemoved;\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n  self[kHandlers] = new SafeMap();\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 1)\x0d\n      throw new ERR_MISSING_ARGS('event');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name\x2C event = name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  const propName = `on${name}`;\x0d\n  function get() {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    return this[kHandlers]?.get(event)?.handler ?? null;\x0d\n  }\x0d\n  ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `get ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  function set(value) {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    let wrappedHandler = this[kHandlers]?.get(event);\x0d\n    if (wrappedHandler) {\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size--;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kRemoveListener](size\x2C event\x2C wrappedHandler.handler\x2C false);\x0d\n      }\x0d\n      wrappedHandler.handler = value;\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size++;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kNewListener](size\x2C event\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      wrappedHandler = makeEventHandler(value);\x0d\n      this.addEventListener(event\x2C wrappedHandler);\x0d\n    }\x0d\n    this[kHandlers].set(event\x2C wrappedHandler);\x0d\n  }\x0d\n  ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `set ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(emitter\x2C propName\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get\x2C\x0d\n    set\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  const propertiesValues = ObjectValues(protoProps);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x38242af40ae,43,27904,29388,C0O27904C24O27928C36O28024C41O28029C46O28183C56O28204C66O28260C77O28183C82O29146C92O29167C102O29223C113O29146C118O29247C125O29277C132O29316C138O29326C148O29247C154O29387,,
tick,0x7ff77747e5d0,344242,0,0x0,3,0x7ff777ca8e40,0x38242af25d8,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aeeea0,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aed06b,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aea34a,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae541c,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae2be9,0x7ff6f83840eb,0x38242ae25e2,0x38242ad45a9,0xde6be17c95,0x38242ae2292,0x38242ae2106,0x38242adea99,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff77747e5d0,344283,0,0x0,3,0x7ff777ca8e40,0x38242af25d8,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aeeea0,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aed06b,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aea34a,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae541c,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae2be9,0x7ff6f83840eb,0x38242ae25e2,0x38242ad45a9,0xde6be17c95,0x38242ae2292,0x38242ae2106,0x38242adea99,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,Eval,10,344745,0x38242af7156,5, node:internal/streams/end-of-stream:1:1,0x38242af6e30,~
script-source,400,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateBoolean\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { Promise\x2C PromisePrototypeThen } = primordials;\x0d\n\x0d\nconst {\x0d\n  isClosed\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  willEmitClose: _willEmitClose\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nfunction eos(stream\x2C options\x2C callback) {\x0d\n  if (arguments.length === 2) {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  } else if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  } else {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n\x0d\n  callback = once(callback);\x0d\n\x0d\n  if (isReadableStream(stream) || isWritableStream(stream)) {\x0d\n    return eosWeb(stream\x2C options\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!isNodeStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n\x0d\n  const readable = options.readable ?? isReadableNodeStream(stream);\x0d\n  const writable = options.writable ?? isWritableNodeStream(stream);\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  const onlegacyfinish = () => {\x0d\n    if (!stream.writable) {\x0d\n      onfinish();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // TODO (ronag): Improve soft detection to include core modules and\x0d\n  // common ecosystem modules that do properly emit 'close' but fail\x0d\n  // this generic check.\x0d\n  let willEmitClose = (\x0d\n    _willEmitClose(stream) &&\x0d\n    isReadableNodeStream(stream) === readable &&\x0d\n    isWritableNodeStream(stream) === writable\x0d\n  );\x0d\n\x0d\n  let writableFinished = isWritableFinished(stream\x2C false);\x0d\n  const onfinish = () => {\x0d\n    writableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.readable || readable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!readable || readableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  let readableFinished = isReadableFinished(stream\x2C false);\x0d\n  const onend = () => {\x0d\n    readableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.writable || writable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!writable || writableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const onerror = (err) => {\x0d\n    callback.call(stream\x2C err);\x0d\n  };\x0d\n\x0d\n  let closed = isClosed(stream);\x0d\n\x0d\n  const onclose = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\x0d\n      if (!isReadableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n    if (writable && !writableFinished) {\x0d\n      if (!isWritableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onclosed = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onrequest = () => {\x0d\n    stream.req.on('finish'\x2C onfinish);\x0d\n  };\x0d\n\x0d\n  if (isRequest(stream)) {\x0d\n    stream.on('complete'\x2C onfinish);\x0d\n    if (!willEmitClose) {\x0d\n      stream.on('abort'\x2C onclose);\x0d\n    }\x0d\n    if (stream.req) {\x0d\n      onrequest();\x0d\n    } else {\x0d\n      stream.on('request'\x2C onrequest);\x0d\n    }\x0d\n  } else if (writable && !wState) { // legacy streams\x0d\n    stream.on('end'\x2C onlegacyfinish);\x0d\n    stream.on('close'\x2C onlegacyfinish);\x0d\n  }\x0d\n\x0d\n  // Not all streams will emit 'close' after 'aborted'.\x0d\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\x0d\n    stream.on('aborted'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  stream.on('end'\x2C onend);\x0d\n  stream.on('finish'\x2C onfinish);\x0d\n  if (options.error !== false) {\x0d\n    stream.on('error'\x2C onerror);\x0d\n  }\x0d\n  stream.on('close'\x2C onclose);\x0d\n\x0d\n  if (closed) {\x0d\n    process.nextTick(onclose);\x0d\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\x0d\n    if (!willEmitClose) {\x0d\n      process.nextTick(onclosed);\x0d\n    }\x0d\n  } else if (\x0d\n    !readable &&\x0d\n    (!willEmitClose || isReadable(stream)) &&\x0d\n    (writableFinished || isWritable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if (\x0d\n    !writable &&\x0d\n    (!willEmitClose || isWritable(stream)) &&\x0d\n    (readableFinished || isReadable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if ((rState && stream.req && stream.aborted)) {\x0d\n    process.nextTick(onclosed);\x0d\n  }\x0d\n\x0d\n  const cleanup = () => {\x0d\n    callback = nop;\x0d\n    stream.removeListener('aborted'\x2C onclose);\x0d\n    stream.removeListener('complete'\x2C onfinish);\x0d\n    stream.removeListener('abort'\x2C onclose);\x0d\n    stream.removeListener('request'\x2C onrequest);\x0d\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onlegacyfinish);\x0d\n    stream.removeListener('close'\x2C onlegacyfinish);\x0d\n    stream.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onend);\x0d\n    stream.removeListener('error'\x2C onerror);\x0d\n    stream.removeListener('close'\x2C onclose);\x0d\n  };\x0d\n\x0d\n  if (options.signal && !closed) {\x0d\n    const abort = () => {\x0d\n      // Keep it because cleanup removes it.\x0d\n      const endCallback = callback;\x0d\n      cleanup();\x0d\n      endCallback.call(\x0d\n        stream\x2C\x0d\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        options.signal.removeEventListener('abort'\x2C abort);\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n      options.signal.addEventListener('abort'\x2C abort);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return cleanup;\x0d\n}\x0d\n\x0d\nfunction eosWeb(stream\x2C options\x2C callback) {\x0d\n  let isAborted = false;\x0d\n  let abort = nop;\x0d\n  if (options.signal) {\x0d\n    abort = () => {\x0d\n      isAborted = true;\x0d\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        options.signal.removeEventListener('abort'\x2C abort);\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n      options.signal.addEventListener('abort'\x2C abort);\x0d\n    }\x0d\n  }\x0d\n  const resolverFn = (...args) => {\x0d\n    if (!isAborted) {\x0d\n      process.nextTick(() => callback.apply(stream\x2C args));\x0d\n    }\x0d\n  };\x0d\n  PromisePrototypeThen(\x0d\n    stream[kIsClosedPromise].promise\x2C\x0d\n    resolverFn\x2C\x0d\n    resolverFn\x2C\x0d\n  );\x0d\n  return nop;\x0d\n}\x0d\n\x0d\nfunction finished(stream\x2C opts) {\x0d\n  let autoCleanup = false;\x0d\n  if (opts === null) {\x0d\n    opts = kEmptyObject;\x0d\n  }\x0d\n  if (opts?.cleanup) {\x0d\n    validateBoolean(opts.cleanup\x2C 'cleanup');\x0d\n    autoCleanup = opts.cleanup;\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\x0d\n      if (autoCleanup) {\x0d\n        cleanup();\x0d\n      }\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve();\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = eos;\x0d\nmodule.exports.finished = finished;\x0d\n
code-source-info,0x38242af7156,400,0,8534,C0O0C4O8534,,
code-creation,JS,10,345256,0x38242af748e,322, node:internal/streams/end-of-stream:1:1,0x38242af70d0,~
code-source-info,0x38242af748e,400,0,8534,C0O0C110O180C113O180C118O153C124O168C129O220C135O245C141O325C144O325C149O297C155O314C161O449C164O449C169O363C175O387C181O408C187O427C193O492C199O501C205O852C208O852C213O553C219O566C225O581C231O606C237O627C243O650C249O672C255O687C261O712C267O733C273O756C279O778C285O810C291O829C297O1003C301O1003C303O8474C305O8489C309O8504C316O8521C321O8533,,
code-creation,Eval,10,345616,0x38242af8806,5, node:internal/streams/utils:1:1,0x38242af8590,~
script-source,401,node:internal/streams/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kDestroyed = Symbol('kDestroyed');\x0d\nconst kIsErrored = Symbol('kIsErrored');\x0d\nconst kIsReadable = Symbol('kIsReadable');\x0d\nconst kIsDisturbed = Symbol('kIsDisturbed');\x0d\n\x0d\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise');\x0d\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction');\x0d\n\x0d\nfunction isReadableNodeStream(obj\x2C strict = false) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.pipe === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (\x0d\n      !strict ||\x0d\n      (typeof obj.pause === 'function' && typeof obj.resume === 'function')\x0d\n    ) &&\x0d\n    (!obj._writableState || obj._readableState?.readable !== false) && // Duplex\x0d\n    (!obj._writableState || obj._readableState) // Writable has .pipe.\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.write === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (!obj._readableState || obj._writableState?.writable !== false) // Duplex\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDuplexNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    (typeof obj.pipe === 'function' && obj._readableState) &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    typeof obj.write === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isNodeStream(obj) {\x0d\n  return (\x0d\n    obj &&\x0d\n    (\x0d\n      obj._readableState ||\x0d\n      obj._writableState ||\x0d\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\x0d\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function')\x0d\n    )\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.pipeThrough === 'function' &&\x0d\n    typeof obj.getReader === 'function' &&\x0d\n    typeof obj.cancel === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.getWriter === 'function' &&\x0d\n    typeof obj.abort === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isTransformStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.readable === 'object' &&\x0d\n    typeof obj.writable === 'object'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWebStream(obj) {\x0d\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);\x0d\n}\x0d\n\x0d\nfunction isIterable(obj\x2C isAsync) {\x0d\n  if (obj == null) return false;\x0d\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function';\x0d\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function';\x0d\n  return typeof obj[SymbolAsyncIterator] === 'function' ||\x0d\n    typeof obj[SymbolIterator] === 'function';\x0d\n}\x0d\n\x0d\nfunction isDestroyed(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n  return !!(stream.destroyed || stream[kDestroyed] || state?.destroyed);\x0d\n}\x0d\n\x0d\n// Have been end():d.\x0d\nfunction isWritableEnded(stream) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableEnded === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.ended !== 'boolean') return null;\x0d\n  return wState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'finish'.\x0d\nfunction isWritableFinished(stream\x2C strict) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableFinished === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.finished !== 'boolean') return null;\x0d\n  return !!(\x0d\n    wState.finished ||\x0d\n    (strict === false && wState.ended === true && wState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\n// Have been push(null):d.\x0d\nfunction isReadableEnded(stream) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  if (stream.readableEnded === true) return true;\x0d\n  const rState = stream._readableState;\x0d\n  if (!rState || rState.errored) return false;\x0d\n  if (typeof rState?.ended !== 'boolean') return null;\x0d\n  return rState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'end'.\x0d\nfunction isReadableFinished(stream\x2C strict) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  const rState = stream._readableState;\x0d\n  if (rState?.errored) return false;\x0d\n  if (typeof rState?.endEmitted !== 'boolean') return null;\x0d\n  return !!(\x0d\n    rState.endEmitted ||\x0d\n    (strict === false && rState.ended === true && rState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadable(stream) {\x0d\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable];\x0d\n  if (typeof stream?.readable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isReadableNodeStream(stream) &&\x0d\n    stream.readable &&\x0d\n    !isReadableFinished(stream);\x0d\n}\x0d\n\x0d\nfunction isWritable(stream) {\x0d\n  if (typeof stream?.writable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isWritableNodeStream(stream) &&\x0d\n    stream.writable &&\x0d\n    !isWritableEnded(stream);\x0d\n}\x0d\n\x0d\nfunction isFinished(stream\x2C opts) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (isDestroyed(stream)) {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (opts?.readable !== false && isReadable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (opts?.writable !== false && isWritable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isWritableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.writableErrored) {\x0d\n    return stream.writableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._writableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isReadableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.readableErrored) {\x0d\n    return stream.readableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._readableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isClosed(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (typeof stream.closed === 'boolean') {\x0d\n    return stream.closed;\x0d\n  }\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  if (\x0d\n    typeof wState?.closed === 'boolean' ||\x0d\n    typeof rState?.closed === 'boolean'\x0d\n  ) {\x0d\n    return wState?.closed || rState?.closed;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\x0d\n    return stream._closed;\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction isOutgoingMessage(stream) {\x0d\n  return (\x0d\n    typeof stream._closed === 'boolean' &&\x0d\n    typeof stream._defaultKeepAlive === 'boolean' &&\x0d\n    typeof stream._removedConnection === 'boolean' &&\x0d\n    typeof stream._removedContLen === 'boolean'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerResponse(stream) {\x0d\n  return (\x0d\n    typeof stream._sent100 === 'boolean' &&\x0d\n    isOutgoingMessage(stream)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerRequest(stream) {\x0d\n  return (\x0d\n    typeof stream._consuming === 'boolean' &&\x0d\n    typeof stream._dumped === 'boolean' &&\x0d\n    stream.req?.upgradeOrConnect === undefined\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction willEmitClose(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n\x0d\n  return (!state && isServerResponse(stream)) || !!(\x0d\n    state &&\x0d\n    state.autoDestroy &&\x0d\n    state.emitClose &&\x0d\n    state.closed === false\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDisturbed(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsDisturbed] ??\x0d\n    (stream.readableDidRead || stream.readableAborted)\x0d\n  ));\x0d\n}\x0d\n\x0d\nfunction isErrored(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsErrored] ??\x0d\n    stream.readableErrored ??\x0d\n    stream.writableErrored ??\x0d\n    stream._readableState?.errorEmitted ??\x0d\n    stream._writableState?.errorEmitted ??\x0d\n    stream._readableState?.errored ??\x0d\n    stream._writableState?.errored\x0d\n  ));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kDestroyed\x2C\x0d\n  isDisturbed\x2C\x0d\n  kIsDisturbed\x2C\x0d\n  isErrored\x2C\x0d\n  kIsErrored\x2C\x0d\n  isReadable\x2C\x0d\n  kIsReadable\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n  isClosed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isDuplexNodeStream\x2C\x0d\n  isFinished\x2C\x0d\n  isIterable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableEnded\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableEnded\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isServerRequest\x2C\x0d\n  isServerResponse\x2C\x0d\n  willEmitClose\x2C\x0d\n  isTransformStream\x2C\x0d\n};\x0d\n
code-source-info,0x38242af8806,401,0,8319,C0O0C4O8319,,
code-creation,JS,10,346016,0x38242af94b6,447, node:internal/streams/utils:1:1,0x38242af8780,~
code-source-info,0x38242af94b6,401,0,8319,C0O0C167O28C172O39C178O63C184O82C189O133C193O133C197O133C199O175C203O175C207O175C209O218C213O218C217O218C219O263C223O263C227O263C229O315C233O315C238O396C242O396C247O7704C255O7726C261O7741C267O7757C273O7774C279O7788C285O7803C291O7818C297O7834C303O7855C309O7884C315O7897C321O7913C327O7936C333O7951C339O7966C345O7991C351O8012C357O8032C363O8055C369O8077C375O8094C381O8110C387O8125C393O8150C399O8171C405O8191C411O8214C417O8236C423O8256C429O8277C435O8295C441O7719C446O8318,,
code-creation,Eval,10,346391,0x38242afb366,5, node:internal/streams/compose:1:1,0x38242afb140,~
script-source,402,node:internal/streams/compose,'use strict';\x0d\n\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isReadable\x2C\x0d\n  isWritable\x2C\x0d\n  isWebStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isReadableStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nmodule.exports = function compose(...streams) {\x0d\n  if (streams.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  if (streams.length === 1) {\x0d\n    return Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  const orgStreams = [...streams];\x0d\n\x0d\n  if (typeof streams[0] === 'function') {\x0d\n    streams[0] = Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  if (typeof streams[streams.length - 1] === 'function') {\x0d\n    const idx = streams.length - 1;\x0d\n    streams[idx] = Duplex.from(streams[idx]);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < streams.length; ++n) {\x0d\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\x0d\n      // TODO(ronag): Add checks for non streams.\x0d\n      continue;\x0d\n    }\x0d\n    if (\x0d\n      n < streams.length - 1 &&\x0d\n      !(\x0d\n        isReadable(streams[n]) ||\x0d\n        isReadableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be readable'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (\x0d\n      n > 0 &&\x0d\n      !(\x0d\n        isWritable(streams[n]) ||\x0d\n        isWritableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be writable'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n  let onfinish;\x0d\n  let onreadable;\x0d\n  let onclose;\x0d\n  let d;\x0d\n\x0d\n  function onfinished(err) {\x0d\n    const cb = onclose;\x0d\n    onclose = null;\x0d\n\x0d\n    if (cb) {\x0d\n      cb(err);\x0d\n    } else if (err) {\x0d\n      d.destroy(err);\x0d\n    } else if (!readable && !writable) {\x0d\n      d.destroy();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const head = streams[0];\x0d\n  const tail = pipeline(streams\x2C onfinished);\x0d\n\x0d\n  const writable = !!(\x0d\n    isWritable(head) ||\x0d\n    isWritableStream(head) ||\x0d\n    isTransformStream(head)\x0d\n  );\x0d\n  const readable = !!(\x0d\n    isReadable(tail) ||\x0d\n    isReadableStream(tail) ||\x0d\n    isTransformStream(tail)\x0d\n  );\x0d\n\x0d\n  // TODO(ronag): Avoid double buffering.\x0d\n  // Implement Writable/Readable/Duplex traits.\x0d\n  // See\x2C https://github.com/nodejs/node/pull/33515.\x0d\n  d = new Duplex({\x0d\n    // TODO (ronag): highWaterMark?\x0d\n    writableObjectMode: !!head?.writableObjectMode\x2C\x0d\n    readableObjectMode: !!tail?.writableObjectMode\x2C\x0d\n    writable\x2C\x0d\n    readable\x2C\x0d\n  });\x0d\n\x0d\n  if (writable) {\x0d\n    if (isNodeStream(head)) {\x0d\n      d._write = function(chunk\x2C encoding\x2C callback) {\x0d\n        if (head.write(chunk\x2C encoding)) {\x0d\n          callback();\x0d\n        } else {\x0d\n          ondrain = callback;\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = function(callback) {\x0d\n        head.end();\x0d\n        onfinish = callback;\x0d\n      };\x0d\n\x0d\n      head.on('drain'\x2C function() {\x0d\n        if (ondrain) {\x0d\n          const cb = ondrain;\x0d\n          ondrain = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n    } else if (isWebStream(head)) {\x0d\n      const writable = isTransformStream(head) ? head.writable : head;\x0d\n      const writer = writable.getWriter();\x0d\n\x0d\n      d._write = async function(chunk\x2C encoding\x2C callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.write(chunk).catch(() => {});\x0d\n          callback();\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = async function(callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.close().catch(() => {});\x0d\n          onfinish = callback;\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\x0d\n\x0d\n    eos(toRead\x2C () => {\x0d\n      if (onfinish) {\x0d\n        const cb = onfinish;\x0d\n        onfinish = null;\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (readable) {\x0d\n    if (isNodeStream(tail)) {\x0d\n      tail.on('readable'\x2C function() {\x0d\n        if (onreadable) {\x0d\n          const cb = onreadable;\x0d\n          onreadable = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n\x0d\n      tail.on('end'\x2C function() {\x0d\n        d.push(null);\x0d\n      });\x0d\n\x0d\n      d._read = function() {\x0d\n        while (true) {\x0d\n          const buf = tail.read();\x0d\n          if (buf === null) {\x0d\n            onreadable = d._read;\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!d.push(buf)) {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    } else if (isWebStream(tail)) {\x0d\n      const readable = isTransformStream(tail) ? tail.readable : tail;\x0d\n      const reader = readable.getReader();\x0d\n      d._read = async function() {\x0d\n        while (true) {\x0d\n          try {\x0d\n            const { value\x2C done } = await reader.read();\x0d\n\x0d\n            if (!d.push(value)) {\x0d\n              return;\x0d\n            }\x0d\n\x0d\n            if (done) {\x0d\n              d.push(null);\x0d\n              return;\x0d\n            }\x0d\n          } catch {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  d._destroy = function(err\x2C callback) {\x0d\n    if (!err && onclose !== null) {\x0d\n      err = new AbortError();\x0d\n    }\x0d\n\x0d\n    onreadable = null;\x0d\n    ondrain = null;\x0d\n    onfinish = null;\x0d\n\x0d\n    if (onclose === null) {\x0d\n      callback(err);\x0d\n    } else {\x0d\n      onclose = callback;\x0d\n      if (isNodeStream(tail)) {\x0d\n        destroyer(tail\x2C err);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  return d;\x0d\n};\x0d\n
code-source-info,0x38242afb366,402,0,5703,C0O0C4O5703,,
code-creation,JS,10,346679,0x38242afb55e,184, node:internal/streams/compose:1:1,0x38242afb2e0,~
code-source-info,0x38242afb55e,402,0,5703,C0O0C47O38C50O38C55O25C61O92C64O92C68O92C70O151C73O151C78O137C84O329C87O329C92O200C98O217C104O232C110O247C116O263C122O285C128O306C134O462C137O462C142O376C148O398C153O405C159O433C165O503C168O503C172O503C174O549C178O564C183O5702,,
code-creation,Eval,10,347064,0x38242afc6ce,5, node:internal/streams/pipeline:1:1,0x38242afc338,~
script-source,403,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Promise\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { once } = require('internal/util');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_RETURN_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_STREAM_DESTROYED\x2C\x0d\n    ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateAbortSignal\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isNodeStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableEnded\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst { AbortController } = require('internal/abort_controller');\x0d\n\x0d\nlet PassThrough;\x0d\nlet Readable;\x0d\n\x0d\nfunction destroyer(stream\x2C reading\x2C writing) {\x0d\n  let finished = false;\x0d\n  stream.on('close'\x2C () => {\x0d\n    finished = true;\x0d\n  });\x0d\n\x0d\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\x0d\n    finished = !err;\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    destroy: (err) => {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\x0d\n    }\x2C\x0d\n    cleanup\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction popCallback(streams) {\x0d\n  // Streams should never be an empty array. It should always contain at least\x0d\n  // a single stream. Therefore optimize for the average case instead of\x0d\n  // checking for length === 0 as well.\x0d\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\x0d\n  return streams.pop();\x0d\n}\x0d\n\x0d\nfunction makeAsyncIterable(val) {\x0d\n  if (isIterable(val)) {\x0d\n    return val;\x0d\n  } else if (isReadableNodeStream(val)) {\x0d\n    // Legacy streams are not Iterable.\x0d\n    return fromReadable(val);\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\x0d\n}\x0d\n\x0d\nasync function* fromReadable(val) {\x0d\n  if (!Readable) {\x0d\n    Readable = require('internal/streams/readable');\x0d\n  }\x0d\n\x0d\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\x0d\n}\x0d\n\x0d\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\x0d\n  let error;\x0d\n  let onresolve = null;\x0d\n\x0d\n  const resume = (err) => {\x0d\n    if (err) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (onresolve) {\x0d\n      const callback = onresolve;\x0d\n      onresolve = null;\x0d\n      callback();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const wait = () => new Promise((resolve\x2C reject) => {\x0d\n    if (error) {\x0d\n      reject(error);\x0d\n    } else {\x0d\n      onresolve = () => {\x0d\n        if (error) {\x0d\n          reject(error);\x0d\n        } else {\x0d\n          resolve();\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  });\x0d\n\x0d\n  writable.on('drain'\x2C resume);\x0d\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\x0d\n\x0d\n  try {\x0d\n    if (writable.writableNeedDrain) {\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    for await (const chunk of iterable) {\x0d\n      if (!writable.write(chunk)) {\x0d\n        await wait();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end) {\x0d\n      writable.end();\x0d\n    }\x0d\n\x0d\n    await wait();\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\x0d\n  } finally {\x0d\n    cleanup();\x0d\n    writable.off('drain'\x2C resume);\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\x0d\n  if (isTransformStream(writable)) {\x0d\n    writable = writable.writable;\x0d\n  }\x0d\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\x0d\n  const writer = writable.getWriter();\x0d\n  try {\x0d\n    for await (const chunk of readable) {\x0d\n      await writer.ready;\x0d\n      writer.write(chunk).catch(() => {});\x0d\n    }\x0d\n\x0d\n    await writer.ready;\x0d\n\x0d\n    if (end) {\x0d\n      await writer.close();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    try {\x0d\n      await writer.abort(err);\x0d\n      finish(err);\x0d\n    } catch (err) {\x0d\n      finish(err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\x0d\n}\x0d\n\x0d\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\x0d\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\x0d\n    streams = streams[0];\x0d\n  }\x0d\n\x0d\n  if (streams.length < 2) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  const outerSignal = opts?.signal;\x0d\n\x0d\n  // Need to cleanup event listeners if last stream is readable\x0d\n  // https://github.com/nodejs/node/issues/35452\x0d\n  const lastStreamCleanup = [];\x0d\n\x0d\n  validateAbortSignal(outerSignal\x2C 'options.signal');\x0d\n\x0d\n  function abort() {\x0d\n    finishImpl(new AbortError());\x0d\n  }\x0d\n\x0d\n  outerSignal?.addEventListener('abort'\x2C abort);\x0d\n\x0d\n  let error;\x0d\n  let value;\x0d\n  const destroys = [];\x0d\n\x0d\n  let finishCount = 0;\x0d\n\x0d\n  function finish(err) {\x0d\n    finishImpl(err\x2C --finishCount === 0);\x0d\n  }\x0d\n\x0d\n  function finishImpl(err\x2C final) {\x0d\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (!error && !final) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    while (destroys.length) {\x0d\n      destroys.shift()(error);\x0d\n    }\x0d\n\x0d\n    outerSignal?.removeEventListener('abort'\x2C abort);\x0d\n    ac.abort();\x0d\n\x0d\n    if (final) {\x0d\n      if (!error) {\x0d\n        lastStreamCleanup.forEach((fn) => fn());\x0d\n      }\x0d\n      process.nextTick(callback\x2C error\x2C value);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  for (let i = 0; i < streams.length; i++) {\x0d\n    const stream = streams[i];\x0d\n    const reading = i < streams.length - 1;\x0d\n    const writing = i > 0;\x0d\n    const end = reading || opts?.end !== false;\x0d\n    const isLastStream = i === streams.length - 1;\x0d\n\x0d\n    if (isNodeStream(stream)) {\x0d\n      if (end) {\x0d\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\x0d\n        destroys.push(destroy);\x0d\n\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Catch stream errors that occur after pipe/pump has completed.\x0d\n      function onError(err) {\x0d\n        if (\x0d\n          err &&\x0d\n          err.name !== 'AbortError' &&\x0d\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\x0d\n        ) {\x0d\n          finish(err);\x0d\n        }\x0d\n      }\x0d\n      stream.on('error'\x2C onError);\x0d\n      if (isReadable(stream) && isLastStream) {\x0d\n        lastStreamCleanup.push(() => {\x0d\n          stream.removeListener('error'\x2C onError);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (i === 0) {\x0d\n      if (typeof stream === 'function') {\x0d\n        ret = stream({ signal });\x0d\n        if (!isIterable(ret)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\x0d\n        }\x0d\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\x0d\n        ret = stream;\x0d\n      } else {\x0d\n        ret = Duplex.from(stream);\x0d\n      }\x0d\n    } else if (typeof stream === 'function') {\x0d\n      if (isTransformStream(ret)) {\x0d\n        ret = makeAsyncIterable(ret?.readable);\x0d\n      } else {\x0d\n        ret = makeAsyncIterable(ret);\x0d\n      }\x0d\n      ret = stream(ret\x2C { signal });\x0d\n\x0d\n      if (reading) {\x0d\n        if (!isIterable(ret\x2C true)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\x0d\n        }\x0d\n      } else {\x0d\n        if (!PassThrough) {\x0d\n          PassThrough = require('internal/streams/passthrough');\x0d\n        }\x0d\n\x0d\n        // If the last argument to pipeline is not a stream\x0d\n        // we must create a proxy stream so that pipeline(...)\x0d\n        // always returns a stream which can be further\x0d\n        // composed through `.pipe(stream)`.\x0d\n\x0d\n        const pt = new PassThrough({\x0d\n          objectMode: true\x2C\x0d\n        });\x0d\n\x0d\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\x0d\n        // second use.\x0d\n        const then = ret?.then;\x0d\n        if (typeof then === 'function') {\x0d\n          finishCount++;\x0d\n          then.call(ret\x2C\x0d\n                    (val) => {\x0d\n                      value = val;\x0d\n                      if (val != null) {\x0d\n                        pt.write(val);\x0d\n                      }\x0d\n                      if (end) {\x0d\n                        pt.end();\x0d\n                      }\x0d\n                      process.nextTick(finish);\x0d\n                    }\x2C (err) => {\x0d\n                      pt.destroy(err);\x0d\n                      process.nextTick(finish\x2C err);\x0d\n                    }\x2C\x0d\n          );\x0d\n        } else if (isIterable(ret\x2C true)) {\x0d\n          finishCount++;\x0d\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\x0d\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\x0d\n          const toRead = ret.readable || ret;\x0d\n          finishCount++;\x0d\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\x0d\n        } else {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\x0d\n        }\x0d\n\x0d\n        ret = pt;\x0d\n\x0d\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\x0d\n        destroys.push(destroy);\x0d\n        if (isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n    } else if (isNodeStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount += 2;\x0d\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C { end });\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\x0d\n        const toRead = ret.readable || ret;\x0d\n        finishCount++;\x0d\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else if (isWebStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isReadableStream(ret) || isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isTransformStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else {\x0d\n      ret = Duplex.from(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted || outerSignal?.aborted) {\x0d\n    process.nextTick(abort);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction pipe(src\x2C dst\x2C finish\x2C { end }) {\x0d\n  let ended = false;\x0d\n  dst.on('close'\x2C () => {\x0d\n    if (!ended) {\x0d\n      // Finish if the destination closes before the source has completed.\x0d\n      finish(new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n  });\x0d\n\x0d\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\x0d\n\x0d\n  if (end) {\x0d\n    // Compat. Before node v10.12.0 stdio used to throw an error so\x0d\n    // pipe() did/does not end() stdio destinations.\x0d\n    // Now they allow it but "secretly" don't close the underlying fd.\x0d\n\x0d\n    function endFn() {\x0d\n      ended = true;\x0d\n      dst.end();\x0d\n    }\x0d\n\x0d\n    if (isReadableEnded(src)) { // End the destination if the source has already ended.\x0d\n      process.nextTick(endFn);\x0d\n    } else {\x0d\n      src.once('end'\x2C endFn);\x0d\n    }\x0d\n  } else {\x0d\n    finish();\x0d\n  }\x0d\n\x0d\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\x0d\n    const rState = src._readableState;\x0d\n    if (\x0d\n      err &&\x0d\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\x0d\n      (rState && rState.ended && !rState.errored && !rState.errorEmitted)\x0d\n    ) {\x0d\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\x0d\n      // this is on the readable side 'end' should still be emitted if the\x0d\n      // stream has been ended and no error emitted. This should be allowed in\x0d\n      // favor of backwards compatibility. Since the stream is piped to a\x0d\n      // destination this should not result in any observable difference.\x0d\n      // We don't need to check if this is a writable premature close since\x0d\n      // eos will only fail with premature close on the reading side for\x0d\n      // duplex streams.\x0d\n      src\x0d\n        .once('end'\x2C finish)\x0d\n        .once('error'\x2C finish);\x0d\n    } else {\x0d\n      finish(err);\x0d\n    }\x0d\n  });\x0d\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\x0d\n}\x0d\n\x0d\nmodule.exports = { pipelineImpl\x2C pipeline };\x0d\n
code-source-info,0x38242afc6ce,403,0,12653,C0O0C4O12653,,
code-creation,JS,10,347959,0x38242afcc3e,406, node:internal/streams/pipeline:1:1,0x38242afc648,~
code-source-info,0x38242afcc3e,403,0,12653,C0O0C147O144C153O161C159O173C165O227C171O227C175O227C177O288C183O288C188O279C194O335C200O335C204O335C206O388C212O388C216O388C218O635C224O635C229O436C235O466C240O473C246O500C252O531C258O554C264O581C270O618C276O724C282O724C287O677C293O698C299O923C305O923C310O770C316O785C322O800C328O825C334O842C340O864C346O880C352O901C358O987C364O987C369O967C375O1032C376O1032C378O1050C379O1050C381O12607C388O12626C394O12640C400O12622C405O12652,,
code-creation,Eval,10,348469,0x38242afe47e,5, node:internal/streams/destroy:1:1,0x38242afe1e8,~
script-source,404,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  kDestroyed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isFinished\x2C\x0d\n  isServerRequest\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if (w?.destroyed || r?.destroyed) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w.destroyed = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.destroyed = true;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if (!s.constructed) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w.closed = true;\x0d\n    }\x0d\n    if (r) {\x0d\n      r.closed = true;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    self._destroy(err || null\x2C onDestroy);\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w.closeEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.closeEmitted = true;\x0d\n  }\x0d\n\x0d\n  if (w?.emitClose || r?.emitClose) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w?.errorEmitted || r?.errorEmitted) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.errorEmitted = true;\x0d\n  }\x0d\n  if (r) {\x0d\n    r.errorEmitted = true;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = r.readable === false;\x0d\n    r.endEmitted = r.readable === false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.ended = w.writable === false;\x0d\n    w.ending = w.writable === false;\x0d\n    w.finished = w.writable === false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (w?.destroyed || r?.destroyed) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (r?.autoDestroy || w?.autoDestroy)\x0d\n    stream.destroy(err);\x0d\n  else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = false;\x0d\n  }\x0d\n  if (w) {\x0d\n    w.constructed = false;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r.constructed = true;\x0d\n    }\x0d\n    if (w) {\x0d\n      w.constructed = true;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      process.nextTick(emitConstructNT\x2C stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    stream._construct((err) => {\x0d\n      process.nextTick(onConstruct\x2C err);\x0d\n    });\x0d\n  } catch (err) {\x0d\n    process.nextTick(onConstruct\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitConstructNT(stream) {\x0d\n  stream.emit(kConstruct);\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream?.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nfunction emitCloseLegacy(stream) {\x0d\n  stream.emit('close');\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseLegacy(stream\x2C err) {\x0d\n  stream.emit('error'\x2C err);\x0d\n  process.nextTick(emitCloseLegacy\x2C stream);\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream || isDestroyed(stream)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!err && !isFinished(stream)) {\x0d\n    err = new AbortError();\x0d\n  }\x0d\n\x0d\n  // TODO: Remove isRequest branches.\x0d\n  if (isServerRequest(stream)) {\x0d\n    stream.socket = null;\x0d\n    stream.destroy(err);\x0d\n  } else if (isRequest(stream)) {\x0d\n    stream.abort();\x0d\n  } else if (isRequest(stream.req)) {\x0d\n    stream.req.abort();\x0d\n  } else if (typeof stream.destroy === 'function') {\x0d\n    stream.destroy(err);\x0d\n  } else if (typeof stream.close === 'function') {\x0d\n    // TODO: Don't lose err?\x0d\n    stream.close();\x0d\n  } else if (err) {\x0d\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\x0d\n  } else {\x0d\n    process.nextTick(emitCloseLegacy\x2C stream);\x0d\n  }\x0d\n\x0d\n  if (!stream.destroyed) {\x0d\n    stream[kDestroyed] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x2C\x0d\n};\x0d\n
code-source-info,0x38242afe47e,404,0,7162,C0O0C4O7162,,
code-creation,JS,10,349111,0x38242afeba6,251, node:internal/streams/destroy:1:1,0x38242afe3f8,~
code-source-info,0x38242afeba6,404,0,7162,C0O0C122O114C125O114C130O28C136O58C141O65C147O97C153O154C158O260C161O260C166O192C172O207C178O223C184O238C190O315C193O315C197O315C199O355C202O355C206O355C208O7065C215O7087C221O7101C227O7115C233O7127C239O7141C245O7080C250O7161,,
new,MemoryChunk,0x2173c740000,262144
code-creation,Eval,10,349616,0x2173c74115e,5, node:internal/streams/duplex:1:1,0x38242affe80,~
script-source,405,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  Readable.call(this\x2C options);\x0d\n  Writable.call(this\x2C options);\x0d\n\x0d\n  if (options) {\x0d\n    this.allowHalfOpen = options.allowHalfOpen !== false;\x0d\n\x0d\n    if (options.readable === false) {\x0d\n      this._readableState.readable = false;\x0d\n      this._readableState.ended = true;\x0d\n      this._readableState.endEmitted = true;\x0d\n    }\x0d\n\x0d\n    if (options.writable === false) {\x0d\n      this._writableState.writable = false;\x0d\n      this._writableState.ending = true;\x0d\n      this._writableState.ended = true;\x0d\n      this._writableState.finished = true;\x0d\n    }\x0d\n  } else {\x0d\n    this.allowHalfOpen = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nDuplex.fromWeb = function(pair\x2C options) {\x0d\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\x0d\n    pair\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nDuplex.toWeb = function(duplex) {\x0d\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\x0d\n};\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x2173c74115e,405,0,5085,C0O0C4O5085,,
code-creation,JS,10,350006,0x2173c7417d6,604, node:internal/streams/duplex:1:1,0x38242afffb0,~
code-source-info,0x2173c7417d
code-creation,Eval,10,351356,0x2173c74315e,5, node:internal/streams/readable:1:1,0x2173c742c88,~
script-source,406,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst BufferList = require('internal/streams/buffer_list');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst kPaused = Symbol('kPaused');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream.\x0d\n  // These options can be provided separately as readableXXX and writableXXX.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.readableObjectMode);\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // A linked list is used to store data chunks instead of an array because the\x0d\n  // linked list can remove elements from the beginning faster than\x0d\n  // array.shift().\x0d\n  this.buffer = new BufferList();\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n  this.flowing = null;\x0d\n  this.ended = false;\x0d\n  this.endEmitted = false;\x0d\n  this.reading = false;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  this.needReadable = false;\x0d\n  this.emittedReadable = false;\x0d\n  this.readableListening = false;\x0d\n  this.resumeScheduled = false;\x0d\n  this[kPaused] = null;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n  this.multiAwaitDrain = false;\x0d\n\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  this.readingMore = false;\x0d\n\x0d\n  this.dataEmitted = false;\x0d\n\x0d\n  this.decoder = null;\x0d\n  this.encoding = null;\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the ReadableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = this instanceof Stream.Duplex;\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal && !isDuplex)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    if (this._readableState.needReadable) {\x0d\n      maybeReadMore(this\x2C this._readableState);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  return readableAddChunk(this\x2C chunk\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nfunction readableAddChunk(stream\x2C chunk\x2C encoding\x2C addToFront) {\x0d\n  debug('readableAddChunk'\x2C chunk);\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  let err;\x0d\n  if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      encoding = encoding || state.defaultEncoding;\x0d\n      if (state.encoding !== encoding) {\x0d\n        if (addToFront && state.encoding) {\x0d\n          // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n          // the string in the BufferList with the state encoding.\x0d\n          chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n        } else {\x0d\n          chunk = Buffer.from(chunk\x2C encoding);\x0d\n          encoding = '';\x0d\n        }\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = '';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = '';\x0d\n    } else if (chunk != null) {\x0d\n      err = new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    errorOrDestroy(stream\x2C err);\x0d\n  } else if (chunk === null) {\x0d\n    state.reading = false;\x0d\n    onEofChunk(stream\x2C state);\x0d\n  } else if (state.objectMode || (chunk && chunk.length > 0)) {\x0d\n    if (addToFront) {\x0d\n      if (state.endEmitted)\x0d\n        errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n      else if (state.destroyed || state.errored)\x0d\n        return false;\x0d\n      else\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n    } else if (state.ended) {\x0d\n      errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    } else if (state.destroyed || state.errored) {\x0d\n      return false;\x0d\n    } else {\x0d\n      state.reading = false;\x0d\n      if (state.decoder && !encoding) {\x0d\n        chunk = state.decoder.write(chunk);\x0d\n        if (state.objectMode || chunk.length !== 0)\x0d\n          addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n        else\x0d\n          maybeReadMore(stream\x2C state);\x0d\n      } else {\x0d\n        addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n      }\x0d\n    }\x0d\n  } else if (!addToFront) {\x0d\n    state.reading = false;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n  }\x0d\n\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return !state.ended &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if (state.flowing && state.length === 0 && !state.sync &&\x0d\n      stream.listenerCount('data') > 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n\x0d\n    state.dataEmitted = true;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += state.objectMode ? 1 : chunk.length;\x0d\n    if (addToFront)\x0d\n      state.buffer.unshift(chunk);\x0d\n    else\x0d\n      state.buffer.push(chunk);\x0d\n\x0d\n    if (state.needReadable)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return state[kPaused] === true || state.flowing === false;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  this._readableState.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  this._readableState.encoding = this._readableState.decoder.encoding;\x0d\n\x0d\n  const buffer = this._readableState.buffer;\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of buffer) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  buffer.clear();\x0d\n  if (content !== '')\x0d\n    buffer.push(content);\x0d\n  this._readableState.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n > MAX_HWM) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && state.ended))\x0d\n    return 0;\x0d\n  if (state.objectMode)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if (state.flowing && state.length)\x0d\n      return state.buffer.first().length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return state.ended ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state.emittedReadable = false;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      state.needReadable &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       state.ended)) {\x0d\n    debug('read: emitReadable'\x2C state.length\x2C state.ended);\x0d\n    if (state.length === 0 && state.ended)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && state.ended) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = state.needReadable;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if (state.ended || state.reading || state.destroyed || state.errored ||\x0d\n      !state.constructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state.reading = true;\x0d\n    state.sync = true;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // Call internal read method\x0d\n    try {\x0d\n      this._read(state.highWaterMark);\x0d\n    } catch (err) {\x0d\n      errorOrDestroy(this\x2C err);\x0d\n    }\x0d\n\x0d\n    state.sync = false;\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if (!state.reading)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state.needReadable = state.length <= state.highWaterMark;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if (state.multiAwaitDrain) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if (!state.ended)\x0d\n      state.needReadable = true;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && state.ended)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null && !state.errorEmitted && !state.closeEmitted) {\x0d\n    state.dataEmitted = true;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if (state.ended) return;\x0d\n  if (state.decoder) {\x0d\n    const chunk = state.decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += state.objectMode ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state.ended = true;\x0d\n\x0d\n  if (state.sync) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state.needReadable = false;\x0d\n    state.emittedReadable = true;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable'\x2C state.needReadable\x2C state.emittedReadable);\x0d\n  state.needReadable = false;\x0d\n  if (!state.emittedReadable) {\x0d\n    debug('emitReadable'\x2C state.flowing);\x0d\n    state.emittedReadable = true;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_'\x2C state.destroyed\x2C state.length\x2C state.ended);\x0d\n  if (!state.destroyed && !state.errored && (state.length || state.ended)) {\x0d\n    stream.emit('readable');\x0d\n    state.emittedReadable = false;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state.needReadable =\x0d\n    !state.flowing &&\x0d\n    !state.ended &&\x0d\n    state.length <= state.highWaterMark;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if (!state.readingMore && state.constructed) {\x0d\n    state.readingMore = true;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while (!state.reading && !state.ended &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          (state.flowing && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state.readingMore = false;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if (!state.multiAwaitDrain) {\x0d\n      state.multiAwaitDrain = true;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if (state.endEmitted)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state.multiAwaitDrain = false;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    if (state.flowing) {\x0d\n      pause();\x0d\n    }\x0d\n  } else if (!state.flowing) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if (state.multiAwaitDrain) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      src.listenerCount('data')) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state.readableListening = this.listenerCount('readable') > 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if (state.flowing !== false)\x0d\n      this.resume();\x0d\n  } else if (ev === 'readable') {\x0d\n    if (!state.endEmitted && !state.readableListening) {\x0d\n      state.readableListening = state.needReadable = true;\x0d\n      state.flowing = false;\x0d\n      state.emittedReadable = false;\x0d\n      debug('on readable'\x2C state.length\x2C state.reading);\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if (!state.reading) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n  state.readableListening = self.listenerCount('readable') > 0;\x0d\n\x0d\n  if (state.resumeScheduled && state[kPaused] === false) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state.flowing = true;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if (self.listenerCount('data') > 0) {\x0d\n    self.resume();\x0d\n  } else if (!state.readableListening) {\x0d\n    state.flowing = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if (!state.flowing) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state.flowing = !state.readableListening;\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kPaused] = false;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if (!state.resumeScheduled) {\x0d\n    state.resumeScheduled = true;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C state.reading);\x0d\n  if (!state.reading) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state.resumeScheduled = false;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if (state.flowing && !state.reading)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  debug('call pause flowing=%j'\x2C this._readableState.flowing);\x0d\n  if (this._readableState.flowing !== false) {\x0d\n    debug('pause');\x0d\n    this._readableState.flowing = false;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  this._readableState[kPaused] = true;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow'\x2C state.flowing);\x0d\n  while (state.flowing && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stream.on('readable'\x2C next);\x0d\n\x0d\n  let error;\x0d\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\x0d\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\x0d\n    callback();\x0d\n    callback = nop;\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (error) {\x0d\n        throw error;\x0d\n      } else if (error === null) {\x0d\n        return;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    error = aggregateTwoErrors(error\x2C err);\x0d\n    throw error;\x0d\n  } finally {\x0d\n    if (\x0d\n      (error || options?.destroyOnReturn !== false) &&\x0d\n      (error === undefined || stream._readableState.autoDestroy)\x0d\n    ) {\x0d\n      destroyImpl.destroyer(stream\x2C null);\x0d\n    } else {\x0d\n      stream.off('readable'\x2C next);\x0d\n      cleanup();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.closed : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPaused] !== false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPaused] = !!value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let ret;\x0d\n  if (state.objectMode)\x0d\n    ret = state.buffer.shift();\x0d\n  else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if (state.decoder)\x0d\n      ret = state.buffer.join('');\x0d\n    else if (state.buffer.length === 1)\x0d\n      ret = state.buffer.first();\x0d\n    else\x0d\n      ret = state.buffer.concat(state.length);\x0d\n    state.buffer.clear();\x0d\n  } else {\x0d\n    // read part of list.\x0d\n    ret = state.buffer.consume(n\x2C state.decoder);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable'\x2C state.endEmitted);\x0d\n  if (!state.endEmitted) {\x0d\n    state.ended = true;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT'\x2C state.endEmitted\x2C state.length);\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if (!state.errored && !state.closeEmitted &&\x0d\n      !state.endEmitted && state.length === 0) {\x0d\n    state.endEmitted = true;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nReadable.fromWeb = function(readableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamReadableFromReadableStream(\x0d\n    readableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.toWeb = function(streamReadable\x2C options) {\x0d\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\x0d\n    streamReadable\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x2C\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x2173c74315e,406,0,42993,C0O0C4O42993,,
code-creation,JS,10,353320,0x2173c74596e,1438, node:internal/streams/readable:1:1,0x2173c7430d8,~
code-source-info,0x2173c74596e
code-creation,Eval,10,353822,0x2173c7499e6,5, node:internal/streams/legacy:1:1,0x2173c749870,~
script-source,407,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x2173c7499e6,407,0,3048,C0O0C4O3048,,
code-creation,JS,10,353982,0x2173c749c6e,106, node:internal/streams/legacy:1:1,0x2173c749960,~
code-source-info,0x2173c749c6e,407,0,3048,C0O0C22O28C28O45C33O99C36O99C40O99C42O201C50O215C55O173C60O228C63O228C68O272C77O287C81O3001C88O3020C94O3028C100O3016C105O3047,,
code-creation,Eval,10,354163,0x2173c74a806,5, node:internal/streams/add-abort-signal:1:1,0x2173c74a640,~
script-source,408,node:internal/streams/add-abort-signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { ERR_INVALID_ARG_TYPE } = codes;\x0d\n\x0d\n// This method is inlined here for readable-stream\x0d\n// It also does not allow for signal to not exist on the stream\x0d\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\x0d\nconst validateAbortSignal = (signal\x2C name) => {\x0d\n  if (typeof signal !== 'object' ||\x0d\n       !('aborted' in signal)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\x0d\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\x0d\n    return stream;\x0d\n  }\x0d\n  const onAbort = isNodeStream(stream) ?\x0d\n    () => {\x0d\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    } :\x0d\n    () => {\x0d\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    };\x0d\n  if (signal.aborted) {\x0d\n    onAbort();\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAbort);\x0d\n    eos(stream\x2C () => signal.removeEventListener('abort'\x2C onAbort));\x0d\n  }\x0d\n  return stream;\x0d\n};\x0d\n
code-source-info,0x2173c74a806,408,0,1645,C0O0C4O1645,,
code-creation,JS,10,354264,0x2173c74aa6e,130, node:internal/streams/add-abort-signal:1:1,0x2173c74a780,~
code-source-info,0x2173c74aa6e,408,0,1645,C0O0C30O55C33O55C38O28C44O43C49O161C52O161C57O97C63O114C69O130C75O211C78O211C82O211C84O263C90O511C94O511C96O680C99O687C108O710C112O1034C115O1041C124O1074C129O1644,,
code-creation,Eval,10,354500,0x2173c74b326,5, node:internal/streams/buffer_list:1:1,0x2173c74b190,~
script-source,409,node:internal/streams/buffer_list,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolIterator\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nmodule.exports = class BufferList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  push(v) {\x0d\n    const entry = { data: v\x2C next: null };\x0d\n    if (this.length > 0)\x0d\n      this.tail.next = entry;\x0d\n    else\x0d\n      this.head = entry;\x0d\n    this.tail = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  unshift(v) {\x0d\n    const entry = { data: v\x2C next: this.head };\x0d\n    if (this.length === 0)\x0d\n      this.tail = entry;\x0d\n    this.head = entry;\x0d\n    ++this.length;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    if (this.length === 0)\x0d\n      return;\x0d\n    const ret = this.head.data;\x0d\n    if (this.length === 1)\x0d\n      this.head = this.tail = null;\x0d\n    else\x0d\n      this.head = this.head.next;\x0d\n    --this.length;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  clear() {\x0d\n    this.head = this.tail = null;\x0d\n    this.length = 0;\x0d\n  }\x0d\n\x0d\n  join(s) {\x0d\n    if (this.length === 0)\x0d\n      return '';\x0d\n    let p = this.head;\x0d\n    let ret = '' + p.data;\x0d\n    while ((p = p.next) !== null)\x0d\n      ret += s + p.data;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  concat(n) {\x0d\n    if (this.length === 0)\x0d\n      return Buffer.alloc(0);\x0d\n    const ret = Buffer.allocUnsafe(n >>> 0);\x0d\n    let p = this.head;\x0d\n    let i = 0;\x0d\n    while (p) {\x0d\n      TypedArrayPrototypeSet(ret\x2C p.data\x2C i);\x0d\n      i += p.data.length;\x0d\n      p = p.next;\x0d\n    }\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes or characters from the buffered data.\x0d\n  consume(n\x2C hasStrings) {\x0d\n    const data = this.head.data;\x0d\n    if (n < data.length) {\x0d\n      // `slice` is the same for buffers and strings.\x0d\n      const slice = data.slice(0\x2C n);\x0d\n      this.head.data = data.slice(n);\x0d\n      return slice;\x0d\n    }\x0d\n    if (n === data.length) {\x0d\n      // First chunk is a perfect match.\x0d\n      return this.shift();\x0d\n    }\x0d\n    // Result spans more than one buffer.\x0d\n    return hasStrings ? this._getString(n) : this._getBuffer(n);\x0d\n  }\x0d\n\x0d\n  first() {\x0d\n    return this.head.data;\x0d\n  }\x0d\n\x0d\n  *[SymbolIterator]() {\x0d\n    for (let p = this.head; p; p = p.next) {\x0d\n      yield p.data;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of characters from the buffered data.\x0d\n  _getString(n) {\x0d\n    let ret = '';\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const str = p.data;\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n      } else {\x0d\n        if (n === str.length) {\x0d\n          ret += str;\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          ret += StringPrototypeSlice(str\x2C 0\x2C n);\x0d\n          this.head = p;\x0d\n          p.data = StringPrototypeSlice(str\x2C n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Consumes a specified amount of bytes from the buffered data.\x0d\n  _getBuffer(n) {\x0d\n    const ret = Buffer.allocUnsafe(n);\x0d\n    const retLen = n;\x0d\n    let p = this.head;\x0d\n    let c = 0;\x0d\n    do {\x0d\n      const buf = p.data;\x0d\n      if (n > buf.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n        n -= buf.length;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C buf\x2C retLen - n);\x0d\n          ++c;\x0d\n          if (p.next)\x0d\n            this.head = p.next;\x0d\n          else\x0d\n            this.head = this.tail = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C\x0d\n                                 new Uint8Array(buf.buffer\x2C buf.byteOffset\x2C n)\x2C\x0d\n                                 retLen - n);\x0d\n          this.head = p;\x0d\n          p.data = buf.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      ++c;\x0d\n    } while ((p = p.next) !== null);\x0d\n    this.length -= c;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2173c74b326,409,0,4241,C0O0C4O4241,,
code-creation,JS,10,354727,0x2173c74be0e,175, node:internal/streams/buffer_list:1:1,0x2173c74b2a0,~
code-source-info,0x2173c74be0e,409,0,4241,C0O0C20O28C26O53C31O72C37O99C43O151C46O151C51O140C57O191C60O191C65O179C71O228C120O2154C143O4040C147O4040C169O243C174O4240,,
code-creation,Eval,10,354887,0x2173c74ca7e,5, node:internal/streams/state:1:1,0x2173c74c8e8,~
script-source,410,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? 16 : 16 * 1024;\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n};\x0d\n
code-source-info,0x2173c74ca7e,410,0,939,C0O0C4O939,,
code-creation,JS,10,354952,0x2173c74cc86,87, node:internal/streams/state:1:1,0x2173c74c9f8,~
code-source-info,0x2173c74cc86,410,0,939,C0O0C31O28C37O42C43O114C46O114C51O140C56O88C62O866C69O888C75O909C81O881C86O938,,
code-creation,Eval,10,355171,0x2173c74d3a6,5, node:string_decoder:1:1,0x2173c74d130,~
script-source,411,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x2C\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n *\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n *\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  if (!this[kNativeDecoder]) {\x0d\n    throw new ERR_INVALID_THIS('StringDecoder');\x0d\n  }\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x2173c74d3a6,411,0,5396,C0O0C4O5396,,
code-creation,JS,10,355431,0x2173c74d936,388, node:string_decoder:1:1,0x2173c74d320,~
code-source-info,0x2173c74d
code-creation,Eval,10,355725,0x2173c74ea0e,5, node:internal/streams/from:1:1,0x2173c74e858,~
script-source,412,node:internal/streams/from,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction from(Readable\x2C iterable\x2C opts) {\x0d\n  let iterator;\x0d\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\x0d\n    return new Readable({\x0d\n      objectMode: true\x2C\x0d\n      ...opts\x2C\x0d\n      read() {\x0d\n        this.push(iterable);\x0d\n        this.push(null);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  let isAsync;\x0d\n  if (iterable && iterable[SymbolAsyncIterator]) {\x0d\n    isAsync = true;\x0d\n    iterator = iterable[SymbolAsyncIterator]();\x0d\n  } else if (iterable && iterable[SymbolIterator]) {\x0d\n    isAsync = false;\x0d\n    iterator = iterable[SymbolIterator]();\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\x0d\n  }\x0d\n\x0d\n  const readable = new Readable({\x0d\n    objectMode: true\x2C\x0d\n    highWaterMark: 1\x2C\x0d\n    // TODO(ronag): What options should be allowed?\x0d\n    ...opts\x2C\x0d\n  });\x0d\n\x0d\n  // Flag to protect against _read\x0d\n  // being called before last iteration completion.\x0d\n  let reading = false;\x0d\n\x0d\n  readable._read = function() {\x0d\n    if (!reading) {\x0d\n      reading = true;\x0d\n      next();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  readable._destroy = function(error\x2C cb) {\x0d\n    PromisePrototypeThen(\x0d\n      close(error)\x2C\x0d\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\x0d\n      (e) => process.nextTick(cb\x2C e || error)\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  async function close(error) {\x0d\n    const hadError = (error !== undefined) && (error !== null);\x0d\n    const hasThrow = typeof iterator.throw === 'function';\x0d\n    if (hadError && hasThrow) {\x0d\n      const { value\x2C done } = await iterator.throw(error);\x0d\n      await value;\x0d\n      if (done) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    if (typeof iterator.return === 'function') {\x0d\n      const { value } = await iterator.return();\x0d\n      await value;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function next() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = isAsync ?\x0d\n          await iterator.next() :\x0d\n          iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n        } else {\x0d\n          const res = (value &&\x0d\n            typeof value.then === 'function') ?\x0d\n            await value :\x0d\n            value;\x0d\n          if (res === null) {\x0d\n            reading = false;\x0d\n            throw new ERR_STREAM_NULL_VALUES();\x0d\n          } else if (readable.push(res)) {\x0d\n            continue;\x0d\n          } else {\x0d\n            reading = false;\x0d\n          }\x0d\n        }\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  return readable;\x0d\n}\x0d\n\x0d\nmodule.exports = from;\x0d\n
code-source-info,0x2173c74ea0e,412,0,2727,C0O0C4O2727,,
code-creation,JS,10,355902,0x2173c74eb76,97, node:internal/streams/from:1:1,0x2173c74e988,~
code-source-info,0x2173c74eb76,412,0,2727,C0O0C32O28C38O53C44O77C50O131C53O131C58O120C64O218C67O218C72O244C77O164C83O189C89O2703C91O2718C96O2726,,
code-creation,Eval,10,356679,0x2173c7509c6,5, node:internal/streams/writable:1:1,0x2173c7505c0,~
script-source,413,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinished = Symbol('kOnFinished');\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Duplex streams are both readable and writable\x2C but share\x0d\n  // the same options object.\x0d\n  // However\x2C some cases require setting options to different\x0d\n  // values for the readable and the writable sides of the duplex stream\x2C\x0d\n  // e.g. options.readableObjectMode vs. options.writableObjectMode\x2C etc.\x0d\n  if (typeof isDuplex !== 'boolean')\x0d\n    isDuplex = stream instanceof Stream.Duplex;\x0d\n\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  this.objectMode = !!(options && options.objectMode);\x0d\n\x0d\n  if (isDuplex)\x0d\n    this.objectMode = this.objectMode ||\x0d\n      !!(options && options.writableObjectMode);\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  // if _final has been called.\x0d\n  this.finalCalled = false;\x0d\n\x0d\n  // drain event flag.\x0d\n  this.needDrain = false;\x0d\n  // At the start of calling end()\x0d\n  this.ending = false;\x0d\n  // When end() has been called\x2C and returned.\x0d\n  this.ended = false;\x0d\n  // When 'finish' is emitted.\x0d\n  this.finished = false;\x0d\n\x0d\n  // Has it been destroyed\x0d\n  this.destroyed = false;\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  const noDecode = !!(options && options.decodeStrings === false);\x0d\n  this.decodeStrings = !noDecode;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  this.defaultEncoding = (options && options.defaultEncoding) || 'utf8';\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  this.writing = false;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  this.sync = true;\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  this.bufferProcessing = false;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  this.writecb = null;\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  this.afterWriteTickInfo = null;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  this.constructed = true;\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  this.prefinished = false;\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  this.errorEmitted = false;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  this.emitClose = !options || options.emitClose !== false;\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  this.autoDestroy = !options || options.autoDestroy !== false;\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  this.errored = null;\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  this.closed = false;\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  this.closeEmitted = false;\x0d\n\x0d\n  this[kOnFinished] = [];\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state.buffered = [];\x0d\n  state.bufferedIndex = 0;\x0d\n  state.allBuffers = true;\x0d\n  state.allNoop = true;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return this.buffered.length - this.bufferedIndex;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction Writable(options) {\x0d\n  // Writable ctor is applied to Duplexes\x2C too.\x0d\n  // `realHasInstance` is necessary because using plain `instanceof`\x0d\n  // would return false\x2C as no `_writableState` property is attached.\x0d\n\x0d\n  // Trying to use the custom `instanceof` for Writable here will also break the\x0d\n  // Node.js LazyTransform implementation\x2C which has a non-trivial getter for\x0d\n  // `_writableState` that would lead to infinite recursion.\x0d\n\x0d\n  // Checking for a Stream.Duplex instance is faster here instead of inside\x0d\n  // the WritableState constructor\x2C at least with V8 6.5.\x0d\n  const isDuplex = (this instanceof Stream.Duplex);\x0d\n\x0d\n  if (!isDuplex && !FunctionPrototypeSymbolHasInstance(Writable\x2C this))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C isDuplex);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  destroyImpl.construct(this\x2C () => {\x0d\n    const state = this._writableState;\x0d\n\x0d\n    if (!state.writing) {\x0d\n      clearBuffer(this\x2C state);\x0d\n    }\x0d\n\x0d\n    finishMaybe(this\x2C state);\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = state.defaultEncoding;\x0d\n  } else {\x0d\n    if (!encoding)\x0d\n      encoding = state.defaultEncoding;\x0d\n    else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding))\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (typeof cb !== 'function')\x0d\n      cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  } else if (!state.objectMode) {\x0d\n    if (typeof chunk === 'string') {\x0d\n      if (state.decodeStrings !== false) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (state.ending) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  this._writableState.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.writing)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = state.objectMode ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  // stream._write resets state.length\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n  // We must ensure that previous needDrain will not be reset to false.\x0d\n  if (!ret)\x0d\n    state.needDrain = true;\x0d\n\x0d\n  if (state.writing || state.corked || state.errored || !state.constructed) {\x0d\n    state.buffered.push({ chunk\x2C encoding\x2C callback });\x0d\n    if (state.allBuffers && encoding !== 'buffer') {\x0d\n      state.allBuffers = false;\x0d\n    }\x0d\n    if (state.allNoop && callback !== nop) {\x0d\n      state.allNoop = false;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    state.writecb = callback;\x0d\n    state.writing = true;\x0d\n    state.sync = true;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state.sync = false;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && !state.errored && !state.destroyed;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  state.writecb = cb;\x0d\n  state.writing = true;\x0d\n  state.sync = true;\x0d\n  if (state.destroyed)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n  const sync = state.sync;\x0d\n  const cb = state.writecb;\x0d\n\x0d\n  if (typeof cb !== 'function') {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  state.writing = false;\x0d\n  state.writecb = null;\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (!state.errored) {\x0d\n      state.errored = er;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if (state.buffered.length > state.bufferedIndex) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (state.afterWriteTickInfo !== null &&\x0d\n          state.afterWriteTickInfo.cb === cb) {\x0d\n        state.afterWriteTickInfo.count++;\x0d\n      } else {\x0d\n        state.afterWriteTickInfo = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state.afterWriteTickInfo);\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state.afterWriteTickInfo = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  const needDrain = !state.ending && !stream.destroyed && state.length === 0 &&\x0d\n    state.needDrain;\x0d\n  if (needDrain) {\x0d\n    state.needDrain = false;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb(null);\x0d\n  }\x0d\n\x0d\n  if (state.destroyed) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  finishMaybe(stream\x2C state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if (state.writing) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n    const { chunk\x2C callback } = state.buffered[n];\x0d\n    const len = state.objectMode ? 1 : chunk.length;\x0d\n    state.length -= len;\x0d\n    callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](state.errored ?? new ERR_STREAM_DESTROYED('end'));\x0d\n  }\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if (state.corked ||\x0d\n      state.bufferProcessing ||\x0d\n      state.destroyed ||\x0d\n      !state.constructed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const { buffered\x2C bufferedIndex\x2C objectMode } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state.bufferProcessing = true;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = state.allNoop ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = state.allNoop && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = state.allBuffers;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && !state.writing);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state.bufferProcessing = false;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk !== null && chunk !== undefined) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if (state.corked) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if (!state.errored && !state.ending) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state.ending = true;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state.ended = true;\x0d\n  } else if (state.finished) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if (state.destroyed) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else if (state.finished) {\x0d\n      process.nextTick(cb\x2C null);\x0d\n    } else {\x0d\n      state[kOnFinished].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (state.ending &&\x0d\n          !state.destroyed &&\x0d\n          state.constructed &&\x0d\n          state.length === 0 &&\x0d\n          !state.errored &&\x0d\n          state.buffered.length === 0 &&\x0d\n          !state.finished &&\x0d\n          !state.writing &&\x0d\n          !state.errorEmitted &&\x0d\n          !state.closeEmitted);\x0d\n}\x0d\n\x0d\nfunction callFinal(stream\x2C state) {\x0d\n  let called = false;\x0d\n\x0d\n  function onFinish(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    state.pendingcb--;\x0d\n    if (err) {\x0d\n      const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n      for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n        onfinishCallbacks[i](err);\x0d\n      }\x0d\n      errorOrDestroy(stream\x2C err\x2C state.sync);\x0d\n    } else if (needFinish(state)) {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n      // Backwards compat. Don't check state.sync here.\x0d\n      // Some streams assume 'finish' will be emitted\x0d\n      // asynchronously relative to _final callback.\x0d\n      state.pendingcb++;\x0d\n      process.nextTick(finish\x2C stream\x2C state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.sync = true;\x0d\n  state.pendingcb++;\x0d\n\x0d\n  try {\x0d\n    stream._final(onFinish);\x0d\n  } catch (err) {\x0d\n    onFinish(err);\x0d\n  }\x0d\n\x0d\n  state.sync = false;\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if (!state.prefinished && !state.finalCalled) {\x0d\n    if (typeof stream._final === 'function' && !state.destroyed) {\x0d\n      state.finalCalled = true;\x0d\n      callFinal(stream\x2C state);\x0d\n    } else {\x0d\n      state.prefinished = true;\x0d\n      stream.emit('prefinish');\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0) {\x0d\n      if (sync) {\x0d\n        state.pendingcb++;\x0d\n        process.nextTick((stream\x2C state) => {\x0d\n          if (needFinish(state)) {\x0d\n            finish(stream\x2C state);\x0d\n          } else {\x0d\n            state.pendingcb--;\x0d\n          }\x0d\n        }\x2C stream\x2C state);\x0d\n      } else if (needFinish(state)) {\x0d\n        state.pendingcb++;\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state.finished = true;\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinished].splice(0);\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](null);\x0d\n  }\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if (state.autoDestroy) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.closed : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.destroyed && !w.errored &&\x0d\n        !w.ending && !w.ended;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.finished : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.objectMode : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.getBuffer();\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.ending : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const wState = this._writableState;\x0d\n      if (!wState) return false;\x0d\n      return !wState.destroyed && !wState.ending && wState.needDrain;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.corked : 0;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState && this._writableState.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._writableState ? this._writableState.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._writableState.writable !== false &&\x0d\n        (this._writableState.destroyed || this._writableState.errored) &&\x0d\n        !this._writableState.finished\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if (!state.destroyed &&\x0d\n    (state.bufferedIndex < state.buffered.length ||\x0d\n      state[kOnFinished].length)) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nWritable.fromWeb = function(writableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamWritableFromWritableStream(\x0d\n    writableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nWritable.toWeb = function(streamWritable) {\x0d\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\x0d\n};\x0d\n
code-source-info,0x2173c7509c6,413,0,26995,C0O0C4O26995,,
code-creation,JS,10,357969,0x2173c752496,1060, node:internal/streams/writable:1:1,0x2173c750940,~
code-source-info,0x2173c
code-creation,Eval,10,358459,0x2173c75701e,5, node:stream/promises:1:1,0x2173c756e78,~
script-source,414,node:stream/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePop\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\n\x0d\nrequire('stream');\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let signal;\x0d\n    let end;\x0d\n    const lastArg = streams[streams.length - 1];\x0d\n    if (lastArg && typeof lastArg === 'object' &&\x0d\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\x0d\n      const options = ArrayPrototypePop(streams);\x0d\n      signal = options.signal;\x0d\n      end = options.end;\x0d\n    }\x0d\n\x0d\n    pl(streams\x2C (err\x2C value) => {\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve(value);\x0d\n      }\x0d\n    }\x2C { signal\x2C end });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  finished\x2C\x0d\n  pipeline\x2C\x0d\n};\x0d\n
code-source-info,0x2173c75701e,414,0,961,C0O0C4O961,,
code-creation,JS,10,358528,0x2173c75719e,125, node:stream/promises:1:1,0x2173c756f98,~
code-source-info,0x2173c75719e,414,0,961,C0O0C28O28C34O50C40O141C43O141C48O91C54O106C60O123C66O208C69O208C74O201C80O268C83O268C88O255C93O314C96O314C100O911C107O933C113O946C119O926C124O960,,
code-creation,Eval,10,358801,0x2173c757a3e,5, node:internal/streams/transform:1:1,0x2173c757888,~
script-source,415,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a transform stream is a readable/writable stream where you do\x0d\n// something with the data.  Sometimes it's called a "filter"\x2C\x0d\n// but that's not a great name for it\x2C since that implies a thing where\x0d\n// some bits pass through\x2C and others are simply ignored.  (That would\x0d\n// be a valid example of a transform\x2C of course.)\x0d\n//\x0d\n// While the output is causally related to the input\x2C it's not a\x0d\n// necessarily symmetric or synchronous transformation.  For example\x2C\x0d\n// a zlib stream might take multiple plain-text writes()\x2C and then\x0d\n// emit a single compressed chunk some time in the future.\x0d\n//\x0d\n// Here's how this works:\x0d\n//\x0d\n// The Transform stream has all the aspects of the readable and writable\x0d\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\x0d\n// internally\x2C and returns false if there's a lot of pending writes\x0d\n// buffered up.  When you call read()\x2C that calls _read(n) until\x0d\n// there's enough pending readable data buffered up.\x0d\n//\x0d\n// In a transform stream\x2C the written data is placed in a buffer.  When\x0d\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\x0d\n// buffered _write cb's as it consumes chunks.  If consuming a single\x0d\n// written chunk would result in multiple output chunks\x2C then the first\x0d\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\x0d\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\x0d\n//\x0d\n// This way\x2C back-pressure is actually determined by the reading side\x2C\x0d\n// since _read has to be called to start processing a new chunk.  However\x2C\x0d\n// a pathological inflate type of transform can cause excessive buffering\x0d\n// here.  For example\x2C imagine a stream where every byte of input is\x0d\n// interpreted as an integer from 0-255\x2C and then results in that many\x0d\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\x0d\n// 1kb of data being output.  In this case\x2C you could write a very small\x0d\n// amount of input\x2C and end up with a very large amount of output.  In\x0d\n// such a pathological inflating mechanism\x2C there'd be no way to tell\x0d\n// the system to stop doing the transform.  A single 4MB write could\x0d\n// cause the system to run out of memory.\x0d\n//\x0d\n// However\x2C even in such a pathological case\x2C only a single written chunk\x0d\n// would be consumed\x2C and then the rest would wait (un-transformed) until\x0d\n// the results of the previous transformed chunk were consumed.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Transform;\x0d\nconst {\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { getHighWaterMark } = require('internal/streams/state');\x0d\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\x0d\nObjectSetPrototypeOf(Transform\x2C Duplex);\x0d\n\x0d\nconst kCallback = Symbol('kCallback');\x0d\n\x0d\nfunction Transform(options) {\x0d\n  if (!(this instanceof Transform))\x0d\n    return new Transform(options);\x0d\n\x0d\n  // TODO (ronag): This should preferably always be\x0d\n  // applied but would be semver-major. Or even better;\x0d\n  // make Transform a Readable with the Writable interface.\x0d\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\x0d\n  if (readableHighWaterMark === 0) {\x0d\n    // A Duplex will buffer both on the writable and readable side while\x0d\n    // a Transform just wants to buffer hwm number of elements. To avoid\x0d\n    // buffering twice we disable buffering on the writable side.\x0d\n    options = {\x0d\n      ...options\x2C\x0d\n      highWaterMark: null\x2C\x0d\n      readableHighWaterMark\x2C\x0d\n      // TODO (ronag): 0 is not optimal since we have\x0d\n      // a "bug" where we check needDrain before calling _write and not after.\x0d\n      // Refs: https://github.com/nodejs/node/pull/32887\x0d\n      // Refs: https://github.com/nodejs/node/pull/35941\x0d\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Duplex.call(this\x2C options);\x0d\n\x0d\n  // We have implemented the _read method\x2C and done the other things\x0d\n  // that Readable wants before the first _read call\x2C so unset the\x0d\n  // sync guard flag.\x0d\n  this._readableState.sync = false;\x0d\n\x0d\n  this[kCallback] = null;\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.transform === 'function')\x0d\n      this._transform = options.transform;\x0d\n\x0d\n    if (typeof options.flush === 'function')\x0d\n      this._flush = options.flush;\x0d\n  }\x0d\n\x0d\n  // When the writable side finishes\x2C then flush out anything remaining.\x0d\n  // Backwards compat. Some Transform streams incorrectly implement _final\x0d\n  // instead of or in addition to _flush. By using 'prefinish' instead of\x0d\n  // implementing _final we continue supporting this unfortunate use case.\x0d\n  this.on('prefinish'\x2C prefinish);\x0d\n}\x0d\n\x0d\nfunction final(cb) {\x0d\n  if (typeof this._flush === 'function' && !this.destroyed) {\x0d\n    this._flush((er\x2C data) => {\x0d\n      if (er) {\x0d\n        if (cb) {\x0d\n          cb(er);\x0d\n        } else {\x0d\n          this.destroy(er);\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (data != null) {\x0d\n        this.push(data);\x0d\n      }\x0d\n      this.push(null);\x0d\n      if (cb) {\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    this.push(null);\x0d\n    if (cb) {\x0d\n      cb();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish() {\x0d\n  if (this._final !== final) {\x0d\n    final.call(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nTransform.prototype._final = final;\x0d\n\x0d\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\x0d\n};\x0d\n\x0d\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\x0d\n  const rState = this._readableState;\x0d\n  const wState = this._writableState;\x0d\n  const length = rState.length;\x0d\n\x0d\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (val != null) {\x0d\n      this.push(val);\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      wState.ended || // Backwards compat.\x0d\n      length === rState.length || // Backwards compat.\x0d\n      rState.length < rState.highWaterMark\x0d\n    ) {\x0d\n      callback();\x0d\n    } else {\x0d\n      this[kCallback] = callback;\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\nTransform.prototype._read = function() {\x0d\n  if (this[kCallback]) {\x0d\n    const callback = this[kCallback];\x0d\n    this[kCallback] = null;\x0d\n    callback();\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2173c757a3e,415,0,7379,C0O0C4O7379,,
code-creation,JS,10,359157,0x2173c757df6,198, node:internal/streams/transform:1:1,0x2173c7579b8,~
code-source-info,0x2173c757df6,415,0,7379,C0O0C35O3574C40O3599C45O3628C47O3643C51O3701C54O3701C59O3727C64O3668C70O3751C73O3751C77O3751C79O3817C82O3817C87O3796C93O3853C96O3884C104O3902C109O3853C114O3915C120O3915C125O3977C128O3977C132O3977C134O6441C137O6451C144O6468C148O6480C151O6490C160O6511C164O6615C167O6625C176O6642C180O7217C183O7227C192O7243C197O7378,,
code-creation,Eval,10,359301,0x2173c758b46,5, node:internal/streams/passthrough:1:1,0x2173c7589e0,~
script-source,416,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a passthrough stream.\x0d\n// basically just the most minimal sort of Transform stream.\x0d\n// Every written chunk gets output as-is.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = PassThrough;\x0d\n\x0d\nconst Transform = require('internal/streams/transform');\x0d\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(PassThrough\x2C Transform);\x0d\n\x0d\nfunction PassThrough(options) {\x0d\n  if (!(this instanceof PassThrough))\x0d\n    return new PassThrough(options);\x0d\n\x0d\n  Transform.call(this\x2C options);\x0d\n}\x0d\n\x0d\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  cb(null\x2C chunk);\x0d\n};\x0d\n
code-source-info,0x2173c758b46,416,0,1809,C0O0C4O1809,,
code-creation,JS,10,359396,0x2173c758cde,84, node:internal/streams/passthrough:1:1,0x2173c758ac0,~
code-source-info,0x2173c758cde,416,0,1809,C0O0C14O1316C19O1359C21O1374C25O1410C28O1410C32O1410C34O1450C37O1483C45O1504C50O1450C55O1517C61O1517C66O1717C69O1729C78O1750C83O1808,,
tick,0x7ff777c68dca,359711,1,0x7ff7776556e0,6,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x38242aed35b,0x7ff6f83840eb,0x7ff6f8383d61,0x38242aea34a,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae541c,0x7ff6f83840eb,0x7ff6f8383d61,0x38242ae2be9,0x7ff6f83840eb,0x38242ae25e2,0x38242ad45a9,0xde6be17c95,0x38242ae2292,0x38242ae2106,0x38242adea99,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,Eval,10,360190,0x2173c75b25e,5, node:internal/error_serdes:1:1,0x2173c75af98,~
script-source,417,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = { __proto__: null };\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if ('value' in descriptor && typeof descriptor.value !== 'function') {\x0d\n      delete descriptor.get;\x0d\n      delete descriptor.set;\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x2C\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.concat([Buffer.from([kInspectedError])\x2C\x0d\n                        Buffer.from(inspect(error)\x2C 'utf8')]);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x2C\x0d\n      });\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError: {\x0d\n      const buf = Buffer.from(error.buffer\x2C\x0d\n                              error.byteOffset + 1\x2C\x0d\n                              error.byteLength - 1);\x0d\n      return buf.toString('utf8');\x0d\n    }\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0x2173c75b25e,417,0,4381,C0O0C4O4381,,
code-creation,JS,10,360454,0x2173c75b67e,335, node:internal/error_serdes:1:1,0x2173c75b1d8,~
code-source-info,0x2173c75b67e,417,0,4381,C0O0C100O32C106O32C111O49C115O32C117O70C123O96C128O106C133O120C139O146C145O163C151O180C157O205C163O240C169O270C175O295C180O310C186O338C191O353C196O372C201O384C207O406C212O422C217O436C222O492C223O492C225O522C227O522C229O550C231O550C233O571C240O576C246O583C252O594C258O606C264O616C270O629C276O645C282O571C284O691C287O703C294O691C299O691C301O2200C302O2200C304O2405C305O2405C307O3438C308O3438C310O4325C317O4344C323O4360C329O4340C334O4380,,
code-creation,Eval,10,360785,0x2173c75c746,5, node:diagnostics_channel:1:1,0x2173c75c4d8,~
script-source,418,node:diagnostics_channel,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { WeakReference } = internalBinding('util');\x0d\n\x0d\n// TODO(qard): should there be a C++ channel interface?\x0d\nclass ActiveChannel {\x0d\n  subscribe(subscription) {\x0d\n    validateFunction(subscription\x2C 'subscription');\x0d\n    ArrayPrototypePush(this._subscribers\x2C subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe(subscription) {\x0d\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\x0d\n    if (index === -1) return false;\x0d\n\x0d\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\x0d\n\x0d\n    // When there are no more active subscribers\x2C restore to fast prototype.\x0d\n    if (!this._subscribers.length) {\x0d\n      // eslint-disable-next-line no-use-before-define\x0d\n      ObjectSetPrototypeOf(this\x2C Channel.prototype);\x0d\n    }\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  publish(data) {\x0d\n    for (let i = 0; i < this._subscribers.length; i++) {\x0d\n      try {\x0d\n        const onMessage = this._subscribers[i];\x0d\n        onMessage(data\x2C this.name);\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => {\x0d\n          triggerUncaughtException(err\x2C false);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Channel {\x0d\n  constructor(name) {\x0d\n    this._subscribers = undefined;\x0d\n    this.name = name;\x0d\n  }\x0d\n\x0d\n  static [SymbolHasInstance](instance) {\x0d\n    const prototype = ObjectGetPrototypeOf(instance);\x0d\n    return prototype === Channel.prototype ||\x0d\n           prototype === ActiveChannel.prototype;\x0d\n  }\x0d\n\x0d\n  subscribe(subscription) {\x0d\n    ObjectSetPrototypeOf(this\x2C ActiveChannel.prototype);\x0d\n    this._subscribers = [];\x0d\n    this.subscribe(subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  publish() {}\x0d\n}\x0d\n\x0d\nconst channels = { __proto__: null };\x0d\n\x0d\nfunction channel(name) {\x0d\n  let channel;\x0d\n  const ref = channels[name];\x0d\n  if (ref) channel = ref.get();\x0d\n  if (channel) return channel;\x0d\n\x0d\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\x0d\n  }\x0d\n\x0d\n  channel = new Channel(name);\x0d\n  channels[name] = new WeakReference(channel);\x0d\n  return channel;\x0d\n}\x0d\n\x0d\nfunction subscribe(name\x2C subscription) {\x0d\n  const chan = channel(name);\x0d\n  channels[name].incRef();\x0d\n  chan.subscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction unsubscribe(name\x2C subscription) {\x0d\n  const chan = channel(name);\x0d\n  if (!chan.unsubscribe(subscription)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  channels[name].decRef();\x0d\n  if (channels[name].getRef() === 0) {\x0d\n    delete channels[name];\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction hasSubscribers(name) {\x0d\n  let channel;\x0d\n  const ref = channels[name];\x0d\n  if (ref) channel = ref.get();\x0d\n  if (!channel) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return channel.hasSubscribers;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  channel\x2C\x0d\n  hasSubscribers\x2C\x0d\n  subscribe\x2C\x0d\n  unsubscribe\x2C\x0d\n  Channel\x2C\x0d\n};\x0d\n
code-source-info,0x2173c75c746,418,0,3244,C0O0C4O3244,,
code-creation,JS,10,360978,0x2173c75d396,327, node:diagnostics_channel:1:1,0x2173c75c6c0,~
code-source-info,0x2173c75d396,418,0,3244,C0O0C66O28C72O54C78O77C84O102C90O127C96O152C101O250C104O250C109O210C114O217C120O313C123O313C128O290C134O385C137O385C142O356C148O441C151O441C156O423C202O526C220O1647C276O1531C278O2132C282O2132C284O3147C291O3169C297O3181C303O3200C309O3214C315O3230C321O3162C326O3243,,
code-creation,JS,10,361156,0x2173c75e07e,105,channel node:diagnostics_channel:96:17,0x2173c75c778,~
code-source-info,0x2173c75e07e,418,2172,2542,C0O2188C2O2212C9O2220C13O2231C15O2254C20O2254C25O2264C29O2277C31O2292C32O2298C44O2363C62O2369C67O2363C68O2444C75O2454C81O2476C88O2497C93O2493C98O2491C102O2524C104O2539,,
code-creation,JS,10,361208,0x2173c75e6be,13,Channel node:diagnostics_channel:66:14,0x2173c75ca70,~
code-source-info,0x2173c75e6be,418,1561,1633,C0O1575C1O1593C5O1611C7O1621C12O1632,,
code-creation,JS,10,361370,0x2173c75f316,170,getESMFacade node:internal/bootstrap/loaders:281:15,0x2f9728be938,~
code-source-info,0x2173c75f316,9,8989,9758,C0O8989C8O9008C14O9028C18O9035C19O9064C29O9064C34O9049C39O9184C46O9216C53O9184C58O9251C61O9264C70O9291C72O9291C74O9322C81O9347C86O9322C91O9365C101O9365C106O9414C108O9467C121O9428C126O9426C130O9669C135O9676C140O9676C144O9701C149O9708C159O9708C165O9746C169O9753,,
code-creation,JS,10,361468,0x2173c75f7de,40, node:internal/bootstrap/loaders:292:15,0x2173c75f200,~
code-source-info,0x2173c75f7de,9,9495,9593,C0O9509C5O9517C10O9517C14O9546C24O9567C27O9575C32O9546C39O9592,,
code-creation,JS,10,361525,0x2173c75f94e,90,syncExports node:internal/bootstrap/loaders:306:14,0x2f9728be9b0,~
code-source-info,0x2173c75f94e,9,10071,10414,C0O10100C5O10126C11O10156C13O10169C17O10161C22O10212C24O10217C28O10231C30O10246C35O10261C37O10285C42O10292C51O10345C54O10357C59O10383C67O10345C73O10292C79O10178C84O10143C89O10413,,
code-creation,JS,10,361575,0x2173c75fae6,35,getOwn node:internal/bootstrap/loaders:187:16,0x2f9728be4f8,~
code-source-info,0x2173c75fae6,9,5837,5995,C0O5874C5O5881C14O5936C26O5936C34O5992,,
code-creation,JS,10,361686,0x2173c75fe86,150,isAsyncInspectorOpenSupported C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:174:39,0x38242ade5d8,~
code-source-info,0x2173c75fe86,392,5854,6262,C3O5886C7O5894C12O5903C17O5908C25O5908C31O5936C36O5953C40O5936C45O5975C51O5992C55O5975C60O6036C62O6042C69O6058C76O6074C80O6120C92O6143C96O6151C101O6158C109O6196C113O6204C118O6213C122O6194C128O6218C135O6229C139O6225C143O6158C148O6243C149O6256,,
code-creation,Eval,10,361947,0x2173c76066e,5, node:inspector:1:1,0x2173c760378,~
script-source,419,node:inspector,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  SafeMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INSPECTOR_ALREADY_ACTIVATED\x2C\x0d\n  ERR_INSPECTOR_ALREADY_CONNECTED\x2C\x0d\n  ERR_INSPECTOR_CLOSED\x2C\x0d\n  ERR_INSPECTOR_COMMAND\x2C\x0d\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\x0d\n  ERR_INSPECTOR_NOT_CONNECTED\x2C\x0d\n  ERR_INSPECTOR_NOT_ACTIVE\x2C\x0d\n  ERR_INSPECTOR_NOT_WORKER\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { hasInspector } = internalBinding('config');\x0d\nif (!hasInspector)\x0d\n  throw new ERR_INSPECTOR_NOT_AVAILABLE();\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst { isMainThread } = require('worker_threads');\x0d\nconst { _debugEnd } = internalBinding('process_methods');\x0d\n\x0d\nconst {\x0d\n  Connection\x2C\x0d\n  MainThreadConnection\x2C\x0d\n  open\x2C\x0d\n  url\x2C\x0d\n  isEnabled\x2C\x0d\n  waitForDebugger\x2C\x0d\n  console\x2C\x0d\n} = internalBinding('inspector');\x0d\n\x0d\nconst connectionSymbol = Symbol('connectionProperty');\x0d\nconst messageCallbacksSymbol = Symbol('messageCallbacks');\x0d\nconst nextIdSymbol = Symbol('nextId');\x0d\nconst onMessageSymbol = Symbol('onMessage');\x0d\n\x0d\nclass Session extends EventEmitter {\x0d\n  constructor() {\x0d\n    super();\x0d\n    this[connectionSymbol] = null;\x0d\n    this[nextIdSymbol] = 1;\x0d\n    this[messageCallbacksSymbol] = new SafeMap();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Connects the session to the inspector back-end.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  connect() {\x0d\n    if (this[connectionSymbol])\x0d\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\x0d\n    this[connectionSymbol] =\x0d\n      new Connection((message) => this[onMessageSymbol](message));\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Connects the session to the main thread\x0d\n   * inspector back-end.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  connectToMainThread() {\x0d\n    if (isMainThread)\x0d\n      throw new ERR_INSPECTOR_NOT_WORKER();\x0d\n    if (this[connectionSymbol])\x0d\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\x0d\n    this[connectionSymbol] =\x0d\n      new MainThreadConnection(\x0d\n        (message) => queueMicrotask(() => this[onMessageSymbol](message)));\x0d\n  }\x0d\n\x0d\n  [onMessageSymbol](message) {\x0d\n    const parsed = JSONParse(message);\x0d\n    try {\x0d\n      if (parsed.id) {\x0d\n        const callback = this[messageCallbacksSymbol].get(parsed.id);\x0d\n        this[messageCallbacksSymbol].delete(parsed.id);\x0d\n        if (callback) {\x0d\n          if (parsed.error) {\x0d\n            return callback(new ERR_INSPECTOR_COMMAND(parsed.error.code\x2C\x0d\n                                                      parsed.error.message));\x0d\n          }\x0d\n\x0d\n          callback(null\x2C parsed.result);\x0d\n        }\x0d\n      } else {\x0d\n        this.emit(parsed.method\x2C parsed);\x0d\n        this.emit('inspectorNotification'\x2C parsed);\x0d\n      }\x0d\n    } catch (error) {\x0d\n      process.emitWarning(error);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Posts a message to the inspector back-end.\x0d\n   * @param {string} method\x0d\n   * @param {Record<unknown\x2C unknown>} [params]\x0d\n   * @param {Function} [callback]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  post(method\x2C params\x2C callback) {\x0d\n    validateString(method\x2C 'method');\x0d\n    if (!callback && typeof params === 'function') {\x0d\n      callback = params;\x0d\n      params = null;\x0d\n    }\x0d\n    if (params) {\x0d\n      validateObject(params\x2C 'params');\x0d\n    }\x0d\n    if (callback) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n    }\x0d\n\x0d\n    if (!this[connectionSymbol]) {\x0d\n      throw new ERR_INSPECTOR_NOT_CONNECTED();\x0d\n    }\x0d\n    const id = this[nextIdSymbol]++;\x0d\n    const message = { id\x2C method };\x0d\n    if (params) {\x0d\n      message.params = params;\x0d\n    }\x0d\n    if (callback) {\x0d\n      this[messageCallbacksSymbol].set(id\x2C callback);\x0d\n    }\x0d\n    this[connectionSymbol].dispatch(JSONStringify(message));\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Immediately closes the session\x2C all pending\x0d\n   * message callbacks will be called with an\x0d\n   * error.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  disconnect() {\x0d\n    if (!this[connectionSymbol])\x0d\n      return;\x0d\n    this[connectionSymbol].disconnect();\x0d\n    this[connectionSymbol] = null;\x0d\n    const remainingCallbacks = this[messageCallbacksSymbol].values();\x0d\n    for (const callback of remainingCallbacks) {\x0d\n      process.nextTick(callback\x2C new ERR_INSPECTOR_CLOSED());\x0d\n    }\x0d\n    this[messageCallbacksSymbol].clear();\x0d\n    this[nextIdSymbol] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Activates inspector on host and port.\x0d\n * @param {number} [port]\x0d\n * @param {string} [host]\x0d\n * @param {boolean} [wait]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction inspectorOpen(port\x2C host\x2C wait) {\x0d\n  if (isEnabled()) {\x0d\n    throw new ERR_INSPECTOR_ALREADY_ACTIVATED();\x0d\n  }\x0d\n  // inspectorOpen() currently does not typecheck its arguments and adding\x0d\n  // such checks would be a potentially breaking change. However\x2C the native\x0d\n  // open() function requires the port to fit into a 16-bit unsigned integer\x2C\x0d\n  // causing an integer overflow otherwise\x2C so we at least need to prevent that.\x0d\n  if (isUint32(port)) {\x0d\n    validateInt32(port\x2C 'port'\x2C 0\x2C 65535);\x0d\n  }\x0d\n  open(port\x2C host);\x0d\n  if (wait)\x0d\n    waitForDebugger();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Blocks until a client (existing or connected later)\x0d\n * has sent the `Runtime.runIfWaitingForDebugger`\x0d\n * command.\x0d\n * @returns {void}\x0d\n */\x0d\nfunction inspectorWaitForDebugger() {\x0d\n  if (!waitForDebugger())\x0d\n    throw new ERR_INSPECTOR_NOT_ACTIVE();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  open: inspectorOpen\x2C\x0d\n  close: _debugEnd\x2C\x0d\n  url\x2C\x0d\n  waitForDebugger: inspectorWaitForDebugger\x2C\x0d\n  console\x2C\x0d\n  Session\x2C\x0d\n};\x0d\n
code-source-info,0x2173c76066e,419,0,5507,C0O0C4O5507,,
code-creation,JS,10,362226,0x2173c760efe,478, node:inspector:1:1,0x2173c7605e8,~
code-source-info,0x2173c760efe,419,0,5507,C0O0C97O28C103O42C109O60C115O72C120O359C123O359C128O385C133O112C139O148C145O184C151O209C157O235C162O267C168O299C174O328C180O421C183O421C188O404C193O449C195O471C197O477C202O471C203O536C206O536C211O583C214O583C219O564C225O728C228O728C233O636C239O649C245O670C251O688C257O707C263O786C266O786C271O769C277O836C280O836C285O822C290O991C293O991C298O886C304O901C310O926C316O935C321O943C327O957C333O977C338O1049C341O1049C345O1049C347O1111C350O1111C354O1111C356O1161C359O1161C363O1161C365O1204C368O1204C372O1204C374O1250C393O2201C429O5360C436O5388C442O5413C448O5427C454O5452C460O5481C466O5493C472O5375C477O5506,,
code-creation,JS,11,362602,0x7ff6f838b0c0,1432,readPackage node:internal/modules/cjs/loader:374:21,0x19ee58575b0,^
code-source-info,0x7ff6f838b0c0,57,10746,11506,,,
code-creation,JS,11,362632,0x7ff6f838b700,92,get node:internal/bootstrap/node:365:8,0xf2fdb44f00,^
code-source-info,0x7ff6f838b700,10,12870,12905,,,
code-creation,JS,11,362652,0x7ff6f838b800,296,getOwn node:internal/bootstrap/loaders:187:16,0x2f9728be4f8,^
code-source-info,0x7ff6f838b800,9,5837,5995,,,
code-creation,JS,11,362677,0x7ff6f838b9c0,692,syncExports node:internal/bootstrap/loaders:306:14,0x2f9728be9b0,^
code-source-info,0x7ff6f838b9c0,9,10071,10414,,,
code-creation,JS,11,362694,0x7ff6f838bd00,44,noop node:internal/util/debuglog:46:14,0x33cbf85b198,^
code-source-info,0x7ff6f838bd00,21,1449,1457,,,
code-creation,JS,11,362741,0x7ff6f838bdc0,3524,dirname node:path:657:10,0x320a78db070,^
code-source-info,0x7ff6f838bdc0,33,21376,24004,,,
code-creation,JS,10,362963,0x2173c7626c6,625,normalize node:path:308:12,0x320a78daee0,~
code-source-info,0x2173c7626c
code-creation,JS,10,363258,0x2173c762c36,212,resolveExports node:internal/modules/cjs/loader:568:24,0x19ee5857920,~
code-source-info,0x2173c762c36,57,16736,17528,C0O16877C7O16897C10O16877C19O16926C25O16844C32O16853C40O16943C44O16959C45O16966C46O16986C51O16991C56O16991C63O17029C68O17029C73O17055C76O17062C89O17135C95O17135C100O17109C105O17183C110O17244C115O17266C119O17244C129O17290C137O17323C140O17323C147O17212C158O17190C163O17359C175O17386C178O17392C185O17397C190O17434C197O17478C201O17440C206O17434C207O17505C209O17505C211O17527,,
code-creation,JS,10,363487,0x2173c762e4e,45,tryExtensions node:internal/modules/cjs/loader:495:23,0x19ee58577e0,~
code-source-info,0x2173c762e4e,57,14521,14714,C0O14557C2O14569C6O14562C11O14606C16O14622C19O14616C23O14606C29O14643C31O14666C33O14682C34O14578C39O14544C43O14698C44O14711,,
code-creation,JS,10,363541,0x2173c762f8e,60,tryFile node:internal/modules/cjs/loader:479:17,0x19ee5857740,~
code-source-info,0x2173c762f8e,57,14058,14281,C0O14096C5O14096C10O14119C11O14126C16O14133C17O14140C18O14144C26O14148C34O14190C36O14205C41O14217C46O14217C51O14238C52O14247C55O14254C59O14278,,
code-creation,RegExp,3,363913,0x7ff6f838cc40,1676,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,Eval,10,364571,0x2173c7636e6,5, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnectionForwarder.js:1:1,0x2173c763520,~
script-source,420,C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnectionForwarder.js,const JB_FORWARDED_DEBUG_PORT = '_JB_FORWARDED_DEBUG_PORT';\n\nif (process.env[JB_FORWARDED_DEBUG_PORT] != null) {\n  doForwardDebugConnection(parseInt(process.env[JB_FORWARDED_DEBUG_PORT]));\n  return;\n}\n\nfunction doForwardDebugConnection(debugPort) {\n  if (debugPort <= 0 || isNaN(debugPort)) {\n    console.error(formatMessage('undefined debugPort'));\n    return;\n  }\n  const gatewayHostPort = getGatewayHostPort();\n  if (gatewayHostPort == null) {\n    console.error(formatMessage('undefined gateway'));\n    return;\n  }\n  const inspectorHostPort = {port: debugPort};\n  const verboseLogging = isVerboseLoggingEnabled();\n  if (verboseLogging) {\n    console.log(formatMessage('Forwarding connection between inspector ' + JSON.stringify(inspectorHostPort) +\n      ' and gateway ' + JSON.stringify(gatewayHostPort)));\n  }\n\n  const gatewaySocket = connect(gatewayHostPort\x2C 'gateway'\x2C verboseLogging);\n  const inspectorSocket = connect(inspectorHostPort\x2C 'inspector'\x2C verboseLogging);\n\n  gatewaySocket.pipe(inspectorSocket);\n  inspectorSocket.pipe(gatewaySocket);\n}\n\nfunction connect(options\x2C endpointName\x2C verboseLogging) {\n  const net = require('net');\n  const socket = net.createConnection(options);\n  socket.setNoDelay(true);\n  socket.on('error'\x2C err => {\n    console.error(formatMessage('Error connecting to ' + endpointName + ' ' + JSON.stringify(options))\x2C err);\n  });\n  if (verboseLogging) {\n    logEvent(socket\x2C 'lookup'\x2C endpointName);\n    logEvent(socket\x2C 'connect'\x2C endpointName);\n    logEvent(socket\x2C 'ready'\x2C endpointName);\n    socket.once('data'\x2C (data) => {\n      console.log(formatMessage('received data from ' + endpointName + ' (' + data.length + ' bytes)'));\n    });\n    logEvent(socket\x2C 'timeout'\x2C endpointName);\n    logEvent(socket\x2C 'close'\x2C endpointName);\n    logEvent(socket\x2C 'end'\x2C endpointName);\n  }\n  return socket;\n}\n\nfunction logEvent(socket\x2C eventName\x2C socketName\x2C logEventArgs) {\n  socket.on(eventName\x2C () => {\n    console.log(formatMessage('\\'' + eventName + '\\' event from ' + socketName +\n      (logEventArgs ? '\x2C args: ' + JSON.stringify(arguments) : '')));\n  });\n}\n\nfunction formatMessage(message) {\n  return '[debugConnectionForwarder pid:' + process.pid + '] ' + message;\n}\n\nfunction getGatewayHostPort() {\n  const host = process.env.JB_NODE_DEBUG_CONNECTION_GATEWAY_HOST\n  const port = parseInt(process.env.JB_NODE_DEBUG_CONNECTION_GATEWAY_PORT)\n  if (host != null && port > 0 && !isNaN(port)) {\n    return {host: host\x2C port: port};\n  }\n  return null;\n}\n\nexports.shouldForwardDebugConnection = () => {\n  return getGatewayHostPort() != null;\n};\n\nexports.forwardDebugConnectionAndWait = (debugPort) => {\n  require('child_process').spawn(process.env['JB_INTERPRETER'] || process.execPath\x2C [__filename]\x2C {\n    env: Object.assign({}\x2C process.env\x2C {\n      [JB_FORWARDED_DEBUG_PORT]: debugPort\x2C\n      NODE_OPTIONS: ''\n    })\x2C\n    stdio: 'inherit'\n  });\n\n  const inspector = require('inspector');\n  if (typeof inspector.waitForDebugger === 'function') {\n    inspector.waitForDebugger();\n  }\n  else {\n    console.error('[debugConnectionForwarder] inspector.waitForDebugger is unavailable in ' + process.versions.node +\n      ". Some initial breakpoints might be skipped.")\n  }\n};\n\n\nfunction isVerboseLoggingEnabled() {\n  return process.env.JB_NODE_DEBUGGER_ENABLE_VERBOSE_LOGGING != null;\n}\n
code-source-info,0x2173c7636e6,420,0,3312,C0O0C4O3312,,
code-creation,JS,10,364732,0x2173c763ad6,120, C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnectionForwarder.js:1:1,0x2173c763660,~
code-source-info,0x2173c763ad6,420,0,3312,C0O0C51O32C53O32C55O61C59O73C66O76C72O115C76O149C80O157C87O160C91O140C96O115C100O191C101O198C102O2485C106O2522C110O2575C114O2613C119O3311,,
code-creation,JS,10,364854,0x2173c7641b6,16, node:internal/modules/cjs/loader:122:3,0x19ee5856ef0,~
code-source-info,0x2173c7641b6,57,3886,3940,C0O3930C6O3892C11O3930C15O3940,,
code-creation,Eval,10,364992,0x2173c7646be,5, node:internal/process/esm_loader:1:1,0x2173c7644a8,~
script-source,421,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n// Module.runMain() causes loadESM() to re-run (which it should do); however\x2C this should NOT cause\x0d\n// ESM to be re-initialized; doing so causes duplicate custom loaders to be added to the public\x0d\n// esmLoader.\x0d\nlet isESMInitialized = false;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  if (isESMInitialized) { return; }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n  const preloadModules = getOptionValue('--import');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = '/';\x0d\n  }\x0d\n\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n  const allLoaders = [];\x0d\n\x0d\n  const parentURL = pathToFileURL(cwd).href;\x0d\n\x0d\n  for (let i = 0; i < customLoaders.length; i++) {\x0d\n    const customLoader = customLoaders[i];\x0d\n\x0d\n    // Importation must be handled by internal loader to avoid polluting user-land\x0d\n    const keyedExportsSublist = await internalEsmLoader.import(\x0d\n      [customLoader]\x2C\x0d\n      parentURL\x2C\x0d\n      kEmptyObject\x2C\x0d\n    );\x0d\n\x0d\n    internalEsmLoader.addCustomLoaders(keyedExportsSublist);\x0d\n    ArrayPrototypePushApply(allLoaders\x2C keyedExportsSublist);\x0d\n  }\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  esmLoader.addCustomLoaders(allLoaders);\x0d\n  esmLoader.preload();\x0d\n\x0d\n  // Preload after loaders are added so they can be used\x0d\n  if (preloadModules?.length) {\x0d\n    await loadModulesInIsolation(parentURL\x2C preloadModules\x2C allLoaders);\x0d\n  }\x0d\n\x0d\n  isESMInitialized = true;\x0d\n}\x0d\n\x0d\nfunction loadModulesInIsolation(parentURL\x2C specifiers\x2C loaders = []) {\x0d\n  if (!ArrayIsArray(specifiers) || specifiers.length === 0) { return; }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n  internalEsmLoader.addCustomLoaders(loaders);\x0d\n  internalEsmLoader.preload();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid polluting userland\x0d\n  return internalEsmLoader.import(\x0d\n    specifiers\x2C\x0d\n    parentURL\x2C\x0d\n    kEmptyObject\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true\x2C /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2173c7646be,421,0,3102,C0O0C4O3102,,
code-creation,JS,10,365153,0x2173c7648a6,162, node:internal/process/esm_loader:1:1,0x2173c764638,~
code-source-info,0x2173c7648a6,421,0,3102,C0O0C53O28C59O45C65O113C71O113C76O99C82O207C88O207C93O165C99O273C105O273C110O255C116O324C122O324C127O307C133O371C136O371C141O371C143O389C145O407C149O659C150O659C152O2731C156O2747C161O3101,,
code-creation,Eval,10,365548,0x2173c765b4e,5, node:internal/modules/esm/loader:1:1,0x2173c765820,~
script-source,422,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SafePromiseAllReturnArrayLike\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\n\x0d\nfunction newModuleMap() {\x0d\n  const ModuleMap = require('internal/modules/esm/module_map');\x0d\n  return new ModuleMap();\x0d\n}\x0d\n\x0d\nfunction getTranslators() {\x0d\n  const { translators } = require('internal/modules/esm/translators');\x0d\n  return translators;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @typedef {object} ExportedHooks\x0d\n * @property {Function} globalPreload Global preload hook.\x0d\n * @property {Function} resolve Resolve hook.\x0d\n * @property {Function} load Load hook.\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedExports\x0d\n * @property {ModuleExports} exports The contents of the module.\x0d\n * @property {URL['href']} url The URL of the module.\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\n\x0d\nclass ESMLoader {\x0d\n  #hooks;\x0d\n  #defaultResolve;\x0d\n  #defaultLoad;\x0d\n  #importMetaInitializer;\x0d\n\x0d\n  /**\x0d\n   * The conditions for resolving packages if `--conditions` is not used.\x0d\n   */\x0d\n  #defaultConditions = getDefaultConditions();\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = newModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = getTranslators();\x0d\n\x0d\n  constructor() {\x0d\n    if (getOptionValue('--experimental-loader').length > 0) {\x0d\n      emitExperimentalWarning('Custom ESM Loaders');\x0d\n    }\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addCustomLoaders(userLoaders) {\x0d\n    const { Hooks } = require('internal/modules/esm/hooks');\x0d\n    this.#hooks = new Hooks(userLoaders);\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    this.#hooks?.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x2C\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap } = internalBinding('module_wrap');\x0d\n      const { setCallbackForWrap } = require('internal/modules/esm/utils');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      setCallbackForWrap(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAssertions) => {\x0d\n          return this.import(specifier\x2C url\x2C importAssertions);\x0d\n        }\x2C\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAssertions) {\x0d\n    let importAssertionsForResolve;\x0d\n\x0d\n    // We can skip cloning if there are no user-provided loaders because\x0d\n    // the Node.js default resolve hook does not use import assertions.\x0d\n    if (this.#hooks?.hasCustomResolveOrLoadHooks) {\x0d\n      // This method of cloning only works so long as import assertions cannot contain objects as values\x2C\x0d\n      // which they currently cannot per spec.\x0d\n      importAssertionsForResolve = {\x0d\n        __proto__: null\x2C\x0d\n        ...importAssertions\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAssertionsForResolve);\x0d\n    const { url\x2C format } = resolveResult;\x0d\n    const resolvedImportAssertions = resolveResult.importAssertions ?? importAssertions;\x0d\n\x0d\n    let job = this.moduleMap.get(url\x2C resolvedImportAssertions.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.moduleMap.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C resolvedImportAssertions\x2C parentURL\x2C format);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAssertions\x2C parentURL\x2C format) {\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const {\x0d\n        format: finalFormat\x2C\x0d\n        responseURL\x2C\x0d\n        source\x2C\x0d\n      } = await this.load(url\x2C {\x0d\n        format\x2C\x0d\n        importAssertions\x2C\x0d\n      });\x0d\n\x0d\n      const translator = getTranslators().get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAssertions\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x2C\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C importAssertions.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ExportedHooks | KeyedExports[]>}\x0d\n   *  A collection of module export(s) or a list of collections of module\x0d\n   *  export(s).\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL\x2C importAssertions) {\x0d\n    // For loaders\x2C `import` is passed multiple things to process\x2C it returns a\x0d\n    // list pairing the url and exports collected. This is especially useful for\x0d\n    // error messaging\x2C to identity from where an export came. But\x2C in most\x0d\n    // cases\x2C only a single url is being "imported" (ex `import()`)\x2C so there is\x0d\n    // only 1 possible url from which the exports were collected and it is\x0d\n    // already known to the caller. Nesting that in a list would only ever\x0d\n    // create redundant work for the caller\x2C so it is later popped off the\x0d\n    // internal list.\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) { specifiers = [specifiers]; }\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL\x2C importAssertions)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await SafePromiseAllReturnArrayLike(jobs);\x0d\n\x0d\n    if (!wasArr) { return namespaces[0]; } // We can skip the pairing below\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      namespaces[i] = {\x0d\n        __proto__: null\x2C\x0d\n        url: specifiers[i]\x2C\x0d\n        exports: namespaces[i]\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    return namespaces;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} importAssertions Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {Promise<{ format: string\x2C url: URL['href'] }>}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions\x2C\x0d\n  ) {\x0d\n    if (this.#hooks) {\x0d\n      return this.#hooks.resolve(originalSpecifier\x2C parentURL\x2C importAssertions);\x0d\n    }\x0d\n    if (!this.#defaultResolve) {\x0d\n      this.#defaultResolve = require('internal/modules/esm/resolve').defaultResolve;\x0d\n    }\x0d\n    const context = {\x0d\n      __proto__: null\x2C\x0d\n      conditions: this.#defaultConditions\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    return this.#defaultResolve(originalSpecifier\x2C context);\x0d\n\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context) {\x0d\n    let loadResult;\x0d\n    if (this.#hooks) {\x0d\n      loadResult = await this.#hooks.load(url\x2C context);\x0d\n    } else {\x0d\n      if (!this.#defaultLoad) {\x0d\n        this.#defaultLoad = require('internal/modules/esm/load').defaultLoad;\x0d\n      }\x0d\n      loadResult = await this.#defaultLoad(url\x2C context);\x0d\n    }\x0d\n\x0d\n    const { format } = loadResult;\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n\x0d\n    return loadResult;\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    if (this.#hooks) {\x0d\n      this.#hooks.importMetaInitialize(meta\x2C context);\x0d\n    } else {\x0d\n      if (!this.#importMetaInitializer) {\x0d\n        this.#importMetaInitializer = require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n      }\x0d\n      this.#importMetaInitializer(meta\x2C context);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x2173c765b4e,422,0,11815,C0O0C4O11815,,
code-creation,JS,10,366219,0x2173c766306,371, node:internal/modules/esm/loader:1:1,0x2173c765ac8,~
code-source-info,0x2173c766306,422,0,11815,C0O0C59O82C65O82C69O136C75O146C81O163C87O189C92O214C98O248C104O325C110O325C115O351C120O293C126O387C132O387C137O368C143O443C149O443C154O425C160O505C166O505C171O477C177O572C183O572C188O545C351O11762C358O11731C363O11783C365O11801C370O11814,,
code-creation,JS,10,366259,0x2173c766586,96,<instance_members_initializer> node:internal/modules/esm/loader:68:1,0x2173c765f40,~
code-source-info,0x2173c766586,422,1675,11727,C4O1696C12O1707C20O1727C28O1744C35O1883C42O1883C49O1984C56O1984C65O2107C70O2199C75O2199C82O2326C87O2326C95O11727,,
code-creation,JS,10,366440,0x2173c767756,95,ESMLoader node:internal/modules/esm/loader:99:14,0x2173c765c70,~
code-source-info,0x2173c767756,422,2360,2612,C5O2360C23O2370C33O2374C38O2413C44O2421C49O2435C59O2435C63O2494C73O2498C79O2557C89O2557C94O2611,,
code-creation,JS,10,366525,0x2173c768636,21,getDefaultConditions node:internal/modules/esm/utils:31:30,0x19ee58610f8,~
code-source-info,0x2173c768636,63,697,777,C0O705C7O712C10O730C12O705C16O749C20O774,,
code-creation,JS,10,366573,0x2173c7688ee,17,newModuleMap node:internal/modules/esm/loader:26:22,0x2173c765b80,~
code-source-info,0x2173c7688ee,422,635,734,C0O661C6O661C11O715C16O731,,
code-creation,Eval,10,366689,0x2173c768cae,5, node:internal/modules/esm/module_map:1:1,0x2173c768ac0,~
script-source,423,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nconst {\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x2173c768cae,423,0,1477,C0O0C4O1477,,
code-creation,JS,10,366774,0x2173c7690d6,169, node:internal/modules/esm/module_map:1:1,0x2173c768c28,~
code-source-info,0x2173c7690d6,423,0,1477,C0O0C21O49C27O49C32O25C38O101C43O141C49O141C54O174C67O175C73O141C75O255C81O255C86O281C91O230C97O317C103O317C108O298C118O430C161O1448C163O1463C168O1476,,
code-creation,Eval,10,366955,0x2173c7697f6,5, node:internal/modules/esm/assert:1:1,0x2173c7695e0,~
script-source,424,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\nlet alreadyWarned = false;\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import assertion types (the value of\x0d\n * `type` in `assert { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an assertion type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' assert { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import assertions.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAssertions Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAssertions(url\x2C format\x2C\x0d\n                            importAssertions = { __proto__: null }) {\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  if (!alreadyWarned && ObjectKeys(importAssertions).length !== 0) {\x0d\n    alreadyWarned = true;\x0d\n    process.emitWarning(\x0d\n      'Import assertions are not a stable feature of the JavaScript language. ' +\x0d\n      'Avoid relying on their current behavior and syntax as those might change ' +\x0d\n      'in a future version of Node.js.'\x2C\x0d\n      'ExperimentalWarning'\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore assertions for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import assertions object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n\x0d\n    case importAssertions.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAssertions.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAssertions\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAssertions.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAssertions\x2C\x0d\n};\x0d\n
code-source-info,0x2173c7697f6,424,0,4148,C0O0C4O4148,,
code-creation,JS,10,367149,0x2173c769ace,211, node:internal/modules/esm/assert:1:1,0x2173c769770,~
code-source-info,0x2173c769ace,424,0,4148,C0O0C53O28C58O53C64O80C70O95C75O112C81O189C84O189C89O170C95O354C98O354C103O380C108O235C114O272C120O310C126O484C128O484C130O521C131O521C133O712C140O750C146O786C152O839C158O871C164O712C166O1308C169O1333C179O1308C184O1308C186O4077C193O4099C199O4123C205O4092C210O4147,,
code-creation,JS,13,367350,0x7ff6f838d380,1320,normalizeString node:path:66:25,0x320a78dada0,*
code-source-info,0x7ff6f838d380,33,2226,4212,C0O2226C40O2412C162O2404C174O2438C182O1818I0C192O1849I0C212O2517C320O2467C523O2609C543O1818I1C557O1849I1C579O2609C596O4105C606O4126C616O4143C647O2661C650O2655C663O2673C673O3863C680O2722C694O3900C698O3863C753O3825C766O3942C788O3863C791O3942C812O3851C834O3863C952O4019C959O4031C1006O2422C1009O2386C1024O4209C1060O2755C1065O2226C1111O2467C1216O2386,F0O2517F0O2609,S0x320a78daab8
code-creation,JS,10,367480,0x2173c76a6de,9, node:internal/modules/esm/assert:45:3,0x2173c7698c8,~
code-source-info,0x2173c76a6de,424,1365,1403,C0O1380C2O1384C4O1380C8O1403,,
code-creation,JS,10,367549,0x2173c76af86,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x2173c768d30,~
code-source-info,0x2173c76af86,423,454,471,C3O460C5O460C11O460C26O470,,
code-creation,JS,10,367590,0x2173c76b2ce,17,getTranslators node:internal/modules/esm/loader:31:24,0x2173c765bd0,~
code-source-info,0x2173c76b2ce,422,761,863,C0O793C6O793C11O777C16O860,,
code-creation,Eval,10,367937,0x2173c76bc76,5, node:internal/modules/esm/translators:1:1,0x2173c76b850,~
script-source,425,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x2C\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  const { TextDecoder } = require('internal/encoding');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C assertions) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C assertions);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  const { setCallbackForWrap } = require('internal/modules/esm/utils');\x0d\n  setCallbackForWrap(module\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplaceAll(filename\x2C '/'\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x2C\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  const createDynamicModule = require(\x0d\n    'internal/modules/esm/create_dynamic_module');\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x2173c76bc76,425,0,11152,C0O0C4O11152,,
tick,0x7ff8e7a76acf,368621,1,0x7ff7776556e0,3,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x2173c76b2d4,0x2173c7665dd,0x2173c767766,0x2173c76492e,0x7ff6f83840eb,0x7ff6f8383d61,0x2173c7641bc,0xde6be16853,0x38242ad4886,0xde6be17d30,0x38242ae2292,0x38242ae2106,0x38242adead5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,JS,10,368655,0x2173c76c3fe,664, node:internal/modules/esm/translators:1:1,0x2173c76bbf0,~
code-source-info,0x2173c76c3fe,425,0,11152,C0O0C168O28C174O54C180O76C186O88C192O102C198O127C204O161C210O176C216O198C221O210C227O222C233O252C239O277C245O307C251O344C256O346C262O395C263O395C265O546C271O546C276O529C282O594C288O594C293O570C299O579C305O677C311O677C316O623C322O640C328O662C334O768C340O768C345O734C351O748C357O835C363O835C367O835C369O892C375O892C380O869C386O884C392O921C398O921C403O954C416O955C422O921C424O1038C430O1038C435O1010C441O1147C447O1147C452O1173C457O1076C463O1107C469O1214C475O1214C480O1190C486O1283C489O1283C494O1324C500O1369C506O1369C510O1369C512O1438C518O1438C523O1418C529O1482C530O1482C532O1928C534O1928C540O1944C542O1964C546O1980C548O2003C552O2038C553O2038C555O3134C568O3134C574O4480C581O4489C584O4472C586O4515C599O4515C605O7708C618O7708C624O8171C637O8171C643O10171C656O10171C663O11151,,
code-creation,Eval,10,369668,0x2173c76e4e6,5, node:child_process:1:1,0x2173c76df70,~
script-source,426,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x2C\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x2C\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\nconst isZOS = process.platform === 'os390';\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string|URL} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath\x2C args = []\x2C options) {\x0d\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  } else {\x0d\n    validateArray(args\x2C 'args');\x0d\n  }\x0d\n\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  options = { ...options\x2C shell: false };\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  validateArgumentNullCheck(options.execPath\x2C 'options.execPath');\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n  validateArgumentsNullCheck(execArgv\x2C 'options.execArgv');\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  validateString(command\x2C 'command');\x0d\n  validateArgumentNullCheck(command\x2C 'command');\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x2C\x0d\n});\x0d\n\x0d\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args != null && typeof args === 'object') {\x0d\n    callback = options;\x0d\n    options = args;\x0d\n    args = null;\x0d\n  } else if (typeof args === 'function') {\x0d\n    callback = args;\x0d\n    options = null;\x0d\n    args = null;\x0d\n  }\x0d\n\x0d\n  if (args == null) {\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n\x0d\n  if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (callback != null) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  return { file\x2C args\x2C options\x2C callback };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file\x2C args\x2C options\x2C callback) {\x0d\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x2C\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args?.length)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      ex = genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\x0d\n        code: code < 0 ? getSystemErrorName(code) : code\x2C\x0d\n        killed: child.killed || killed\x2C\x0d\n        signal: signal\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      // Do not need to count the length\x0d\n      if (options.maxBuffer === Infinity) {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n        return;\x0d\n      }\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stderr\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x2C\x0d\n});\x0d\n\x0d\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\x0d\n  if (process.env[name] &&\x0d\n      (!optionEnv ||\x0d\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\x0d\n    env[name] = process.env[name];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n  validateArgumentNullCheck(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  validateArgumentsNullCheck(args\x2C 'args');\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = kEmptyObject;\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    validateArgumentNullCheck(options.shell\x2C 'options.shell');\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\x0d\n\x0d\n  if (isZOS) {\x0d\n    // The following environment variables must always propagate if set.\x0d\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\x0d\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      validateArgumentNullCheck(key\x2C `options.env['${key}']`);\x0d\n      validateArgumentNullCheck(value\x2C `options.env['${key}']`);\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x2C\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    err = genericNodeError(msg\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(file\x2C args\x2C options) {\x0d\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(file\x2C args\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const errArgs = [options.argv0 || file];\x0d\n  ArrayPrototypePushApply(errArgs\x2C args);\x0d\n  const err = checkExecSyncError(ret\x2C errArgs);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Record<string\x2C string>;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C undefined\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateArgumentNullCheck(arg\x2C propName) {\x0d\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg\x2C '\\u0000')) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(propName\x2C arg\x2C 'must be a string without null bytes');\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateArgumentsNullCheck(args\x2C propName) {\x0d\n  for (let i = 0; i < args.length; ++i) {\x0d\n    validateArgumentNullCheck(args[i]\x2C `${propName}[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x2C\x0d\n};\x0d\n
code-source-info,0x2173c76e4e6,426,0,27975,C0O0C4O27975,,
code-creation,JS,10,371108,0x2173c76f0de,835, node:child_process:1:1,0x2173c76e460,~
code-source-info,0x2173c76f0de
code-creation,Eval,10,372309,0x2173c77542e,5, node:internal/child_process:1:1,0x2173c774770,~
script-source,427,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst childProcessChannel = dc.channel('child_process');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\nconst kPendingMessages = Symbol('kPendingMessages');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x2C\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n  if (childProcessChannel.hasSubscribers) {\x0d\n    childProcessChannel.publish({\x0d\n      process: this\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n    this[kPendingMessages] = [];\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x2C\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.on('newListener'\x2C function() {\x0d\n\x0d\n    process.nextTick(() => {\x0d\n      if (!target.channel || !target.listenerCount('message'))\x0d\n        return;\x0d\n\x0d\n      const messages = target.channel[kPendingMessages];\x0d\n      const { length } = messages;\x0d\n      if (!length) return;\x0d\n\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\x0d\n      }\x0d\n\x0d\n      target.channel[kPendingMessages] = [];\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x2C\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    if ('internalMessage' === event || target.listenerCount('message')) {\x0d\n      target.emit(event\x2C message\x2C handle);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      target.channel[kPendingMessages]\x2C\x0d\n      [event\x2C message\x2C handle]\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x2C\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x2C\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x2C\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x2C\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x2C\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x2C\x0d\n};\x0d\n
code-source-info,0x2173c77542e,427,0,32792,C0O0C4O32792,,
code-creation,JS,10,374215,0x2173c776a6e,1294, node:internal/child_process:1:1,0x2173c7753a8,~
code-source-info,0x2173c776a6e
code-creation,JS,10,374417,0x2173c77721e,26,<instance_members_initializer> node:internal/child_process:529:1,0x2173c776118,~
code-source-info,0x2173c77721e,427,14301,15339,C3O14352C11O14369C19O14395C25O15339,,
new,MemoryChunk,0x1ac513c0000,262144
code-creation,Eval,10,376316,0x2173c77c9d6,5, node:net:1:1,0x2173c77b420,~
script-source,428,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  kReinitializeHandle\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x2C\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x2C\x0d\n  UV_ECANCELED\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x2C\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x2C\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  aggregateErrors\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\nlet autoSelectFamilyDefault = getOptionValue('--enable-network-family-autoselection');\x0d\nlet autoSelectFamilyAttemptTimeoutDefault = 250;\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\nconst kTimeoutTriggered = Symbol('kTimeoutTriggered');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst netClientSocketChannel = dc.channel('net.client.socket');\x0d\nconst netServerSocketChannel = dc.channel('net.server.socket');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (netClientSocketChannel.hasSubscribers) {\x0d\n    netClientSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamily() {\x0d\n  return autoSelectFamilyDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamily(value) {\x0d\n  validateBoolean(value\x2C 'value');\x0d\n  autoSelectFamilyDefault = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\x0d\n  return autoSelectFamilyAttemptTimeoutDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\x0d\n  validateInt32(value\x2C 'value'\x2C 1);\x0d\n\x0d\n  if (value < 10) {\x0d\n    value = 10;\x0d\n  }\x0d\n\x0d\n  autoSelectFamilyAttemptTimeoutDefault = value;\x0d\n}\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\x0d\n  if (self._handle) {\x0d\n    self._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      self.emit('close'\x2C isException);\x0d\n      if (isCleanupPending) {\x0d\n        self._handle.onread = noop;\x0d\n        self._handle = null;\x0d\n        self._sockname = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n  this._closeAfterHandlingError = false;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x2C\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug(\x0d\n    '_read - n'\x2C n\x2C\x0d\n    'isConnecting?'\x2C !!this.connecting\x2C\x0d\n    'hasHandle?'\x2C !!this._handle\x2C\x0d\n  );\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C errnoException(err\x2C 'reset'));\x0d\n    } else if (this._closeAfterHandlingError) {\x0d\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\x0d\n      // accessible when an `error` event is handled in the `next tick queue`.\x0d\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\x0d\n    } else {\x0d\n      closeSocketHandle(this\x2C isException);\x0d\n    }\x0d\n\x0d\n    if (!this._closeAfterHandlingError) {\x0d\n      this._handle.onread = noop;\x0d\n      this._handle = null;\x0d\n      this._sockname = null;\x0d\n    }\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\nprotoGetter('localFamily'\x2C function localFamily() {\x0d\n  return this._getsockname().family;\x0d\n});\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this.off('close'\x2C onClose);\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    function onClose() {\x0d\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\x0d\n    }\x0d\n    this.once('close'\x2C onClose);\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnectMultiple(context\x2C canceled) {\x0d\n  clearTimeout(context[kTimeout]);\x0d\n  const self = context.socket;\x0d\n\x0d\n  // All connections have been tried without success\x2C destroy with error\x0d\n  if (canceled || context.current === context.addresses.length) {\x0d\n    self.destroy(aggregateErrors(context.errors));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  const handle = context.current === 0 ? self._handle : new TCP(TCPConstants.SOCKET);\x0d\n  const { localPort\x2C port\x2C flags } = context;\x0d\n  const { address\x2C family: addressType } = context.addresses[context.current++];\x0d\n  let localAddress;\x0d\n  let err;\x0d\n\x0d\n  if (localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = DEFAULT_IPV4_ADDR;\x0d\n      err = handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = DEFAULT_IPV6_ADDR;\x0d\n      err = handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n\x0d\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C handle);\x0d\n    if (err) {\x0d\n      ArrayPrototypePush(context.errors\x2C exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\x0d\n      internalConnectMultiple(context);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  const req = new TCPConnectWrap();\x0d\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context);\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  req.localAddress = localAddress;\x0d\n  req.localPort = localPort;\x0d\n\x0d\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\x0d\n\x0d\n  if (addressType === 4) {\x0d\n    err = handle.connect(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    err = handle.connect6(req\x2C address\x2C port);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(context.errors\x2C exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details));\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // If the attempt has not returned an error\x2C start the connection timer\x0d\n  context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req);\x0d\n}\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\x0d\n  this._handle?.close();\x0d\n\x0d\n  this._handle = handle;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  initSocketHandle(this);\x0d\n};\x0d\n\x0d\nfunction socketToDnsFamily(family) {\x0d\n  switch (family) {\x0d\n    case 'IPv4':\x0d\n      return 4;\x0d\n    case 'IPv6':\x0d\n      return 6;\x0d\n  }\x0d\n\x0d\n  return family;\x0d\n}\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n\x0d\n  if (autoSelectFamily != null) {\x0d\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\x0d\n  } else {\x0d\n    autoSelectFamily = autoSelectFamilyDefault;\x0d\n  }\x0d\n\x0d\n  if (autoSelectFamilyAttemptTimeout != null) {\x0d\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\x0d\n\x0d\n    if (autoSelectFamilyAttemptTimeout < 10) {\x0d\n      autoSelectFamilyAttemptTimeout = 10;\x0d\n    }\x0d\n  } else {\x0d\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\x0d\n  }\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup != null)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: socketToDnsFamily(options.family)\x2C\x0d\n    hints: options.hints || 0\x2C\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n\x0d\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\x0d\n    debug('connect: autodetecting');\x0d\n\x0d\n    dnsopts.all = true;\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n      lookupAndConnectMultiple(\x0d\n        self\x2C\x0d\n        async_id_symbol\x2C\x0d\n        lookup\x2C\x0d\n        host\x2C\x0d\n        options\x2C\x0d\n        dnsopts\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        autoSelectFamilyAttemptTimeout\x2C\x0d\n      );\x0d\n    });\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction lookupAndConnectMultiple(self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localPort\x2C timeout) {\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) {\x0d\n        return;\x0d\n      } else if (err) {\x0d\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\x0d\n\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\x0d\n      // The first valid address determines which group has preference on the\x0d\n      // alternate family sorting which happens later.\x0d\n      const validIps = [[]\x2C []];\x0d\n      let destinations;\x0d\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\x0d\n        const address = addresses[i];\x0d\n        const { address: ip\x2C family: addressType } = address;\x0d\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\x0d\n          if (!destinations) {\x0d\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\x0d\n          }\x0d\n\x0d\n          ArrayPrototypePush(validIps[destinations[addressType]]\x2C address);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // When no AAAA or A records are available\x2C fail on the first one\x0d\n      if (!validIps[0].length && !validIps[1].length) {\x0d\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\x0d\n\x0d\n        if (!isIP(firstIp)) {\x0d\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\x0d\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\x0d\n                                               options.host\x2C\x0d\n                                               options.port);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        }\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Sort addresses alternating families\x0d\n      const toAttempt = [];\x0d\n      for (let i = 0\x2C l = MathMax(validIps[0].length\x2C validIps[1].length); i < l; i++) {\x0d\n        if (i in validIps[0]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validIps[0][i]);\x0d\n        }\x0d\n        if (i in validIps[1]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validIps[1][i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      self.autoSelectFamilyAttemptedAddresses = [];\x0d\n\x0d\n      const context = {\x0d\n        socket: self\x2C\x0d\n        addresses\x2C\x0d\n        current: 0\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        timeout\x2C\x0d\n        [kTimeout]: null\x2C\x0d\n        [kTimeoutTriggered]: false\x2C\x0d\n        errors: []\x2C\x0d\n      };\x0d\n\x0d\n      self._unrefTimer();\x0d\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterConnectMultiple(context\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = context.socket;\x0d\n\x0d\n  // Make sure another connection is not spawned\x0d\n  clearTimeout(context[kTimeout]);\x0d\n\x0d\n  // Some error occurred\x2C add to the list of exceptions\x0d\n  if (status !== 0) {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    // Try the next address\x0d\n    internalConnectMultiple(context\x2C status === UV_ECANCELED);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\x0d\n  if (context[kTimeoutTriggered]) {\x0d\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\x0d\n    handle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (context.current > 1 && self[kReinitializeHandle]) {\x0d\n    self[kReinitializeHandle](handle);\x0d\n    handle = self._handle;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('net')) {\x0d\n    startPerf(\x0d\n      self\x2C\x0d\n      kPerfHooksNetConnectContext\x2C\x0d\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable);\x0d\n}\x0d\n\x0d\nfunction internalConnectMultipleTimeout(context\x2C req) {\x0d\n  context[kTimeoutTriggered] = true;\x0d\n  internalConnectMultiple(context);\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = kEmptyObject;\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = { __proto__: null };\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = { __proto__: null };\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n        data.localFamily = localInfo.family;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = { __proto__: null };\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n  self.emit('connection'\x2C socket);\x0d\n  if (netServerSocketChannel.hasSubscribers) {\x0d\n    netServerSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x2C\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n  getDefaultAutoSelectFamily\x2C\x0d\n  setDefaultAutoSelectFamily\x2C\x0d\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n};\x0d\n
code-source-info,0x2173c77c9d6,428,0,65262,C0O0C4O65262,,
code-creation,JS,10,379637,0x1ac513c115e,3351, node:net:1:1,0x2173c77c950,~
code-source-info,0x1ac513c115e
code-creation,Eval,10,380834,0x1ac513cbb66,5, node:internal/stream_base_commons:1:1,0x1ac513cb830,~
script-source,429,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = errnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(errnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(errnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n};\x0d\n
code-source-info,0x1ac513cbb66,429,0,7321,C0O0C4O7321,,
code-creation,JS,10,381244,0x1ac513cc14e,514, node:internal/stream_base_commons:1:1,0x1ac513cbae0,~
code-source-info,0x1ac513cc14e
code-creation,Eval,10,382066,0x1ac513ce5be,5, node:internal/perf/observe:1:1,0x1ac513cdf50,~
script-source,430,node:internal/perf/observe,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\x0d\n  }\x2C\x0d\n  installGarbageCollectionTracking\x2C\x0d\n  observerCounts\x2C\x0d\n  removeGarbageCollectionTracking\x2C\x0d\n  setupObservers\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  isPerformanceEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n} = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateInternalField\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  deprecate\x2C\x0d\n  lazyDOMException\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  setImmediate\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kDispatch = Symbol('kDispatch');\x0d\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\x0d\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\x0d\n\x0d\nconst kDeprecationMessage =\x0d\n  'Custom PerformanceEntry accessors are deprecated. ' +\x0d\n  'Please use the detail property.';\x0d\n\x0d\nconst kTypeSingle = 0;\x0d\nconst kTypeMultiple = 1;\x0d\n\x0d\nlet gcTrackingInstalled = false;\x0d\n\x0d\nconst kSupportedEntryTypes = ObjectFreeze([\x0d\n  'dns'\x2C\x0d\n  'function'\x2C\x0d\n  'gc'\x2C\x0d\n  'http'\x2C\x0d\n  'http2'\x2C\x0d\n  'mark'\x2C\x0d\n  'measure'\x2C\x0d\n  'net'\x2C\x0d\n  'resource'\x2C\x0d\n]);\x0d\n\x0d\n// Performance timeline entry Buffers\x0d\nlet markEntryBuffer = [];\x0d\nlet measureEntryBuffer = [];\x0d\nlet resourceTimingBuffer = [];\x0d\nlet resourceTimingSecondaryBuffer = [];\x0d\nconst kPerformanceEntryBufferWarnSize = 1e6;\x0d\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\x0d\n// Default buffer limit for resource timing entries.\x0d\nlet resourceTimingBufferSizeLimit = 250;\x0d\nlet dispatchBufferFull;\x0d\nlet resourceTimingBufferFullPending = false;\x0d\n\x0d\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\x0d\n  'mark': 'performance.clearMarks'\x2C\x0d\n  'measure': 'performance.clearMeasures'\x2C\x0d\n});\x0d\nconst kWarnedEntryTypes = new SafeMap();\x0d\n\x0d\nconst kObservers = new SafeSet();\x0d\nconst kPending = new SafeSet();\x0d\nlet isPending = false;\x0d\n\x0d\nfunction queuePending() {\x0d\n  if (isPending) return;\x0d\n  isPending = true;\x0d\n  setImmediate(() => {\x0d\n    isPending = false;\x0d\n    const pendings = ArrayFrom(kPending.values());\x0d\n    kPending.clear();\x0d\n    for (const pending of pendings)\x0d\n      pending[kDispatch]();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction getObserverType(type) {\x0d\n  switch (type) {\x0d\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\x0d\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\x0d\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\x0d\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\x0d\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeDecrementObserverCounts(entryTypes) {\x0d\n  for (const type of entryTypes) {\x0d\n    const observerType = getObserverType(type);\x0d\n\x0d\n    if (observerType !== undefined) {\x0d\n      observerCounts[observerType]--;\x0d\n\x0d\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\x0d\n          observerCounts[observerType] === 0) {\x0d\n        removeGarbageCollectionTracking();\x0d\n        gcTrackingInstalled = false;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeIncrementObserverCount(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n\x0d\n  if (observerType !== undefined) {\x0d\n    observerCounts[observerType]++;\x0d\n    if (!gcTrackingInstalled &&\x0d\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\x0d\n      installGarbageCollectionTracking();\x0d\n      gcTrackingInstalled = true;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nclass PerformanceObserverEntryList {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    return ArrayPrototypeSlice(this[kBuffer]);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    }\x0d\n    type = `${type}`;\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.entryType === type);\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name\x2C type = undefined) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    if (type != null /** not nullish */) {\x0d\n      return ArrayPrototypeFilter(\x0d\n        this[kBuffer]\x2C\x0d\n        (entry) => entry.name === name && entry.entryType === type);\x0d\n    }\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.name === name);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\x0d\n  getEntries: kEnumerableProperty\x2C\x0d\n  getEntriesByType: kEnumerableProperty\x2C\x0d\n  getEntriesByName: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserverEntryList'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceObserverEntryList(entries) {\x0d\n  return ReflectConstruct(function PerformanceObserverEntryList() {\x0d\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C (first\x2C second) => {\x0d\n      return first.startTime - second.startTime;\x0d\n    });\x0d\n  }\x2C []\x2C PerformanceObserverEntryList);\x0d\n}\x0d\n\x0d\nclass PerformanceObserver {\x0d\n  #buffer = [];\x0d\n  #entryTypes = new SafeSet();\x0d\n  #type;\x0d\n  #callback;\x0d\n\x0d\n  constructor(callback) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    this.#callback = callback;\x0d\n  }\x0d\n\x0d\n  observe(options = kEmptyObject) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    const {\x0d\n      entryTypes\x2C\x0d\n      type\x2C\x0d\n      buffered\x2C\x0d\n    } = { ...options };\x0d\n    if (entryTypes === undefined && type === undefined)\x0d\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\x0d\n    if (entryTypes != null && type != null)\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\x0d\n                                      entryTypes\x2C\x0d\n                                      'options.entryTypes can not set with ' +\x0d\n                                      'options.type together');\x0d\n\x0d\n    switch (this.#type) {\x0d\n      case undefined:\x0d\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\x0d\n        if (type !== undefined) this.#type = kTypeSingle;\x0d\n        break;\x0d\n      case kTypeSingle:\x0d\n        if (entryTypes !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to multiple observations'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n      case kTypeMultiple:\x0d\n        if (type !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to single observation'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    if (this.#type === kTypeMultiple) {\x0d\n      if (!ArrayIsArray(entryTypes)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.entryTypes'\x2C\x0d\n          'string[]'\x2C\x0d\n          entryTypes);\x0d\n      }\x0d\n      maybeDecrementObserverCounts(this.#entryTypes);\x0d\n      this.#entryTypes.clear();\x0d\n      for (let n = 0; n < entryTypes.length; n++) {\x0d\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\x0d\n          this.#entryTypes.add(entryTypes[n]);\x0d\n          maybeIncrementObserverCount(entryTypes[n]);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\x0d\n        return;\x0d\n      this.#entryTypes.add(type);\x0d\n      maybeIncrementObserverCount(type);\x0d\n      if (buffered) {\x0d\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\x0d\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\x0d\n        kPending.add(this);\x0d\n        if (kPending.size)\x0d\n          queuePending();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#entryTypes.size)\x0d\n      kObservers.add(this);\x0d\n    else\x0d\n      this.disconnect();\x0d\n  }\x0d\n\x0d\n  disconnect() {\x0d\n    maybeDecrementObserverCounts(this.#entryTypes);\x0d\n    kObservers.delete(this);\x0d\n    kPending.delete(this);\x0d\n    this.#buffer = [];\x0d\n    this.#entryTypes.clear();\x0d\n    this.#type = undefined;\x0d\n  }\x0d\n\x0d\n  takeRecords() {\x0d\n    const list = this.#buffer;\x0d\n    this.#buffer = [];\x0d\n    return list;\x0d\n  }\x0d\n\x0d\n  static get supportedEntryTypes() {\x0d\n    return kSupportedEntryTypes;\x0d\n  }\x0d\n\x0d\n  [kMaybeBuffer](entry) {\x0d\n    if (!this.#entryTypes.has(entry.entryType))\x0d\n      return;\x0d\n    ArrayPrototypePush(this.#buffer\x2C entry);\x0d\n    kPending.add(this);\x0d\n    if (kPending.size)\x0d\n      queuePending();\x0d\n  }\x0d\n\x0d\n  [kDispatch]() {\x0d\n    this.#callback(createPerformanceObserverEntryList(this.takeRecords())\x2C\x0d\n                   this);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserver ${inspect({\x0d\n      connected: kObservers.has(this)\x2C\x0d\n      pending: kPending.has(this)\x2C\x0d\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\x0d\n      buffer: this.#buffer\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\x0d\n  observe: kEnumerableProperty\x2C\x0d\n  disconnect: kEnumerableProperty\x2C\x0d\n  takeRecords: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserver'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\x0d\n *\x0d\n * Add the performance entry to the interested performance observer's queue.\x0d\n */\x0d\nfunction enqueue(entry) {\x0d\n  if (!isPerformanceEntry(entry))\x0d\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\x0d\n\x0d\n  for (const obs of kObservers) {\x0d\n    obs[kMaybeBuffer](entry);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the user timing entry to the global buffer.\x0d\n */\x0d\nfunction bufferUserTiming(entry) {\x0d\n  const entryType = entry.entryType;\x0d\n  let buffer;\x0d\n  if (entryType === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (entryType === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(buffer\x2C entry);\x0d\n  const count = buffer.length;\x0d\n\x0d\n  if (count > kPerformanceEntryBufferWarnSize &&\x0d\n    !kWarnedEntryTypes.has(entryType)) {\x0d\n    kWarnedEntryTypes.set(entryType\x2C true);\x0d\n    // No error code for this since it is a Warning\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\x0d\n                        `${count} ${entryType} entries added to the global ` +\x0d\n                        'performance entry buffer. Use ' +\x0d\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\x0d\n                        'clear the buffer.');\x0d\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\x0d\n    w.entryType = entryType;\x0d\n    w.count = count;\x0d\n    process.emitWarning(w);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the resource timing entry to the global buffer if the buffer size is not\x0d\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\x0d\n * performance object.\x0d\n *\x0d\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\x0d\n */\x0d\nfunction bufferResourceTiming(entry) {\x0d\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\x0d\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!resourceTimingBufferFullPending) {\x0d\n    resourceTimingBufferFullPending = true;\x0d\n    setImmediate(() => {\x0d\n      while (resourceTimingSecondaryBuffer.length > 0) {\x0d\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\x0d\n        dispatchBufferFull('resourcetimingbufferfull');\x0d\n\x0d\n        // Calculate the number of items to be pushed to the global buffer.\x0d\n        const numbersToPreserve = MathMax(\x0d\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\x0d\n          0\x2C\x0d\n        );\x0d\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\x0d\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\x0d\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\x0d\n        }\x0d\n\x0d\n        if (excessNumberBefore <= excessNumberAfter) {\x0d\n          resourceTimingSecondaryBuffer = [];\x0d\n        }\x0d\n      }\x0d\n      resourceTimingBufferFullPending = false;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\x0d\n}\x0d\n\x0d\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\x0d\nfunction setResourceTimingBufferSize(maxSize) {\x0d\n  // If the maxSize parameter is less than resource timing buffer current\x0d\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\x0d\n  // performance entry buffer.\x0d\n  resourceTimingBufferSizeLimit = maxSize;\x0d\n}\x0d\n\x0d\nfunction setDispatchBufferFull(fn) {\x0d\n  dispatchBufferFull = fn;\x0d\n}\x0d\n\x0d\nfunction clearEntriesFromBuffer(type\x2C name) {\x0d\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (type === 'mark') {\x0d\n    markEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else if (type === 'measure') {\x0d\n    measureEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else {\x0d\n    resourceTimingBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction filterBufferMapByNameAndType(name\x2C type) {\x0d\n  let bufferList;\x0d\n  if (type === 'mark') {\x0d\n    bufferList = markEntryBuffer;\x0d\n  } else if (type === 'measure') {\x0d\n    bufferList = measureEntryBuffer;\x0d\n  } else if (type === 'resource') {\x0d\n    bufferList = resourceTimingBuffer;\x0d\n  } else if (type !== undefined) {\x0d\n    // Unrecognized type;\x0d\n    return [];\x0d\n  } else {\x0d\n    bufferList = [];\x0d\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\x0d\n  }\x0d\n  if (name !== undefined) {\x0d\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\x0d\n  } else if (type !== undefined) {\x0d\n    bufferList = ArrayPrototypeSlice(bufferList);\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSort(bufferList\x2C (first\x2C second) => {\x0d\n    return first.startTime - second.startTime;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\x0d\n  const entry =\x0d\n    createPerformanceNodeEntry(\x0d\n      name\x2C\x0d\n      type\x2C\x0d\n      startTime\x2C\x0d\n      duration\x2C\x0d\n      details);\x0d\n\x0d\n  if (details !== undefined) {\x0d\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\x0d\n    // properties directly off the entry. Those have been\x0d\n    // moved into the details property. The existing accessors\x0d\n    // are still included but are deprecated.\x0d\n    entry[kDeprecatedFields] = new SafeMap();\x0d\n\x0d\n    const detailKeys = ObjectKeys(details);\x0d\n    const props = {};\x0d\n    for (let n = 0; n < detailKeys.length; n++) {\x0d\n      const key = detailKeys[n];\x0d\n      entry[kDeprecatedFields].set(key\x2C details[key]);\x0d\n      props[key] = {\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(() => {\x0d\n          return entry[kDeprecatedFields].get(key);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n        set: deprecate((value) => {\x0d\n          entry[kDeprecatedFields].set(key\x2C value);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n      };\x0d\n    }\x0d\n    ObjectDefineProperties(entry\x2C props);\x0d\n  }\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nsetupObservers(observerCallback);\x0d\n\x0d\nfunction hasObserver(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n  return observerCounts[observerType] > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction startPerf(target\x2C key\x2C context = {}) {\x0d\n  target[key] = {\x0d\n    ...context\x2C\x0d\n    startTime: now()\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction stopPerf(target\x2C key\x2C context = {}) {\x0d\n  const ctx = target[key];\x0d\n  if (!ctx) {\x0d\n    return;\x0d\n  }\x0d\n  const startTime = ctx.startTime;\x0d\n  const entry = createPerformanceNodeEntry(\x0d\n    ctx.name\x2C\x0d\n    ctx.type\x2C\x0d\n    startTime\x2C\x0d\n    now() - startTime\x2C\x0d\n    { ...ctx.detail\x2C ...context.detail }\x2C\x0d\n  );\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n\x0d\n  bufferUserTiming\x2C\x0d\n  bufferResourceTiming\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n};\x0d\n
code-source-info,0x1ac513ce5be,430,0,17356,C0O0C4O17356,,
code-creation,JS,10,382904,0x1ac513cfce6,1204, node:internal/perf/observe:1:1,0x1ac513ce538,~
code-source-info,0x1ac513cfce
code-creation,JS,10,383042,0x1ac513d0416,46,<instance_members_initializer> node:internal/perf/observe:243:1,0x1ac513cef50,~
code-source-info,0x1ac513d0416,430,6177,9877,C3O6218C12O6239C19O6239C32O6257C40O6267C45O9877,,
code-creation,Eval,10,383337,0x1ac513d20ce,5, node:internal/perf/performance_entry:1:1,0x1ac513d1ec8,~
script-source,431,node:internal/perf/performance_entry,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kName = Symbol('PerformanceEntry.Name');\x0d\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\x0d\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\x0d\nconst kDuration = Symbol('PerformanceEntry.Duration');\x0d\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\x0d\n\x0d\nfunction isPerformanceEntry(obj) {\x0d\n  return obj?.[kName] !== undefined;\x0d\n}\x0d\n\x0d\nclass PerformanceEntry {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  get entryType() {\x0d\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\x0d\n    return this[kEntryType];\x0d\n  }\x0d\n\x0d\n  get startTime() {\x0d\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\x0d\n    return this[kStartTime];\x0d\n  }\x0d\n\x0d\n  get duration() {\x0d\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\x0d\n    return this[kDuration];\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  entryType: kEnumerableProperty\x2C\x0d\n  startTime: kEnumerableProperty\x2C\x0d\n  duration: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction initPerformanceEntry(entry\x2C name\x2C type\x2C start\x2C duration) {\x0d\n  entry[kName] = name;\x0d\n  entry[kEntryType] = type;\x0d\n  entry[kStartTime] = start;\x0d\n  entry[kDuration] = duration;\x0d\n}\x0d\n\x0d\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\x0d\n  return ReflectConstruct(function PerformanceEntry() {\x0d\n    initPerformanceEntry(this\x2C name\x2C type\x2C start\x2C duration);\x0d\n  }\x2C []\x2C PerformanceEntry);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Node.js specific extension to PerformanceEntry.\x0d\n */\x0d\nclass PerformanceNodeEntry extends PerformanceEntry {\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n      detail: this[kDetail]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\x0d\n  return ReflectConstruct(function PerformanceNodeEntry() {\x0d\n    initPerformanceEntry(this\x2C name\x2C type\x2C start\x2C duration);\x0d\n    this[kDetail] = detail;\x0d\n  }\x2C []\x2C PerformanceNodeEntry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initPerformanceEntry\x2C\x0d\n  createPerformanceEntry\x2C\x0d\n  PerformanceEntry\x2C\x0d\n  isPerformanceEntry\x2C\x0d\n  PerformanceNodeEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n};\x0d\n
code-source-info,0x1ac513d20ce,431,0,3409,C0O0C4O3409,,
code-creation,JS,10,383518,0x1ac513d2e46,373, node:internal/perf/performance_entry:1:1,0x1ac513d2048,~
code-source-info,0x1ac513d2e46,431,0,3409,C0O0C59O28C64O55C70O76C75O166C78O166C83O123C88O130C94O268C97O268C102O229C107O242C112O329C115O329C120O303C126O384C129O384C134O372C140O418C143O418C147O418C149O471C152O471C156O471C158O529C161O529C165O529C167O586C170O586C174O586C176O640C179O640C183O640C214O1336C241O761C243O1829C246O1869C258O1891C264O1926C270O1961C276O1995C282O2027C286O1829C294O2559C322O2524C324O3233C331O3255C337O3280C343O3307C349O3328C355O3351C361O3376C367O3248C372O3408,,
code-creation,JS,10,383927,0x1ac513d4d16,34,protoGetter node:net:857:21,0x2173c77cfa8,~
code-source-info,0x1ac513d4d16,428,23322,23491,C0O23344C8O23372C13O23383C20O23472C27O23344C33O23490,,
tick,0x7ff777d13a1a,384554,1,0x7ff7776556e0,2,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x2173c776c6b,0x7ff6f83840eb,0x7ff6f8383d61,0x2173c76f36a,0x7ff6f83840eb,0x38242ae25e2,0x38242ad45a9,0xde6be17c95,0x38242ae2292,0x38242ae2106,0x38242adeae2,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
code-creation,Eval,10,385210,0x1ac513db4f6,5, node:dgram:1:1,0x1ac513daf70,~
script-source,432,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x2C\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x2C\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst udpSocketChannel = dc.channel('udp.socket');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x2C\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      if (this[kStateSymbol].handle) this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n  if (udpSocketChannel.hasSubscribers) {\x0d\n    udpSocketChannel.publish({\x0d\n      socket: this\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  state.handle.onerror = onError;\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n  // Sync the old handle state to new handle\x0d\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\x0d\n    newHandle.unref();\x0d\n  }\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x2C\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x2C\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address != null) {\x0d\n    validateString(address\x2C 'address');\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onError(nread\x2C handle\x2C error) {\x0d\n  const self = handle[owner_symbol];\x0d\n  return self.emit('error'\x2C error);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\nSocket.prototype.getSendQueueSize = function() {\x0d\n  return this[kStateSymbol].handle.getSendQueueSize();\x0d\n};\x0d\n\x0d\nSocket.prototype.getSendQueueCount = function() {\x0d\n  return this[kStateSymbol].handle.getSendQueueCount();\x0d\n};\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x2C\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x2C\x0d\n};\x0d\n
code-source-info,0x1ac513db4f6,432,0,29140,C0O0C4O29140,,
code-creation,JS,10,386565,0x1ac513dd5b6,1578, node:dgram:1:1,0x1ac513db470,~
code-source-info,0x1ac513dd5b
code-creation,Eval,10,387052,0x1ac513e0b8e,5, node:internal/dgram:1:1,0x1ac513e0988,~
script-source,433,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n};\x0d\n
code-source-info,0x1ac513e0b8e,433,0,1942,C0O0C4O1942,,
code-creation,JS,10,387164,0x1ac513e0e56,196, node:internal/dgram:1:1,0x1ac513e0b08,~
code-source-info,0x1ac513e0e56,433,0,1942,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1941,,
code-creation,Eval,10,387591,0x1ac513e60de,5, node:internal/socket_list:1:1,0x1ac513e5f88,~
script-source,434,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x2C\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x2C\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x2C\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x2C\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0x1ac513e60de,434,0,2817,C0O0C4O2817,,
code-creation,JS,10,387751,0x1ac513e671e,124, node:internal/socket_list:1:1,0x1ac513e6058,~
code-source-info,0x1ac513e671e,434,0,2817,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C72O1585C99O2760C106O2779C112O2795C118O2775C123O2816,,
code-creation,JS,10,387990,0x1ac513e7b46,14,customPromiseExecFunction node:child_process:237:35,0x2173c76ec08,~
code-source-info,0x1ac513e7b46,426,7089,7469,C0O7089C9O7104C13O7466,,
code-creation,JS,10,388159,0x1ac513ea176,227,findAvailablePort C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:188:27,0x38242ade628,~
code-source-info,0x1ac513ea176,392,6290,7052,C3O6346C6O6347C11O6384C13O6421C17O6429C22O6436C30O6436C35O6500C45O6508C54O6500C59O6555C64O6555C69O6597C77O6597C83O6638C93O6672C97O6638C104O6703C111O6703C118O6724C126O6725C132O6768C139O6786C145O6802C148O6815C152O6768C159O6836C163O6836C168O6860C170O6871C179O6902C183O6877C187O6871C188O6915C192O6962C197O6962C201O6981C203O6993C215O7025C220O7025C224O7038C226O7038,,
code-creation,JS,10,388241,0x1ac513ea3e6,14,getBindHost C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnector.js:219:21,0x38242ade678,~
code-source-info,0x1ac513ea3e6,392,7176,7229,C0O7183C4O7198C9O7202C13O7227,,
code-creation,JS,10,388312,0x1ac513ea4fe,81,inspectorOpen node:inspector:170:23,0x2173c7606a0,~
code-source-info,0x1ac513ea4fe,419,4545,5092,C0O4569C5O4573C10O4593C15O4599C20O4593C21O4961C26O4965C32O4988C52O4988C57O5035C62O5035C67O5056C71O5071C76O5071C80O5091,,
code-creation,JS,10,392130,0x1ac513ead06,9,exports.shouldForwardDebugConnection C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnectionForwarder.js:73:40,0x2173c7638f8,~
code-source-info,0x1ac513ead06,420,2524,2572,C0O2534C3O2541C7O2562C8O2570,,
code-creation,JS,10,392208,0x1ac513eaece,80,getGatewayHostPort C:\\Users\\mark_\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\231.8109.174\\plugins\\javascript-debugger\\lib\\debugConnectionForwarder.js:64:28,0x2173c763858,~
code-source-info,0x1ac513eaece,420,2231,2483,C0O2251C4O2259C9O2263C14O2316C18O2325C22O2333C27O2337C32O2316C37O2378C43O2403C52O2411C58O2430C65O2444C71O2456C77O2462C78O2469C79O2481,,
code-creation,JS,10,392645,0x1ac513ec1ae,144,execFileSync node:child_process:910:22,0x2173c76e988,~
code-source-info,0x1ac513ec1ae,426,25201,25661,C0O25228C12O25255C18O25231C24O25237C30O25243C36O25336C42O25358C54O25358C60O25395C64O25420C70O25433C73O25441C78O25448C83O25458C88O25448C93O25488C100O25497C108O25506C115O25516C120O25516C125O25571C128O25571C134O25610C136O25624C138O25624C139O25651C143O25658,,
code-creation,JS,10,392753,0x1ac513ec42e,203,normalizeExecFileArgs node:child_process:261:31,0x2173c76e688,~
code-source-info,0x1ac513ec42e,426,7644,8550,C0O7681C5O7685C11O7712C16O7719C24O7756C35O7809C38O7834C41O7855C46O7878C52O7917C55O7939C58O7960C61O7983C66O8008C70O8029C76O8071C83O8101C88O8129C96O8129C101O8175C106O8203C112O8237C117O8266C125O8266C130O8362C137O8384C142O8407C150O8384C155O8437C158O8471C166O8437C171O8506C178O8515C184O8521C190O8527C196O8536C202O8547,,
code-creation,JS,10,392912,0x1ac513ec886,359,spawnSync node:child_process:827:19,0x2173c76e8e8,~
code-source-info,0x1ac513ec
code-creation,JS,10,393240,0x1ac513ed366,1380,normalizeSpawnArguments node:child_process:544:33,0x2173c76e7c8,~
code-source-info,0x1ac513ed366,426,14523,19906,C0O14550C8O14550C13O14583C19O14583C24O14638C30O14645C35O14657C52O14663C57O14657C58O14728C63O14732C69O14759C74O14766C82O14803C87O14828C93O14849C99O14886C115O14892C120O14886C121O14959C124O14980C128O15001C134O15001C139O15048C143O15080C151O15117C159O15117C164O15176C169O15222C172O15246C180O15252C186O15349C193O15374C198O15398C206O15374C211O15487C220O15503C223O15519C228O15503C234O15532C245O15595C253O15538C258O15532C259O15659C268O15675C271O15691C276O15675C282O15704C293O15767C301O15710C306O15704C307O15833C314O15872C322O15917C330O15944C343O16059C351O15950C356O15944C357O16123C364O16145C369O16168C377O16145C382O16198C385O16232C393O16198C398O16319C405O16347C410O16371C418O16347C423O16477C428O16518C431O16563C439O16563C444O16685C450O16699C453O16733C461O16699C466O16779C480O16799C487O16808C538O16779C544O16873C547O16885C554O16894C559O16935C567O16979C575O17007C578O17022C583O17026C593O17102C604O17106C611O17182C624O17212C641O17234C645O17292C655O17306C666O17365C674O17409C682O17428C685O17440C692O17449C697O17473C703O17519C707O17544C717O17558C726O17604C734O17631C739O17667C744O17631C751O17692C756O17692C761O17757C770O17772C775O17797C778O17960C784O18013C793O17960C798O18024C804O18116C810O18166C819O18116C824O18177C830O18226C839O18177C844O18237C850O18288C859O18237C864O18299C870O18349C879O18299C884O18360C890O18411C899O18360C904O18422C910O18466C919O18422C924O18477C930O18521C939O18477C944O18532C950O18582C959O18532C964O18593C970O18640C979O18593C984O18670C987O18746C1001O18739C1014O18739C1015O18758C1021O18758C1030O18728C1034O18802C1037O18814C1044O18823C1056O18991C1063O18991C1068O18991C1070O19011C1081O19050C1084O19050C1095O19021C1103O19340C1120O19333C1150O19333C1153O19370C1155O19373C1159O19385C1161O19419C1171O19466C1184O19419C1189O19483C1199O19532C1212O19483C1217O19549C1225O19581C1237O19588C1243O19549C1248O19322C1320O19615C1327O19721C1333O19732C1337O19762C1349O19777C1355O19792C1359O19826C1371O19872C1379O19903,,
code-creation,JS,10,393452,0x1ac513edc76,45,validateArgumentNullCheck node:child_process:966:35,0x2173c76ea28,~
code-source-info,0x1ac513edc76,426,26605,26798,C0O26626C8O26657C14O26657C21O26704C37O26710C42O26704C44O26797,,
code-creation,JS,10,393500,0x1ac513edd96,59,validateArgumentsNullCheck node:child_process:973:36,0x2173c76ea78,~
code-source-info,0x1ac513edd96,426,26839,26970,C0O26874C2O26886C6O26879C11O26906C16O26936C22O26944C32O26956C43O26906C48O26896C53O26861C58O26969,,
code-creation,JS,10,393557,0x1ac513edec6,50,copyProcessEnvToEnv node:child_process:536:29,0x2173c76e778,~
code-source-info,0x1ac513edec6,426,14309,14487,C0O14337C3O14349C10O14352C17O14371C21O14393C24O14393C31O14449C34O14469C41O14472C44O14459C49O14486,,
code-creation,JS,10,393637,0x1ac513edff6,48, node:child_process:682:7,0x1ac513ecf10,~
code-source-info,0x1ac513edff6,426,19086,19302,C0O19127C7O19127C12O19169C17O19180C22O19180C29O19212C30O19225C31O19246C36O19253C41O19253C46O19281C47O19293,,
code-creation,JS,10,393762,0x1ac513ee74e,10, node:child_process:57:3,0x2173c76ebb8,~
code-source-info,0x1ac513ee74e,426,1975,2006,C0O1990C2O1996C9O2005,,
code-creation,JS,10,393808,0x1ac513ee856,46,validateTimeout node:child_process:980:25,0x2173c76eac8,~
code-source-info,0x1ac513ee856,426,27000,27168,C0O27015C7O27040C10O27040C17O27076C22O27090C38O27096C43O27090C45O27167,,
code-creation,JS,10,393845,0x1ac513ee9c6,41,validateMaxBuffer node:child_process:987:27,0x2173c76eb18,~
code-source-info,0x1ac513ee9c6,426,27200,27453,C0O27217C12O27287C17O27301C33O27307C38O27301C40O27452,,
code-creation,JS,10,393882,0x1ac513eeb46,53,sanitizeKillSignal node:child_process:996:28,0x2173c76eb68,~
code-source-info,0x1ac513eeb46,426,27486,27830,C0O27504C12O27581C17O27588C21O27621C22O27632C27O27663C45O27669C50O27663C52O27829,,
code-creation,JS,10,394060,0x1ac513eedf6,155,getValidStdio node:internal/child_process:979:23,0x2173c775820,~
code-source-info,0x1ac513eedf6,427,28417,31421,C0O28417C15O28440C16O28440C18O28452C19O28452C21O28501C27O28539C32O28547C40O28584C47O28589C53O28617C68O28623C73O28617C74O28908C81O28915C86O28920C95O28920C100O28895C104O29038C111O29067C122O29046C129O31389C136O31398C142O31405C148O31410C154O31418,,
code-creation,JS,10,394127,0x1ac513f137e,119,stdioStringToArray node:internal/child_process:237:28,0x2173c775460,~
code-source-info,0x1ac513f137e,427,6491,6894,C0O6529C3O6538C36O6617C53O6617C58O6667C60O6695C76O6695C81O6733C83O6761C96O6767C101O6761C102O6820C106O6833C111O6833C116O6876C118O6891,,
code-creation,JS,10,394268,0x1ac513f17f6,628, node:internal/child_process:998:39,0x1ac513eecc0,~
code-source-info,0x1ac513f17f
code-creation,JS,10,394493,0x1ac513f1eae,239,spawnSync node:internal/child_process:1102:19,0x2173c775940,~
code-source-info,0x1ac513f1eae,427,31986,32656,C0O32016C5O32027C10O32027C16O32059C22O32077C28O32097C35O32106C40O32140C42O32154C47O32161C51O32145C56O32195C63O32201C68O32215C70O32239C75O32258C82O32264C86O32268C91O32285C96O32268C101O32249C105O32170C110O32127C114O32336C123O32353C130O32359C133O32327C137O32390C146O32407C153O32413C156O32381C160O32434C166O32448C168O32463C171O32485C179O32515C183O32505C187O32463C192O32461C196O32534C201O32555C205O32545C209O32573C216O32591C219O32619C227O32591C232O32589C236O32639C238O32653,,
tick,0x7ff8e7af1be4,403779,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,408178,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,424333,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,440400,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,456456,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,472462,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff8e7af1be4,488832,1,0x7ff777536a00,6,0x7ff77812e530,0x1ac513f1eb8,0x1ac513ec9e7,0x1ac513ec1e4,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
new,MemoryChunk,0x3d44c840000,262144
tick,0x7ff7785cf158,504814,0,0x0,6,0x7ff777ca0df0,0x7ff7781c883f,0x1ac513ec226,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
tick,0x7ff778044c64,513050,0,0x0,5,0x7ff777ca0df0,0x7ff7781c883f,0x1ac513ec226,0x38242adeba5,0x38242adc5dd,0x38242ad54b8,0x38242ad4876,0xde6be17d30,0xde6be177da,0xde6be15a81,0xde6be1581d,0xde6be0afa7,0x13674f33de4,0x13674f3259e,0x13674f31cf9
new,MemoryChunk,0x18bc1a80000,262144
code-creation,RegExp,3,516708,0x7ff6f838d980,2604,^(?:(?:file:\\/\\/)?\\/|(?:[\\w]:))(?!.+[\\/|\\\\]node_modules[\\/|\\\\].+).+[aA][pP][pP]\\.[cC][oO][mM][pP][oO][nN][eE][nN][tT]\\.[a-zA-Z0-9]+$
code-creation,JS,10,517244,0x18bc1a87e1e,95,enable node:internal/inspector_async_hook:50:16,0x19ee5865ea0,~
script-source,65,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a87e1e,65,1323,1905,C0O1331C6O1355C9O1355C12O1378C17O1389C24O1394C29O1627C32O1635C45O1731C48O1738C62O1716C71O1635C79O1883C84O1888C89O1888C94O1904,,
code-creation,JS,10,517609,0x18bc1a881de,144,lazyHookCreation node:internal/inspector_async_hook:10:26,0x19ee5865d60,~
code-source-info,0x18bc1a881de,65,109,1304,C0O109C8O135C16O135C20O135C22O191C30O191C35O176C40O218C48O227C57O225C65O259C70O284C78O825C86O960C94O1095C102O266C111O264C119O1269C130O1291C133O1287C138O1285C143O1303,,
code-creation,JS,10,517843,0x18bc1a8869e,317,enable node:async_hooks:91:9,0x320a78c9190,~
script-source,30,node:async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIs\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ASYNC_CALLBACK\x2C\x0d\n  ERR_ASYNC_TYPE\x2C\x0d\n  ERR_INVALID_ASYNC_ID\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst internal_async_hooks = require('internal/async_hooks');\x0d\n\x0d\n// Get functions\x0d\n// For userland AsyncResources\x2C make sure to emit a destroy event when the\x0d\n// resource gets gced.\x0d\nconst { registerDestroyHook } = internal_async_hooks;\x0d\nconst {\x0d\n  asyncWrap\x2C\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  hasAsyncIdStack\x2C\x0d\n  getHookArrays\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n} = internal_async_hooks;\x0d\n\x0d\n// Get symbols\x0d\nconst {\x0d\n  async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n  init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n  promise_resolve_symbol\x2C\x0d\n} = internal_async_hooks.symbols;\x0d\n\x0d\n// Get constants\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n} = internal_async_hooks.constants;\x0d\n\x0d\n// Listener API //\x0d\n\x0d\nclass AsyncHook {\x0d\n  constructor({ init\x2C before\x2C after\x2C destroy\x2C promiseResolve }) {\x0d\n    if (init !== undefined && typeof init !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.init');\x0d\n    if (before !== undefined && typeof before !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.before');\x0d\n    if (after !== undefined && typeof after !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.after');\x0d\n    if (destroy !== undefined && typeof destroy !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.destroy');\x0d\n    if (promiseResolve !== undefined && typeof promiseResolve !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.promiseResolve');\x0d\n\x0d\n    this[init_symbol] = init;\x0d\n    this[before_symbol] = before;\x0d\n    this[after_symbol] = after;\x0d\n    this[destroy_symbol] = destroy;\x0d\n    this[promise_resolve_symbol] = promiseResolve;\x0d\n  }\x0d\n\x0d\n  enable() {\x0d\n    // The set of callbacks for a hook should be the same regardless of whether\x0d\n    // enable()/disable() are run during their execution. The following\x0d\n    // references are reassigned to the tmp arrays if a hook is currently being\x0d\n    // processed.\x0d\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\x0d\n\x0d\n    // Each hook is only allowed to be added once.\x0d\n    if (ArrayPrototypeIncludes(hooks_array\x2C this))\x0d\n      return this;\x0d\n\x0d\n    const prev_kTotals = hook_fields[kTotals];\x0d\n\x0d\n    // createHook() has already enforced that the callbacks are all functions\x2C\x0d\n    // so here simply increment the count of whether each callbacks exists or\x0d\n    // not.\x0d\n    hook_fields[kTotals] = hook_fields[kInit] += +!!this[init_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kBefore] += +!!this[before_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kAfter] += +!!this[after_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kDestroy] += +!!this[destroy_symbol];\x0d\n    hook_fields[kTotals] +=\x0d\n        hook_fields[kPromiseResolve] += +!!this[promise_resolve_symbol];\x0d\n    ArrayPrototypePush(hooks_array\x2C this);\x0d\n\x0d\n    if (prev_kTotals === 0 && hook_fields[kTotals] > 0) {\x0d\n      enableHooks();\x0d\n    }\x0d\n\x0d\n    updatePromiseHookMode();\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  disable() {\x0d\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\x0d\n\x0d\n    const index = ArrayPrototypeIndexOf(hooks_array\x2C this);\x0d\n    if (index === -1)\x0d\n      return this;\x0d\n\x0d\n    const prev_kTotals = hook_fields[kTotals];\x0d\n\x0d\n    hook_fields[kTotals] = hook_fields[kInit] -= +!!this[init_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kBefore] -= +!!this[before_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kAfter] -= +!!this[after_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kDestroy] -= +!!this[destroy_symbol];\x0d\n    hook_fields[kTotals] +=\x0d\n        hook_fields[kPromiseResolve] -= +!!this[promise_resolve_symbol];\x0d\n    ArrayPrototypeSplice(hooks_array\x2C index\x2C 1);\x0d\n\x0d\n    if (prev_kTotals > 0 && hook_fields[kTotals] === 0) {\x0d\n      disableHooks();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createHook(fns) {\x0d\n  return new AsyncHook(fns);\x0d\n}\x0d\n\x0d\n\x0d\n// Embedder API //\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nclass AsyncResource {\x0d\n  constructor(type\x2C opts = kEmptyObject) {\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    let triggerAsyncId = opts;\x0d\n    let requireManualDestroy = false;\x0d\n    if (typeof opts !== 'number') {\x0d\n      triggerAsyncId = opts.triggerAsyncId === undefined ?\x0d\n        getDefaultTriggerAsyncId() : opts.triggerAsyncId;\x0d\n      requireManualDestroy = !!opts.requireManualDestroy;\x0d\n    }\x0d\n\x0d\n    // Unlike emitInitScript\x2C AsyncResource doesn't supports null as the\x0d\n    // triggerAsyncId.\x0d\n    if (!NumberIsSafeInteger(triggerAsyncId) || triggerAsyncId < -1) {\x0d\n      throw new ERR_INVALID_ASYNC_ID('triggerAsyncId'\x2C triggerAsyncId);\x0d\n    }\x0d\n\x0d\n    const asyncId = newAsyncId();\x0d\n    this[async_id_symbol] = asyncId;\x0d\n    this[trigger_async_id_symbol] = triggerAsyncId;\x0d\n\x0d\n    if (initHooksExist()) {\x0d\n      if (enabledHooksExist() && type.length === 0) {\x0d\n        throw new ERR_ASYNC_TYPE(type);\x0d\n      }\x0d\n\x0d\n      emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C this);\x0d\n    }\x0d\n\x0d\n    if (!requireManualDestroy && destroyHooksExist()) {\x0d\n      // This prop name (destroyed) has to be synchronized with C++\x0d\n      const destroyed = { destroyed: false };\x0d\n      this[destroyedSymbol] = destroyed;\x0d\n      registerDestroyHook(this\x2C asyncId\x2C destroyed);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInAsyncScope(fn\x2C thisArg\x2C ...args) {\x0d\n    const asyncId = this[async_id_symbol];\x0d\n    emitBefore(asyncId\x2C this[trigger_async_id_symbol]\x2C this);\x0d\n\x0d\n    try {\x0d\n      const ret =\x0d\n        ReflectApply(fn\x2C thisArg\x2C args);\x0d\n\x0d\n      return ret;\x0d\n    } finally {\x0d\n      if (hasAsyncIdStack())\x0d\n        emitAfter(asyncId);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  emitDestroy() {\x0d\n    if (this[destroyedSymbol] !== undefined) {\x0d\n      this[destroyedSymbol].destroyed = true;\x0d\n    }\x0d\n    emitDestroy(this[async_id_symbol]);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  asyncId() {\x0d\n    return this[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  triggerAsyncId() {\x0d\n    return this[trigger_async_id_symbol];\x0d\n  }\x0d\n\x0d\n  bind(fn\x2C thisArg) {\x0d\n    validateFunction(fn\x2C 'fn');\x0d\n    let bound;\x0d\n    if (thisArg === undefined) {\x0d\n      const resource = this;\x0d\n      bound = function(...args) {\x0d\n        ArrayPrototypeUnshift(args\x2C fn\x2C this);\x0d\n        return ReflectApply(resource.runInAsyncScope\x2C resource\x2C args);\x0d\n      };\x0d\n    } else {\x0d\n      bound = FunctionPrototypeBind(this.runInAsyncScope\x2C this\x2C fn\x2C thisArg);\x0d\n    }\x0d\n    ObjectDefineProperties(bound\x2C {\x0d\n      'length': {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        value: fn.length\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      'asyncResource': {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        value: this\x2C\x0d\n        writable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    return bound;\x0d\n  }\x0d\n\x0d\n  static bind(fn\x2C type\x2C thisArg) {\x0d\n    type = type || fn.name;\x0d\n    return (new AsyncResource(type || 'bound-anonymous-fn')).bind(fn\x2C thisArg);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst storageList = [];\x0d\nconst storageHook = createHook({\x0d\n  init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    const currentResource = executionAsyncResource();\x0d\n    // Value of currentResource is always a non null object\x0d\n    for (let i = 0; i < storageList.length; ++i) {\x0d\n      storageList[i]._propagate(resource\x2C currentResource\x2C type);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass AsyncLocalStorage {\x0d\n  constructor() {\x0d\n    this.kResourceStore = Symbol('kResourceStore');\x0d\n    this.enabled = false;\x0d\n  }\x0d\n\x0d\n  static bind(fn) {\x0d\n    return AsyncResource.bind(fn);\x0d\n  }\x0d\n\x0d\n  static snapshot() {\x0d\n    return AsyncLocalStorage.bind((cb\x2C ...args) => cb(...args));\x0d\n  }\x0d\n\x0d\n  disable() {\x0d\n    if (this.enabled) {\x0d\n      this.enabled = false;\x0d\n      // If this.enabled\x2C the instance must be in storageList\x0d\n      ArrayPrototypeSplice(storageList\x2C\x0d\n                           ArrayPrototypeIndexOf(storageList\x2C this)\x2C 1);\x0d\n      if (storageList.length === 0) {\x0d\n        storageHook.disable();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  _enable() {\x0d\n    if (!this.enabled) {\x0d\n      this.enabled = true;\x0d\n      ArrayPrototypePush(storageList\x2C this);\x0d\n      storageHook.enable();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Propagate the context from a parent resource to a child one\x0d\n  _propagate(resource\x2C triggerResource\x2C type) {\x0d\n    const store = triggerResource[this.kResourceStore];\x0d\n    if (this.enabled) {\x0d\n      resource[this.kResourceStore] = store;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  enterWith(store) {\x0d\n    this._enable();\x0d\n    const resource = executionAsyncResource();\x0d\n    resource[this.kResourceStore] = store;\x0d\n  }\x0d\n\x0d\n  run(store\x2C callback\x2C ...args) {\x0d\n    // Avoid creation of an AsyncResource if store is already active\x0d\n    if (ObjectIs(store\x2C this.getStore())) {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    }\x0d\n\x0d\n    this._enable();\x0d\n\x0d\n    const resource = executionAsyncResource();\x0d\n    const oldStore = resource[this.kResourceStore];\x0d\n\x0d\n    resource[this.kResourceStore] = store;\x0d\n\x0d\n    try {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    } finally {\x0d\n      resource[this.kResourceStore] = oldStore;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  exit(callback\x2C ...args) {\x0d\n    if (!this.enabled) {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    }\x0d\n    this.disable();\x0d\n    try {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    } finally {\x0d\n      this._enable();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  getStore() {\x0d\n    if (this.enabled) {\x0d\n      const resource = executionAsyncResource();\x0d\n      return resource[this.kResourceStore];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Placing all exports down here because the exported classes won't export\x0d\n// otherwise.\x0d\nmodule.exports = {\x0d\n  // Public API\x0d\n  AsyncLocalStorage\x2C\x0d\n  createHook\x2C\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  asyncWrapProviders: ObjectFreeze({ __proto__: null\x2C ...asyncWrap.Providers })\x2C\x0d\n  // Embedder API\x0d\n  AsyncResource\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a8869e,30,2456,3726,C0O2763C5O2763C11O2731C18O2747C22O2839C27O2843C34O2893C36O2905C37O2934C39O2946C41O2945C45O3135C47O3147C52O3170C61O3188C63O3187C68O3180C74O3177C80O3156C84O3207C86O3219C95O3243C104O3263C106O3262C111O3255C117O3252C126O3228C130O3284C132O3296C141O3320C150O3339C152O3338C157O3331C163O3328C172O3305C176O3359C178O3371C187O3395C196O3416C198O3415C203O3408C209O3405C218O3380C222O3438C224O3450C233O3483C242O3511C244O3510C249O3503C255O3500C264O3459C268O3541C273O3541C278O3587C279O3604C286O3625C288O3624C293O3634C298O3648C303O3648C306O3677C311O3677C314O3709C316O3721,,
code-creation,JS,10,518900,0x18bc1a88a0e,106,getHookArrays node:internal/async_hooks:266:23,0xf2fdb68d30,~
script-source,13,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x2C\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x2C\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(kGenericUserError);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  const promiseHooks = require('internal/promise_hooks');\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n *\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x2C\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a88a0e,13,10182,10660,C0O10190C5O10207C11O10218C16O10230C25O10238C28O10251C41O10258C49O10277C50O10535C55O10552C61O10577C64O10577C67O10600C76O10608C79O10621C92O10632C95O10645C105O10657,,
code-creation,JS,10,520262,0x18bc1a88b86,34,enableHooks node:internal/async_hooks:368:21,0xf2fdb690a0,~
code-source-info,0x18bc1a88b86,13,13604,13694,C0O13612C7O13630C16O13638C20O13649C28O13649C33O13693,,
code-creation,JS,10,520335,0x18bc1a88d96,137,updatePromiseHookMode node:internal/async_hooks:375:31,0xf2fdb690f0,~
code-source-info,0x18bc1a88d96,13,13750,14316,C0O13758C4O13774C10O13789C12O13802C15O13806C20O13831C23O13842C37O13935C40O13939C45O13967C48O14003C54O14024C59O14024C62O14067C68O14067C73O14136C85O14160C91O14183C97O14214C104O14246C117O14296C121O14136C129O14121C136O14315,,
code-creation,JS,10,520390,0x18bc1a88f36,13,initHooksExist node:internal/async_hooks:479:24,0xf2fdb69410,~
code-source-info,0x18bc1a88f36,13,16726,16760,C0O16734C5O16750C8O16741C12O16757,,
code-creation,JS,10,520423,0x18bc1a8901e,16,hasHooks node:internal/async_hooks:471:18,0xf2fdb69370,~
code-source-info,0x18bc1a8901e,13,16586,16634,C0O16597C7O16621C12O16627C15O16631,,
code-creation,JS,10,520450,0x18bc1a89106,13,destroyHooksExist node:internal/async_hooks:487:27,0xf2fdb694b0,~
code-source-info,0x18bc1a89106,13,16853,16890,C0O16861C5O16877C8O16868C12O16887,,
code-creation,Eval,10,520647,0x18bc1a896be,5, node:internal/promise_hooks:1:1,0x18bc1a89428,~
script-source,435,node:internal/promise_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { setPromiseHooks } = internalBinding('async_wrap');\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validatePlainFunction } = require('internal/validators');\x0d\n\x0d\nconst hooks = {\x0d\n  init: []\x2C\x0d\n  before: []\x2C\x0d\n  after: []\x2C\x0d\n  settled: []\x2C\x0d\n};\x0d\n\x0d\nfunction initAll(promise\x2C parent) {\x0d\n  const hookSet = ArrayPrototypeSlice(hooks.init);\x0d\n  const exceptions = [];\x0d\n\x0d\n  for (let i = 0; i < hookSet.length; i++) {\x0d\n    const init = hookSet[i];\x0d\n    try {\x0d\n      init(promise\x2C parent);\x0d\n    } catch (err) {\x0d\n      ArrayPrototypePush(exceptions\x2C err);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Triggering exceptions is deferred to allow other hooks to complete\x0d\n  for (let i = 0; i < exceptions.length; i++) {\x0d\n    const err = exceptions[i];\x0d\n    triggerUncaughtException(err\x2C false);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeRunHook(list) {\x0d\n  return (promise) => {\x0d\n    const hookSet = ArrayPrototypeSlice(list);\x0d\n    const exceptions = [];\x0d\n\x0d\n    for (let i = 0; i < hookSet.length; i++) {\x0d\n      const hook = hookSet[i];\x0d\n      try {\x0d\n        hook(promise);\x0d\n      } catch (err) {\x0d\n        ArrayPrototypePush(exceptions\x2C err);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Triggering exceptions is deferred to allow other hooks to complete\x0d\n    for (let i = 0; i < exceptions.length; i++) {\x0d\n      const err = exceptions[i];\x0d\n      triggerUncaughtException(err\x2C false);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst beforeAll = makeRunHook(hooks.before);\x0d\nconst afterAll = makeRunHook(hooks.after);\x0d\nconst settledAll = makeRunHook(hooks.settled);\x0d\n\x0d\nfunction maybeFastPath(list\x2C runAll) {\x0d\n  return list.length > 1 ? runAll : list[0];\x0d\n}\x0d\n\x0d\nfunction update() {\x0d\n  const init = maybeFastPath(hooks.init\x2C initAll);\x0d\n  const before = maybeFastPath(hooks.before\x2C beforeAll);\x0d\n  const after = maybeFastPath(hooks.after\x2C afterAll);\x0d\n  const settled = maybeFastPath(hooks.settled\x2C settledAll);\x0d\n  setPromiseHooks(init\x2C before\x2C after\x2C settled);\x0d\n}\x0d\n\x0d\nfunction stop(list\x2C hook) {\x0d\n  const index = ArrayPrototypeIndexOf(list\x2C hook);\x0d\n  if (index >= 0) {\x0d\n    ArrayPrototypeSplice(list\x2C index\x2C 1);\x0d\n    update();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeUseHook(name) {\x0d\n  const list = hooks[name];\x0d\n  return (hook) => {\x0d\n    validatePlainFunction(hook\x2C `${name}Hook`);\x0d\n    ArrayPrototypePush(list\x2C hook);\x0d\n    update();\x0d\n    return FunctionPrototypeBind(stop\x2C null\x2C list\x2C hook);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst onInit = makeUseHook('init');\x0d\nconst onBefore = makeUseHook('before');\x0d\nconst onAfter = makeUseHook('after');\x0d\nconst onSettled = makeUseHook('settled');\x0d\n\x0d\nfunction createHook({ init\x2C before\x2C after\x2C settled } = kEmptyObject) {\x0d\n  const hooks = [];\x0d\n\x0d\n  if (init) ArrayPrototypePush(hooks\x2C onInit(init));\x0d\n  if (before) ArrayPrototypePush(hooks\x2C onBefore(before));\x0d\n  if (after) ArrayPrototypePush(hooks\x2C onAfter(after));\x0d\n  if (settled) ArrayPrototypePush(hooks\x2C onSettled(settled));\x0d\n\x0d\n  return () => {\x0d\n    for (const stop of hooks) {\x0d\n      stop();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createHook\x2C\x0d\n  onInit\x2C\x0d\n  onBefore\x2C\x0d\n  onAfter\x2C\x0d\n  onSettled\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a896be,435,0,3200,C0O0C4O3200,,
code-creation,JS,10,520821,0x18bc1a89b8e,308, node:internal/promise_hooks:1:1,0x18bc1a89638,~
code-source-info,0x18bc1a89b8e,435,0,3200,C0O0C95O28C101O54C107O78C113O103C119O126C125O198C128O198C133O178C139O267C142O267C147O238C153O322C156O322C161O305C167O383C170O383C175O357C181O432C185O432C187O1597C190O1615C195O1597C199O1597C201O1642C204O1660C209O1642C213O1642C215O1688C218O1706C223O1688C227O1688C229O2549C232O2549C236O2549C238O2588C241O2588C245O2588C247O2628C250O2628C254O2628C256O2669C259O2669C263O2669C265O3111C272O3133C278O3148C284O3159C290O3172C296O3184C302O3126C307O3199,,
code-creation,JS,10,521177,0x18bc1a8a42e,14,makeRunHook node:internal/promise_hooks:44:21,0x18bc1a89740,~
code-source-info,0x18bc1a8a42e,435,1039,1575,C0O1039C9O1051C13O1572,,
code-creation,JS,10,521224,0x18bc1a8a9de,31,makeUseHook node:internal/promise_hooks:90:21,0x18bc1a89880,~
code-source-info,0x18bc1a8a9de,435,2302,2530,C0O2302C12O2327C21O2332C24O2327C26O2343C30O2527,,
code-creation,JS,10,521278,0x18bc1a8ac6e,13,promiseResolveHooksExist node:internal/async_hooks:491:34,0xf2fdb69500,~
code-source-info,0x18bc1a8ac6e,13,16927,16971,C0O16935C5O16951C8O16942C12O16968,,
code-creation,JS,10,521335,0x18bc1a8ae36,173,createHook node:internal/promise_hooks:105:20,0x18bc1a898d0,~
code-source-info,0x18bc1a8ae36,435,2715,3107,C6O2751C13O2718C18O2724C23O2732C28O2739C40O2784C42O2784C44O2793C48O2803C62O2829C65O2829C70O2803C75O2847C79O2859C93O2885C96O2885C101O2859C106O2907C110O2918C124O2944C127O2944C132O2918C137O2964C141O2977C155O3003C158O3003C163O2977C168O3029C172O3104,,
code-creation,JS,10,521398,0x18bc1a8b056,75, node:internal/promise_hooks:92:10,0x18bc1a8a930,~
code-source-info,0x18bc1a8b056,435,2350,2526,C0O2367C9O2398C17O2367C22O2416C31O2435C34O2416C39O2453C44O2453C47O2468C63O2509C69O2475C74O2521,,
code-creation,JS,10,521440,0x18bc1a8b19e,41, node:internal/validators:432:47,0xf2fdb6e100,~
code-source-info,0x18bc1a8b19e,14,12040,12185,C0O12062C8O12097C11O12097C17O12126C33O12132C38O12126C40O12184,,
code-creation,JS,10,521486,0x18bc1a8b2e6,118,update node:internal/promise_hooks:74:16,0x18bc1a897e0,~
code-source-info,0x18bc1a8b2e6,435,1825,2108,C0O1846C5O1860C8O1866C16O1846C22O1900C27O1914C30O1920C37O1928C40O1900C46O1957C51O1971C54O1977C61O1984C64O1957C70O2014C75O2028C78O2034C85O2043C88O2014C94O2059C111O2059C117O2107,,
code-creation,JS,10,521530,0x18bc1a8b466,21,maybeFastPath node:internal/promise_hooks:70:23,0x18bc1a89790,~
code-source-info,0x18bc1a8b466,435,1741,1806,C0O1773C7O1780C17O1799C20O1803,,
code-creation,JS,10,521677,0x18bc1a8b61e,127,checkExecSyncError node:child_process:875:28,0x2173c76e938,~
code-source-info,0x18bc1a8b61e,426,24279,24651,C0O24305C2O24321C8O24345C13O24357C18O24357C25O24399C31O24406C36O24430C39O24455C44O24462C48O24469C54O24469C63O24513C69O24527C74O24534C80O24541C85O24553C88O24569C93O24576C98O24576C113O24595C118O24601C124O24637C126O24648,,
code-creation,JS,10,521749,0x18bc1a8b866,50,initializeFrozenIntrinsics node:internal/process/pre_execution:588:36,0x19ee5870bf8,~
code-source-info,0x18bc1a8b866,69,18811,19039,C0O18819C8O18823C14O18869C17O18877C28O18877C34O18991C40O18991C45O19028C49O19038,,
code-creation,JS,10,521785,0x18bc1a8b986,22,markBootstrapComplete node:internal/process/pre_execution:609:31,0x19ee5870c98,~
code-source-info,0x18bc1a8b986,69,19436,19502,C0O19444C6O19444C11O19474C16O19475C21O19501,,
code-creation,JS,10,521854,0x18bc1a8bb56,216,loadESM node:internal/process/esm_loader:91:41,0x2173c764790,~
code-source-info,0x18bc1a8bb56,421,2771,3099,C10O2771C21O2798C24O2804C35O2798C58O2829C60O2844C63O2835C75O2829C113O2880C120O2884C125O2932C130O2940C138O2940C143O2969C152O2976C153O2989C161O2989C166O3014C176O3015C193O3098,,
code-creation,JS,10,521900,0x18bc1a8bd16,18,promiseInitHookWithDestroyTracking node:internal/async_hooks:327:44,0xf2fdb68f10,~
code-source-info,0x18bc1a8bd16,13,12324,12420,C0O12347C3O12347C8O12384C11O12384C17O12419,,
code-creation,JS,10,521935,0x18bc1a8be0e,46,promiseInitHook node:internal/async_hooks:320:25,0xf2fdb68ec0,~
code-source-info,0x18bc1a8be0e,13,12052,12277,C0O12075C3O12075C8O12125C10O12133C12O12132C16O12177C18O12185C20O12184C24O12214C39O12214C45O12276,,
code-creation,JS,10,521977,0x18bc1a8bf2e,59,trackPromise node:internal/async_hooks:306:22,0xf2fdb68e70,~
code-source-info,0x18bc1a8bf2e,13,11603,12024,C0O11626C2O11638C4O11637C9O11663C10O11670C11O11854C18O11863C27O11894C31O11927C33O11935C39O11954C42O11952C46O11971C48O11979C53O12004C58O12023,,
code-creation,JS,10,522034,0x18bc1a8c096,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0xf2fdb69280,~
code-source-info,0x18bc1a8c096,13,15459,15722,C0O15497C7O15513C9O15512C13O15608C14O15634C19O15644C26O15667C28O15666C31O15686C32O15690C34O15719,,
code-creation,JS,10,522070,0x18bc1a8c1ae,23,newAsyncId node:internal/async_hooks:417:20,0xf2fdb691e0,~
code-source-info,0x18bc1a8c1ae,13,14984,15037,C0O14992C7O15017C16O15032C22O15034,,
code-creation,JS,10,522116,0x18bc1a8c33e,50,emitInitScript node:internal/async_hooks:496:24,0xf2fdb69550,~
code-source-info,0x18bc1a8c33e,13,17000,17396,C0O17206C5O17220C8O17211C14O17233C15O17240C16O17246C20O17282C23O17299C28O17337C43O17337C49O17395,,
code-creation,JS,10,522184,0x18bc1a8c4ee,230,emitInitNative node:internal/async_hooks:192:24,0xf2fdb68c90,~
code-source-info,0x18bc1a8c4ee,13,7591,8730,C0O7638C12O7662C16O7671C19O7682C31O8024C33O8029C35O8031C38O8044C43O8050C47O8029C52O8072C57O8096C64O8101C70O8105C72O8104C79O8145C84O8158C91O8163C97O8167C99O8166C115O8179C120O8059C125O8011C142O8294C150O8294C168O8329C180O8353C195O8624C200O8641C206O8652C213O8661C216O8674C222O8701C225O8701C229O8729,,
code-creation,JS,10,522249,0x18bc1a8c726,29,lookupPublicResource node:internal/async_hooks:177:30,0xf2fdb68c40,~
code-source-info,0x18bc1a8c726,13,7042,7370,C0O7058C10O7113C12O7129C13O7256C15O7265C17O7264C21O7286C23O7325C25O7347C26O7351C28O7367,,
code-creation,JS,10,522296,0x18bc1a8c86e,52,init node:internal/inspector_async_hook:16:9,0x18bc1a87f78,~
code-source-info,0x18bc1a8c86e,65,288,816,C0O657C2O670C4O679C9O708C14O719C19O719C26O754C31O764C45O764C51O815,,
code-creation,JS,10,522336,0x18bc1a8c996,28,destroyTracking node:internal/async_hooks:332:25,0xf2fdb68f60,~
code-source-info,0x18bc1a8c996,13,12448,12591,C0O12471C3O12471C8O12521C10O12529C12O12528C16O12550C21O12550C27O12590,,
code-creation,JS,10,522443,0x18bc1a8cbe6,378,initializeLoader node:internal/process/esm_loader:27:32,0x2173c7646f0,~
code-source-info,0x18bc1a8cbe6,421,805,2061,C10O805C18O813C24O837C33O844C34O879C40O879C45O860C50O933C53O933C58O1000C61O1000C66O1037C71O1056C74O1070C79O1070C86O1076C93O1060C94O1101C97O1148C102O1148C108O1187C111O1214C116O1214C121O1232C126O1257C128O1278C132O1262C137O1319C139O1332C143O1480C157O1496C163O1536C173O1486C186O1456C212O1583C217O1583C222O1627C227O1627C232O1287C237O1244C241O1793C246O1803C251O1803C256O1836C261O1846C266O1846C270O1920C277O1938C286O1955C298O1961C311O1955C336O2034C340O2051C355O2060,,
code-creation,JS,10,522600,0x18bc1a8d04e,296,pathToFileURL node:internal/url:1248:23,0x320a78f3c20,~
code-source-info,0x18bc1a8d04e
code-creation,JS,10,522698,0x18bc1a8d316,106,URL node:internal/url:542:14,0x320a78f2ae8,~
code-source-info,0x18bc1a8d316,40,14880,15267,C0O14880C27O14948C31O14973C35O14978C42O14993C45O14989C50O14987C54O15014C58O15047C62O15095C71O15173C81O15095C87O15199C89O15222C98O15228C103O15222C105O15266,,
code-creation,JS,10,522743,0x18bc1a8d53e,16,URLContext node:internal/url:140:1,0x320a78f2378,~
code-source-info,0x18bc1a8d53e,40,3100,3100,C0O3100C15O3100,,
code-creation,JS,10,522831,0x18bc1a8dae6,122,#onParseComplete node:internal/url:592:22,0x320a78f2be0,~
code-source-info,0x18bc1a8dae6,40,16182,16700,C0O16312C7O16317C9O16316C13O16332C15O16341C19O16354C21O16365C25O16380C27O16393C31O16410C33O16423C37O16440C39O16453C43O16470C45O16481C49O16496C51O16509C55O16526C57O16539C61O16556C63O16565C67O16578C69O16587C73O16600C80O16609C82O16608C87O16633C94O16638C96O16637C104O16652C112O16668C116O16666C121O16699,,
code-creation,JS,10,522937,0x18bc1a8dd1e,199,encodePathChars node:internal/url:1233:25,0x320a78f3bd0,~
code-source-info,0x18bc1a8dd1e,40,35093,35828,C0O35109C8O35113C15O35158C22O35198C31O35169C38O35290C46O35308C52O35308C59O35354C66O35394C75O35365C82O35431C90O35435C97O35481C104O35521C113O35492C120O35556C128O35560C135O35606C142O35646C151O35617C158O35688C166O35692C173O35738C180O35778C189O35749C196O35809C198O35825,,
code-creation,JS,10,523009,0x18bc1a8df9e,80,set pathname node:internal/url:716:15,0x320a78f33b0,~
code-source-info,0x18bc1a8df9e,40,19481,19656,C0O19496C5O19501C11O19521C23O19527C28O19521C29O19561C40O19576C42O19575C46O19585C55O19591C58O19605C65O19619C69O19633C73O19561C79O19655,,
code-creation,JS,10,523049,0x18bc1a8e0ee,22,isURL node:internal/url:537:15,0x320a78f2a98,~
code-source-info,0x18bc1a8e0ee,40,14767,14850,C0O14779C3O14791C8O14802C13O14838C16O14802C21O14847,,
code-creation,JS,10,523102,0x18bc1a8e216,44,get href node:internal/url:616:11,0x320a78f2ce0,~
code-source-info,0x18bc1a8e216,40,16835,16941,C0O16845C5O16850C11O16870C23O16876C28O16870C29O16910C33O16922C35O16921C39O16931C43O16936,,
code-creation,JS,10,523144,0x18bc1a8e366,34,addCustomLoaders node:internal/modules/esm/loader:108:19,0x2173c765cc0,~
code-source-info,0x18bc1a8e366,422,2634,2759,C0O2673C8O2673C13O2663C18O2717C23O2731C28O2729C33O2758,,
code-creation,Eval,10,523607,0x18bc1a8eebe,5, node:internal/modules/esm/hooks:1:1,0x18bc1a8eaf0,~
script-source,436,node:internal/modules/esm/hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_LOADER_CHAIN_INCOMPLETE\x2C\x0d\n  ERR_INTERNAL_ASSERTION\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { isURLInstance\x2C URL } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\n\x0d\n\x0d\n/**\x0d\n * @typedef {object} KeyedHook\x0d\n * @property {Function} fn The hook function.\x0d\n * @property {URL['href']} url The URL of the module.\x0d\n */\x0d\n\x0d\n// [2] `validate...()`s throw the wrong error\x0d\n\x0d\n\x0d\nclass Hooks {\x0d\n  #hooks = {\x0d\n    /**\x0d\n     * Prior to ESM loading. These are called once before any modules are started.\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} globalPreload Last-in-first-out list of preload hooks.\x0d\n     */\x0d\n    globalPreload: []\x2C\x0d\n\x0d\n    /**\x0d\n     * Phase 1 of 2 in ESM loading.\x0d\n     * The output of the `resolve` chain of hooks is passed into the `load` chain of hooks.\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} resolve Last-in-first-out collection of resolve hooks.\x0d\n     */\x0d\n    resolve: [\x0d\n      {\x0d\n        fn: defaultResolve\x2C\x0d\n        url: 'node:internal/modules/esm/resolve'\x2C\x0d\n      }\x2C\x0d\n    ]\x2C\x0d\n\x0d\n    /**\x0d\n     * Phase 2 of 2 in ESM loading.\x0d\n     * @private\x0d\n     * @property {KeyedHook[]} load Last-in-first-out collection of loader hooks.\x0d\n     */\x0d\n    load: [\x0d\n      {\x0d\n        fn: require('internal/modules/esm/load').defaultLoad\x2C\x0d\n        url: 'node:internal/modules/esm/load'\x2C\x0d\n      }\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n\x0d\n  // Enable an optimization in ESMLoader.getModuleJob\x0d\n  hasCustomResolveOrLoadHooks = false;\x0d\n\x0d\n  // Cache URLs we've already validated to avoid repeated validation\x0d\n  #validatedUrls = new SafeSet();\x0d\n\x0d\n  #importMetaInitializer = require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n\x0d\n  constructor(userLoaders) {\x0d\n    this.#addCustomLoaders(userLoaders);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined module loader hook(s).\x0d\n   * After all hooks have been collected\x2C the global preload hook(s) must be initialized.\x0d\n   * @param {import('./loader.js).KeyedExports} customLoaders Exports from user-defined loaders\x0d\n   *  (as returned by `ESMLoader.import()`).\x0d\n   */\x0d\n  #addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const {\x0d\n        exports\x2C\x0d\n        url\x2C\x0d\n      } = customLoaders[i];\x0d\n      const {\x0d\n        globalPreload\x2C\x0d\n        resolve\x2C\x0d\n        load\x2C\x0d\n      } = pluckHooks(exports);\x0d\n\x0d\n      if (globalPreload) {\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.globalPreload\x2C\x0d\n          {\x0d\n            fn: globalPreload\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (resolve) {\x0d\n        this.hasCustomResolveOrLoadHooks = true;\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.resolve\x2C\x0d\n          {\x0d\n            fn: resolve\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n      if (load) {\x0d\n        this.hasCustomResolveOrLoadHooks = true;\x0d\n        ArrayPrototypePush(\x0d\n          this.#hooks.load\x2C\x0d\n          {\x0d\n            fn: load\x2C\x0d\n            url\x2C\x0d\n          }\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Initialize `globalPreload` hooks.\x0d\n   */\x0d\n  preload() {\x0d\n    for (let i = this.#hooks.globalPreload.length - 1; i >= 0; i--) {\x0d\n      const { MessageChannel } = require('internal/worker/io');\x0d\n      const channel = new MessageChannel();\x0d\n      const {\x0d\n        port1: insidePreload\x2C\x0d\n        port2: insideLoader\x2C\x0d\n      } = channel;\x0d\n\x0d\n      insidePreload.unref();\x0d\n      insideLoader.unref();\x0d\n\x0d\n      const {\x0d\n        fn: preload\x2C\x0d\n        url: specifier\x2C\x0d\n      } = this.#hooks.globalPreload[i];\x0d\n\x0d\n      const preloaded = preload({\x0d\n        port: insideLoader\x2C\x0d\n      });\x0d\n\x0d\n      if (preloaded == null) { return; }\x0d\n\x0d\n      const hookErrIdentifier = `${specifier} globalPreload`;\x0d\n\x0d\n      if (typeof preloaded !== 'string') { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'a string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preloaded\x2C\x0d\n        ['getBuiltin'\x2C 'port'\x2C 'setImportMetaCallback']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x2C\x0d\n      );\x0d\n      const { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\n      // We only allow replacing the importMetaInitializer during preload;\x0d\n      // after preload is finished\x2C we disable the ability to replace it.\x0d\n      //\x0d\n      // This exposes accidentally setting the initializer too late by throwing an error.\x0d\n      let finished = false;\x0d\n      let replacedImportMetaInitializer = false;\x0d\n      let next = this.#importMetaInitializer;\x0d\n      try {\x0d\n        // Calls the compiled preload source text gotten from the hook\x0d\n        // Since the parameters are named we use positional parameters\x0d\n        // see compileFunction above to cross reference the names\x0d\n        FunctionPrototypeCall(\x0d\n          preloadInit\x2C\x0d\n          globalThis\x2C\x0d\n          // Param getBuiltin\x0d\n          (builtinName) => {\x0d\n            if (BuiltinModule.canBeRequiredByUsers(builtinName) &&\x0d\n                BuiltinModule.canBeRequiredWithoutScheme(builtinName)) {\x0d\n              return require(builtinName);\x0d\n            }\x0d\n            throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n          }\x2C\x0d\n          // Param port\x0d\n          insidePreload\x2C\x0d\n          // Param setImportMetaCallback\x0d\n          (fn) => {\x0d\n            if (finished || typeof fn !== 'function') {\x0d\n              throw new ERR_INVALID_ARG_TYPE('fn'\x2C fn);\x0d\n            }\x0d\n            replacedImportMetaInitializer = true;\x0d\n            const parent = next;\x0d\n            next = (meta\x2C context) => {\x0d\n              return fn(meta\x2C context\x2C parent);\x0d\n            };\x0d\n          });\x0d\n      } finally {\x0d\n        finished = true;\x0d\n        if (replacedImportMetaInitializer) {\x0d\n          this.#importMetaInitializer = next;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    this.#importMetaInitializer(meta\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextResolve()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAssertions} [importAssertions] Assertions from the import\x0d\n   *                                              statement or expression.\x0d\n   * @returns {Promise<{ format: string\x2C url: URL['href'] }>}\x0d\n   */\x0d\n  async resolve(\x0d\n    originalSpecifier\x2C\x0d\n    parentURL\x2C\x0d\n    importAssertions = { __proto__: null }\x2C\x0d\n  ) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'parentURL'\x2C\x0d\n        ['string'\x2C 'URL']\x2C\x0d\n        parentURL\x2C\x0d\n      );\x0d\n    }\x0d\n    const chain = this.#hooks.resolve;\x0d\n    const context = {\x0d\n      conditions: getDefaultConditions()\x2C\x0d\n      importAssertions\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'resolve'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C suppliedSpecifier\x2C ctx) => {\x0d\n      validateString(\x0d\n        suppliedSpecifier\x2C\x0d\n        `${hookErrIdentifier} specifier`\x2C\x0d\n      ); // non-strings can be coerced to a URL string\x0d\n\x0d\n      if (ctx) validateObject(ctx\x2C `${hookErrIdentifier} context`);\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextResolve = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const resolution = await nextResolve(originalSpecifier\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C resolution);\x0d\n\x0d\n    if (resolution?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      importAssertions: resolvedImportAssertions\x2C\x0d\n      url\x2C\x0d\n    } = resolution;\x0d\n\x0d\n    if (typeof url !== 'string') {\x0d\n      // non-strings can be coerced to a URL string\x0d\n      // validateString() throws a less-specific error\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // Avoid expensive URL instantiation for known-good URLs\x0d\n    if (!this.#validatedUrls.has(url)) {\x0d\n      try {\x0d\n        new URL(url);\x0d\n        this.#validatedUrls.add(url);\x0d\n      } catch {\x0d\n        throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n          'a URL string'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          'url'\x2C\x0d\n          url\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      resolvedImportAssertions != null &&\x0d\n      typeof resolvedImportAssertions !== 'object'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'an object'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'importAssertions'\x2C\x0d\n        resolvedImportAssertions\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string' // [2]\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      format\x2C\x0d\n      importAssertions: resolvedImportAssertions\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * Internally\x2C this behaves like a backwards iterator\x2C wherein the stack of\x0d\n   * hooks starts at the top and each call to `nextLoad()` moves down 1 step\x0d\n   * until it reaches the bottom or short-circuits.\x0d\n   *\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} context Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const chain = this.#hooks.load;\x0d\n    const meta = {\x0d\n      chainFinished: null\x2C\x0d\n      context\x2C\x0d\n      hookErrIdentifier: ''\x2C\x0d\n      hookIndex: chain.length - 1\x2C\x0d\n      hookName: 'load'\x2C\x0d\n      shortCircuited: false\x2C\x0d\n    };\x0d\n\x0d\n    const validateArgs = (hookErrIdentifier\x2C nextUrl\x2C ctx) => {\x0d\n      if (typeof nextUrl !== 'string') {\x0d\n        // Non-strings can be coerced to a URL string\x0d\n        // validateString() throws a less-specific error\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          `${hookErrIdentifier} url`\x2C\x0d\n          'a URL string'\x2C\x0d\n          nextUrl\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      // Avoid expensive URL instantiation for known-good URLs\x0d\n      if (!this.#validatedUrls.has(nextUrl)) {\x0d\n        try {\x0d\n          new URL(nextUrl);\x0d\n          this.#validatedUrls.add(nextUrl);\x0d\n        } catch {\x0d\n          throw new ERR_INVALID_ARG_VALUE(\x0d\n            `${hookErrIdentifier} url`\x2C\x0d\n            nextUrl\x2C\x0d\n            'should be a URL string'\x2C\x0d\n          );\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (ctx) { validateObject(ctx\x2C `${hookErrIdentifier} context`); }\x0d\n    };\x0d\n    const validateOutput = (hookErrIdentifier\x2C output) => {\x0d\n      if (typeof output !== 'object' || output === null) { // [2]\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'an object'\x2C\x0d\n          hookErrIdentifier\x2C\x0d\n          output\x2C\x0d\n        );\x0d\n      }\x0d\n    };\x0d\n\x0d\n    const nextLoad = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n\x0d\n    const loaded = await nextLoad(url\x2C context);\x0d\n    const { hookErrIdentifier } = meta; // Retrieve the value after all settled\x0d\n\x0d\n    validateOutput(hookErrIdentifier\x2C loaded);\x0d\n\x0d\n    if (loaded?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n    if (!meta.chainFinished && !meta.shortCircuited) {\x0d\n      throw new ERR_LOADER_CHAIN_INCOMPLETE(hookErrIdentifier);\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n    let responseURL = loaded.responseURL;\x0d\n\x0d\n    if (responseURL === undefined) {\x0d\n      responseURL = url;\x0d\n    }\x0d\n\x0d\n    let responseURLObj;\x0d\n    if (typeof responseURL === 'string') {\x0d\n      try {\x0d\n        responseURLObj = new URL(responseURL);\x0d\n      } catch {\x0d\n        // responseURLObj not defined will throw in next branch.\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (responseURLObj?.href !== responseURL) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'undefined or a fully resolved URL string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'responseURL'\x2C\x0d\n        responseURL\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') { // [2]\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) {\x0d\n      throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'a string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n        hookErrIdentifier\x2C\x0d\n        'source'\x2C\x0d\n        source\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      format\x2C\x0d\n      responseURL\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Hooks.prototype\x2C null);\x0d\n\x0d\n\x0d\n/**\x0d\n * A utility function to pluck the hooks from a user-defined loader.\x0d\n * @param {import('./loader.js).ModuleExports} exports\x0d\n * @returns {import('./loader.js).ExportedHooks}\x0d\n */\x0d\nfunction pluckHooks({\x0d\n  globalPreload\x2C\x0d\n  resolve\x2C\x0d\n  load\x2C\x0d\n  // obsolete hooks:\x0d\n  dynamicInstantiate\x2C\x0d\n  getFormat\x2C\x0d\n  getGlobalPreloadCode\x2C\x0d\n  getSource\x2C\x0d\n  transformSource\x2C\x0d\n}) {\x0d\n  const obsoleteHooks = [];\x0d\n  const acceptedHooks = { __proto__: null };\x0d\n\x0d\n  if (getGlobalPreloadCode) {\x0d\n    globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n    process.emitWarning(\x0d\n      'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x2C\x0d\n    );\x0d\n  }\x0d\n  if (dynamicInstantiate) {\x0d\n    ArrayPrototypePush(obsoleteHooks\x2C 'dynamicInstantiate');\x0d\n  }\x0d\n  if (getFormat) {\x0d\n    ArrayPrototypePush(obsoleteHooks\x2C 'getFormat');\x0d\n  }\x0d\n  if (getSource) {\x0d\n    ArrayPrototypePush(obsoleteHooks\x2C 'getSource');\x0d\n  }\x0d\n  if (transformSource) {\x0d\n    ArrayPrototypePush(obsoleteHooks\x2C 'transformSource');\x0d\n  }\x0d\n\x0d\n  if (obsoleteHooks.length) {\x0d\n    process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (globalPreload) {\x0d\n    acceptedHooks.globalPreload = globalPreload;\x0d\n  }\x0d\n  if (resolve) {\x0d\n    acceptedHooks.resolve = resolve;\x0d\n  }\x0d\n  if (load) {\x0d\n    acceptedHooks.load = load;\x0d\n  }\x0d\n\x0d\n  return acceptedHooks;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * A utility function to iterate through a hook chain\x2C track advancement in the\x0d\n * chain\x2C and generate and supply the `next<HookName>` argument to the custom\x0d\n * hook.\x0d\n * @param {KeyedHook[]} chain The whole hook chain.\x0d\n * @param {object} meta Properties that change as the current hook advances\x0d\n * along the chain.\x0d\n * @param {boolean} meta.chainFinished Whether the end of the chain has been\x0d\n * reached AND invoked.\x0d\n * @param {string} meta.hookErrIdentifier A user-facing identifier to help\x0d\n *  pinpoint where an error occurred. Ex "file:///foo.mjs 'resolve'".\x0d\n * @param {number} meta.hookIndex A non-negative integer tracking the current\x0d\n * position in the hook chain.\x0d\n * @param {string} meta.hookName The kind of hook the chain is (ex 'resolve')\x0d\n * @param {boolean} meta.shortCircuited Whether a hook signaled a short-circuit.\x0d\n * @param {(hookErrIdentifier\x2C hookArgs) => void} validate A wrapper function\x0d\n *  containing all validation of a custom loader hook's intermediary output. Any\x0d\n *  validation within MUST throw.\x0d\n * @returns {function next<HookName>(...hookArgs)} The next hook in the chain.\x0d\n */\x0d\nfunction nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput }) {\x0d\n  // First\x2C prepare the current\x0d\n  const { hookName } = meta;\x0d\n  const {\x0d\n    fn: hook\x2C\x0d\n    url: hookFilePath\x2C\x0d\n  } = chain[meta.hookIndex];\x0d\n\x0d\n  // ex 'nextResolve'\x0d\n  const nextHookName = `next${\x0d\n    StringPrototypeToUpperCase(hookName[0]) +\x0d\n    StringPrototypeSlice(hookName\x2C 1)\x0d\n  }`;\x0d\n\x0d\n  // When hookIndex is 0\x2C it's reached the default\x2C which does not call next()\x0d\n  // so feed it a noop that blows up if called\x2C so the problem is obvious.\x0d\n  const generatedHookIndex = meta.hookIndex;\x0d\n  let nextNextHook;\x0d\n  if (meta.hookIndex > 0) {\x0d\n    // Now\x2C prepare the next: decrement the pointer so the next call to the\x0d\n    // factory generates the next link in the chain.\x0d\n    meta.hookIndex--;\x0d\n\x0d\n    nextNextHook = nextHookFactory(chain\x2C meta\x2C { validateArgs\x2C validateOutput });\x0d\n  } else {\x0d\n    // eslint-disable-next-line func-name-matching\x0d\n    nextNextHook = function chainAdvancedTooFar() {\x0d\n      throw new ERR_INTERNAL_ASSERTION(\x0d\n        `ESM custom loader '${hookName}' advanced beyond the end of the chain.`\x2C\x0d\n      );\x0d\n    };\x0d\n  }\x0d\n\x0d\n  return ObjectDefineProperty(\x0d\n    async (arg0 = undefined\x2C context) => {\x0d\n      // Update only when hook is invoked to avoid fingering the wrong filePath\x0d\n      meta.hookErrIdentifier = `${hookFilePath} '${hookName}'`;\x0d\n\x0d\n      validateArgs(`${meta.hookErrIdentifier} hook's ${nextHookName}()`\x2C arg0\x2C context);\x0d\n\x0d\n      const outputErrIdentifier = `${chain[generatedHookIndex].url} '${hookName}' hook's ${nextHookName}()`;\x0d\n\x0d\n      // Set when next<HookName> is actually called\x2C not just generated.\x0d\n      if (generatedHookIndex === 0) { meta.chainFinished = true; }\x0d\n\x0d\n      if (context) { // `context` has already been validated\x2C so no fancy check needed.\x0d\n        ObjectAssign(meta.context\x2C context);\x0d\n      }\x0d\n\x0d\n      const output = await hook(arg0\x2C meta.context\x2C nextNextHook);\x0d\n\x0d\n      validateOutput(outputErrIdentifier\x2C output);\x0d\n\x0d\n      if (output?.shortCircuit === true) { meta.shortCircuited = true; }\x0d\n\x0d\n      return output;\x0d\n    }\x2C\x0d\n    'name'\x2C\x0d\n    { __proto__: null\x2C value: nextHookName }\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n\x0d\nexports.Hooks = Hooks;\x0d\n
code-source-info,0x18bc1a8eebe,436,0,19197,C0O0C4O19197,,
code-creation,JS,10,524583,0x18bc1a8f53e,439, node:internal/modules/esm/hooks:1:1,0x18bc1a8ee38,~
code-source-info,0x18bc1a8f53e,436,0,19197,C0O0C94O28C100O51C106O74C112O100C118O117C124O142C129O167C135O179C141O204C147O235C153O458C159O458C164O484C169O279C175O311C181O338C187O363C193O389C199O427C205O524C211O524C216O501C222O516C228O606C234O606C239O561C245O582C251O690C257O690C262O650C268O669C274O757C280O757C285O736C291O837C297O837C302O810C419O14430C426O14403C431O19173C433O19187C438O19196,,
code-creation,JS,10,524637,0x18bc1a8f9a6,143,<instance_members_initializer> node:internal/modules/esm/hooks:51:1,0x18bc1a8f1a0,~
code-source-info,0x18bc1a8f9a6,436,1078,14399,C3O1104C8O1604C24O1628C42O1881C62O1905C67O1941C93O2117C101O2216C108O2216C120O2315C128O2261C133O2315C142O14399,,
code-creation,Eval,10,526075,0x18bc1a934f6,5, node:internal/modules/esm/resolve:1:1,0x18bc1a92088,~
script-source,437,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\nconst { getPackageConfig\x2C getPackageScopeConfig } = require('internal/modules/esm/package_config');\x0d\nconst { getConditionsSet } = require('internal/modules/esm/utils');\x0d\n\x0d\n/**\x0d\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\x0d\n */\x0d\n\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\x0d\n    `"exports" field module resolution of the package at ${pjsonPath}${\x0d\n      base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\x0d\n\x0d\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated ${double ? 'double slash' :\x0d\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\x0d\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\x0d\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\x0d\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0166'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null)\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:require': [path || resolved.pathname] });\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} request\x0d\n * @param {string} match\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid match in pattern "${match}" for the "${\x0d\n    internal ? 'imports' : 'exports'}" resolution of ${\x0d\n    fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction invalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  return new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\x0d\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} target\x0d\n * @param {*} subpath\x0d\n * @param {*} match\x0d\n * @param {*} packageJSONUrl\x0d\n * @param {*} base\x0d\n * @param {*} pattern\x0d\n * @param {*} internal\x0d\n * @param {*} isPathMap\x0d\n * @param {*} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C\x0d\n  subpath\x2C\x0d\n  match\x2C\x0d\n  packageJSONUrl\x2C\x0d\n  base\x2C\x0d\n  pattern\x2C\x0d\n  internal\x2C\x0d\n  isPathMap\x2C\x0d\n  conditions\x2C\x0d\n) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const request = pattern ?\x0d\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\x0d\n          match + subpath;\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\x0d\n      }\x0d\n    } else {\x0d\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {*} packageJSONUrl\x0d\n * @param {string|[string]} target\x0d\n * @param {*} subpath\x0d\n * @param {*} packageSubpath\x0d\n * @param {*} base\x0d\n * @param {*} pattern\x0d\n * @param {*} internal\x0d\n * @param {*} isPathMap\x0d\n * @param {*} conditions\x0d\n * @returns {URL|null}\x0d\n */\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      isPathMap\x2C conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C isPathMap\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\x0d\n        if (resolveResult === undefined)\x0d\n          continue;\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                             base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {import('internal/modules/esm/package_config.js').Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\x0d\n      conditions\x2C\x0d\n    );\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\x0d\n      //\x0d\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n      //   throwInvalidSubpath(packageSubpath)\x0d\n      //\x0d\n      // To match "imports" and the spec.\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      true\x2C\x0d\n      false\x2C\x0d\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\x0d\n      StringPrototypeEndsWith(name\x2C '/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*')) {\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\x0d\n          conditions\x2C\x0d\n        );\x0d\n        if (resolveResult != null) {\x0d\n          return resolveResult;\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                     bestMatchSubpath\x2C\x0d\n                                                     bestMatch\x2C base\x2C true\x2C\x0d\n                                                     true\x2C false\x2C conditions);\x0d\n          if (resolveResult != null) {\x0d\n            return resolveResult;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {import('internal/modules/esm/package_config.js').PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null)\x0d\n    validPackageName = false;\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {resolved: URL\x2C format? : string}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (BuiltinModule.canBeRequiredByUsers(specifier) &&\x0d\n      BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @param {boolean} preserveSymlinks\x0d\n * @returns {url: URL\x2C format?: string}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const isRemote = base.protocol === 'http:' ||\x0d\n    base.protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (!isRemote && specifier[0] === '#') {\x0d\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      if (!isRemote) {\x0d\n        resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:') {\x0d\n    return resolved;\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    if (\x0d\n      parsedParentURL.protocol === 'http:' ||\x0d\n      parsedParentURL.protocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsed &&\x0d\n          parsed.protocol !== 'https:' &&\x0d\n          parsed.protocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x2C\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (BuiltinModule.canBeRequiredByUsers(specifier) &&\x0d\n          BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLProtocol(url) {\x0d\n  if (url.protocol !== 'file:' && url.protocol !== 'data:' &&\x0d\n      url.protocol !== 'node:') {\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  if (\x0d\n    parsed &&\x0d\n    parsed.protocol !== 'file:' &&\x0d\n    parsed.protocol !== 'data:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        parsed.protocol !== 'https:' &&\x0d\n        parsed.protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    const schemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(schemes\x2C 'https'\x2C 'http');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C schemes);\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { __proto__: null\x2C url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    if (parsed.protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          parsed.protocol === 'https:' ||\x0d\n          parsed.protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { __proto__: null\x2C url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) return maybeReturn;\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  if (parsed && parsed.protocol === 'node:') return { __proto__: null\x2C url: specifier };\x0d\n\x0d\n  throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports);\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag) throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(\x0d\n      specifier\x2C\x0d\n      parentURL\x2C\x0d\n      conditions\x2C\x0d\n      isMain ? preserveSymlinksMain : preserveSymlinks\x2C\x0d\n    );\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  throwIfUnsupportedURLProtocol(url);\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = async function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x2C\x0d\n  ) {\x0d\n    const ret = await $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x2C\x0d\n      )\x2C\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x18bc1a934f6,437,0,38152,C0O0C4O38152,,
code-creation,JS,10,528075,0x18bc1a9430e,938, node:internal/modules/esm/resolve:1:1,0x18bc1a93470,~
code-source-info,0x18bc1a9430e
tick,0x7ff77825ee09,529197,0,0x0,0,0x7ff6f83847fd,0x18bc1a94535,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a8f656,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a8e36e,0x18bc1a8cce1,0x18bc1a8bb6e,0x13674f31d78
code-creation,Eval,10,529533,0x18bc1a97306,5, node:internal/modules/esm/package_config:1:1,0x18bc1a97120,~
script-source,438,node:internal/modules/esm/package_config,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { filterOwnProperties } = require('internal/util');\x0d\n\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: ExportConfig\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type?: PackageType\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\n/** @type {Map<string\x2C PackageConfig>} */\x0d\nconst packageJSONCache = new SafeMap();\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const packageJsonReader = require('internal/modules/package_json_reader');\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = filterOwnProperties(packageJSON\x2C ['imports'\x2C 'main'\x2C 'name'\x2C 'type']);\x0d\n  const exports = ObjectPrototypeHasOwnProperty(packageJSON\x2C 'exports') ? packageJSON.exports : undefined;\x0d\n  if (typeof imports !== 'object' || imports === null) {\x0d\n    imports = undefined;\x0d\n  }\x0d\n  if (typeof main !== 'string') {\x0d\n    main = undefined;\x0d\n  }\x0d\n  if (typeof name !== 'string') {\x0d\n    name = undefined;\x0d\n  }\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') {\x0d\n    type = 'none';\x0d\n  }\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\x0d\n      break;\x0d\n    }\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C resolved);\x0d\n    if (packageConfig.exists) {\x0d\n      return packageConfig;\x0d\n    }\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  getPackageConfig\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a97306,438,0,3774,C0O0C4O3774,,
code-creation,JS,10,529844,0x18bc1a974ee,163, node:internal/modules/esm/package_config:1:1,0x18bc1a97280,~
code-source-info,0x18bc1a974ee,438,0,3774,C0O0C44O28C50O42C56O76C61O88C67O163C73O163C78O140C84O145C90O233C96O233C101O259C106O200C112O302C118O302C123O278C129O689C131O689C136O689C138O3703C145O3725C151O3746C157O3718C162O3773,,
code-creation,Eval,10,530346,0x18bc1a983ee,5, node:internal/modules/esm/get_format:1:1,0x18bc1a98188,~
script-source,439,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { basename\x2C extname\x2C relative } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst { getPackageType\x2C getPackageScopeConfig } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = {\x0d\n  '__proto__': null\x2C\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context\x2C ignoreErrors) {\x0d\n  const filepath = fileURLToPath(url);\x0d\n  const ext = extname(filepath);\x0d\n  if (ext === '.js') {\x0d\n    return getPackageType(url) === 'module' ? 'module' : 'commonjs';\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) return format;\x0d\n\x0d\n  // Explicit undefined return indicates load hook should rerun format check\x0d\n  if (ignoreErrors) { return undefined; }\x0d\n  let suggestion = '';\x0d\n  if (getPackageType(url) === 'module' && ext === '') {\x0d\n    const config = getPackageScopeConfig(url);\x0d\n    const fileBasename = basename(filepath);\x0d\n    const relativePath = StringPrototypeSlice(relative(config.pjsonPath\x2C filepath)\x2C 1);\x0d\n    suggestion = 'Loading extensionless files is not supported inside of ' +\x0d\n      '"type":"module" package.json contexts. The package.json file ' +\x0d\n      `${config.pjsonPath} caused this "type":"module" context. Try ` +\x0d\n      `changing ${filepath} to have a file extension. Note the "bin" ` +\x0d\n      'field of package.json can point to a file with an extension\x2C for example ' +\x0d\n      `{"type":"module"\x2C"bin":{"${fileBasename}":"${relativePath}.js"}}`;\x0d\n  }\x0d\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath\x2C suggestion);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol))\x0d\n    return null;\x0d\n  return protocolHandlers[parsed.protocol](parsed\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | URL['href']} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C context\x2C false) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a983ee,439,0,4019,C0O0C4O4019,,
code-creation,JS,10,530575,0x18bc1a9883e,332, node:internal/modules/esm/get_format:1:1,0x18bc1a98368,~
code-source-info,0x18bc1a9883e,439,0,4019,C0O0C85O26C91O50C97O84C103O109C109O128C115O209C121O209C126O177C132O187C138O196C144O254C150O254C155O235C160O337C166O337C171O295C177O318C183O419C186O419C190O419C192O520C198O520C203O478C209O494C215O593C221O593C226O570C232O575C238O658C244O658C249O684C254O627C260O720C267O756C273O797C279O838C285O880C289O912C299O720C301O3917C308O3939C314O3960C320O3994C326O3932C331O4018,,
code-creation,Eval,10,530888,0x18bc1a9923e,5, node:internal/modules/esm/formats:1:1,0x18bc1a990d8,~
script-source,440,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?/i\x2C\x0d\n      mime\x2C\x0d\n    ) !== null\x0d\n  ) return 'module';\x0d\n  if (mime === 'application/json') return 'json';\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') return 'wasm';\x0d\n  return null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a9923e,440,0,895,C0O0C4O895,,
code-creation,JS,10,530962,0x18bc1a993fe,84, node:internal/modules/esm/formats:1:1,0x18bc1a991b8,~
code-source-info,0x18bc1a993fe,440,0,895,C0O0C16O28C22O95C25O95C30O76C35O159C38O159C42O159C44O236C49O351C53O385C55O413C59O831C66O853C72O876C78O846C83O894,,
code-creation,JS,10,531223,0x18bc1a99d46,44,Hooks node:internal/modules/esm/hooks:94:14,0x18bc1a8f010,~
code-source-info,0x18bc1a99d46,436,2354,2416,C5O2354C23O2375C25O2380C37O2397C43O2415,,
code-creation,Eval,10,531472,0x18bc1a9b956,5, node:internal/modules/esm/load:1:1,0x18bc1a9b710,~
script-source,441,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAssertions } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function getSource(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n  let responseURL = url;\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    const { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    parsed.protocol === 'https:' ||\x0d\n    parsed.protocol === 'http:'\x0d\n  )) {\x0d\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n    const res = await fetchModule(parsed\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return { __proto__: null\x2C responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {object} context\x0d\n * @returns {object}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context = kEmptyObject) {\x0d\n  let responseURL = url;\x0d\n  const { importAssertions } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (format == null) {\x0d\n    format = await defaultGetFormat(url\x2C context);\x0d\n  }\x0d\n\x0d\n  validateAssertions(url\x2C format\x2C importAssertions);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = await getSource(url\x2C context));\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * For a falsy `format` returned from `load`\x2C throw an error.\x0d\n * This could happen from either a custom user loader _or_ from the default loader\x2C because the default loader tries to\x0d\n * determine formats for data URLs.\x0d\n * @param {string} url The resolved URL of the module\x0d\n * @param {null | undefined | false | 0 | -0 | 0n | ''} format Falsy format returned from `load`\x0d\n */\x0d\nfunction throwUnknownModuleFormat(url\x2C format) {\x0d\n  const dataUrl = RegExpPrototypeExec(\x0d\n    /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    url\x2C\x0d\n  );\x0d\n\x0d\n  throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n    dataUrl ? dataUrl[1] : format\x2C\x0d\n    url);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n  throwUnknownModuleFormat\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a9b956,441,0,3661,C0O0C4O3661,,
code-creation,JS,10,531785,0x18bc1a9bbfe,290, node:internal/modules/esm/load:1:1,0x18bc1a9b8d0,~
code-source-info,0x18bc1a9bbfe,441,0,3661,C0O0C67O28C73O51C79O75C85O139C91O139C96O122C102O197C108O197C113O176C119O273C125O273C130O250C136O341C142O341C147O322C152O440C155O440C167O485C174O440C176O570C179O570C183O570C185O664C191O664C196O639C201O647C207O702C213O702C218O694C224O826C230O826C235O852C240O739C246O759C252O789C258O888C263O888C265O3592C272O3614C278O3630C284O3607C289O3660,,
code-creation,Eval,10,532238,0x18bc1a9c7b6,5, node:internal/modules/esm/initialize_import_meta:1:1,0x18bc1a9c620,~
script-source,442,node:internal/modules/esm/initialize_import_meta,'use strict';\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n  getOptionValue('--experimental-import-meta-resolve');\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n} = primordials;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x2C\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {object} meta\x0d\n * @param {{url: string}} context\x0d\n */\x0d\nfunction initializeImportMeta(meta\x2C context) {\x0d\n  const { url } = context;\x0d\n\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve) {\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  }\x0d\n\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeImportMeta\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1a9c7b6,442,0,1023,C0O0C4O1023,,
code-creation,JS,10,532354,0x18bc1a9c97e,90, node:internal/modules/esm/initialize_import_meta:1:1,0x18bc1a9c730,~
code-source-info,0x18bc1a9c97e,442,0,1023,C0O0C28O44C31O44C36O25C41O115C44O115C48O115C50O181C56O206C62O257C65O257C69O257C71O974C78O996C84O989C89O1022,,
code-creation,JS,10,532687,0x18bc1a9ce26,216,#addCustomLoaders node:internal/modules/esm/hooks:104:20,0x18bc1a8efc0,~
code-source-info,0x18bc1a9ce26,436,2744,3659,C4O2744C11O2796C13O2817C17O2801C22O2890C24O2903C28O2856C33O2874C38O2991C43O2991C48O2932C53O2956C58O2974C63O3021C67O3051C76O3087C80O3094C92O3139C98O3167C102O3051C107O3214C111O3238C112O3271C116O3288C125O3324C129O3331C141O3370C147O3392C151O3288C156O3439C160O3460C161O3493C165O3510C174O3546C178O3553C190O3589C196O3608C200O3510C205O2826C210O2783C215O3658,,
code-creation,JS,10,532813,0x18bc1a9d056,22,preload node:internal/modules/esm/loader:113:10,0x2173c765d10,~
code-source-info,0x18bc1a9d056,422,2772,2810,C0O2782C2O2787C8O2793C13O2795C21O2809,,
code-creation,JS,10,533009,0x18bc1a9d46e,436,preload node:internal/modules/esm/hooks:153:10,0x18bc1a8f060,~
code-source-info,0x18bc1a9d46e
code-creation,JS,10,533182,0x18bc1a9d80e,44,getOrSetAsyncId node:internal/async_hooks:421:25,0xf2fdb69230,~
code-source-info,0x18bc1a9d80e,13,15065,15237,C0O15079C7O15121C10O15083C17O15146C19O15160C21O15159C24O15177C25O15188C27O15202C33O15221C37O15219C43O15234,,
code-creation,JS,10,533316,0x18bc1a9da86,42,promiseBeforeHook node:internal/async_hooks:338:27,0xf2fdb68fb0,~
code-source-info,0x18bc1a9da86,13,12621,12811,C0O12636C3O12636C7O12678C9O12686C11O12685C15O12725C17O12733C19O12732C23O12762C35O12762C41O12810,,
code-creation,JS,10,533378,0x18bc1a9db9e,42,emitBeforeScript node:internal/async_hooks:510:26,0xf2fdb695a0,~
code-source-info,0x18bc1a9db9e,13,17427,17583,C0O17468C12O17468C17O17526C22O17539C25O17530C31O17554C36O17554C41O17582,,
code-creation,JS,10,533454,0x18bc1a9dcee,180,pushAsyncContext node:internal/async_hooks:540:26,0xf2fdb696e0,~
code-source-info,0x18bc1a9dcee,13,18101,18656,C0O18157C7O18175C9O18174C13O18193C20O18227C24O18242C26O18253C32O18260C35O18271C40O18287C44O18257C49O18300C54O18307C59O18350C60O18354C65O18365C72O18388C78O18395C83O18411C85O18410C88O18393C92O18434C97O18445C104O18468C107O18472C113O18479C118O18495C120O18494C123O18477C127O18516C134O18534C142O18547C146O18554C153O18570C158O18589C162O18603C169O18619C174O18636C179O18655,,
code-creation,JS,10,533617,0x18bc1a9df66,205,emitHook node:internal/async_hooks:225:18,0xf2fdb68ce0,~
code-source-info,0x18bc1a9df66,13,8852,9850,C0O8875C12O8899C22O9220C24O9225C26O9227C29O9240C34O9246C38O9225C43O9268C48O9292C55O9297C61O9300C68O9336C73O9349C80O9354C86O9357C90O9365C95O9255C100O9207C117O9414C125O9414C143O9449C155O9473C170O9744C175O9761C181O9772C188O9781C191O9794C197O9821C200O9821C204O9849,,
code-creation,JS,10,533704,0x18bc1a9e176,36,before node:internal/inspector_async_hook:28:11,0x18bc1a87fc8,~
code-source-info,0x18bc1a9e176,65,831,951,C0O859C5O870C10O870C17O893C18O900C19O908C24O918C29O918C35O950,,
code-creation,JS,10,533808,0x18bc1a9e34e,145, node:internal/main/repl:40:21,0x13674f31b38,~
code-source-info,0x18bc1a9e34e,389,1193,2062,C0O1206C5O1214C16O1248C33O1261C37O1214C42O1332C48O1332C53O1371C61O1398C71O1371C77O1839C85O1843C91O1889C101O1928C107O1928C114O1972C120O1972C127O2023C133O2023C138O1889C144O2061,,
code-creation,JS,10,534031,0x18bc1a9e52e,38,log node:internal/console/constructor:375:6,0x320a78e5ad8,~
code-source-info,0x18bc1a9e52e,38,11920,12006,C0O11920C3O11937C5O11942C7O11941C13O11959C18O11976C20O11975C24O11993C30O11958C37O12005,,
code-creation,JS,10,534097,0x18bc1a9e65e,50,value node:internal/console/constructor:336:20,0x320a78e5978,~
code-source-info,0x18bc1a9e65e,38,10425,10601,C0O10454C2O10459C4O10458C8O10484C13O10478C19O10501C24O10501C29O10543C36O10563C44O10550C49O10594,,
code-creation,JS,10,534154,0x18bc1a9e776,27,get node:internal/console/constructor:208:14,0x13674f3b350,~
code-source-info,0x18bc1a9e776,38,6134,6229,C0O6152C6O6165C9O6181C16O6172C22O6202C26O6216,,
code-creation,JS,10,534230,0x18bc1a9e91e,125,getStdout node:internal/bootstrap/switches/is_main_thread:148:19,0x1c416d91598,~
script-source,46,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x2C\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nlet stdoutDestroy;\x0d\nlet stderrDestroy;\x0d\n\x0d\nfunction refreshStdoutOnSigWinch() {\x0d\n  stdout._refreshSize();\x0d\n}\x0d\n\x0d\nfunction refreshStderrOnSigWinch() {\x0d\n  stderr._refreshSize();\x0d\n}\x0d\n\x0d\nfunction addCleanup(fn) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(fn);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdoutDestroy = stdout._destroy;\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdout() {\x0d\n    stdout._destroy = stdoutDestroy;\x0d\n    stdout.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n    stdout = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdout = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  stderrDestroy = stderr._destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n  }\x0d\n  addCleanup(function cleanupStderr() {\x0d\n    stderr._destroy = stderrDestroy;\x0d\n    stderr.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n    stderr = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stderr = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd);\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdin() {\x0d\n    stdin.destroy();\x0d\n    stdin = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdin = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n\x0d\n// Needed by the module loader and generally needed everywhere.\x0d\nrequire('fs');\x0d\nrequire('util');\x0d\nrequire('url');\x0d\n\x0d\nrequire('internal/modules/cjs/loader');\x0d\nrequire('internal/modules/esm/utils');\x0d\nrequire('internal/vm/module');\x0d\n// Needed to refresh the time origin.\x0d\nrequire('internal/perf/utils');\x0d\n// Needed to register the async hooks.\x0d\nif (internalBinding('config').hasInspector) {\x0d\n  require('internal/inspector_async_hook');\x0d\n}\x0d\n// Needed to set the wasm web API callbacks.\x0d\ninternalBinding('wasm_web_api');\x0d\n// Needed to detect whether it's on main thread.\x0d\ninternalBinding('worker');\x0d\n// Needed to setup source maps.\x0d\nrequire('internal/source_map/source_map_cache');\x0d\n// Needed by most execution modes.\x0d\nrequire('internal/modules/run_main');\x0d\n// Needed to refresh DNS configurations.\x0d\nrequire('internal/dns/utils');\x0d\n// Needed by almost all execution modes. It's fine to\x0d\n// load them into the snapshot as long as we don't run\x0d\n// any of the initialization.\x0d\nrequire('internal/process/pre_execution');\x0d\n
code-source-info,0x18bc1a9e91e,46,3896,4590,C0O3904C6O3916C10O3930C11O3934C17O3943C24O3941C30O3976C37O3997C40O4004C44O3995C48O4081C53O4104C60O4095C66O4117C73O4133C77O4152C82O4163C88O4177C91O4185C102O4185C108O4236C116O4236C120O4573C124O4587,,
code-creation,JS,10,535232,0x18bc1a9eda6,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:47:35,0x1c416d913d8,~
code-source-info,0x18bc1a9eda6,46,1503,3133,C0O1517C2O1589C7O1597C42O1658C48O1658C53O1698C60O1690C66O1722C68O1735C72O1751C74O1818C80O1818C85O1896C95O1876C101O1930C103O1943C107O1958C109O2030C115O2030C120O2267C123O2279C132O2298C137O2306C144O2309C149O2355C155O2355C160O2336C165O2416C180O2451C189O2408C197O2579C209O2599C215O2571C221O2689C223O2702C227O2719C229O2876C235O2876C240O2863C245O2902C250O2935C260O2911C266O3066C268O3076C272O3087C273O3103C277O3116C279O3130,,
code-creation,Eval,10,535767,0x18bc1a9f4a6,5, node:tty:1:1,0x18bc1a9f2a0,~
script-source,443,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n    ...options\x2C\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle?.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C errors.errnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x18bc1a9f4a6,443,0,5222,C0O0C4O5222,,
code-creation,JS,10,536242,0x18bc1a9fb7e,426, node:tty:1:1,0x18bc1a9f420,~
code-source-info,0x18bc1a9fb7e
code-creation,Eval,10,537031,0x18bc1aa0bc6,5, node:internal/tty:1:1,0x18bc1aa0970,~
script-source,444,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x2C\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x2C\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1aa0bc6,444,0,6722,C0O0C4O6722,,
code-creation,JS,10,537593,0x18bc1aa1026,366, node:internal/tty:1:1,0x18bc1aa0b40,~
code-source-info,0x18bc1aa1026,444,0,6722,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2489C336O2489C338O2621C339O2621C341O6666C348O6688C354O6706C360O6681C365O6721,,
code-creation,JS,10,538239,0x18bc1aa272e,192,WriteStream node:tty:84:21,0x18bc1a9f578,~
code-source-info,0x18bc1aa272e,443,2584,3567,C0O2594C2O2605C7O2635C12O2642C17O2662C18O2666C20O2673C26O2678C32O2691C37O2701C44O2707C49O2701C50O2748C52O2767C65O2767C71O2796C77O2823C84O2829C89O2823C90O2869C95O2873C100O2880C112O2937C116O2880C122O3370C127O3378C134O3378C139O3418C149O3418C155O3452C160O3460C165O3460C171O3487C173O3504C174O3526C177O3517C181O3536C183O3555C186O3546C191O3566,,
code-creation,JS,10,538609,0x18bc1aa3356,918,Socket node:net:348:16,0x2173c77ce18,~
code-source-info,0x18bc1aa
code-creation,JS,10,539000,0x18bc1aa3aae,166,Duplex node:internal/streams/duplex:54:16,0x2173c741190,~
code-source-info,0x18bc1aa3aae,405,2064,2741,C0O2079C2O2090C7O2115C12O2122C17O2142C18O2148C23O2157C28O2157C34O2181C39O2190C44O2190C50O2216C54O2265C62O2279C63O2255C67O2309C77O2343C83O2367C87O2388C93O2409C97O2429C103O2455C107O2489C117O2523C123O2547C127O2568C133O2590C137O2610C143O2631C147O2651C153O2675C159O2707C160O2726C165O2740,,
code-creation,JS,10,539145,0x18bc1aa3d9e,220,Readable node:internal/streams/readable:186:18,0x2173c7431e0,~
code-source-info,0x18bc1aa3d9e,406,6541,7443,C0O6541C9O6556C16O6567C21O6594C28O6601C33O6623C34O6782C41O6798C44O6805C48O6787C52O6818C71O6840C76O6838C80O6889C84O6928C92O6956C95O6977C99O6967C103O7009C111O7040C114O7064C118O7054C122O7099C130O7132C133O7158C137O7148C141O7188C149O7199C151O7216C158O7239C166O7216C171O7264C178O7271C186O7271C192O7297C199O7309C212O7309C219O7442,,
code-creation,JS,10,539250,0x18bc1aa3fee,18,Stream node:internal/streams/legacy:10:16,0x2173c749a18,~
code-source-info,0x18bc1aa3fee,407,136,171,C0O148C5O151C10O151C17O170,,
code-creation,JS,10,539829,0x18bc1aa4cd6,352,ReadableState node:internal/streams/readable:83:23,0x2173c743190,~
code-source-info,0x18bc1aa4cd
code-creation,JS,10,539997,0x18bc1aa5186,98,getHighWaterMark node:internal/streams/state:19:26,0x2173c74cb50,~
code-source-info,0x18bc1aa5186,410,442,862,C0O497C12O497C18O549C21O573C26O578C33O606C38O633C47O655C56O701C69O707C74O701C75O757C80O764C84O779C85O810C88O847C93O817C97O859,,
code-creation,JS,10,540054,0x18bc1aa52e6,26,highWaterMarkFrom node:internal/streams/state:10:27,0x2173c74cab0,~
code-source-info,0x18bc1aa52e6,410,177,321,C0O228C7O260C15O281C19O299C25O318,,
code-creation,JS,10,540145,0x18bc1aa542e,17,BufferList node:internal/streams/buffer_list:14:14,0x2173c74b358,~
code-source-info,0x18bc1aa542e,409,278,355,C0O288C1O298C5O311C6O321C10O334C11O346C16O354,,
code-creation,JS,10,540256,0x18bc1aa604e,98,construct node:internal/streams/destroy:219:19,0x38242afe780,~
code-source-info,0x18bc1aa604e,404,4649,5060,C0O4685C8O4719C9O4726C10O4754C15O4790C20O4811C24O4825C25O4839C29O4856C33O4870C34O4884C38O4910C45O4915C48O4910C54O4948C61O4962C64O4948C72O4974C77O5001C78O5008C79O5019C82O5027C90O5027C97O5059,,
code-creation,JS,10,540354,0x18bc1aa62b6,266,Writable node:internal/streams/writable:220:18,0x2173c750ae8,~
code-source-info,0x18bc1aa62b6,413,7640,9200,C0O7640C9O8225C16O8242C19O8249C23O8231C27O8263C33O8281C44O8281C51O8338C58O8345C63O8367C64O8373C83O8395C88O8393C92O8444C96O8483C104O8512C107O8534C111O8524C115O8567C123O8597C126O8620C130O8610C134O8654C142O8685C145O8709C149O8699C153O8744C161O8773C164O8795C168O8785C172O8828C180O8861C183O8887C187O8877C191O8917C197O8932C204O8955C212O8932C217O8980C224O8987C232O8987C238O9013C245O9025C258O9025C265O9199,,
code-creation,JS,10,540491,0x18bc1aa674e,338,WritableState node:internal/streams/writable:77:23,0x2173c750a48,~
code-source-info,0x18bc1aa674e
code-creation,JS,10,540617,0x18bc1aa6b8e,13,getDefaultHighWaterMark node:internal/streams/state:15:33,0x2173c74cb00,~
code-source-info,0x18bc1aa6b8e,410,357,413,C0O375C12O410,,
code-creation,JS,10,540670,0x18bc1aa7196,23,resetBuffer node:internal/streams/writable:202:21,0x2173c750a98,~
code-source-info,0x18bc1aa7196,413,7198,7315,C0O7211C2O7226C6O7235C7O7255C11O7263C12O7280C16O7291C17O7305C22O7314,,
code-creation,JS,10,540730,0x18bc1aa770e,14,set node:net:2194:6,0x2173c77efd0,~
code-source-info,0x18bc1aa770e,428,62842,62875,C0O62848C2O62860C7O62869C13O62873,,
code-creation,JS,10,540762,0x18bc1aa77f6,8,get node:net:2193:6,0x2173c77ef80,~
code-source-info,0x18bc1aa77f6,428,62806,62834,C0O62811C2O62823C4O62822C7O62832,,
code-creation,JS,10,540794,0x18bc1aa78de,32,getNewAsyncId node:net:179:23,0x2173c77caa8,~
code-source-info,0x18bc1aa78de,428,5003,5122,C0O5017C4O5050C14O5084C17O5084C22O5106C27O5106C31O5119,,
code-creation,JS,10,540876,0x18bc1aa7b66,195,Readable.on node:internal/streams/readable:886:33,0x2173c743fe8,~
code-source-info,0x18bc1aa7b66,406,28902,29828,C0O28928C5O28935C10O28945C15O28948C29O28948C35O28990C40O29011C42O29018C47O29203C55O29203C62O29229C65O29196C69O29325C79O29356C84O29356C90O29376C92O29383C97O29417C103O29438C109O29466C111O29511C117O29490C121O29526C122O29540C126O29556C127O29578C131O29594C139O29621C144O29635C149O29594C154O29662C160O29681C163O29681C169O29726C175O29746C178O29754C186O29754C192O29814C194O29825,,
code-creation,JS,10,540980,0x18bc1aa7dde,135,initSocketHandle node:net:304:26,0x2173c77cd78,~
code-source-info,0x18bc1aa7dde,428,8065,8665,C0O8082C5O8082C9O8099C10O8114C14O8203C20O8224C27O8232C32O8246C36O8264C43O8281C45O8279C49O8300C51O8305C57O8343C62O8324C66O8322C70O8374C72O8379C74O8378C78O8394C80O8431C82O8436C84O8435C88O8456C90O8498C94O8517C99O8522C105O8556C106O8563C107O8573C109O8578C114O8587C118O8619C123O8627C128O8627C134O8664,,
code-creation,JS,10,541063,0x18bc1aa8016,155,undestroy node:internal/streams/destroy:154:19,0x38242afe6e0,~
code-source-info,0x18bc1aa8016,404,2971,3672,C0O2994C5O3028C10O3049C14O3063C15O3077C19O3090C20O3099C24O3113C25O3128C29O3142C30O3154C34O3168C35O3178C39O3191C40O3206C44O3220C45O3230C49O3256C57O3252C61O3298C69O3294C73O3328C77O3342C78O3356C82O3369C83O3381C87O3395C88O3404C92O3418C93O3433C97O3447C98O3457C102O3470C103O3485C107O3499C108O3513C112O3527C113O3541C117O3567C125O3563C129O3605C137O3601C141O3645C149O3641C154O3671,,
code-creation,JS,10,541401,0x18bc1aa8e0e,21,addCleanup node:internal/bootstrap/switches/is_main_thread:142:20,0x1c416d91548,~
code-source-info,0x18bc1aa8e0e,46,3798,3874,C0O3808C5O3812C10O3841C15O3841C20O3873,,
code-creation,JS,10,541481,0x18bc1aa8f3e,96,value node:internal/console/constructor:314:20,0x320a78e58f0,~
code-source-info,0x18bc1aa8f3e,38,9820,10319,C0O9850C2O9855C4O9854C8O9875C10O9885C15O9923C21O9959C29O10010C34O10010C41O10026C48O10073C53O10084C58O10084C64O10102C66O10138C72O10173C74O10188C78O10217C80O10232C81O10251C87O10266C93O10289C95O10312,,
code-creation,JS,10,541666,0x18bc1aa965e,765,getColorDepth node:internal/tty:106:23,0x18bc1aa0c48,~
code-source-info,0x18bc1aa965e
code-creation,Eval,10,542133,0x18bc1aaae16,5, node:os:1:1,0x18bc1aaaaa0,~
script-source,445,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst constants = internalBinding('constants').os;\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SYSTEM_ERROR\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateInt32 } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getAvailableParallelism\x2C\x0d\n  getCPUs\x2C\x0d\n  getFreeMem\x2C\x0d\n  getHomeDirectory: _getHomeDirectory\x2C\x0d\n  getHostname: _getHostname\x2C\x0d\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\x0d\n  getLoadAvg\x2C\x0d\n  getPriority: _getPriority\x2C\x0d\n  getOSInformation: _getOSInformation\x2C\x0d\n  getTotalMem\x2C\x0d\n  getUserInfo\x2C\x0d\n  getUptime: _getUptime\x2C\x0d\n  isBigEndian\x2C\x0d\n  setPriority: _setPriority\x2C\x0d\n} = internalBinding('os');\x0d\n\x0d\nfunction getCheckedFunction(fn) {\x0d\n  return hideStackFrames(function checkError(...args) {\x0d\n    const ctx = {};\x0d\n    const ret = fn(...args\x2C ctx);\x0d\n    if (ret === undefined) {\x0d\n      throw new ERR_SYSTEM_ERROR(ctx);\x0d\n    }\x0d\n    return ret;\x0d\n  });\x0d\n}\x0d\n\x0d\nconst {\x0d\n  0: type\x2C\x0d\n  1: version\x2C\x0d\n  2: release\x2C\x0d\n  3: machine\x2C\x0d\n} = _getOSInformation();\x0d\n\x0d\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\x0d\nconst getHostname = getCheckedFunction(_getHostname);\x0d\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\x0d\nconst getUptime = getCheckedFunction(_getUptime);\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSRelease = () => release;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSType = () => type;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSVersion = () => version;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getMachine = () => machine;\x0d\n\x0d\ngetAvailableParallelism[SymbolToPrimitive] = () => getAvailableParallelism();\x0d\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\x0d\ngetHostname[SymbolToPrimitive] = () => getHostname();\x0d\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\x0d\ngetOSType[SymbolToPrimitive] = () => getOSType();\x0d\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\x0d\ngetMachine[SymbolToPrimitive] = () => getMachine();\x0d\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\x0d\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\x0d\ngetUptime[SymbolToPrimitive] = () => getUptime();\x0d\n\x0d\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\x0d\n\x0d\nconst avgValues = new Float64Array(3);\x0d\n\x0d\n/**\x0d\n * @returns {[number\x2C number\x2C number]}\x0d\n */\x0d\nfunction loadavg() {\x0d\n  getLoadAvg(avgValues);\x0d\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array of objects containing information about each\x0d\n * logical CPU core.\x0d\n *\x0d\n * @returns {Array<{\x0d\n *  model: string\x2C\x0d\n *  speed: number\x2C\x0d\n *  times: {\x0d\n *    user: number\x2C\x0d\n *    nice: number\x2C\x0d\n *    sys: number\x2C\x0d\n *    idle: number\x2C\x0d\n *    irq: number\x2C\x0d\n *  }\x2C\x0d\n * }>}\x0d\n */\x0d\nfunction cpus() {\x0d\n  // [] is a bugfix for a regression introduced in 51cea61\x0d\n  const data = getCPUs() || [];\x0d\n  const result = [];\x0d\n  let i = 0;\x0d\n  while (i < data.length) {\x0d\n    ArrayPrototypePush(result\x2C {\x0d\n      model: data[i++]\x2C\x0d\n      speed: data[i++]\x2C\x0d\n      times: {\x0d\n        user: data[i++]\x2C\x0d\n        nice: data[i++]\x2C\x0d\n        sys: data[i++]\x2C\x0d\n        idle: data[i++]\x2C\x0d\n        irq: data[i++]\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction arch() {\x0d\n  return process.arch;\x0d\n}\x0d\narch[SymbolToPrimitive] = () => process.arch;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction platform() {\x0d\n  return process.platform;\x0d\n}\x0d\nplatform[SymbolToPrimitive] = () => process.platform;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction tmpdir() {\x0d\n  let path;\x0d\n  if (isWindows) {\x0d\n    path = process.env.TEMP ||\x0d\n           process.env.TMP ||\x0d\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\x0d\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  } else {\x0d\n    path = safeGetenv('TMPDIR') ||\x0d\n           safeGetenv('TMP') ||\x0d\n           safeGetenv('TEMP') ||\x0d\n           '/tmp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  }\x0d\n\x0d\n  return path;\x0d\n}\x0d\ntmpdir[SymbolToPrimitive] = () => tmpdir();\x0d\n\x0d\n/**\x0d\n * @returns {'BE' | 'LE'}\x0d\n */\x0d\nfunction endianness() {\x0d\n  return kEndianness;\x0d\n}\x0d\nendianness[SymbolToPrimitive] = () => kEndianness;\x0d\n\x0d\n// Returns the number of ones in the binary representation of the decimal\x0d\n// number.\x0d\nfunction countBinaryOnes(n) {\x0d\n  // Count the number of bits set in parallel\x2C which is faster than looping\x0d\n  n = n - ((n >>> 1) & 0x55555555);\x0d\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\x0d\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\x0d\n}\x0d\n\x0d\nfunction getCIDR(address\x2C netmask\x2C family) {\x0d\n  let ones = 0;\x0d\n  let split = '.';\x0d\n  let range = 10;\x0d\n  let groupLength = 8;\x0d\n  let hasZeros = false;\x0d\n  let lastPos = 0;\x0d\n\x0d\n  if (family === 'IPv6') {\x0d\n    split = ':';\x0d\n    range = 16;\x0d\n    groupLength = 16;\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < netmask.length; i++) {\x0d\n    if (netmask[i] !== split) {\x0d\n      if (i + 1 < netmask.length) {\x0d\n        continue;\x0d\n      }\x0d\n      i++;\x0d\n    }\x0d\n    const part = StringPrototypeSlice(netmask\x2C lastPos\x2C i);\x0d\n    lastPos = i + 1;\x0d\n    if (part !== '') {\x0d\n      if (hasZeros) {\x0d\n        if (part !== '0') {\x0d\n          return null;\x0d\n        }\x0d\n      } else {\x0d\n        const binary = NumberParseInt(part\x2C range);\x0d\n        const binaryOnes = countBinaryOnes(binary);\x0d\n        ones += binaryOnes;\x0d\n        if (binaryOnes !== groupLength) {\x0d\n          if ((binary & 1) !== 0) {\x0d\n            return null;\x0d\n          }\x0d\n          hasZeros = true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return `${address}/${ones}`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {Record<string\x2C Array<{\x0d\n *  address: string\x2C\x0d\n *  netmask: string\x2C\x0d\n *  family: 'IPv4' | 'IPv6'\x2C\x0d\n *  mac: string\x2C\x0d\n *  internal: boolean\x2C\x0d\n *  scopeid: number\x2C\x0d\n *  cidr: string | null\x2C\x0d\n * }>>}\x0d\n */\x0d\nfunction networkInterfaces() {\x0d\n  const data = getInterfaceAddresses();\x0d\n  const result = {};\x0d\n\x0d\n  if (data === undefined)\x0d\n    return result;\x0d\n  for (let i = 0; i < data.length; i += 7) {\x0d\n    const name = data[i];\x0d\n    const entry = {\x0d\n      address: data[i + 1]\x2C\x0d\n      netmask: data[i + 2]\x2C\x0d\n      family: data[i + 3]\x2C\x0d\n      mac: data[i + 4]\x2C\x0d\n      internal: data[i + 5]\x2C\x0d\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\x2C\x0d\n    };\x0d\n    const scopeid = data[i + 6];\x0d\n    if (scopeid !== -1)\x0d\n      entry.scopeid = scopeid;\x0d\n\x0d\n    const existing = result[name];\x0d\n    if (existing !== undefined)\x0d\n      ArrayPrototypePush(existing\x2C entry);\x0d\n    else\x0d\n      result[name] = [entry];\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @param {number} priority\x0d\n * @returns {void}\x0d\n */\x0d\nfunction setPriority(pid\x2C priority) {\x0d\n  if (priority === undefined) {\x0d\n    priority = pid;\x0d\n    pid = 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(pid\x2C 'pid');\x0d\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getPriority(pid) {\x0d\n  if (pid === undefined)\x0d\n    pid = 0;\x0d\n  else\x0d\n    validateInt32(pid\x2C 'pid');\x0d\n\x0d\n  const ctx = {};\x0d\n  const priority = _getPriority(pid\x2C ctx);\x0d\n\x0d\n  if (priority === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return priority;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\x0d\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\x0d\n * be `Buffer` instances.\x0d\n * @returns {{\x0d\n *   uid: number\x2C\x0d\n *   gid: number\x2C\x0d\n *   username: string\x2C\x0d\n *   homedir: string\x2C\x0d\n *   shell: string | null\x2C\x0d\n * }}\x0d\n */\x0d\nfunction userInfo(options) {\x0d\n  if (typeof options !== 'object')\x0d\n    options = null;\x0d\n\x0d\n  const ctx = {};\x0d\n  const user = getUserInfo(options\x2C ctx);\x0d\n\x0d\n  if (user === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  if (isWindows) {\x0d\n    user.uid |= 0;\x0d\n    user.gid |= 0;\x0d\n  }\x0d\n\x0d\n  return user;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  arch\x2C\x0d\n  availableParallelism: getAvailableParallelism\x2C\x0d\n  cpus\x2C\x0d\n  endianness\x2C\x0d\n  freemem: getFreeMem\x2C\x0d\n  getPriority\x2C\x0d\n  homedir: getHomeDirectory\x2C\x0d\n  hostname: getHostname\x2C\x0d\n  loadavg\x2C\x0d\n  networkInterfaces\x2C\x0d\n  platform\x2C\x0d\n  release: getOSRelease\x2C\x0d\n  setPriority\x2C\x0d\n  tmpdir\x2C\x0d\n  totalmem: getTotalMem\x2C\x0d\n  type: getOSType\x2C\x0d\n  userInfo\x2C\x0d\n  uptime: getUptime\x2C\x0d\n  version: getOSVersion\x2C\x0d\n  machine: getMachine\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  EOL: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\r\\n' : '\\n'\x2C\x0d\n  }\x2C\x0d\n\x0d\n  devNull: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x18bc1aaae16,445,0,10194,C0O0C4O10194,,
code-creation,JS,10,542688,0x18bc1aac186,886, node:os:1:1,0x18bc1aaad90,~
code-source-info,0x18bc1aac
code-creation,JS,10,543303,0x18bc1aaea26,26,getCheckedFunction node:os:63:28,0x18bc1aaae48,~
code-source-info,0x18bc1aaea26,445,2115,2338,C0O2115C9O2125C21O2132C25O2335,,
code-creation,JS,10,543507,0x18bc1ab0526,5,getOSRelease node:os:89:22,0x18bc1aab280,~
code-source-info,0x18bc1ab0526,445,2737,2750,C0O2743C4O2750,,
code-creation,JS,10,543576,0x18bc1ab0656,38,formatWithOptions node:internal/util/inspect:2151:27,0x33cbf859890,~
script-source,19,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n    kPending\x2C\x0d\n    kRejected\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\nlet internalUrl;\x0d\n\x0d\nfunction pathToFileUrlHref(filepath) {\x0d\n  internalUrl ??= require('internal/url');\x0d\n  return internalUrl.pathToFileURL(filepath).href;\x0d\n}\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x2C\x0d\n  )\x2C\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x2C\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n *\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = {\x0d\n  __proto__: null\x2C\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n};\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign({ __proto__: null }\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x2C\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode\x2C 16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${NumberPrototypeToString(point\x2C 16)}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return String(descriptor.value.name);\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x2C\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (proxy === null || proxy[0] === null) {\x0d\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\x0d\n    }\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x2C\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return StringPrototypeReplaceAll(ret\x2C '\\n'\x2C `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x2C\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (SymbolIterator in value || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x2C\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\x0d\n      );\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      ArrayPrototypePushApply(output\x2C protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      ArrayPrototypeSort(output\x2C comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C comparator);\x0d\n      ArrayPrototypeUnshift(sorted\x2C output\x2C output.length - keys.length\x2C keys.length);\x0d\n      ReflectApply(ArrayPrototypeSplice\x2C null\x2C sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (StringPrototypeStartsWith(stringified\x2C 'class') && StringPrototypeEndsWith(stringified\x2C '}')) {\x0d\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\x0d\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C '{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C '(') ||\x0d\n        // Slow path to guarantee that it's indeed a class.\x0d\n        RegExpPrototypeExec(classRegExp\x2C RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)) !== null)\x0d\n    ) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = b.indexOf(a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = StringPrototypeSplit(stack\x2C '\\n');\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (err.cause && isError(err.cause)) {\x0d\n    const causeStack = getStackString(err.cause);\x0d\n    const causeStackStart = StringPrototypeIndexOf(causeStack\x2C '\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack\x2C causeStackStart + 1)\x2C '\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (StringPrototypeEndsWith(name\x2C 'Error') &&\x0d\n      StringPrototypeStartsWith(stack\x2C name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/\x2C stack) ||\x0d\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/\x2C stack);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = StringPrototypeSlice(getPrefix(constructor\x2C tag\x2C fallback)\x2C 0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (StringPrototypeIncludes(prefix\x2C name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${StringPrototypeSlice(stack\x2C len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack\x2C len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = ArrayPrototypeIndexOf(keys\x2C name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && StringPrototypeIncludes(stack\x2C err[name])) {\x0d\n        ArrayPrototypeSplice(keys\x2C index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markNodeModules(ctx\x2C line) {\x0d\n  let tempLine = '';\x0d\n  let nodeModule;\x0d\n  let pos = 0;\x0d\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n    // '/node_modules/'.length === 14\x0d\n    tempLine += StringPrototypeSlice(line\x2C pos\x2C nodeModule.index + 14);\x0d\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n    pos = nodeModule.index + nodeModule[0].length;\x0d\n  }\x0d\n  if (pos !== 0) {\x0d\n    line = tempLine + StringPrototypeSlice(line\x2C pos);\x0d\n  }\x0d\n  return line;\x0d\n}\x0d\n\x0d\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\x0d\n  let cwdStartPos = StringPrototypeIndexOf(line\x2C workingDirectory);\x0d\n  let tempLine = '';\x0d\n  let cwdLength = workingDirectory.length;\x0d\n  if (cwdStartPos !== -1) {\x0d\n    if (StringPrototypeSlice(line\x2C cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\x0d\n      cwdLength += 7;\x0d\n      cwdStartPos -= 7;\x0d\n    }\x0d\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\x0d\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line\x2C ')') ? -1 : line.length;\x0d\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\x0d\n    const cwdSlice = StringPrototypeSlice(line\x2C start\x2C workingDirectoryEndPos);\x0d\n\x0d\n    tempLine += StringPrototypeSlice(line\x2C 0\x2C start);\x0d\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\x0d\n    tempLine += StringPrototypeSlice(line\x2C workingDirectoryEndPos\x2C end);\x0d\n    if (end === -1) {\x0d\n      tempLine += ctx.stylize(')'\x2C 'undefined');\x0d\n    }\x0d\n  } else {\x0d\n    tempLine += line;\x0d\n  }\x0d\n  return tempLine;\x0d\n}\x0d\n\x0d\nfunction safeGetCWD() {\x0d\n  let workingDirectory;\x0d\n  try {\x0d\n    workingDirectory = process.cwd();\x0d\n  } catch {\x0d\n    return;\x0d\n  }\x0d\n  return workingDirectory;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'cause'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'cause');\x0d\n  }\x0d\n\x0d\n  // Print errors aggregated into AggregateError\x0d\n  if (ArrayIsArray(err.errors) &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'errors'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'errors');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && StringPrototypeIndexOf(stack\x2C err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = StringPrototypeIndexOf(stack\x2C '\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = StringPrototypeSlice(stack\x2C 0\x2C stackStart);\x0d\n    const stackFramePart = StringPrototypeSlice(stack\x2C stackStart + 1);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      const workingDirectory = safeGetCWD();\x0d\n      let esmWorkingDirectory;\x0d\n      for (let line of lines) {\x0d\n        const core = RegExpPrototypeExec(coreModuleRegExp\x2C line);\x0d\n        if (core !== null && BuiltinModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          newStack += '\\n';\x0d\n\x0d\n          line = markNodeModules(ctx\x2C line);\x0d\n          if (workingDirectory !== undefined) {\x0d\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\x0d\n            if (newLine === line) {\x0d\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\x0d\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\x0d\n            }\x0d\n            line = newLine;\x0d\n          }\x0d\n\x0d\n          newStack += line;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${ArrayPrototypeJoin(lines\x2C '\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n    stack = StringPrototypeReplaceAll(stack\x2C '\\n'\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x2C\x0d\n        ) / biasedMax\x2C\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x2C\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x2C\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = StringPrototypeStartsWith(integerString\x2C '-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${StringPrototypeSlice(integerString\x2C i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${StringPrototypeSlice(integerString\x2C 0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${StringPrototypeSlice(integerString\x2C i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${StringPrototypeSlice(integerString\x2C i)}`;\x0d\n}\x0d\n\x0d\nconst remainingText = (remaining) => `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string\x2C 'e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(\x0d\n      StringPrototypeSlice(String(number)\x2C string.length + 1)\x2C\x0d\n    )\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // We do not support handling unicode characters width with\x0d\n        // the readline getStringWidth function as there are\x0d\n        // performance implications.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return ArrayPrototypeJoin(\x0d\n        ArrayPrototypeMap(\x0d\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C value)\x2C\x0d\n          (line) => fn(strEscape(line)\x2C 'string')\x2C\x0d\n        )\x2C\x0d\n        ` +\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl + 2)}`\x2C\x0d\n      ) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C ' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (RegExpPrototypeExec(numberRegExp\x2C key) === null) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    '$1 '\x2C\x0d\n  ));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = remainingText(remaining);\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const v of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(\x0d\n      output\x2C\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x2C\x0d\n    );\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  const output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      ArrayPrototypeSort(output);\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/\x2C braces[0]\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      key\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!StringPrototypeIncludes(joinedOutput\x2C '\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    if (proxyTarget === null) {\x0d\n      return true;\x0d\n    }\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {};\x0d\n        a.a = a;\x0d\n        JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C { allowArray: true });\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x2C\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x2C\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction isZeroWidthCodePoint(code) {\x0d\n  return code <= 0x1F || // C0 control codes\x0d\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n    // Combining Diacritical Marks for Symbols\x0d\n    (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars) {\x0d\n      str = stripVTControlCharacters(str);\x0d\n    }\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str\x2C i)\x2C 'NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return RegExpPrototypeSymbolReplace(ansi\x2C str\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  identicalSequenceRange\x2C\x0d\n  inspect\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  isZeroWidthCodePoint\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1ab0656,19,74638,74802,C0O74638C8O74669C16O74684C24O74669C29O74744C32O74751C37O74799,,
tick,0x7ff8e7a71693,549925,0,0x0,3,0x7ff777ca8e40,0x18bc1a9e68a,0x18bc1a9e546,0x7ff777509e40,0x18bc1a9e373,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,JS,10,550288,0x18bc1ab090e,764,formatWithOptionsInternal node:internal/util/inspect:2172:35,0x33cbf859980,~
code-source-info,0x18bc1ab090e
code-creation,JS,10,550666,0x18bc1ab0ff6,269,value node:internal/console/constructor:271:20,0x320a78e5868,~
code-source-info,0x18bc1ab0ff6,38,8230,9712,C0O8288C5O8330C7O8335C9O8334C13O8377C15O8394C17O8390C21O8428C23O8445C29O8460C34O8497C38O8523C44O8550C49O8596C55O8603C60O8621C68O8625C75O8677C91O8735C99O8686C106O8771C108O8792C113O8818C123O8843C128O8885C133O8885C138O8899C145O9224C153O9224C160O9247C165O9272C176O9272C182O9311C187O9311C206O9511C216O9515C222O9551C224O9551C238O9659C239O9666C250O9666C268O9711,,
code-creation,JS,10,550841,0x18bc1ab129e,118,listenerCount node:events:840:23,0x33cbf865b00,~
script-source,22,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x2C\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = { __proto__: null };\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = { __proto__: null };\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = { __proto__: null };\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = { __proto__: null };\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = { __proto__: null };\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type\x2C listener) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      if (listener != null) {\x0d\n        return listener === evlistener ? 1 : 0;\x0d\n      }\x0d\n\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      if (listener != null) {\x0d\n        let matching = 0;\x0d\n\x0d\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\x0d\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\x0d\n            matching++;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        return matching;\x0d\n      }\x0d\n\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\x0d\n  // Parameters validation\x0d\n  const signal = options.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x2C\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n  return iterator;\x0d\n}\x0d\n
code-source-info,0x18bc1ab129e,22,25001,25678,C0O25043C5O25057C7O25109C9O25115C13O25130C17O25177C22O25210C24O25226C34O25249C35O25268C37O25277C38O25290C42O25329C47O25377C49O25404C51O25422C56O25432C58O25432C63O25455C65O25469C71O25473C78O25499C82O25503C89O25512C94O25541C99O25438C104O25391C108O25588C110O25604C111O25641C115O25648C116O25666C117O25675,,
code-creation,JS,10,552553,0x18bc1ab1436,39,once node:events:645:44,0x33cbf865840,~
code-source-info,0x18bc1ab1436,22,19523,19641,C0O19545C3O19545C7O19580C24O19589C30O19580C36O19626C38O19638,,
code-creation,JS,10,552604,0x18bc1ab15e6,60,_onceWrap node:events:631:19,0x33cbf8657f0,~
code-source-info,0x18bc1ab15e6,22,19082,19311,C0O19126C6O19150C12O19161C18O19169C24O19175C31O19206C34O19218C39O19218C45O19234C47O19251C51O19266C53O19279C57O19293C59O19308,,
code-creation,JS,10,552688,0x18bc1ab19f6,25,Writable.write node:internal/streams/writable:336:36,0x2173c7511c0,~
code-source-info,0x18bc1ab19f6,413,11106,11186,C0O11133C15O11140C24O11183,,
code-creation,JS,10,552795,0x18bc1ab1bde,337,_write node:internal/streams/writable:286:16,0x2173c750b38,~
code-source-info,0x18bc1ab1bde
code-creation,JS,10,552939,0x18bc1ab1fa6,217,writeOrBuffer node:internal/streams/writable:368:23,0x2173c750b88,~
code-source-info,0x18bc1ab1fa6,413,12057,13079,C0O12123C10O12146C15O12159C22O12175C25O12172C29O12243C34O12258C38O12250C42O12349C44O12364C45O12380C49O12403C55O12420C61O12436C67O12454C73O12480C78O12489C90O12496C96O12503C102O12513C106O12489C111O12541C119O12564C124O12587C125O12604C129O12635C137O12655C142O12673C143O12687C149O12720C151O12735C155O12747C157O12761C161O12778C162O12792C166O12805C167O12816C171O12836C176O12866C190O12836C195O12881C196O12892C200O13027C204O13048C211O13066C216O13076,,
code-creation,JS,10,553016,0x18bc1ab21d6,26,Socket._write node:net:954:35,0x2173c77e7a8,~
code-source-info,0x18bc1ab21d6,428,25750,25825,C0O25781C19O25781C25O25824,,
code-creation,JS,10,553085,0x18bc1ab246e,217,Socket._writeGeneric node:net:912:42,0x2173c77e660,~
code-source-info,0x18bc1ab246e,428,24667,25605,C0O24667C21O24873C37O24892C41O24910C45O24923C49O24945C53O24967C66O24967C72O25200C83O25200C89O25229C90O25236C91O25245C92O25263C96O25274C98O25296C102O25317C108O25333C115O25340C118O25336C124O25333C128O25367C129O25380C130O25396C135O25396C139O25420C141O25428C145O25445C161O25451C169O25495C188O25501C194O25552C200O25564C204O25569C207O25596C211O25590C216O25604,,
code-creation,JS,10,553158,0x18bc1ab271e,46,_unrefTimer node:net:496:52,0x2173c77d820,~
code-source-info,0x18bc1ab271e,428,14165,14280,C0O14186C5O14194C9O14226C11O14232C13O14231C18O14250C20O14252C22O14251C26O14262C31O14262C35O14210C40O14173C45O14279,,
code-creation,JS,10,553214,0x18bc1ab283e,55,writeGeneric node:internal/stream_base_commons:147:22,0x1ac513cbcd8,~
code-source-info,0x18bc1ab283e,429,3746,3936,C0O3790C5O3811C7O3810C11O3790C17O3841C29O3841C35O3883C47O3883C52O3922C54O3933,,
code-creation,JS,10,553257,0x18bc1ab298e,47,createWriteWrap node:internal/stream_base_commons:109:25,0x1ac513cbc38,~
code-source-info,0x18bc1ab298e,429,2830,3055,C0O2866C5O2866C11O2888C13O2899C17O2912C19O2927C23O2949C24O2959C28O2971C29O2981C33O2989C34O3000C38O3011C40O3024C44O3041C46O3052,,
code-creation,JS,10,553371,0x18bc1ab2d8e,215,handleWriteReq node:internal/stream_base_commons:45:24,0x1ac513cbb98,~
code-source-info,0x18bc1ab2d8e,429,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,553626,0x18bc1ab2fd6,92,afterWriteDispatched node:internal/stream_base_commons:155:30,0x1ac513cbd28,~
code-source-info,0x18bc1ab2fd6,429,3969,4253,C0O3989C2O4001C7O4017C9O4016C12O3999C16O4036C18O4050C23O4066C25O4065C30O4046C34O4092C35O4100C40O4112C42O4122C48O4155C56O4122C62O4119C66O4163C67O4178C73O4198C81O4234C86O4234C91O4252,,
code-creation,JS,10,553759,0x18bc1ab322e,323,onwrite node:internal/streams/writable:428:17,0x2173c750c78,~
code-source-info,0x18bc1ab322e
code-creation,JS,10,553914,0x18bc1ab379e,373,nextTick node:internal/process/task_queues:103:18,0xf2fdb7fa20,~
script-source,27,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x2C\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x2C\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x2C\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x2C\x0d\n};\x0d\n
code-source-info,0x18bc1ab379e
code-creation,JS,10,554198,0x18bc1ab3a8e,16,get node:internal/bootstrap/node:90:8,0xf2fdb44968,~
code-source-info,0x18bc1ab3a8e,10,3711,3772,C0O3723C6O3755C12O3759C15O3765,,
code-creation,JS,10,554231,0x18bc1ab3b7e,15,isEmpty node:internal/fixed_queue:95:10,0x320a78c5f50,~
script-source,29,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n      tail.next = null;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x18bc1ab3b7e,29,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,JS,10,554439,0x18bc1ab3c6e,13,isEmpty node:internal/fixed_queue:67:10,0x320a78c5ca0,~
code-source-info,0x18bc1ab3c6e,29,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,JS,10,554469,0x18bc1ab3d5e,25,setHasTickScheduled node:internal/process/task_queues:51:29,0xf2fdb7f930,~
code-source-info,0x18bc1ab3d5e,27,1137,1197,C0O1150C7O1159C12O1180C19O1178C24O1196,,
code-creation,JS,10,554591,0x18bc1ab403e,59,push node:internal/fixed_queue:99:7,0x320a78c5fa0,~
code-source-info,0x18bc1ab403e,29,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,JS,10,554629,0x18bc1ab417e,24,isFull node:internal/fixed_queue:71:9,0x320a78c5cf0,~
code-source-info,0x18bc1ab417e,29,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,JS,10,554662,0x18bc1ab4286,37,push node:internal/fixed_queue:75:7,0x320a78c5d40,~
code-source-info,0x18bc1ab4286,29,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,JS,10,554715,0x18bc1ab43b6,62,Readable.removeListener node:internal/streams/readable:916:45,0x2173c744070,~
code-source-info,0x18bc1ab43b6,406,29934,30506,C0O29960C5O29967C10O29977C15O29992C29O29992C35O30069C37O30076C42O30433C45O30441C53O30441C59O30492C61O30503,,
code-creation,JS,10,554811,0x18bc1ab452e,301,removeListener node:events:674:28,0x33cbf8658e0,~
code-source-info,0x18bc1ab452e
code-creation,Eval,10,554989,0x18bc1ab4a66,5, node:internal/repl:1:1,0x18bc1ab48c0,~
script-source,446,node:internal/repl,'use strict';\x0d\n\x0d\nconst {\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst REPL = require('repl');\x0d\nconst { kStandaloneREPL } = require('internal/repl/utils');\x0d\n\x0d\nmodule.exports = { __proto__: REPL };\x0d\nmodule.exports.createInternalRepl = createRepl;\x0d\n\x0d\nfunction createRepl(env\x2C opts\x2C cb) {\x0d\n  if (typeof opts === 'function') {\x0d\n    cb = opts;\x0d\n    opts = null;\x0d\n  }\x0d\n  opts = {\x0d\n    [kStandaloneREPL]: true\x2C\x0d\n    ignoreUndefined: false\x2C\x0d\n    useGlobal: true\x2C\x0d\n    breakEvalOnSigint: true\x2C\x0d\n    ...opts\x2C\x0d\n  };\x0d\n\x0d\n  if (NumberParseInt(env.NODE_NO_READLINE)) {\x0d\n    opts.terminal = false;\x0d\n  }\x0d\n\x0d\n  if (env.NODE_REPL_MODE) {\x0d\n    opts.replMode = {\x0d\n      'strict': REPL.REPL_MODE_STRICT\x2C\x0d\n      'sloppy': REPL.REPL_MODE_SLOPPY\x2C\x0d\n    }[env.NODE_REPL_MODE.toLowerCase().trim()];\x0d\n  }\x0d\n\x0d\n  if (opts.replMode === undefined) {\x0d\n    opts.replMode = REPL.REPL_MODE_SLOPPY;\x0d\n  }\x0d\n\x0d\n  const historySize = Number(env.NODE_REPL_HISTORY_SIZE);\x0d\n  if (!NumberIsNaN(historySize) && historySize > 0) {\x0d\n    opts.historySize = historySize;\x0d\n  } else {\x0d\n    opts.historySize = 1000;\x0d\n  }\x0d\n\x0d\n  const repl = REPL.start(opts);\x0d\n  const term = 'terminal' in opts ? opts.terminal : process.stdout.isTTY;\x0d\n  repl.setupHistory(term ? env.NODE_REPL_HISTORY : ''\x2C cb);\x0d\n}\x0d\n
code-source-info,0x18bc1ab4a66,446,0,1267,C0O0C4O1267,,
code-creation,JS,10,555073,0x18bc1ab4b86,105, node:internal/repl:1:1,0x18bc1ab49e0,~
code-source-info,0x18bc1ab4b86,446,0,1267,C0O0C29O28C35O39C41O55C47O105C50O105C54O105C56O151C59O151C64O131C70O186C81O216C88O201C92O232C99O259C104O1266,,
code-creation,Eval,10,556592,0x18bc1ab7ef6,5, node:repl:1:1,0x18bc1ab69b8,~
script-source,447,node:repl,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n/* A REPL library that you can include in your own code to get a runtime\x0d\n * interface to your program.\x0d\n *\x0d\n *   const repl = require("repl");\x0d\n *   // start repl on stdin\x0d\n *   repl.start("prompt> ");\x0d\n *\x0d\n *   // listen for unix socket connections and start repl on them\x0d\n *   net.createServer(function(socket) {\x0d\n *     repl.start("node via Unix socket> "\x2C socket);\x0d\n *   }).listen("/tmp/node-repl-sock");\x0d\n *\x0d\n *   // listen for TCP socket connections and start repl on them\x0d\n *   net.createServer(function(socket) {\x0d\n *     repl.start("node via TCP socket> "\x2C socket);\x0d\n *   }).listen(5001);\x0d\n *\x0d\n *   // expose foo to repl context\x0d\n *   repl.start("node > ").context.foo = "stdin is fun";\x0d\n */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeFindIndex\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafePromiseRace\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeTrimLeft\x2C\x0d\n  StringPrototypeToLocaleLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SyntaxError\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  makeRequireFunction\x2C\x0d\n  addBuiltinLibsToObject\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  isIdentifierStart\x2C\x0d\n  isIdentifierChar\x2C\x0d\n} = require('internal/deps/acorn/acorn/dist/acorn');\x0d\nconst {\x0d\n  decorateErrorStack\x2C\x0d\n  isError\x2C\x0d\n  deprecate\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst vm = require('vm');\x0d\nconst path = require('path');\x0d\nconst fs = require('fs');\x0d\nconst { Interface } = require('readline');\x0d\nconst {\x0d\n  commonPrefix\x2C\x0d\n} = require('internal/readline/utils');\x0d\nconst { Console } = require('console');\x0d\nconst CJSModule = require('internal/modules/cjs/loader').Module;\x0d\nlet _builtinLibs = ArrayPrototypeFilter(\x0d\n  CJSModule.builtinModules\x2C\x0d\n  (e) => !StringPrototypeStartsWith(e\x2C '_')\x2C\x0d\n);\x0d\nconst nodeSchemeBuiltinLibs = ArrayPrototypeMap(\x0d\n  _builtinLibs\x2C (lib) => `node:${lib}`);\x0d\nArrayPrototypeForEach(\x0d\n  BuiltinModule.getSchemeOnlyModuleNames()\x2C\x0d\n  (lib) => ArrayPrototypePush(nodeSchemeBuiltinLibs\x2C `node:${lib}`)\x2C\x0d\n);\x0d\nconst domain = require('domain');\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CANNOT_WATCH_SIGINT\x2C\x0d\n    ERR_INVALID_REPL_EVAL_CONFIG\x2C\x0d\n    ERR_INVALID_REPL_INPUT\x2C\x0d\n    ERR_SCRIPT_EXECUTION_INTERRUPTED\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { sendInspectorCommand } = require('internal/util/inspector');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst experimentalREPLAwait = getOptionValue(\x0d\n  '--experimental-repl-await'\x2C\x0d\n);\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst {\x0d\n  REPL_MODE_SLOPPY\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  isRecoverableError\x2C\x0d\n  kStandaloneREPL\x2C\x0d\n  setupPreview\x2C\x0d\n  setupReverseSearch\x2C\x0d\n} = require('internal/repl/utils');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    SKIP_SYMBOLS\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  startSigintWatchdog\x2C\x0d\n  stopSigintWatchdog\x2C\x0d\n} = internalBinding('contextify');\x0d\n\x0d\nconst history = require('internal/repl/history');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nlet nextREPLResourceNumber = 1;\x0d\n// This prevents v8 code cache from getting confused and using a different\x0d\n// cache from a resource of the same name\x0d\nfunction getREPLResourceName() {\x0d\n  return `REPL${nextREPLResourceNumber++}`;\x0d\n}\x0d\n\x0d\n// Lazy-loaded.\x0d\nlet processTopLevelAwait;\x0d\n\x0d\nconst globalBuiltins =\x0d\n  new SafeSet(vm.runInNewContext('Object.getOwnPropertyNames(globalThis)'));\x0d\n\x0d\nconst parentModule = module;\x0d\nconst domainSet = new SafeWeakSet();\x0d\n\x0d\nconst kBufferedCommandSymbol = Symbol('bufferedCommand');\x0d\nconst kContextId = Symbol('contextId');\x0d\n\x0d\nlet addedNewListener = false;\x0d\n\x0d\ntry {\x0d\n  // Hack for require.resolve("./relative") to work properly.\x0d\n  module.filename = path.resolve('repl');\x0d\n} catch {\x0d\n  // path.resolve('repl') fails when the current working directory has been\x0d\n  // deleted.  Fall back to the directory name of the (absolute) executable\x0d\n  // path.  It's not really correct but what are the alternatives?\x0d\n  const dirname = path.dirname(process.execPath);\x0d\n  module.filename = path.resolve(dirname\x2C 'repl');\x0d\n}\x0d\n\x0d\n// Hack for repl require to work properly with node_modules folders\x0d\nmodule.paths = CJSModule._nodeModulePaths(module.filename);\x0d\n\x0d\n// This is the default "writer" value\x2C if none is passed in the REPL options\x2C\x0d\n// and it can be overridden by custom print functions\x2C such as `probe` or\x0d\n// `eyes.js`.\x0d\nconst writer = (obj) => inspect(obj\x2C writer.options);\x0d\nwriter.options = { ...inspect.defaultOptions\x2C showProxy: true };\x0d\n\x0d\nfunction REPLServer(prompt\x2C\x0d\n                    stream\x2C\x0d\n                    eval_\x2C\x0d\n                    useGlobal\x2C\x0d\n                    ignoreUndefined\x2C\x0d\n                    replMode) {\x0d\n  if (!(this instanceof REPLServer)) {\x0d\n    return new REPLServer(prompt\x2C\x0d\n                          stream\x2C\x0d\n                          eval_\x2C\x0d\n                          useGlobal\x2C\x0d\n                          ignoreUndefined\x2C\x0d\n                          replMode);\x0d\n  }\x0d\n\x0d\n  let options;\x0d\n  if (prompt !== null && typeof prompt === 'object') {\x0d\n    // An options object was given.\x0d\n    options = { ...prompt };\x0d\n    stream = options.stream || options.socket;\x0d\n    eval_ = options.eval;\x0d\n    useGlobal = options.useGlobal;\x0d\n    ignoreUndefined = options.ignoreUndefined;\x0d\n    prompt = options.prompt;\x0d\n    replMode = options.replMode;\x0d\n  } else {\x0d\n    options = {};\x0d\n  }\x0d\n\x0d\n  if (!options.input && !options.output) {\x0d\n    // Legacy API\x2C passing a 'stream'/'socket' option.\x0d\n    if (!stream) {\x0d\n      // Use stdin and stdout as the default streams if none were given.\x0d\n      stream = process;\x0d\n    }\x0d\n    // We're given a duplex readable/writable Stream\x2C like a `net.Socket`\x0d\n    // or a custom object with 2 streams\x2C or the `process` object.\x0d\n    options.input = stream.stdin || stream;\x0d\n    options.output = stream.stdout || stream;\x0d\n  }\x0d\n\x0d\n  if (options.terminal === undefined) {\x0d\n    options.terminal = options.output.isTTY;\x0d\n  }\x0d\n  options.terminal = !!options.terminal;\x0d\n\x0d\n  if (options.terminal && options.useColors === undefined) {\x0d\n    // If possible\x2C check if stdout supports colors or not.\x0d\n    if (options.output.hasColors) {\x0d\n      options.useColors = options.output.hasColors();\x0d\n    } else if (process.env.NODE_DISABLE_COLORS === undefined) {\x0d\n      options.useColors = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(devsnek): Add a test case for custom eval functions.\x0d\n  const preview = options.terminal &&\x0d\n    (options.preview !== undefined ? !!options.preview : !eval_);\x0d\n\x0d\n  ObjectDefineProperty(this\x2C 'inputStream'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: pendingDeprecation ?\x0d\n      deprecate(() => this.input\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      () => this.input\x2C\x0d\n    set: pendingDeprecation ?\x0d\n      deprecate((val) => this.input = val\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      (val) => this.input = val\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(this\x2C 'outputStream'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: pendingDeprecation ?\x0d\n      deprecate(() => this.output\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      () => this.output\x2C\x0d\n    set: pendingDeprecation ?\x0d\n      deprecate((val) => this.output = val\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      (val) => this.output = val\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  this.allowBlockingCompletions = !!options.allowBlockingCompletions;\x0d\n  this.useColors = !!options.useColors;\x0d\n  this._domain = options.domain || domain.create();\x0d\n  this.useGlobal = !!useGlobal;\x0d\n  this.ignoreUndefined = !!ignoreUndefined;\x0d\n  this.replMode = replMode || module.exports.REPL_MODE_SLOPPY;\x0d\n  this.underscoreAssigned = false;\x0d\n  this.last = undefined;\x0d\n  this.underscoreErrAssigned = false;\x0d\n  this.lastError = undefined;\x0d\n  this.breakEvalOnSigint = !!options.breakEvalOnSigint;\x0d\n  this.editorMode = false;\x0d\n  // Context id for use with the inspector protocol.\x0d\n  this[kContextId] = undefined;\x0d\n\x0d\n  if (this.breakEvalOnSigint && eval_) {\x0d\n    // Allowing this would not reflect user expectations.\x0d\n    // breakEvalOnSigint affects only the behavior of the default eval().\x0d\n    throw new ERR_INVALID_REPL_EVAL_CONFIG();\x0d\n  }\x0d\n\x0d\n  if (options[kStandaloneREPL]) {\x0d\n    // It is possible to introspect the running REPL accessing this variable\x0d\n    // from inside the REPL. This is useful for anyone working on the REPL.\x0d\n    module.exports.repl = this;\x0d\n  } else if (!addedNewListener) {\x0d\n    // Add this listener only once and use a WeakSet that contains the REPLs\x0d\n    // domains. Otherwise we'd have to add a single listener to each REPL\x0d\n    // instance and that could trigger the `MaxListenersExceededWarning`.\x0d\n    process.prependListener('newListener'\x2C (event\x2C listener) => {\x0d\n      if (event === 'uncaughtException' &&\x0d\n          process.domain &&\x0d\n          listener.name !== 'domainUncaughtExceptionClear' &&\x0d\n          domainSet.has(process.domain)) {\x0d\n        // Throw an error so that the event will not be added and the current\x0d\n        // domain takes over. That way the user is notified about the error\x0d\n        // and the current code evaluation is stopped\x2C just as any other code\x0d\n        // that contains an error.\x0d\n        throw new ERR_INVALID_REPL_INPUT(\x0d\n          'Listeners for `uncaughtException` cannot be used in the REPL');\x0d\n      }\x0d\n    });\x0d\n    addedNewListener = true;\x0d\n  }\x0d\n\x0d\n  domainSet.add(this._domain);\x0d\n\x0d\n  const savedRegExMatches = [''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''];\x0d\n  const sep = '\\u0000\\u0000\\u0000';\x0d\n  const regExMatcher = new RegExp(`^${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +\x0d\n                                  `${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +\x0d\n                                  `${sep}(.*)$`);\x0d\n\x0d\n  eval_ = eval_ || defaultEval;\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  // Pause taking in new input\x2C and store the keys in a buffer.\x0d\n  const pausedBuffer = [];\x0d\n  let paused = false;\x0d\n  function pause() {\x0d\n    paused = true;\x0d\n  }\x0d\n\x0d\n  function unpause() {\x0d\n    if (!paused) return;\x0d\n    paused = false;\x0d\n    let entry;\x0d\n    const tmpCompletionEnabled = self.isCompletionEnabled;\x0d\n    while ((entry = ArrayPrototypeShift(pausedBuffer)) !== undefined) {\x0d\n      const { 0: type\x2C 1: payload\x2C 2: isCompletionEnabled } = entry;\x0d\n      switch (type) {\x0d\n        case 'key': {\x0d\n          const { 0: d\x2C 1: key } = payload;\x0d\n          self.isCompletionEnabled = isCompletionEnabled;\x0d\n          self._ttyWrite(d\x2C key);\x0d\n          break;\x0d\n        }\x0d\n        case 'close':\x0d\n          self.emit('exit');\x0d\n          break;\x0d\n      }\x0d\n      if (paused) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    self.isCompletionEnabled = tmpCompletionEnabled;\x0d\n  }\x0d\n\x0d\n  function defaultEval(code\x2C context\x2C file\x2C cb) {\x0d\n    const asyncESM = require('internal/process/esm_loader');\x0d\n\x0d\n    let result\x2C script\x2C wrappedErr;\x0d\n    let err = null;\x0d\n    let wrappedCmd = false;\x0d\n    let awaitPromise = false;\x0d\n    const input = code;\x0d\n\x0d\n    // It's confusing for `{ a : 1 }` to be interpreted as a block\x0d\n    // statement rather than an object literal.  So\x2C we first try\x0d\n    // to wrap it in parentheses\x2C so that it will be interpreted as\x0d\n    // an expression.  Note that if the above condition changes\x2C\x0d\n    // lib/internal/repl/utils.js needs to be changed to match.\x0d\n    if (RegExpPrototypeExec(/^\\s*{/\x2C code) !== null &&\x0d\n        RegExpPrototypeExec(/;\\s*$/\x2C code) === null) {\x0d\n      code = `(${StringPrototypeTrim(code)})\\n`;\x0d\n      wrappedCmd = true;\x0d\n    }\x0d\n\x0d\n    // `experimentalREPLAwait` is set to true by default.\x0d\n    // Shall be false in case `--no-experimental-repl-await` flag is used.\x0d\n    if (experimentalREPLAwait && StringPrototypeIncludes(code\x2C 'await')) {\x0d\n      if (processTopLevelAwait === undefined) {\x0d\n        ({ processTopLevelAwait } = require('internal/repl/await'));\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        const potentialWrappedCode = processTopLevelAwait(code);\x0d\n        if (potentialWrappedCode !== null) {\x0d\n          code = potentialWrappedCode;\x0d\n          wrappedCmd = true;\x0d\n          awaitPromise = true;\x0d\n        }\x0d\n      } catch (e) {\x0d\n        let recoverableError = false;\x0d\n        if (e.name === 'SyntaxError') {\x0d\n          let parentURL;\x0d\n          try {\x0d\n            const { pathToFileURL } = require('url');\x0d\n            // Adding `/repl` prevents dynamic imports from loading relative\x0d\n            // to the parent of `process.cwd()`.\x0d\n            parentURL = pathToFileURL(path.join(process.cwd()\x2C 'repl')).href;\x0d\n          } catch {\x0d\n            // Continue regardless of error.\x0d\n          }\x0d\n\x0d\n          // Remove all "await"s and attempt running the script\x0d\n          // in order to detect if error is truly non recoverable\x0d\n          const fallbackCode = SideEffectFreeRegExpPrototypeSymbolReplace(/\\bawait\\b/g\x2C code\x2C '');\x0d\n          try {\x0d\n            vm.createScript(fallbackCode\x2C {\x0d\n              filename: file\x2C\x0d\n              displayErrors: true\x2C\x0d\n              importModuleDynamically: (specifier\x2C _\x2C importAssertions) => {\x0d\n                return asyncESM.esmLoader.import(specifier\x2C parentURL\x2C\x0d\n                                                 importAssertions);\x0d\n              }\x2C\x0d\n            });\x0d\n          } catch (fallbackError) {\x0d\n            if (isRecoverableError(fallbackError\x2C fallbackCode)) {\x0d\n              recoverableError = true;\x0d\n              err = new Recoverable(e);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n        if (!recoverableError) {\x0d\n          decorateErrorStack(e);\x0d\n          err = e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // First\x2C create the Script object to check the syntax\x0d\n    if (code === '\\n')\x0d\n      return cb(null);\x0d\n\x0d\n    if (err === null) {\x0d\n      let parentURL;\x0d\n      try {\x0d\n        const { pathToFileURL } = require('url');\x0d\n        // Adding `/repl` prevents dynamic imports from loading relative\x0d\n        // to the parent of `process.cwd()`.\x0d\n        parentURL = pathToFileURL(path.join(process.cwd()\x2C 'repl')).href;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      while (true) {\x0d\n        try {\x0d\n          if (self.replMode === module.exports.REPL_MODE_STRICT &&\x0d\n              RegExpPrototypeExec(/^\\s*$/\x2C code) === null) {\x0d\n            // "void 0" keeps the repl from returning "use strict" as the result\x0d\n            // value for statements and declarations that don't return a value.\x0d\n            code = `'use strict'; void 0;\\n${code}`;\x0d\n          }\x0d\n          script = vm.createScript(code\x2C {\x0d\n            filename: file\x2C\x0d\n            displayErrors: true\x2C\x0d\n            importModuleDynamically: (specifier\x2C _\x2C importAssertions) => {\x0d\n              return asyncESM.esmLoader.import(specifier\x2C parentURL\x2C\x0d\n                                               importAssertions);\x0d\n            }\x2C\x0d\n          });\x0d\n        } catch (e) {\x0d\n          debug('parse error %j'\x2C code\x2C e);\x0d\n          if (wrappedCmd) {\x0d\n            // Unwrap and try again\x0d\n            wrappedCmd = false;\x0d\n            awaitPromise = false;\x0d\n            code = input;\x0d\n            wrappedErr = e;\x0d\n            continue;\x0d\n          }\x0d\n          // Preserve original error for wrapped command\x0d\n          const error = wrappedErr || e;\x0d\n          if (isRecoverableError(error\x2C code))\x0d\n            err = new Recoverable(error);\x0d\n          else\x0d\n            err = error;\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // This will set the values from `savedRegExMatches` to corresponding\x0d\n    // predefined RegExp properties `RegExp.$1`\x2C `RegExp.$2` ... `RegExp.$9`\x0d\n    RegExpPrototypeExec(regExMatcher\x2C\x0d\n                        ArrayPrototypeJoin(savedRegExMatches\x2C sep));\x0d\n\x0d\n    let finished = false;\x0d\n    function finishExecution(err\x2C result) {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n\x0d\n      // After executing the current expression\x2C store the values of RegExp\x0d\n      // predefined properties back in `savedRegExMatches`\x0d\n      for (let idx = 1; idx < savedRegExMatches.length; idx += 1) {\x0d\n        savedRegExMatches[idx] = RegExp[`$${idx}`];\x0d\n      }\x0d\n\x0d\n      cb(err\x2C result);\x0d\n    }\x0d\n\x0d\n    if (!err) {\x0d\n      // Unset raw mode during evaluation so that Ctrl+C raises a signal.\x0d\n      let previouslyInRawMode;\x0d\n      if (self.breakEvalOnSigint) {\x0d\n        // Start the SIGINT watchdog before entering raw mode so that a very\x0d\n        // quick Ctrl+C doesn't lead to aborting the process completely.\x0d\n        if (!startSigintWatchdog())\x0d\n          throw new ERR_CANNOT_WATCH_SIGINT();\x0d\n        previouslyInRawMode = self._setRawMode(false);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        try {\x0d\n          const scriptOptions = {\x0d\n            displayErrors: false\x2C\x0d\n            breakOnSigint: self.breakEvalOnSigint\x2C\x0d\n          };\x0d\n\x0d\n          if (self.useGlobal) {\x0d\n            result = script.runInThisContext(scriptOptions);\x0d\n          } else {\x0d\n            result = script.runInContext(context\x2C scriptOptions);\x0d\n          }\x0d\n        } finally {\x0d\n          if (self.breakEvalOnSigint) {\x0d\n            // Reset terminal mode to its previous value.\x0d\n            self._setRawMode(previouslyInRawMode);\x0d\n\x0d\n            // Returns true if there were pending SIGINTs *after* the script\x0d\n            // has terminated without being interrupted itself.\x0d\n            if (stopSigintWatchdog()) {\x0d\n              self.emit('SIGINT');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } catch (e) {\x0d\n        err = e;\x0d\n\x0d\n        if (process.domain) {\x0d\n          debug('not recoverable\x2C send to domain');\x0d\n          process.domain.emit('error'\x2C err);\x0d\n          process.domain.exit();\x0d\n          return;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (awaitPromise && !err) {\x0d\n        let sigintListener;\x0d\n        pause();\x0d\n        let promise = result;\x0d\n        if (self.breakEvalOnSigint) {\x0d\n          const interrupt = new Promise((resolve\x2C reject) => {\x0d\n            sigintListener = () => {\x0d\n              const tmp = Error.stackTraceLimit;\x0d\n              if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n              const err = new ERR_SCRIPT_EXECUTION_INTERRUPTED();\x0d\n              if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n              reject(err);\x0d\n            };\x0d\n            prioritizedSigintQueue.add(sigintListener);\x0d\n          });\x0d\n          promise = SafePromiseRace([promise\x2C interrupt]);\x0d\n        }\x0d\n\x0d\n        (async () => {\x0d\n          try {\x0d\n            const result = (await promise)?.value;\x0d\n            finishExecution(null\x2C result);\x0d\n          } catch (err) {\x0d\n            if (err && process.domain) {\x0d\n              debug('not recoverable\x2C send to domain');\x0d\n              process.domain.emit('error'\x2C err);\x0d\n              process.domain.exit();\x0d\n              return;\x0d\n            }\x0d\n            finishExecution(err);\x0d\n          } finally {\x0d\n            // Remove prioritized SIGINT listener if it was not called.\x0d\n            prioritizedSigintQueue.delete(sigintListener);\x0d\n            unpause();\x0d\n          }\x0d\n        })();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!awaitPromise || err) {\x0d\n      finishExecution(err\x2C result);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  self.eval = self._domain.bind(eval_);\x0d\n\x0d\n  self._domain.on('error'\x2C function debugDomainError(e) {\x0d\n    debug('domain error');\x0d\n    let errStack = '';\x0d\n\x0d\n    if (typeof e === 'object' && e !== null) {\x0d\n      overrideStackTrace.set(e\x2C (error\x2C stackFrames) => {\x0d\n        let frames;\x0d\n        if (typeof stackFrames === 'object') {\x0d\n          // Search from the bottom of the call stack to\x0d\n          // find the first frame with a null function name\x0d\n          const idx = ArrayPrototypeFindIndex(\x0d\n            ArrayPrototypeReverse(stackFrames)\x2C\x0d\n            (frame) => frame.getFunctionName() === null\x2C\x0d\n          );\x0d\n          // If found\x2C get rid of it and everything below it\x0d\n          frames = ArrayPrototypeSplice(stackFrames\x2C idx + 1);\x0d\n        } else {\x0d\n          frames = stackFrames;\x0d\n        }\x0d\n        // FIXME(devsnek): this is inconsistent with the checks\x0d\n        // that the real prepareStackTrace dispatch uses in\x0d\n        // lib/internal/errors.js.\x0d\n        if (typeof Error.prepareStackTrace === 'function') {\x0d\n          return Error.prepareStackTrace(error\x2C frames);\x0d\n        }\x0d\n        ArrayPrototypePush(frames\x2C error);\x0d\n        return ArrayPrototypeJoin(ArrayPrototypeReverse(frames)\x2C '\\n    at ');\x0d\n      });\x0d\n      decorateErrorStack(e);\x0d\n\x0d\n      if (e.domainThrown) {\x0d\n        delete e.domain;\x0d\n        delete e.domainThrown;\x0d\n      }\x0d\n\x0d\n      if (isError(e)) {\x0d\n        if (e.stack) {\x0d\n          if (e.name === 'SyntaxError') {\x0d\n            // Remove stack trace.\x0d\n            e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n              /^\\s+at\\s.*\\n?/gm\x2C\x0d\n              SideEffectFreeRegExpPrototypeSymbolReplace(/^REPL\\d+:\\d+\\r?\\n/\x2C e.stack\x2C '')\x2C\x0d\n              '');\x0d\n            const importErrorStr = 'Cannot use import statement outside a ' +\x0d\n              'module';\x0d\n            if (StringPrototypeIncludes(e.message\x2C importErrorStr)) {\x0d\n              e.message = 'Cannot use import statement inside the Node.js ' +\x0d\n                'REPL\x2C alternatively use dynamic import';\x0d\n              e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n                /SyntaxError:.*\\n/\x2C\x0d\n                e.stack\x2C\x0d\n                `SyntaxError: ${e.message}\\n`);\x0d\n            }\x0d\n          } else if (self.replMode === module.exports.REPL_MODE_STRICT) {\x0d\n            e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n              /(\\s+at\\s+REPL\\d+:)(\\d+)/\x2C\x0d\n              e.stack\x2C\x0d\n              (_\x2C pre\x2C line) => pre + (line - 1)\x2C\x0d\n            );\x0d\n          }\x0d\n        }\x0d\n        errStack = self.writer(e);\x0d\n\x0d\n        // Remove one line error braces to keep the old style in place.\x0d\n        if (errStack[0] === '[' && errStack[errStack.length - 1] === ']') {\x0d\n          errStack = StringPrototypeSlice(errStack\x2C 1\x2C -1);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!self.underscoreErrAssigned) {\x0d\n      self.lastError = e;\x0d\n    }\x0d\n\x0d\n    if (options[kStandaloneREPL] &&\x0d\n        process.listenerCount('uncaughtException') !== 0) {\x0d\n      process.nextTick(() => {\x0d\n        process.emit('uncaughtException'\x2C e);\x0d\n        self.clearBufferedCommand();\x0d\n        self.lines.level = [];\x0d\n        self.displayPrompt();\x0d\n      });\x0d\n    } else {\x0d\n      if (errStack === '') {\x0d\n        errStack = self.writer(e);\x0d\n      }\x0d\n      const lines = SideEffectFreeRegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C errStack);\x0d\n      let matched = false;\x0d\n\x0d\n      errStack = '';\x0d\n      ArrayPrototypeForEach(lines\x2C (line) => {\x0d\n        if (!matched &&\x0d\n            RegExpPrototypeExec(/^\\[?([A-Z][a-z0-9_]*)*Error/\x2C line) !== null) {\x0d\n          errStack += writer.options.breakLength >= line.length ?\x0d\n            `Uncaught ${line}` :\x0d\n            `Uncaught:\\n${line}`;\x0d\n          matched = true;\x0d\n        } else {\x0d\n          errStack += line;\x0d\n        }\x0d\n      });\x0d\n      if (!matched) {\x0d\n        const ln = lines.length === 1 ? ' ' : ':\\n';\x0d\n        errStack = `Uncaught${ln}${errStack}`;\x0d\n      }\x0d\n      // Normalize line endings.\x0d\n      errStack += StringPrototypeEndsWith(errStack\x2C '\\n') ? '' : '\\n';\x0d\n      self.output.write(errStack);\x0d\n      self.clearBufferedCommand();\x0d\n      self.lines.level = [];\x0d\n      self.displayPrompt();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  self.clearBufferedCommand();\x0d\n\x0d\n  function completer(text\x2C cb) {\x0d\n    ReflectApply(complete\x2C self\x2C\x0d\n                 [text\x2C self.editorMode ? self.completeOnEditorMode(cb) : cb]);\x0d\n  }\x0d\n\x0d\n  ReflectApply(Interface\x2C this\x2C [{\x0d\n    input: options.input\x2C\x0d\n    output: options.output\x2C\x0d\n    completer: options.completer || completer\x2C\x0d\n    terminal: options.terminal\x2C\x0d\n    historySize: options.historySize\x2C\x0d\n    prompt\x2C\x0d\n  }]);\x0d\n\x0d\n  self.resetContext();\x0d\n\x0d\n  this.commands = { __proto__: null };\x0d\n  defineDefaultCommands(this);\x0d\n\x0d\n  // Figure out which "writer" function to use\x0d\n  self.writer = options.writer || module.exports.writer;\x0d\n\x0d\n  if (self.writer === writer) {\x0d\n    // Conditionally turn on ANSI coloring.\x0d\n    writer.options.colors = self.useColors;\x0d\n\x0d\n    if (options[kStandaloneREPL]) {\x0d\n      ObjectDefineProperty(inspect\x2C 'replDefaults'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return writer.options;\x0d\n        }\x2C\x0d\n        set(options) {\x0d\n          validateObject(options\x2C 'options');\x0d\n          return ObjectAssign(writer.options\x2C options);\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function _parseREPLKeyword(keyword\x2C rest) {\x0d\n    const cmd = this.commands[keyword];\x0d\n    if (cmd) {\x0d\n      ReflectApply(cmd.action\x2C this\x2C [rest]);\x0d\n      return true;\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  self.on('close'\x2C function emitExit() {\x0d\n    if (paused) {\x0d\n      ArrayPrototypePush(pausedBuffer\x2C ['close']);\x0d\n      return;\x0d\n    }\x0d\n    self.emit('exit');\x0d\n  });\x0d\n\x0d\n  let sawSIGINT = false;\x0d\n  let sawCtrlD = false;\x0d\n  const prioritizedSigintQueue = new SafeSet();\x0d\n  self.on('SIGINT'\x2C function onSigInt() {\x0d\n    if (prioritizedSigintQueue.size > 0) {\x0d\n      for (const task of prioritizedSigintQueue) {\x0d\n        task();\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const empty = self.line.length === 0;\x0d\n    self.clearLine();\x0d\n    _turnOffEditorMode(self);\x0d\n\x0d\n    const cmd = self[kBufferedCommandSymbol];\x0d\n    if (!(cmd && cmd.length > 0) && empty) {\x0d\n      if (sawSIGINT) {\x0d\n        self.close();\x0d\n        sawSIGINT = false;\x0d\n        return;\x0d\n      }\x0d\n      self.output.write(\x0d\n        '(To exit\x2C press Ctrl+C again or Ctrl+D or type .exit)\\n'\x2C\x0d\n      );\x0d\n      sawSIGINT = true;\x0d\n    } else {\x0d\n      sawSIGINT = false;\x0d\n    }\x0d\n\x0d\n    self.clearBufferedCommand();\x0d\n    self.lines.level = [];\x0d\n    self.displayPrompt();\x0d\n  });\x0d\n\x0d\n  self.on('line'\x2C function onLine(cmd) {\x0d\n    debug('line %j'\x2C cmd);\x0d\n    cmd = cmd || '';\x0d\n    sawSIGINT = false;\x0d\n\x0d\n    if (self.editorMode) {\x0d\n      self[kBufferedCommandSymbol] += cmd + '\\n';\x0d\n\x0d\n      // code alignment\x0d\n      const matches = self._sawKeyPress ?\x0d\n        RegExpPrototypeExec(/^\\s+/\x2C cmd) : null;\x0d\n      if (matches) {\x0d\n        const prefix = matches[0];\x0d\n        self.write(prefix);\x0d\n        self.line = prefix;\x0d\n        self.cursor = prefix.length;\x0d\n      }\x0d\n      ReflectApply(_memory\x2C self\x2C [cmd]);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Check REPL keywords and empty lines against a trimmed line input.\x0d\n    const trimmedCmd = StringPrototypeTrim(cmd);\x0d\n\x0d\n    // Check to see if a REPL keyword was used. If it returns true\x2C\x0d\n    // display next prompt and return.\x0d\n    if (trimmedCmd) {\x0d\n      if (StringPrototypeCharAt(trimmedCmd\x2C 0) === '.' &&\x0d\n          StringPrototypeCharAt(trimmedCmd\x2C 1) !== '.' &&\x0d\n          NumberIsNaN(NumberParseFloat(trimmedCmd))) {\x0d\n        const matches = RegExpPrototypeExec(/^\\.([^\\s]+)\\s*(.*)$/\x2C trimmedCmd);\x0d\n        const keyword = matches && matches[1];\x0d\n        const rest = matches && matches[2];\x0d\n        if (ReflectApply(_parseREPLKeyword\x2C self\x2C [keyword\x2C rest]) === true) {\x0d\n          return;\x0d\n        }\x0d\n        if (!self[kBufferedCommandSymbol]) {\x0d\n          self.output.write('Invalid REPL keyword\\n');\x0d\n          finish(null);\x0d\n          return;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const evalCmd = self[kBufferedCommandSymbol] + cmd + '\\n';\x0d\n\x0d\n    debug('eval %j'\x2C evalCmd);\x0d\n    self.eval(evalCmd\x2C self.context\x2C getREPLResourceName()\x2C finish);\x0d\n\x0d\n    function finish(e\x2C ret) {\x0d\n      debug('finish'\x2C e\x2C ret);\x0d\n      ReflectApply(_memory\x2C self\x2C [cmd]);\x0d\n\x0d\n      if (e && !self[kBufferedCommandSymbol] &&\x0d\n          StringPrototypeStartsWith(StringPrototypeTrim(cmd)\x2C 'npm ')) {\x0d\n        self.output.write('npm should be run outside of the ' +\x0d\n                                'Node.js REPL\x2C in your normal shell.\\n' +\x0d\n                                '(Press Ctrl+D to exit.)\\n');\x0d\n        self.displayPrompt();\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // If error was SyntaxError and not JSON.parse error\x0d\n      if (e) {\x0d\n        if (e instanceof Recoverable && !sawCtrlD) {\x0d\n          // Start buffering data like that:\x0d\n          // {\x0d\n          // ...  x: 1\x0d\n          // ... }\x0d\n          self[kBufferedCommandSymbol] += cmd + '\\n';\x0d\n          self.displayPrompt();\x0d\n          return;\x0d\n        }\x0d\n        self._domain.emit('error'\x2C e.err || e);\x0d\n      }\x0d\n\x0d\n      // Clear buffer if no SyntaxErrors\x0d\n      self.clearBufferedCommand();\x0d\n      sawCtrlD = false;\x0d\n\x0d\n      // If we got any output - print it (if no error)\x0d\n      if (!e &&\x0d\n          // When an invalid REPL command is used\x2C error message is printed\x0d\n          // immediately. We don't have to print anything else. So\x2C only when\x0d\n          // the second argument to this function is there\x2C print it.\x0d\n          arguments.length === 2 &&\x0d\n          (!self.ignoreUndefined || ret !== undefined)) {\x0d\n        if (!self.underscoreAssigned) {\x0d\n          self.last = ret;\x0d\n        }\x0d\n        self.output.write(self.writer(ret) + '\\n');\x0d\n      }\x0d\n\x0d\n      // Display prompt again (unless we already did by emitting the 'error'\x0d\n      // event on the domain instance).\x0d\n      if (!e) {\x0d\n        self.displayPrompt();\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n  self.on('SIGCONT'\x2C function onSigCont() {\x0d\n    if (self.editorMode) {\x0d\n      self.output.write(`${self._initialPrompt}.editor\\n`);\x0d\n      self.output.write(\x0d\n        '// Entering editor mode (Ctrl+D to finish\x2C Ctrl+C to cancel)\\n');\x0d\n      self.output.write(`${self[kBufferedCommandSymbol]}\\n`);\x0d\n      self.prompt(true);\x0d\n    } else {\x0d\n      self.displayPrompt(true);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  const { reverseSearch } = setupReverseSearch(this);\x0d\n\x0d\n  const {\x0d\n    clearPreview\x2C\x0d\n    showPreview\x2C\x0d\n  } = setupPreview(\x0d\n    this\x2C\x0d\n    kContextId\x2C\x0d\n    kBufferedCommandSymbol\x2C\x0d\n    preview\x2C\x0d\n  );\x0d\n\x0d\n  // Wrap readline tty to enable editor mode and pausing.\x0d\n  const ttyWrite = FunctionPrototypeBind(self._ttyWrite\x2C self);\x0d\n  self._ttyWrite = (d\x2C key) => {\x0d\n    key = key || {};\x0d\n    if (paused && !(self.breakEvalOnSigint && key.ctrl && key.name === 'c')) {\x0d\n      ArrayPrototypePush(pausedBuffer\x2C\x0d\n                         ['key'\x2C [d\x2C key]\x2C self.isCompletionEnabled]);\x0d\n      return;\x0d\n    }\x0d\n    if (!self.editorMode || !self.terminal) {\x0d\n      // Before exiting\x2C make sure to clear the line.\x0d\n      if (key.ctrl && key.name === 'd' &&\x0d\n          self.cursor === 0 && self.line.length === 0) {\x0d\n        self.clearLine();\x0d\n      }\x0d\n      clearPreview(key);\x0d\n      if (!reverseSearch(d\x2C key)) {\x0d\n        ttyWrite(d\x2C key);\x0d\n        if (key.name !== 'escape') {\x0d\n          showPreview();\x0d\n        }\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Editor mode\x0d\n    if (key.ctrl && !key.shift) {\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): There should not be a special mode necessary for full\x0d\n        // multiline support.\x0d\n        case 'd': // End editor mode\x0d\n          _turnOffEditorMode(self);\x0d\n          sawCtrlD = true;\x0d\n          ttyWrite(d\x2C { name: 'return' });\x0d\n          break;\x0d\n        case 'n': // Override next history item\x0d\n        case 'p': // Override previous history item\x0d\n          break;\x0d\n        default:\x0d\n          ttyWrite(d\x2C key);\x0d\n      }\x0d\n    } else {\x0d\n      switch (key.name) {\x0d\n        case 'up':   // Override previous history item\x0d\n        case 'down': // Override next history item\x0d\n          break;\x0d\n        case 'tab':\x0d\n          // Prevent double tab behavior\x0d\n          self._previousKey = null;\x0d\n          ttyWrite(d\x2C key);\x0d\n          break;\x0d\n        default:\x0d\n          ttyWrite(d\x2C key);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  self.displayPrompt();\x0d\n}\x0d\nObjectSetPrototypeOf(REPLServer.prototype\x2C Interface.prototype);\x0d\nObjectSetPrototypeOf(REPLServer\x2C Interface);\x0d\n\x0d\n// Prompt is a string to print on each line for the prompt\x2C\x0d\n// source is a stream to use for I/O\x2C defaulting to stdin/stdout.\x0d\nfunction start(prompt\x2C source\x2C eval_\x2C useGlobal\x2C ignoreUndefined\x2C replMode) {\x0d\n  return new REPLServer(\x0d\n    prompt\x2C source\x2C eval_\x2C useGlobal\x2C ignoreUndefined\x2C replMode);\x0d\n}\x0d\n\x0d\nREPLServer.prototype.setupHistory = function setupHistory(historyFile\x2C cb) {\x0d\n  history(this\x2C historyFile\x2C cb);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.clearBufferedCommand = function clearBufferedCommand() {\x0d\n  this[kBufferedCommandSymbol] = '';\x0d\n};\x0d\n\x0d\nREPLServer.prototype.close = function close() {\x0d\n  if (this.terminal && this._flushing && !this._closingOnFlush) {\x0d\n    this._closingOnFlush = true;\x0d\n    this.once('flushHistory'\x2C () =>\x0d\n      ReflectApply(Interface.prototype.close\x2C this\x2C [])\x2C\x0d\n    );\x0d\n\x0d\n    return;\x0d\n  }\x0d\n  process.nextTick(() =>\x0d\n    ReflectApply(Interface.prototype.close\x2C this\x2C [])\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\nREPLServer.prototype.createContext = function() {\x0d\n  let context;\x0d\n  if (this.useGlobal) {\x0d\n    context = globalThis;\x0d\n  } else {\x0d\n    sendInspectorCommand((session) => {\x0d\n      session.post('Runtime.enable');\x0d\n      session.once('Runtime.executionContextCreated'\x2C ({ params }) => {\x0d\n        this[kContextId] = params.context.id;\x0d\n      });\x0d\n      context = vm.createContext();\x0d\n      session.post('Runtime.disable');\x0d\n    }\x2C () => {\x0d\n      context = vm.createContext();\x0d\n    });\x0d\n    ArrayPrototypeForEach(ObjectGetOwnPropertyNames(globalThis)\x2C (name) => {\x0d\n      // Only set properties that do not already exist as a global builtin.\x0d\n      if (!globalBuiltins.has(name)) {\x0d\n        ObjectDefineProperty(context\x2C name\x2C\x0d\n                             {\x0d\n                               __proto__: null\x2C\x0d\n                               ...ObjectGetOwnPropertyDescriptor(globalThis\x2C name)\x2C\x0d\n                             });\x0d\n      }\x0d\n    });\x0d\n    context.global = context;\x0d\n    const _console = new Console(this.output);\x0d\n    ObjectDefineProperty(context\x2C 'console'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: _console\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  const replModule = new CJSModule('<repl>');\x0d\n  replModule.paths = CJSModule._resolveLookupPaths('<repl>'\x2C parentModule);\x0d\n\x0d\n  ObjectDefineProperty(context\x2C 'module'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: replModule\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(context\x2C 'require'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: makeRequireFunction(replModule)\x2C\x0d\n  });\x0d\n\x0d\n  addBuiltinLibsToObject(context\x2C '<REPL>');\x0d\n\x0d\n  return context;\x0d\n};\x0d\n\x0d\nREPLServer.prototype.resetContext = function() {\x0d\n  this.context = this.createContext();\x0d\n  this.underscoreAssigned = false;\x0d\n  this.underscoreErrAssigned = false;\x0d\n  // TODO(BridgeAR): Deprecate the lines.\x0d\n  this.lines = [];\x0d\n  this.lines.level = [];\x0d\n\x0d\n  ObjectDefineProperty(this.context\x2C '_'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    get: () => this.last\x2C\x0d\n    set: (value) => {\x0d\n      this.last = value;\x0d\n      if (!this.underscoreAssigned) {\x0d\n        this.underscoreAssigned = true;\x0d\n        this.output.write('Expression assignment to _ now disabled.\\n');\x0d\n      }\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(this.context\x2C '_error'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    get: () => this.lastError\x2C\x0d\n    set: (value) => {\x0d\n      this.lastError = value;\x0d\n      if (!this.underscoreErrAssigned) {\x0d\n        this.underscoreErrAssigned = true;\x0d\n        this.output.write(\x0d\n          'Expression assignment to _error now disabled.\\n');\x0d\n      }\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  // Allow REPL extensions to extend the new context\x0d\n  this.emit('reset'\x2C this.context);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.displayPrompt = function(preserveCursor) {\x0d\n  let prompt = this._initialPrompt;\x0d\n  if (this[kBufferedCommandSymbol].length) {\x0d\n    prompt = '...';\x0d\n    const len = this.lines.level.length ? this.lines.level.length - 1 : 0;\x0d\n    const levelInd = StringPrototypeRepeat('..'\x2C len);\x0d\n    prompt += levelInd + ' ';\x0d\n  }\x0d\n\x0d\n  // Do not overwrite `_initialPrompt` here\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C this\x2C [prompt]);\x0d\n  this.prompt(preserveCursor);\x0d\n};\x0d\n\x0d\n// When invoked as an API method\x2C overwrite _initialPrompt\x0d\nREPLServer.prototype.setPrompt = function setPrompt(prompt) {\x0d\n  this._initialPrompt = prompt;\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C this\x2C [prompt]);\x0d\n};\x0d\n\x0d\nconst importRE = /\\bimport\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$/;\x0d\nconst requireRE = /\\brequire\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$/;\x0d\nconst fsAutoCompleteRE = /fs(?:\\.promises)?\\.\\s*[a-z][a-zA-Z]+\\(\\s*["'](.*)/;\x0d\nconst simpleExpressionRE =\x0d\n    /(?:[\\w$'"`[{(](?:\\w|\\$|['"`\\]})])*\\??\\.)*[a-zA-Z_$](?:\\w|\\$)*\\??\\.?$/;\x0d\nconst versionedFileNamesRe = /-\\d+\\.\\d+/;\x0d\n\x0d\nfunction isIdentifier(str) {\x0d\n  if (str === '') {\x0d\n    return false;\x0d\n  }\x0d\n  const first = StringPrototypeCodePointAt(str\x2C 0);\x0d\n  if (!isIdentifierStart(first)) {\x0d\n    return false;\x0d\n  }\x0d\n  const firstLen = first > 0xffff ? 2 : 1;\x0d\n  for (let i = firstLen; i < str.length; i += 1) {\x0d\n    const cp = StringPrototypeCodePointAt(str\x2C i);\x0d\n    if (!isIdentifierChar(cp)) {\x0d\n      return false;\x0d\n    }\x0d\n    if (cp > 0xffff) {\x0d\n      i += 1;\x0d\n    }\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isNotLegacyObjectPrototypeMethod(str) {\x0d\n  return isIdentifier(str) &&\x0d\n    str !== '__defineGetter__' &&\x0d\n    str !== '__defineSetter__' &&\x0d\n    str !== '__lookupGetter__' &&\x0d\n    str !== '__lookupSetter__';\x0d\n}\x0d\n\x0d\nfunction filteredOwnPropertyNames(obj) {\x0d\n  if (!obj) return [];\x0d\n  // `Object.prototype` is the only non-contrived object that fulfills\x0d\n  // `Object.getPrototypeOf(X) === null &&\x0d\n  //  Object.getPrototypeOf(Object.getPrototypeOf(X.constructor)) === X`.\x0d\n  let isObjectPrototype = false;\x0d\n  if (ObjectGetPrototypeOf(obj) === null) {\x0d\n    const ctorDescriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (ctorDescriptor && ctorDescriptor.value) {\x0d\n      const ctorProto = ObjectGetPrototypeOf(ctorDescriptor.value);\x0d\n      isObjectPrototype = ctorProto && ObjectGetPrototypeOf(ctorProto) === obj;\x0d\n    }\x0d\n  }\x0d\n  const filter = ALL_PROPERTIES | SKIP_SYMBOLS;\x0d\n  return ArrayPrototypeFilter(\x0d\n    getOwnNonIndexProperties(obj\x2C filter)\x2C\x0d\n    isObjectPrototype ? isNotLegacyObjectPrototypeMethod : isIdentifier);\x0d\n}\x0d\n\x0d\nfunction getGlobalLexicalScopeNames(contextId) {\x0d\n  return sendInspectorCommand((session) => {\x0d\n    let names = [];\x0d\n    session.post('Runtime.globalLexicalScopeNames'\x2C {\x0d\n      executionContextId: contextId\x2C\x0d\n    }\x2C (error\x2C result) => {\x0d\n      if (!error) names = result.names;\x0d\n    });\x0d\n    return names;\x0d\n  }\x2C () => []);\x0d\n}\x0d\n\x0d\nREPLServer.prototype.complete = function() {\x0d\n  ReflectApply(this.completer\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nfunction gracefulReaddir(...args) {\x0d\n  try {\x0d\n    return ReflectApply(fs.readdirSync\x2C null\x2C args);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction completeFSFunctions(match) {\x0d\n  let baseName = '';\x0d\n  let filePath = match[1];\x0d\n  let fileList = gracefulReaddir(filePath\x2C { withFileTypes: true });\x0d\n\x0d\n  if (!fileList) {\x0d\n    baseName = path.basename(filePath);\x0d\n    filePath = path.dirname(filePath);\x0d\n    fileList = gracefulReaddir(filePath\x2C { withFileTypes: true }) || [];\x0d\n  }\x0d\n\x0d\n  const completions = ArrayPrototypeMap(\x0d\n    ArrayPrototypeFilter(\x0d\n      fileList\x2C\x0d\n      (dirent) => StringPrototypeStartsWith(dirent.name\x2C baseName)\x2C\x0d\n    )\x2C\x0d\n    (d) => d.name\x2C\x0d\n  );\x0d\n\x0d\n  return [[completions]\x2C baseName];\x0d\n}\x0d\n\x0d\n// Provide a list of completions for the given leading text. This is\x0d\n// given to the readline interface for handling tab completion.\x0d\n//\x0d\n// Example:\x0d\n//  complete('let foo = util.')\x0d\n//    -> [['util.print'\x2C 'util.debug'\x2C 'util.log'\x2C 'util.inspect']\x2C\x0d\n//        'util.' ]\x0d\n//\x0d\n// Warning: This eval's code like "foo.bar.baz"\x2C so it will run property\x0d\n// getter code.\x0d\nfunction complete(line\x2C callback) {\x0d\n  // List of completion lists\x2C one for each inheritance "level"\x0d\n  let completionGroups = [];\x0d\n  let completeOn\x2C group;\x0d\n\x0d\n  // Ignore right whitespace. It could change the outcome.\x0d\n  line = StringPrototypeTrimLeft(line);\x0d\n\x0d\n  let filter = '';\x0d\n\x0d\n  let match;\x0d\n  // REPL commands (e.g. ".break").\x0d\n  if ((match = RegExpPrototypeExec(/^\\s*\\.(\\w*)$/\x2C line)) !== null) {\x0d\n    ArrayPrototypePush(completionGroups\x2C ObjectKeys(this.commands));\x0d\n    completeOn = match[1];\x0d\n    if (completeOn.length) {\x0d\n      filter = completeOn;\x0d\n    }\x0d\n  } else if ((match = RegExpPrototypeExec(requireRE\x2C line)) !== null) {\x0d\n    // require('...<Tab>')\x0d\n    completeOn = match[1];\x0d\n    filter = completeOn;\x0d\n    if (this.allowBlockingCompletions) {\x0d\n      const subdir = match[2] || '';\x0d\n      const extensions = ObjectKeys(this.context.require.extensions);\x0d\n      const indexes = ArrayPrototypeMap(extensions\x2C\x0d\n                                        (extension) => `index${extension}`);\x0d\n      ArrayPrototypePush(indexes\x2C 'package.json'\x2C 'index');\x0d\n\x0d\n      group = [];\x0d\n      let paths = [];\x0d\n\x0d\n      if (completeOn === '.') {\x0d\n        group = ['./'\x2C '../'];\x0d\n      } else if (completeOn === '..') {\x0d\n        group = ['../'];\x0d\n      } else if (RegExpPrototypeExec(/^\\.\\.?\\//\x2C completeOn) !== null) {\x0d\n        paths = [process.cwd()];\x0d\n      } else {\x0d\n        paths = [];\x0d\n        ArrayPrototypePushApply(paths\x2C module.paths);\x0d\n        ArrayPrototypePushApply(paths\x2C CJSModule.globalPaths);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeForEach(paths\x2C (dir) => {\x0d\n        dir = path.resolve(dir\x2C subdir);\x0d\n        const dirents = gracefulReaddir(dir\x2C { withFileTypes: true }) || [];\x0d\n        ArrayPrototypeForEach(dirents\x2C (dirent) => {\x0d\n          if (RegExpPrototypeExec(versionedFileNamesRe\x2C dirent.name) !== null ||\x0d\n              dirent.name === '.npm') {\x0d\n            // Exclude versioned names that 'npm' installs.\x0d\n            return;\x0d\n          }\x0d\n          const extension = path.extname(dirent.name);\x0d\n          const base = StringPrototypeSlice(dirent.name\x2C 0\x2C -extension.length);\x0d\n          if (!dirent.isDirectory()) {\x0d\n            if (StringPrototypeIncludes(extensions\x2C extension) &&\x0d\n                (!subdir || base !== 'index')) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${base}`);\x0d\n            }\x0d\n            return;\x0d\n          }\x0d\n          ArrayPrototypePush(group\x2C `${subdir}${dirent.name}/`);\x0d\n          const absolute = path.resolve(dir\x2C dirent.name);\x0d\n          if (ArrayPrototypeSome(\x0d\n            gracefulReaddir(absolute) || []\x2C\x0d\n            (subfile) => ArrayPrototypeIncludes(indexes\x2C subfile)\x2C\x0d\n          )) {\x0d\n            ArrayPrototypePush(group\x2C `${subdir}${dirent.name}`);\x0d\n          }\x0d\n        });\x0d\n      });\x0d\n      if (group.length) {\x0d\n        ArrayPrototypePush(completionGroups\x2C group);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(completionGroups\x2C _builtinLibs\x2C nodeSchemeBuiltinLibs);\x0d\n  } else if ((match = RegExpPrototypeExec(importRE\x2C line)) !== null) {\x0d\n    // import('...<Tab>')\x0d\n    completeOn = match[1];\x0d\n    filter = completeOn;\x0d\n    if (this.allowBlockingCompletions) {\x0d\n      const subdir = match[2] || '';\x0d\n      // File extensions that can be imported:\x0d\n      const extensions = ObjectKeys(extensionFormatMap);\x0d\n\x0d\n      // Only used when loading bare module specifiers from `node_modules`:\x0d\n      const indexes = ArrayPrototypeMap(extensions\x2C (ext) => `index${ext}`);\x0d\n      ArrayPrototypePush(indexes\x2C 'package.json');\x0d\n\x0d\n      group = [];\x0d\n      let paths = [];\x0d\n      if (completeOn === '.') {\x0d\n        group = ['./'\x2C '../'];\x0d\n      } else if (completeOn === '..') {\x0d\n        group = ['../'];\x0d\n      } else if (RegExpPrototypeExec(/^\\.\\.?\\//\x2C completeOn) !== null) {\x0d\n        paths = [process.cwd()];\x0d\n      } else {\x0d\n        paths = ArrayPrototypeSlice(module.paths);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeForEach(paths\x2C (dir) => {\x0d\n        dir = path.resolve(dir\x2C subdir);\x0d\n        const isInNodeModules = path.basename(dir) === 'node_modules';\x0d\n        const dirents = gracefulReaddir(dir\x2C { withFileTypes: true }) || [];\x0d\n        ArrayPrototypeForEach(dirents\x2C (dirent) => {\x0d\n          const { name } = dirent;\x0d\n          if (RegExpPrototypeExec(versionedFileNamesRe\x2C name) !== null ||\x0d\n              name === '.npm') {\x0d\n            // Exclude versioned names that 'npm' installs.\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!dirent.isDirectory()) {\x0d\n            const extension = path.extname(name);\x0d\n            if (StringPrototypeIncludes(extensions\x2C extension)) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${name}`);\x0d\n            }\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          ArrayPrototypePush(group\x2C `${subdir}${name}/`);\x0d\n          if (!subdir && isInNodeModules) {\x0d\n            const absolute = path.resolve(dir\x2C name);\x0d\n            const subfiles = gracefulReaddir(absolute) || [];\x0d\n            if (ArrayPrototypeSome(subfiles\x2C (subfile) => {\x0d\n              return ArrayPrototypeIncludes(indexes\x2C subfile);\x0d\n            })) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${name}`);\x0d\n            }\x0d\n          }\x0d\n        });\x0d\n      });\x0d\n\x0d\n      if (group.length) {\x0d\n        ArrayPrototypePush(completionGroups\x2C group);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(completionGroups\x2C _builtinLibs\x2C nodeSchemeBuiltinLibs);\x0d\n  } else if ((match = RegExpPrototypeExec(fsAutoCompleteRE\x2C line)) !== null &&\x0d\n             this.allowBlockingCompletions) {\x0d\n    ({ 0: completionGroups\x2C 1: completeOn } = completeFSFunctions(match));\x0d\n  // Handle variable member lookup.\x0d\n  // We support simple chained expressions like the following (no function\x0d\n  // calls\x2C etc.). That is for simplicity and also because we *eval* that\x0d\n  // leading expression so for safety (see WARNING above) don't want to\x0d\n  // eval function calls.\x0d\n  //\x0d\n  //   foo.bar<|>     # completions for 'foo' with filter 'bar'\x0d\n  //   spam.eggs.<|>  # completions for 'spam.eggs' with filter ''\x0d\n  //   foo<|>         # all scope vars with filter 'foo'\x0d\n  //   foo.<|>        # completions for 'foo' with filter ''\x0d\n  } else if (line.length === 0 ||\x0d\n             RegExpPrototypeExec(/\\w|\\.|\\$/\x2C line[line.length - 1]) !== null) {\x0d\n    const { 0: match } = RegExpPrototypeExec(simpleExpressionRE\x2C line) || [''];\x0d\n    if (line.length !== 0 && !match) {\x0d\n      completionGroupsLoaded();\x0d\n      return;\x0d\n    }\x0d\n    let expr = '';\x0d\n    completeOn = match;\x0d\n    if (StringPrototypeEndsWith(line\x2C '.')) {\x0d\n      expr = StringPrototypeSlice(match\x2C 0\x2C -1);\x0d\n    } else if (line.length !== 0) {\x0d\n      const bits = StringPrototypeSplit(match\x2C '.');\x0d\n      filter = ArrayPrototypePop(bits);\x0d\n      expr = ArrayPrototypeJoin(bits\x2C '.');\x0d\n    }\x0d\n\x0d\n    // Resolve expr and get its completions.\x0d\n    if (!expr) {\x0d\n      // Get global vars synchronously\x0d\n      ArrayPrototypePush(completionGroups\x2C\x0d\n                         getGlobalLexicalScopeNames(this[kContextId]));\x0d\n      let contextProto = this.context;\x0d\n      while ((contextProto = ObjectGetPrototypeOf(contextProto)) !== null) {\x0d\n        ArrayPrototypePush(completionGroups\x2C\x0d\n                           filteredOwnPropertyNames(contextProto));\x0d\n      }\x0d\n      const contextOwnNames = filteredOwnPropertyNames(this.context);\x0d\n      if (!this.useGlobal) {\x0d\n        // When the context is not `global`\x2C builtins are not own\x0d\n        // properties of it.\x0d\n        // `globalBuiltins` is a `SafeSet`\x2C not an Array-like.\x0d\n        ArrayPrototypePush(contextOwnNames\x2C ...globalBuiltins);\x0d\n      }\x0d\n      ArrayPrototypePush(completionGroups\x2C contextOwnNames);\x0d\n      if (filter !== '') addCommonWords(completionGroups);\x0d\n      completionGroupsLoaded();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let chaining = '.';\x0d\n    if (StringPrototypeEndsWith(expr\x2C '?')) {\x0d\n      expr = StringPrototypeSlice(expr\x2C 0\x2C -1);\x0d\n      chaining = '?.';\x0d\n    }\x0d\n\x0d\n    const memberGroups = [];\x0d\n    const evalExpr = `try { ${expr} } catch {}`;\x0d\n    this.eval(evalExpr\x2C this.context\x2C getREPLResourceName()\x2C (e\x2C obj) => {\x0d\n      try {\x0d\n        let p;\x0d\n        if ((typeof obj === 'object' && obj !== null) ||\x0d\n            typeof obj === 'function') {\x0d\n          memberGroups.push(filteredOwnPropertyNames(obj));\x0d\n          p = ObjectGetPrototypeOf(obj);\x0d\n        } else {\x0d\n          p = obj.constructor ? obj.constructor.prototype : null;\x0d\n        }\x0d\n        // Circular refs possible? Let's guard against that.\x0d\n        let sentinel = 5;\x0d\n        while (p !== null && sentinel-- !== 0) {\x0d\n          memberGroups.push(filteredOwnPropertyNames(p));\x0d\n          p = ObjectGetPrototypeOf(p);\x0d\n        }\x0d\n      } catch {\x0d\n        // Maybe a Proxy object without `getOwnPropertyNames` trap.\x0d\n        // We simply ignore it here\x2C as we don't want to break the\x0d\n        // autocompletion. Fixes the bug\x0d\n        // https://github.com/nodejs/node/issues/2119\x0d\n      }\x0d\n\x0d\n      if (memberGroups.length) {\x0d\n        expr += chaining;\x0d\n        ArrayPrototypeForEach(memberGroups\x2C (group) => {\x0d\n          ArrayPrototypePush(completionGroups\x2C\x0d\n                             ArrayPrototypeMap(group\x2C\x0d\n                                               (member) => `${expr}${member}`));\x0d\n        });\x0d\n        if (filter) {\x0d\n          filter = `${expr}${filter}`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      completionGroupsLoaded();\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  return completionGroupsLoaded();\x0d\n\x0d\n  // Will be called when all completionGroups are in place\x0d\n  // Useful for async autocompletion\x0d\n  function completionGroupsLoaded() {\x0d\n    // Filter\x2C sort (within each group)\x2C uniq and merge the completion groups.\x0d\n    if (completionGroups.length && filter) {\x0d\n      const newCompletionGroups = [];\x0d\n      const lowerCaseFilter = StringPrototypeToLocaleLowerCase(filter);\x0d\n      ArrayPrototypeForEach(completionGroups\x2C (group) => {\x0d\n        const filteredGroup = ArrayPrototypeFilter(group\x2C (str) => {\x0d\n          // Filter is always case-insensitive following chromium autocomplete\x0d\n          // behavior.\x0d\n          return StringPrototypeStartsWith(\x0d\n            StringPrototypeToLocaleLowerCase(str)\x2C\x0d\n            lowerCaseFilter\x2C\x0d\n          );\x0d\n        });\x0d\n        if (filteredGroup.length) {\x0d\n          ArrayPrototypePush(newCompletionGroups\x2C filteredGroup);\x0d\n        }\x0d\n      });\x0d\n      completionGroups = newCompletionGroups;\x0d\n    }\x0d\n\x0d\n    const completions = [];\x0d\n    // Unique completions across all groups.\x0d\n    const uniqueSet = new SafeSet();\x0d\n    uniqueSet.add('');\x0d\n    // Completion group 0 is the "closest" (least far up the inheritance\x0d\n    // chain) so we put its completions last: to be closest in the REPL.\x0d\n    ArrayPrototypeForEach(completionGroups\x2C (group) => {\x0d\n      ArrayPrototypeSort(group\x2C (a\x2C b) => (b > a ? 1 : -1));\x0d\n      const setSize = uniqueSet.size;\x0d\n      ArrayPrototypeForEach(group\x2C (entry) => {\x0d\n        if (!uniqueSet.has(entry)) {\x0d\n          ArrayPrototypeUnshift(completions\x2C entry);\x0d\n          uniqueSet.add(entry);\x0d\n        }\x0d\n      });\x0d\n      // Add a separator between groups.\x0d\n      if (uniqueSet.size !== setSize) {\x0d\n        ArrayPrototypeUnshift(completions\x2C '');\x0d\n      }\x0d\n    });\x0d\n\x0d\n    // Remove obsolete group entry\x2C if present.\x0d\n    if (completions[0] === '') {\x0d\n      ArrayPrototypeShift(completions);\x0d\n    }\x0d\n\x0d\n    callback(null\x2C [completions\x2C completeOn]);\x0d\n  }\x0d\n}\x0d\n\x0d\nREPLServer.prototype.completeOnEditorMode = (callback) => (err\x2C results) => {\x0d\n  if (err) return callback(err);\x0d\n\x0d\n  const { 0: completions\x2C 1: completeOn = '' } = results;\x0d\n  let result = ArrayPrototypeFilter(completions\x2C Boolean);\x0d\n\x0d\n  if (completeOn && result.length !== 0) {\x0d\n    result = [commonPrefix(result)];\x0d\n  }\x0d\n\x0d\n  callback(null\x2C [result\x2C completeOn]);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.defineCommand = function(keyword\x2C cmd) {\x0d\n  if (typeof cmd === 'function') {\x0d\n    cmd = { action: cmd };\x0d\n  } else {\x0d\n    validateFunction(cmd.action\x2C 'cmd.action');\x0d\n  }\x0d\n  this.commands[keyword] = cmd;\x0d\n};\x0d\n\x0d\n// TODO(BridgeAR): This should be replaced with acorn to build an AST. The\x0d\n// language became more complex and using a simple approach like this is not\x0d\n// sufficient anymore.\x0d\nfunction _memory(cmd) {\x0d\n  const self = this;\x0d\n  self.lines = self.lines || [];\x0d\n  self.lines.level = self.lines.level || [];\x0d\n\x0d\n  // Save the line so I can do magic later\x0d\n  if (cmd) {\x0d\n    const len = self.lines.level.length ? self.lines.level.length - 1 : 0;\x0d\n    ArrayPrototypePush(self.lines\x2C StringPrototypeRepeat('  '\x2C len) + cmd);\x0d\n  } else {\x0d\n    // I don't want to not change the format too much...\x0d\n    ArrayPrototypePush(self.lines\x2C '');\x0d\n  }\x0d\n\x0d\n  if (!cmd) {\x0d\n    self.lines.level = [];\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // I need to know "depth."\x0d\n  // Because I can not tell the difference between a } that\x0d\n  // closes an object literal and a } that closes a function\x0d\n  const countMatches = (regex\x2C str) => {\x0d\n    let count = 0;\x0d\n    while (RegExpPrototypeExec(regex\x2C str) !== null) count++;\x0d\n    return count;\x0d\n  };\x0d\n\x0d\n  // Going down is { and (   e.g. function() {\x0d\n  // going up is } and )\x0d\n  const dw = countMatches(/[{(]/g\x2C cmd);\x0d\n  const up = countMatches(/[})]/g\x2C cmd);\x0d\n  let depth = dw.length - up.length;\x0d\n\x0d\n  if (depth) {\x0d\n    (function workIt() {\x0d\n      if (depth > 0) {\x0d\n        // Going... down.\x0d\n        // Push the line#\x2C depth count\x2C and if the line is a function.\x0d\n        // Since JS only has functional scope I only need to remove\x0d\n        // "function() {" lines\x2C clearly this will not work for\x0d\n        // "function()\x0d\n        // {" but nothing should break\x2C only tab completion for local\x0d\n        // scope will not work for this function.\x0d\n        ArrayPrototypePush(self.lines.level\x2C {\x0d\n          line: self.lines.length - 1\x2C\x0d\n          depth: depth\x2C\x0d\n        });\x0d\n      } else if (depth < 0) {\x0d\n        // Going... up.\x0d\n        const curr = ArrayPrototypePop(self.lines.level);\x0d\n        if (curr) {\x0d\n          const tmp = curr.depth + depth;\x0d\n          if (tmp < 0) {\x0d\n            // More to go\x2C recurse\x0d\n            depth += curr.depth;\x0d\n            workIt();\x0d\n          } else if (tmp > 0) {\x0d\n            // Remove and push back\x0d\n            curr.depth += depth;\x0d\n            ArrayPrototypePush(self.lines.level\x2C curr);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }());\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addCommonWords(completionGroups) {\x0d\n  // Only words which do not yet exist as global property should be added to\x0d\n  // this list.\x0d\n  ArrayPrototypePush(completionGroups\x2C [\x0d\n    'async'\x2C 'await'\x2C 'break'\x2C 'case'\x2C 'catch'\x2C 'const'\x2C 'continue'\x2C\x0d\n    'debugger'\x2C 'default'\x2C 'delete'\x2C 'do'\x2C 'else'\x2C 'export'\x2C 'false'\x2C\x0d\n    'finally'\x2C 'for'\x2C 'function'\x2C 'if'\x2C 'import'\x2C 'in'\x2C 'instanceof'\x2C 'let'\x2C\x0d\n    'new'\x2C 'null'\x2C 'return'\x2C 'switch'\x2C 'this'\x2C 'throw'\x2C 'true'\x2C 'try'\x2C\x0d\n    'typeof'\x2C 'var'\x2C 'void'\x2C 'while'\x2C 'with'\x2C 'yield'\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\nfunction _turnOnEditorMode(repl) {\x0d\n  repl.editorMode = true;\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C repl\x2C ['']);\x0d\n}\x0d\n\x0d\nfunction _turnOffEditorMode(repl) {\x0d\n  repl.editorMode = false;\x0d\n  repl.setPrompt(repl._initialPrompt);\x0d\n}\x0d\n\x0d\nfunction defineDefaultCommands(repl) {\x0d\n  repl.defineCommand('break'\x2C {\x0d\n    help: 'Sometimes you get stuck\x2C this gets you out'\x2C\x0d\n    action: function() {\x0d\n      this.clearBufferedCommand();\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  let clearMessage;\x0d\n  if (repl.useGlobal) {\x0d\n    clearMessage = 'Alias for .break';\x0d\n  } else {\x0d\n    clearMessage = 'Break\x2C and also clear the local context';\x0d\n  }\x0d\n  repl.defineCommand('clear'\x2C {\x0d\n    help: clearMessage\x2C\x0d\n    action: function() {\x0d\n      this.clearBufferedCommand();\x0d\n      if (!this.useGlobal) {\x0d\n        this.output.write('Clearing context...\\n');\x0d\n        this.resetContext();\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('exit'\x2C {\x0d\n    help: 'Exit the REPL'\x2C\x0d\n    action: function() {\x0d\n      this.close();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('help'\x2C {\x0d\n    help: 'Print this help message'\x2C\x0d\n    action: function() {\x0d\n      const names = ArrayPrototypeSort(ObjectKeys(this.commands));\x0d\n      const longestNameLength = MathMaxApply(\x0d\n        ArrayPrototypeMap(names\x2C (name) => name.length)\x2C\x0d\n      );\x0d\n      ArrayPrototypeForEach(names\x2C (name) => {\x0d\n        const cmd = this.commands[name];\x0d\n        const spaces =\x0d\n          StringPrototypeRepeat(' '\x2C longestNameLength - name.length + 3);\x0d\n        const line = `.${name}${cmd.help ? spaces + cmd.help : ''}\\n`;\x0d\n        this.output.write(line);\x0d\n      });\x0d\n      this.output.write('\\nPress Ctrl+C to abort current expression\x2C ' +\x0d\n        'Ctrl+D to exit the REPL\\n');\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('save'\x2C {\x0d\n    help: 'Save all evaluated commands in this REPL session to a file'\x2C\x0d\n    action: function(file) {\x0d\n      try {\x0d\n        fs.writeFileSync(file\x2C ArrayPrototypeJoin(this.lines\x2C '\\n'));\x0d\n        this.output.write(`Session saved to: ${file}\\n`);\x0d\n      } catch {\x0d\n        this.output.write(`Failed to save: ${file}\\n`);\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('load'\x2C {\x0d\n    help: 'Load JS from a file into the REPL session'\x2C\x0d\n    action: function(file) {\x0d\n      try {\x0d\n        const stats = fs.statSync(file);\x0d\n        if (stats && stats.isFile()) {\x0d\n          _turnOnEditorMode(this);\x0d\n          const data = fs.readFileSync(file\x2C 'utf8');\x0d\n          this.write(data);\x0d\n          _turnOffEditorMode(this);\x0d\n          this.write('\\n');\x0d\n        } else {\x0d\n          this.output.write(\x0d\n            `Failed to load: ${file} is not a valid file\\n`\x2C\x0d\n          );\x0d\n        }\x0d\n      } catch {\x0d\n        this.output.write(`Failed to load: ${file}\\n`);\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n  if (repl.terminal) {\x0d\n    repl.defineCommand('editor'\x2C {\x0d\n      help: 'Enter editor mode'\x2C\x0d\n      action() {\x0d\n        _turnOnEditorMode(this);\x0d\n        this.output.write(\x0d\n          '// Entering editor mode (Ctrl+D to finish\x2C Ctrl+C to cancel)\\n');\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Recoverable(err) {\x0d\n  this.err = err;\x0d\n}\x0d\nObjectSetPrototypeOf(Recoverable.prototype\x2C SyntaxErrorPrototype);\x0d\nObjectSetPrototypeOf(Recoverable\x2C SyntaxError);\x0d\n\x0d\nmodule.exports = {\x0d\n  start\x2C\x0d\n  writer\x2C\x0d\n  REPLServer\x2C\x0d\n  REPL_MODE_SLOPPY\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  Recoverable\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'builtinModules'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: () => _builtinLibs\x2C\x0d\n  set: (val) => _builtinLibs = val\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C '_builtinLibs'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    () => _builtinLibs\x2C\x0d\n    'repl._builtinLibs is deprecated. Check module.builtinModules instead'\x2C\x0d\n    'DEP0142'\x2C\x0d\n  ) : () => _builtinLibs\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    (val) => _builtinLibs = val\x2C\x0d\n    'repl._builtinLibs is deprecated. Check module.builtinModules instead'\x2C\x0d\n    'DEP0142'\x2C\x0d\n  ) : (val) => _builtinLibs = val\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n
code-source-info,0x18bc1ab7ef6,447,0,60917,C0O0C4O60917,,
code-creation,JS,10,559171,0x18bc1ab96ae,2236, node:repl:1:1,0x18bc1ab7e70,~
code-source-info,0x18bc1ab96ae,447,0,60917,C0O0C421O1887C427O1912C433O1940C439O1966C445O1993C451O2016C457O2038C463O2060C469O2083C475O2111C481O2137C487O2161C493O2185C499O2208C505O2231C511O2256C517O2282C523O2294C529O2304C535O2330C541O2347C547O2363C553O2384C559O2401C565O2426C571O2461C577O2491C583O2516C589O2531C594O2556C600O2568C606O2585C612O2596C618O2620C624O2640C630O2652C635O2668C641O2694C647O2725C653O2753C659O2781C665O2807C671O2832C677O2857C683O2887C689O2911C695O2939C701O2976C706O2987C711O3003C716O3028C722O3087C728O3087C733O3069C738O3191C744O3191C749O3138C755O3162C761O3285C767O3285C772O3240C778O3262C784O3489C790O3489C795O3346C801O3369C807O3381C813O3395C819O3442C825O3536C831O3536C836O3524C842O3582C848O3582C852O3582C854O3611C860O3611C864O3611C866O3640C872O3640C876O3640C878O3678C884O3678C889O3664C895O3730C901O3730C906O3711C912O3787C918O3787C923O3775C929O3826C935O3826C940O3864C944O3826C946O3893C952O3928C962O3893C967O3893C969O4025C975O4047C980O4025C985O4025C987O4087C990O4127C995O4127C1005O4087C1010O4245C1016O4245C1020O4245C1022O4277C1028O4277C1033O4310C1046O4311C1052O4277C1054O4581C1060O4581C1065O4377C1070O4384C1076O4414C1082O4449C1088O4478C1094O4521C1100O4556C1106O4643C1112O4643C1117O4618C1123O4707C1129O4707C1134O4688C1139O4790C1145O4790C1150O4748C1156O4769C1162O4853C1165O4853C1169O4853C1171O4933C1174O4933C1178O4933C1180O5113C1186O5113C1191O4986C1196O5007C1201O5028C1207O5051C1213O5071C1219O5088C1225O5250C1228O5250C1233O5168C1238O5175C1244O5196C1250O5219C1256O5336C1259O5336C1264O5287C1270O5311C1276O5386C1282O5386C1286O5386C1288O5457C1294O5457C1299O5432C1305O5530C1307O5530C1309O5758C1310O5758C1312O5809C1318O5824C1326O5824C1334O5809C1339O5809C1341O5908C1343O5908C1345O5935C1347O5935C1352O5935C1354O5988C1357O5988C1361O5988C1363O6035C1366O6035C1374O6035C1376O6082C1377O6082C1382O6164C1388O6187C1401O6187C1411O6180C1423O6456C1426O6461C1438O6477C1447O6461C1458O6491C1464O6514C1477O6514C1489O6507C1497O6615C1503O6640C1515O6664C1524O6640C1534O6628C1542O6862C1546O6862C1548O6902C1554O6932C1572O6959C1582O6917C1590O34110C1593O34142C1605O34163C1614O34110C1624O34176C1630O34176C1640O34529C1643O34540C1656O34563C1664O34648C1667O34659C1680O34690C1688O34771C1691O34782C1704O34798C1712O35138C1715O35149C1728O35173C1736O36829C1739O36840C1752O36863C1760O37916C1763O37927C1776O37951C1784O38462C1787O38473C1800O38493C1808O38645C1816O38645C1818O38731C1826O38731C1828O38825C1836O38825C1838O38911C1846O38911C1848O39013C1856O39013C1858O40887C1861O40898C1874O40917C1882O53340C1885O53351C1898O53382C1906O53712C1909O53723C1922O53747C1930O59970C1933O60003C1942O59970C1952O60038C1955O60038C1965O60089C1978O60111C1988O60121C1998O60132C2008O60147C2018O60168C2028O60189C2038O60104C2046O60209C2052O60237C2072O60294C2084O60322C2096O60209C2106O60403C2112O60431C2134O60486C2140O60507C2154O60507C2180O60671C2186O60692C2200O60692C2224O60403C2235O60916,,
tick,0x7ff777d4f650,560977,1,0x7ff7776556e0,2,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x18bc1ab99ad,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
new,MemoryChunk,0xa2a2ac0000,262144
code-creation,Eval,10,564773,0xa2a2ac82ee,5, node:internal/deps/acorn/acorn/dist/acorn:1:1,0xa2a2ac6d60,~
script-source,448,node:internal/deps/acorn/acorn/dist/acorn,(function (global\x2C factory) {\x0d\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\x0d\n  typeof define === 'function' && define.amd ? define(['exports']\x2C factory) :\x0d\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self\x2C factory(global.acorn = {}));\x0d\n})(this\x2C (function (exports) { 'use strict';\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var astralIdentifierCodes = [509\x2C 0\x2C 227\x2C 0\x2C 150\x2C 4\x2C 294\x2C 9\x2C 1368\x2C 2\x2C 2\x2C 1\x2C 6\x2C 3\x2C 41\x2C 2\x2C 5\x2C 0\x2C 166\x2C 1\x2C 574\x2C 3\x2C 9\x2C 9\x2C 370\x2C 1\x2C 81\x2C 2\x2C 71\x2C 10\x2C 50\x2C 3\x2C 123\x2C 2\x2C 54\x2C 14\x2C 32\x2C 10\x2C 3\x2C 1\x2C 11\x2C 3\x2C 46\x2C 10\x2C 8\x2C 0\x2C 46\x2C 9\x2C 7\x2C 2\x2C 37\x2C 13\x2C 2\x2C 9\x2C 6\x2C 1\x2C 45\x2C 0\x2C 13\x2C 2\x2C 49\x2C 13\x2C 9\x2C 3\x2C 2\x2C 11\x2C 83\x2C 11\x2C 7\x2C 0\x2C 3\x2C 0\x2C 158\x2C 11\x2C 6\x2C 9\x2C 7\x2C 3\x2C 56\x2C 1\x2C 2\x2C 6\x2C 3\x2C 1\x2C 3\x2C 2\x2C 10\x2C 0\x2C 11\x2C 1\x2C 3\x2C 6\x2C 4\x2C 4\x2C 193\x2C 17\x2C 10\x2C 9\x2C 5\x2C 0\x2C 82\x2C 19\x2C 13\x2C 9\x2C 214\x2C 6\x2C 3\x2C 8\x2C 28\x2C 1\x2C 83\x2C 16\x2C 16\x2C 9\x2C 82\x2C 12\x2C 9\x2C 9\x2C 84\x2C 14\x2C 5\x2C 9\x2C 243\x2C 14\x2C 166\x2C 9\x2C 71\x2C 5\x2C 2\x2C 1\x2C 3\x2C 3\x2C 2\x2C 0\x2C 2\x2C 1\x2C 13\x2C 9\x2C 120\x2C 6\x2C 3\x2C 6\x2C 4\x2C 0\x2C 29\x2C 9\x2C 41\x2C 6\x2C 2\x2C 3\x2C 9\x2C 0\x2C 10\x2C 10\x2C 47\x2C 15\x2C 406\x2C 7\x2C 2\x2C 7\x2C 17\x2C 9\x2C 57\x2C 21\x2C 2\x2C 13\x2C 123\x2C 5\x2C 4\x2C 0\x2C 2\x2C 1\x2C 2\x2C 6\x2C 2\x2C 0\x2C 9\x2C 9\x2C 49\x2C 4\x2C 2\x2C 1\x2C 2\x2C 4\x2C 9\x2C 9\x2C 330\x2C 3\x2C 10\x2C 1\x2C 2\x2C 0\x2C 49\x2C 6\x2C 4\x2C 4\x2C 14\x2C 9\x2C 5351\x2C 0\x2C 7\x2C 14\x2C 13835\x2C 9\x2C 87\x2C 9\x2C 39\x2C 4\x2C 60\x2C 6\x2C 26\x2C 9\x2C 1014\x2C 0\x2C 2\x2C 54\x2C 8\x2C 3\x2C 82\x2C 0\x2C 12\x2C 1\x2C 19628\x2C 1\x2C 4706\x2C 45\x2C 3\x2C 22\x2C 543\x2C 4\x2C 4\x2C 5\x2C 9\x2C 7\x2C 3\x2C 6\x2C 31\x2C 3\x2C 149\x2C 2\x2C 1418\x2C 49\x2C 513\x2C 54\x2C 5\x2C 49\x2C 9\x2C 0\x2C 15\x2C 0\x2C 23\x2C 4\x2C 2\x2C 14\x2C 1361\x2C 6\x2C 2\x2C 16\x2C 3\x2C 6\x2C 2\x2C 1\x2C 2\x2C 4\x2C 101\x2C 0\x2C 161\x2C 6\x2C 10\x2C 9\x2C 357\x2C 0\x2C 62\x2C 13\x2C 499\x2C 13\x2C 983\x2C 6\x2C 110\x2C 6\x2C 6\x2C 9\x2C 4759\x2C 9\x2C 787719\x2C 239];\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var astralIdentifierStartCodes = [0\x2C 11\x2C 2\x2C 25\x2C 2\x2C 18\x2C 2\x2C 1\x2C 2\x2C 14\x2C 3\x2C 13\x2C 35\x2C 122\x2C 70\x2C 52\x2C 268\x2C 28\x2C 4\x2C 48\x2C 48\x2C 31\x2C 14\x2C 29\x2C 6\x2C 37\x2C 11\x2C 29\x2C 3\x2C 35\x2C 5\x2C 7\x2C 2\x2C 4\x2C 43\x2C 157\x2C 19\x2C 35\x2C 5\x2C 35\x2C 5\x2C 39\x2C 9\x2C 51\x2C 13\x2C 10\x2C 2\x2C 14\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 10\x2C 2\x2C 14\x2C 2\x2C 6\x2C 2\x2C 1\x2C 68\x2C 310\x2C 10\x2C 21\x2C 11\x2C 7\x2C 25\x2C 5\x2C 2\x2C 41\x2C 2\x2C 8\x2C 70\x2C 5\x2C 3\x2C 0\x2C 2\x2C 43\x2C 2\x2C 1\x2C 4\x2C 0\x2C 3\x2C 22\x2C 11\x2C 22\x2C 10\x2C 30\x2C 66\x2C 18\x2C 2\x2C 1\x2C 11\x2C 21\x2C 11\x2C 25\x2C 71\x2C 55\x2C 7\x2C 1\x2C 65\x2C 0\x2C 16\x2C 3\x2C 2\x2C 2\x2C 2\x2C 28\x2C 43\x2C 28\x2C 4\x2C 28\x2C 36\x2C 7\x2C 2\x2C 27\x2C 28\x2C 53\x2C 11\x2C 21\x2C 11\x2C 18\x2C 14\x2C 17\x2C 111\x2C 72\x2C 56\x2C 50\x2C 14\x2C 50\x2C 14\x2C 35\x2C 349\x2C 41\x2C 7\x2C 1\x2C 79\x2C 28\x2C 11\x2C 0\x2C 9\x2C 21\x2C 43\x2C 17\x2C 47\x2C 20\x2C 28\x2C 22\x2C 13\x2C 52\x2C 58\x2C 1\x2C 3\x2C 0\x2C 14\x2C 44\x2C 33\x2C 24\x2C 27\x2C 35\x2C 30\x2C 0\x2C 3\x2C 0\x2C 9\x2C 34\x2C 4\x2C 0\x2C 13\x2C 47\x2C 15\x2C 3\x2C 22\x2C 0\x2C 2\x2C 0\x2C 36\x2C 17\x2C 2\x2C 24\x2C 20\x2C 1\x2C 64\x2C 6\x2C 2\x2C 0\x2C 2\x2C 3\x2C 2\x2C 14\x2C 2\x2C 9\x2C 8\x2C 46\x2C 39\x2C 7\x2C 3\x2C 1\x2C 3\x2C 21\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 4\x2C 4\x2C 0\x2C 19\x2C 0\x2C 13\x2C 4\x2C 159\x2C 52\x2C 19\x2C 3\x2C 21\x2C 2\x2C 31\x2C 47\x2C 21\x2C 1\x2C 2\x2C 0\x2C 185\x2C 46\x2C 42\x2C 3\x2C 37\x2C 47\x2C 21\x2C 0\x2C 60\x2C 42\x2C 14\x2C 0\x2C 72\x2C 26\x2C 38\x2C 6\x2C 186\x2C 43\x2C 117\x2C 63\x2C 32\x2C 7\x2C 3\x2C 0\x2C 3\x2C 7\x2C 2\x2C 1\x2C 2\x2C 23\x2C 16\x2C 0\x2C 2\x2C 0\x2C 95\x2C 7\x2C 3\x2C 38\x2C 17\x2C 0\x2C 2\x2C 0\x2C 29\x2C 0\x2C 11\x2C 39\x2C 8\x2C 0\x2C 22\x2C 0\x2C 12\x2C 45\x2C 20\x2C 0\x2C 19\x2C 72\x2C 264\x2C 8\x2C 2\x2C 36\x2C 18\x2C 0\x2C 50\x2C 29\x2C 113\x2C 6\x2C 2\x2C 1\x2C 2\x2C 37\x2C 22\x2C 0\x2C 26\x2C 5\x2C 2\x2C 1\x2C 2\x2C 31\x2C 15\x2C 0\x2C 328\x2C 18\x2C 16\x2C 0\x2C 2\x2C 12\x2C 2\x2C 33\x2C 125\x2C 0\x2C 80\x2C 921\x2C 103\x2C 110\x2C 18\x2C 195\x2C 2637\x2C 96\x2C 16\x2C 1071\x2C 18\x2C 5\x2C 4026\x2C 582\x2C 8634\x2C 568\x2C 8\x2C 30\x2C 18\x2C 78\x2C 18\x2C 29\x2C 19\x2C 47\x2C 17\x2C 3\x2C 32\x2C 20\x2C 6\x2C 18\x2C 689\x2C 63\x2C 129\x2C 74\x2C 6\x2C 0\x2C 67\x2C 12\x2C 65\x2C 1\x2C 2\x2C 0\x2C 29\x2C 6135\x2C 9\x2C 1237\x2C 43\x2C 8\x2C 8936\x2C 3\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 290\x2C 16\x2C 0\x2C 30\x2C 2\x2C 3\x2C 0\x2C 15\x2C 3\x2C 9\x2C 395\x2C 2309\x2C 106\x2C 6\x2C 12\x2C 4\x2C 8\x2C 8\x2C 9\x2C 5991\x2C 84\x2C 2\x2C 70\x2C 2\x2C 1\x2C 3\x2C 0\x2C 3\x2C 1\x2C 3\x2C 3\x2C 2\x2C 11\x2C 2\x2C 0\x2C 2\x2C 6\x2C 2\x2C 64\x2C 2\x2C 3\x2C 3\x2C 7\x2C 2\x2C 6\x2C 2\x2C 27\x2C 2\x2C 3\x2C 2\x2C 4\x2C 2\x2C 0\x2C 4\x2C 6\x2C 2\x2C 339\x2C 3\x2C 24\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 7\x2C 1845\x2C 30\x2C 7\x2C 5\x2C 262\x2C 61\x2C 147\x2C 44\x2C 11\x2C 6\x2C 17\x2C 0\x2C 322\x2C 29\x2C 19\x2C 43\x2C 485\x2C 27\x2C 757\x2C 6\x2C 2\x2C 3\x2C 2\x2C 1\x2C 2\x2C 14\x2C 2\x2C 196\x2C 60\x2C 67\x2C 8\x2C 0\x2C 1205\x2C 3\x2C 2\x2C 26\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 0\x2C 2\x2C 9\x2C 2\x2C 3\x2C 2\x2C 0\x2C 2\x2C 0\x2C 7\x2C 0\x2C 5\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 2\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 3\x2C 2\x2C 6\x2C 2\x2C 3\x2C 2\x2C 3\x2C 2\x2C 0\x2C 2\x2C 9\x2C 2\x2C 16\x2C 6\x2C 2\x2C 2\x2C 4\x2C 2\x2C 16\x2C 4421\x2C 42719\x2C 33\x2C 4153\x2C 7\x2C 221\x2C 3\x2C 5761\x2C 15\x2C 7472\x2C 3104\x2C 541\x2C 1507\x2C 4938\x2C 6\x2C 4191];\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var nonASCIIidentifierChars = "\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f";\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var nonASCIIidentifierStartChars = "\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc";\x0d\n\x0d\n  // These are a run-length and offset encoded representation of the\x0d\n\x0d\n  // Reserved word lists for various dialects of the language\x0d\n\x0d\n  var reservedWords = {\x0d\n    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile"\x2C\x0d\n    5: "class enum extends super const export import"\x2C\x0d\n    6: "enum"\x2C\x0d\n    strict: "implements interface let package private protected public static yield"\x2C\x0d\n    strictBind: "eval arguments"\x0d\n  };\x0d\n\x0d\n  // And the keywords\x0d\n\x0d\n  var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";\x0d\n\x0d\n  var keywords$1 = {\x0d\n    5: ecma5AndLessKeywords\x2C\x0d\n    "5module": ecma5AndLessKeywords + " export import"\x2C\x0d\n    6: ecma5AndLessKeywords + " const class extends export import super"\x0d\n  };\x0d\n\x0d\n  var keywordRelationalOperator = /^in(stanceof)?$/;\x0d\n\x0d\n  // ## Character categories\x0d\n\x0d\n  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");\x0d\n  var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");\x0d\n\x0d\n  // This has a complexity linear to the value of the code. The\x0d\n  // assumption is that looking up astral identifier characters is\x0d\n  // rare.\x0d\n  function isInAstralSet(code\x2C set) {\x0d\n    var pos = 0x10000;\x0d\n    for (var i = 0; i < set.length; i += 2) {\x0d\n      pos += set[i];\x0d\n      if (pos > code) { return false }\x0d\n      pos += set[i + 1];\x0d\n      if (pos >= code) { return true }\x0d\n    }\x0d\n    return false\x0d\n  }\x0d\n\x0d\n  // Test whether a given character code starts an identifier.\x0d\n\x0d\n  function isIdentifierStart(code\x2C astral) {\x0d\n    if (code < 65) { return code === 36 }\x0d\n    if (code < 91) { return true }\x0d\n    if (code < 97) { return code === 95 }\x0d\n    if (code < 123) { return true }\x0d\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\x0d\n    if (astral === false) { return false }\x0d\n    return isInAstralSet(code\x2C astralIdentifierStartCodes)\x0d\n  }\x0d\n\x0d\n  // Test whether a given character is part of an identifier.\x0d\n\x0d\n  function isIdentifierChar(code\x2C astral) {\x0d\n    if (code < 48) { return code === 36 }\x0d\n    if (code < 58) { return true }\x0d\n    if (code < 65) { return false }\x0d\n    if (code < 91) { return true }\x0d\n    if (code < 97) { return code === 95 }\x0d\n    if (code < 123) { return true }\x0d\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\x0d\n    if (astral === false) { return false }\x0d\n    return isInAstralSet(code\x2C astralIdentifierStartCodes) || isInAstralSet(code\x2C astralIdentifierCodes)\x0d\n  }\x0d\n\x0d\n  // ## Token types\x0d\n\x0d\n  // The assignment of fine-grained\x2C information-carrying type objects\x0d\n  // allows the tokenizer to store the information it has about a\x0d\n  // token in a way that is very cheap for the parser to look up.\x0d\n\x0d\n  // All token type variables start with an underscore\x2C to make them\x0d\n  // easy to recognize.\x0d\n\x0d\n  // The `beforeExpr` property is used to disambiguate between regular\x0d\n  // expressions and divisions. It is set on all token types that can\x0d\n  // be followed by an expression (thus\x2C a slash after them would be a\x0d\n  // regular expression).\x0d\n  //\x0d\n  // The `startsExpr` property is used to check if the token ends a\x0d\n  // `yield` expression. It is set on all token types that either can\x0d\n  // directly start an expression (like a quotation mark) or can\x0d\n  // continue an expression (like the body of a string).\x0d\n  //\x0d\n  // `isLoop` marks a keyword as starting a loop\x2C which is important\x0d\n  // to know when parsing a label\x2C in order to allow or disallow\x0d\n  // continue jumps to that label.\x0d\n\x0d\n  var TokenType = function TokenType(label\x2C conf) {\x0d\n    if ( conf === void 0 ) conf = {};\x0d\n\x0d\n    this.label = label;\x0d\n    this.keyword = conf.keyword;\x0d\n    this.beforeExpr = !!conf.beforeExpr;\x0d\n    this.startsExpr = !!conf.startsExpr;\x0d\n    this.isLoop = !!conf.isLoop;\x0d\n    this.isAssign = !!conf.isAssign;\x0d\n    this.prefix = !!conf.prefix;\x0d\n    this.postfix = !!conf.postfix;\x0d\n    this.binop = conf.binop || null;\x0d\n    this.updateContext = null;\x0d\n  };\x0d\n\x0d\n  function binop(name\x2C prec) {\x0d\n    return new TokenType(name\x2C {beforeExpr: true\x2C binop: prec})\x0d\n  }\x0d\n  var beforeExpr = {beforeExpr: true}\x2C startsExpr = {startsExpr: true};\x0d\n\x0d\n  // Map keyword names to token types.\x0d\n\x0d\n  var keywords = {};\x0d\n\x0d\n  // Succinct definitions of keyword token types\x0d\n  function kw(name\x2C options) {\x0d\n    if ( options === void 0 ) options = {};\x0d\n\x0d\n    options.keyword = name;\x0d\n    return keywords[name] = new TokenType(name\x2C options)\x0d\n  }\x0d\n\x0d\n  var types$1 = {\x0d\n    num: new TokenType("num"\x2C startsExpr)\x2C\x0d\n    regexp: new TokenType("regexp"\x2C startsExpr)\x2C\x0d\n    string: new TokenType("string"\x2C startsExpr)\x2C\x0d\n    name: new TokenType("name"\x2C startsExpr)\x2C\x0d\n    privateId: new TokenType("privateId"\x2C startsExpr)\x2C\x0d\n    eof: new TokenType("eof")\x2C\x0d\n\x0d\n    // Punctuation token types.\x0d\n    bracketL: new TokenType("["\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    bracketR: new TokenType("]")\x2C\x0d\n    braceL: new TokenType("{"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    braceR: new TokenType("}")\x2C\x0d\n    parenL: new TokenType("("\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    parenR: new TokenType(")")\x2C\x0d\n    comma: new TokenType("\x2C"\x2C beforeExpr)\x2C\x0d\n    semi: new TokenType(";"\x2C beforeExpr)\x2C\x0d\n    colon: new TokenType(":"\x2C beforeExpr)\x2C\x0d\n    dot: new TokenType(".")\x2C\x0d\n    question: new TokenType("?"\x2C beforeExpr)\x2C\x0d\n    questionDot: new TokenType("?.")\x2C\x0d\n    arrow: new TokenType("=>"\x2C beforeExpr)\x2C\x0d\n    template: new TokenType("template")\x2C\x0d\n    invalidTemplate: new TokenType("invalidTemplate")\x2C\x0d\n    ellipsis: new TokenType("..."\x2C beforeExpr)\x2C\x0d\n    backQuote: new TokenType("`"\x2C startsExpr)\x2C\x0d\n    dollarBraceL: new TokenType("${"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n\x0d\n    // Operators. These carry several kinds of properties to help the\x0d\n    // parser use them properly (the presence of these properties is\x0d\n    // what categorizes them as operators).\x0d\n    //\x0d\n    // `binop`\x2C when present\x2C specifies that this operator is a binary\x0d\n    // operator\x2C and will refer to its precedence.\x0d\n    //\x0d\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\x0d\n    // unary operator.\x0d\n    //\x0d\n    // `isAssign` marks all of `=`\x2C `+=`\x2C `-=` etcetera\x2C which act as\x0d\n    // binary operators with a very low precedence\x2C that should result\x0d\n    // in AssignmentExpression nodes.\x0d\n\x0d\n    eq: new TokenType("="\x2C {beforeExpr: true\x2C isAssign: true})\x2C\x0d\n    assign: new TokenType("_="\x2C {beforeExpr: true\x2C isAssign: true})\x2C\x0d\n    incDec: new TokenType("++/--"\x2C {prefix: true\x2C postfix: true\x2C startsExpr: true})\x2C\x0d\n    prefix: new TokenType("!/~"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    logicalOR: binop("||"\x2C 1)\x2C\x0d\n    logicalAND: binop("&&"\x2C 2)\x2C\x0d\n    bitwiseOR: binop("|"\x2C 3)\x2C\x0d\n    bitwiseXOR: binop("^"\x2C 4)\x2C\x0d\n    bitwiseAND: binop("&"\x2C 5)\x2C\x0d\n    equality: binop("==/!=/===/!=="\x2C 6)\x2C\x0d\n    relational: binop("</>/<=/>="\x2C 7)\x2C\x0d\n    bitShift: binop("<</>>/>>>"\x2C 8)\x2C\x0d\n    plusMin: new TokenType("+/-"\x2C {beforeExpr: true\x2C binop: 9\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    modulo: binop("%"\x2C 10)\x2C\x0d\n    star: binop("*"\x2C 10)\x2C\x0d\n    slash: binop("/"\x2C 10)\x2C\x0d\n    starstar: new TokenType("**"\x2C {beforeExpr: true})\x2C\x0d\n    coalesce: binop("??"\x2C 1)\x2C\x0d\n\x0d\n    // Keyword token types.\x0d\n    _break: kw("break")\x2C\x0d\n    _case: kw("case"\x2C beforeExpr)\x2C\x0d\n    _catch: kw("catch")\x2C\x0d\n    _continue: kw("continue")\x2C\x0d\n    _debugger: kw("debugger")\x2C\x0d\n    _default: kw("default"\x2C beforeExpr)\x2C\x0d\n    _do: kw("do"\x2C {isLoop: true\x2C beforeExpr: true})\x2C\x0d\n    _else: kw("else"\x2C beforeExpr)\x2C\x0d\n    _finally: kw("finally")\x2C\x0d\n    _for: kw("for"\x2C {isLoop: true})\x2C\x0d\n    _function: kw("function"\x2C startsExpr)\x2C\x0d\n    _if: kw("if")\x2C\x0d\n    _return: kw("return"\x2C beforeExpr)\x2C\x0d\n    _switch: kw("switch")\x2C\x0d\n    _throw: kw("throw"\x2C beforeExpr)\x2C\x0d\n    _try: kw("try")\x2C\x0d\n    _var: kw("var")\x2C\x0d\n    _const: kw("const")\x2C\x0d\n    _while: kw("while"\x2C {isLoop: true})\x2C\x0d\n    _with: kw("with")\x2C\x0d\n    _new: kw("new"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    _this: kw("this"\x2C startsExpr)\x2C\x0d\n    _super: kw("super"\x2C startsExpr)\x2C\x0d\n    _class: kw("class"\x2C startsExpr)\x2C\x0d\n    _extends: kw("extends"\x2C beforeExpr)\x2C\x0d\n    _export: kw("export")\x2C\x0d\n    _import: kw("import"\x2C startsExpr)\x2C\x0d\n    _null: kw("null"\x2C startsExpr)\x2C\x0d\n    _true: kw("true"\x2C startsExpr)\x2C\x0d\n    _false: kw("false"\x2C startsExpr)\x2C\x0d\n    _in: kw("in"\x2C {beforeExpr: true\x2C binop: 7})\x2C\x0d\n    _instanceof: kw("instanceof"\x2C {beforeExpr: true\x2C binop: 7})\x2C\x0d\n    _typeof: kw("typeof"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    _void: kw("void"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    _delete: kw("delete"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x0d\n  };\x0d\n\x0d\n  // Matches a whole line break (where CRLF is considered a single\x0d\n  // line break). Used to count lines.\x0d\n\x0d\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\x0d\n  var lineBreakG = new RegExp(lineBreak.source\x2C "g");\x0d\n\x0d\n  function isNewLine(code) {\x0d\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\x0d\n  }\x0d\n\x0d\n  function nextLineBreak(code\x2C from\x2C end) {\x0d\n    if ( end === void 0 ) end = code.length;\x0d\n\x0d\n    for (var i = from; i < end; i++) {\x0d\n      var next = code.charCodeAt(i);\x0d\n      if (isNewLine(next))\x0d\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\x0d\n    }\x0d\n    return -1\x0d\n  }\x0d\n\x0d\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\x0d\n\x0d\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\x0d\n\x0d\n  var ref = Object.prototype;\x0d\n  var hasOwnProperty = ref.hasOwnProperty;\x0d\n  var toString = ref.toString;\x0d\n\x0d\n  var hasOwn = Object.hasOwn || (function (obj\x2C propName) { return (\x0d\n    hasOwnProperty.call(obj\x2C propName)\x0d\n  ); });\x0d\n\x0d\n  var isArray = Array.isArray || (function (obj) { return (\x0d\n    toString.call(obj) === "[object Array]"\x0d\n  ); });\x0d\n\x0d\n  function wordsRegexp(words) {\x0d\n    return new RegExp("^(?:" + words.replace(/ /g\x2C "|") + ")$")\x0d\n  }\x0d\n\x0d\n  function codePointToString(code) {\x0d\n    // UTF-16 Decoding\x0d\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\x0d\n    code -= 0x10000;\x0d\n    return String.fromCharCode((code >> 10) + 0xD800\x2C (code & 1023) + 0xDC00)\x0d\n  }\x0d\n\x0d\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\x0d\n\x0d\n  // These are used when `options.locations` is on\x2C for the\x0d\n  // `startLoc` and `endLoc` properties.\x0d\n\x0d\n  var Position = function Position(line\x2C col) {\x0d\n    this.line = line;\x0d\n    this.column = col;\x0d\n  };\x0d\n\x0d\n  Position.prototype.offset = function offset (n) {\x0d\n    return new Position(this.line\x2C this.column + n)\x0d\n  };\x0d\n\x0d\n  var SourceLocation = function SourceLocation(p\x2C start\x2C end) {\x0d\n    this.start = start;\x0d\n    this.end = end;\x0d\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\x0d\n  };\x0d\n\x0d\n  // The `getLineInfo` function is mostly useful when the\x0d\n  // `locations` option is off (for performance reasons) and you\x0d\n  // want to find the line/column position for a given character\x0d\n  // offset. `input` should be the code string that the offset refers\x0d\n  // into.\x0d\n\x0d\n  function getLineInfo(input\x2C offset) {\x0d\n    for (var line = 1\x2C cur = 0;;) {\x0d\n      var nextBreak = nextLineBreak(input\x2C cur\x2C offset);\x0d\n      if (nextBreak < 0) { return new Position(line\x2C offset - cur) }\x0d\n      ++line;\x0d\n      cur = nextBreak;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // A second argument must be given to configure the parser process.\x0d\n  // These options are recognized (only `ecmaVersion` is required):\x0d\n\x0d\n  var defaultOptions = {\x0d\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\x0d\n    // either 3\x2C 5\x2C 6 (or 2015)\x2C 7 (2016)\x2C 8 (2017)\x2C 9 (2018)\x2C 10\x0d\n    // (2019)\x2C 11 (2020)\x2C 12 (2021)\x2C 13 (2022)\x2C 14 (2023)\x2C or `"latest"`\x0d\n    // (the latest version the library supports). This influences\x0d\n    // support for strict mode\x2C the set of reserved words\x2C and support\x0d\n    // for new syntax features.\x0d\n    ecmaVersion: null\x2C\x0d\n    // `sourceType` indicates the mode the code should be parsed in.\x0d\n    // Can be either `"script"` or `"module"`. This influences global\x0d\n    // strict mode and parsing of `import` and `export` declarations.\x0d\n    sourceType: "script"\x2C\x0d\n    // `onInsertedSemicolon` can be a callback that will be called\x0d\n    // when a semicolon is automatically inserted. It will be passed\x0d\n    // the position of the comma as an offset\x2C and if `locations` is\x0d\n    // enabled\x2C it is given the location as a `{line\x2C column}` object\x0d\n    // as second argument.\x0d\n    onInsertedSemicolon: null\x2C\x0d\n    // `onTrailingComma` is similar to `onInsertedSemicolon`\x2C but for\x0d\n    // trailing commas.\x0d\n    onTrailingComma: null\x2C\x0d\n    // By default\x2C reserved words are only enforced if ecmaVersion >= 5.\x0d\n    // Set `allowReserved` to a boolean value to explicitly turn this on\x0d\n    // an off. When this option has the value "never"\x2C reserved words\x0d\n    // and keywords can also not be used as property names.\x0d\n    allowReserved: null\x2C\x0d\n    // When enabled\x2C a return at the top level is not considered an\x0d\n    // error.\x0d\n    allowReturnOutsideFunction: false\x2C\x0d\n    // When enabled\x2C import/export statements are not constrained to\x0d\n    // appearing at the top of the program\x2C and an import.meta expression\x0d\n    // in a script isn't considered an error.\x0d\n    allowImportExportEverywhere: false\x2C\x0d\n    // By default\x2C await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\x0d\n    // When enabled\x2C await identifiers are allowed to appear at the top-level scope\x2C\x0d\n    // but they are still not allowed in non-async functions.\x0d\n    allowAwaitOutsideFunction: null\x2C\x0d\n    // When enabled\x2C super identifiers are not constrained to\x0d\n    // appearing in methods and do not raise an error when they appear elsewhere.\x0d\n    allowSuperOutsideMethod: null\x2C\x0d\n    // When enabled\x2C hashbang directive in the beginning of file is\x0d\n    // allowed and treated as a line comment. Enabled by default when\x0d\n    // `ecmaVersion` >= 2023.\x0d\n    allowHashBang: false\x2C\x0d\n    // When `locations` is on\x2C `loc` properties holding objects with\x0d\n    // `start` and `end` properties in `{line\x2C column}` form (with\x0d\n    // line being 1-based and column 0-based) will be attached to the\x0d\n    // nodes.\x0d\n    locations: false\x2C\x0d\n    // A function can be passed as `onToken` option\x2C which will\x0d\n    // cause Acorn to call that function with object in the same\x0d\n    // format as tokens returned from `tokenizer().getToken()`. Note\x0d\n    // that you are not allowed to call the parser from the\x0d\n    // callback\u2014that will corrupt its internal state.\x0d\n    onToken: null\x2C\x0d\n    // A function can be passed as `onComment` option\x2C which will\x0d\n    // cause Acorn to call that function with `(block\x2C text\x2C start\x2C\x0d\n    // end)` parameters whenever a comment is skipped. `block` is a\x0d\n    // boolean indicating whether this is a block (`/* */`) comment\x2C\x0d\n    // `text` is the content of the comment\x2C and `start` and `end` are\x0d\n    // character offsets that denote the start and end of the comment.\x0d\n    // When the `locations` option is on\x2C two more parameters are\x0d\n    // passed\x2C the full `{line\x2C column}` locations of the start and\x0d\n    // end of the comments. Note that you are not allowed to call the\x0d\n    // parser from the callback\u2014that will corrupt its internal state.\x0d\n    onComment: null\x2C\x0d\n    // Nodes have their start and end characters offsets recorded in\x0d\n    // `start` and `end` properties (directly on the node\x2C rather than\x0d\n    // the `loc` object\x2C which holds line/column data. To also add a\x0d\n    // [semi-standardized][range] `range` property holding a `[start\x2C\x0d\n    // end]` array with the same numbers\x2C set the `ranges` option to\x0d\n    // `true`.\x0d\n    //\x0d\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\x0d\n    ranges: false\x2C\x0d\n    // It is possible to parse multiple files into a single AST by\x0d\n    // passing the tree produced by parsing the first file as\x0d\n    // `program` option in subsequent parses. This will add the\x0d\n    // toplevel forms of the parsed file to the `Program` (top) node\x0d\n    // of an existing parse tree.\x0d\n    program: null\x2C\x0d\n    // When `locations` is on\x2C you can pass this to record the source\x0d\n    // file in every node's `loc` object.\x0d\n    sourceFile: null\x2C\x0d\n    // This value\x2C if given\x2C is stored in every node\x2C whether\x0d\n    // `locations` is on or off.\x0d\n    directSourceFile: null\x2C\x0d\n    // When enabled\x2C parenthesized expressions are represented by\x0d\n    // (non-standard) ParenthesizedExpression nodes\x0d\n    preserveParens: false\x0d\n  };\x0d\n\x0d\n  // Interpret and default an options object\x0d\n\x0d\n  var warnedAboutEcmaVersion = false;\x0d\n\x0d\n  function getOptions(opts) {\x0d\n    var options = {};\x0d\n\x0d\n    for (var opt in defaultOptions)\x0d\n      { options[opt] = opts && hasOwn(opts\x2C opt) ? opts[opt] : defaultOptions[opt]; }\x0d\n\x0d\n    if (options.ecmaVersion === "latest") {\x0d\n      options.ecmaVersion = 1e8;\x0d\n    } else if (options.ecmaVersion == null) {\x0d\n      if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {\x0d\n        warnedAboutEcmaVersion = true;\x0d\n        console.warn("Since Acorn 8.0.0\x2C options.ecmaVersion is required.\\nDefaulting to 2020\x2C but this will stop working in the future.");\x0d\n      }\x0d\n      options.ecmaVersion = 11;\x0d\n    } else if (options.ecmaVersion >= 2015) {\x0d\n      options.ecmaVersion -= 2009;\x0d\n    }\x0d\n\x0d\n    if (options.allowReserved == null)\x0d\n      { options.allowReserved = options.ecmaVersion < 5; }\x0d\n\x0d\n    if (!opts || opts.allowHashBang == null)\x0d\n      { options.allowHashBang = options.ecmaVersion >= 14; }\x0d\n\x0d\n    if (isArray(options.onToken)) {\x0d\n      var tokens = options.onToken;\x0d\n      options.onToken = function (token) { return tokens.push(token); };\x0d\n    }\x0d\n    if (isArray(options.onComment))\x0d\n      { options.onComment = pushComment(options\x2C options.onComment); }\x0d\n\x0d\n    return options\x0d\n  }\x0d\n\x0d\n  function pushComment(options\x2C array) {\x0d\n    return function(block\x2C text\x2C start\x2C end\x2C startLoc\x2C endLoc) {\x0d\n      var comment = {\x0d\n        type: block ? "Block" : "Line"\x2C\x0d\n        value: text\x2C\x0d\n        start: start\x2C\x0d\n        end: end\x0d\n      };\x0d\n      if (options.locations)\x0d\n        { comment.loc = new SourceLocation(this\x2C startLoc\x2C endLoc); }\x0d\n      if (options.ranges)\x0d\n        { comment.range = [start\x2C end]; }\x0d\n      array.push(comment);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Each scope gets a bitset that may contain these flags\x0d\n  var\x0d\n      SCOPE_TOP = 1\x2C\x0d\n      SCOPE_FUNCTION = 2\x2C\x0d\n      SCOPE_ASYNC = 4\x2C\x0d\n      SCOPE_GENERATOR = 8\x2C\x0d\n      SCOPE_ARROW = 16\x2C\x0d\n      SCOPE_SIMPLE_CATCH = 32\x2C\x0d\n      SCOPE_SUPER = 64\x2C\x0d\n      SCOPE_DIRECT_SUPER = 128\x2C\x0d\n      SCOPE_CLASS_STATIC_BLOCK = 256\x2C\x0d\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\x0d\n\x0d\n  function functionFlags(async\x2C generator) {\x0d\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\x0d\n  }\x0d\n\x0d\n  // Used in checkLVal* and declareName to determine the type of a binding\x0d\n  var\x0d\n      BIND_NONE = 0\x2C // Not a binding\x0d\n      BIND_VAR = 1\x2C // Var-style binding\x0d\n      BIND_LEXICAL = 2\x2C // Let- or const-style binding\x0d\n      BIND_FUNCTION = 3\x2C // Function declaration\x0d\n      BIND_SIMPLE_CATCH = 4\x2C // Simple (identifier pattern) catch binding\x0d\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\x0d\n\x0d\n  var Parser = function Parser(options\x2C input\x2C startPos) {\x0d\n    this.options = options = getOptions(options);\x0d\n    this.sourceFile = options.sourceFile;\x0d\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);\x0d\n    var reserved = "";\x0d\n    if (options.allowReserved !== true) {\x0d\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\x0d\n      if (options.sourceType === "module") { reserved += " await"; }\x0d\n    }\x0d\n    this.reservedWords = wordsRegexp(reserved);\x0d\n    var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;\x0d\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\x0d\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);\x0d\n    this.input = String(input);\x0d\n\x0d\n    // Used to signal to callers of `readWord1` whether the word\x0d\n    // contained any escape sequences. This is needed because words with\x0d\n    // escape sequences must not be interpreted as keywords.\x0d\n    this.containsEsc = false;\x0d\n\x0d\n    // Set up token state\x0d\n\x0d\n    // The current position of the tokenizer in the input.\x0d\n    if (startPos) {\x0d\n      this.pos = startPos;\x0d\n      this.lineStart = this.input.lastIndexOf("\\n"\x2C startPos - 1) + 1;\x0d\n      this.curLine = this.input.slice(0\x2C this.lineStart).split(lineBreak).length;\x0d\n    } else {\x0d\n      this.pos = this.lineStart = 0;\x0d\n      this.curLine = 1;\x0d\n    }\x0d\n\x0d\n    // Properties of the current token:\x0d\n    // Its type\x0d\n    this.type = types$1.eof;\x0d\n    // For tokens that include more information than their type\x2C the value\x0d\n    this.value = null;\x0d\n    // Its start and end offset\x0d\n    this.start = this.end = this.pos;\x0d\n    // And\x2C if locations are used\x2C the {line\x2C column} object\x0d\n    // corresponding to those offsets\x0d\n    this.startLoc = this.endLoc = this.curPosition();\x0d\n\x0d\n    // Position information for the previous token\x0d\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\x0d\n    this.lastTokStart = this.lastTokEnd = this.pos;\x0d\n\x0d\n    // The context stack is used to superficially track syntactic\x0d\n    // context to predict whether a regular expression is allowed in a\x0d\n    // given position.\x0d\n    this.context = this.initialContext();\x0d\n    this.exprAllowed = true;\x0d\n\x0d\n    // Figure out if it's a module code.\x0d\n    this.inModule = options.sourceType === "module";\x0d\n    this.strict = this.inModule || this.strictDirective(this.pos);\x0d\n\x0d\n    // Used to signify the start of a potential arrow function\x0d\n    this.potentialArrowAt = -1;\x0d\n    this.potentialArrowInForAwait = false;\x0d\n\x0d\n    // Positions to delayed-check that yield/await does not exist in default parameters.\x0d\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\x0d\n    // Labels in scope.\x0d\n    this.labels = [];\x0d\n    // Thus-far undefined exports.\x0d\n    this.undefinedExports = Object.create(null);\x0d\n\x0d\n    // If enabled\x2C skip leading hashbang line.\x0d\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0\x2C 2) === "#!")\x0d\n      { this.skipLineComment(2); }\x0d\n\x0d\n    // Scope tracking for duplicate variable names (see scope.js)\x0d\n    this.scopeStack = [];\x0d\n    this.enterScope(SCOPE_TOP);\x0d\n\x0d\n    // For RegExp validation\x0d\n    this.regexpState = null;\x0d\n\x0d\n    // The stack of private names.\x0d\n    // Each element has two properties: 'declared' and 'used'.\x0d\n    // When it exited from the outermost class definition\x2C all used private names must be declared.\x0d\n    this.privateNameStack = [];\x0d\n  };\x0d\n\x0d\n  var prototypeAccessors = { inFunction: { configurable: true }\x2CinGenerator: { configurable: true }\x2CinAsync: { configurable: true }\x2CcanAwait: { configurable: true }\x2CallowSuper: { configurable: true }\x2CallowDirectSuper: { configurable: true }\x2CtreatFunctionsAsVar: { configurable: true }\x2CallowNewDotTarget: { configurable: true }\x2CinClassStaticBlock: { configurable: true } };\x0d\n\x0d\n  Parser.prototype.parse = function parse () {\x0d\n    var node = this.options.program || this.startNode();\x0d\n    this.nextToken();\x0d\n    return this.parseTopLevel(node)\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\x0d\n\x0d\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\x0d\n\x0d\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\x0d\n\x0d\n  prototypeAccessors.canAwait.get = function () {\x0d\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\x0d\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\x0d\n    }\x0d\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.allowSuper.get = function () {\x0d\n    var ref = this.currentThisScope();\x0d\n      var flags = ref.flags;\x0d\n      var inClassFieldInit = ref.inClassFieldInit;\x0d\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\x0d\n\x0d\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\x0d\n\x0d\n  prototypeAccessors.allowNewDotTarget.get = function () {\x0d\n    var ref = this.currentThisScope();\x0d\n      var flags = ref.flags;\x0d\n      var inClassFieldInit = ref.inClassFieldInit;\x0d\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.inClassStaticBlock.get = function () {\x0d\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\x0d\n  };\x0d\n\x0d\n  Parser.extend = function extend () {\x0d\n      var plugins = []\x2C len = arguments.length;\x0d\n      while ( len-- ) plugins[ len ] = arguments[ len ];\x0d\n\x0d\n    var cls = this;\x0d\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\x0d\n    return cls\x0d\n  };\x0d\n\x0d\n  Parser.parse = function parse (input\x2C options) {\x0d\n    return new this(options\x2C input).parse()\x0d\n  };\x0d\n\x0d\n  Parser.parseExpressionAt = function parseExpressionAt (input\x2C pos\x2C options) {\x0d\n    var parser = new this(options\x2C input\x2C pos);\x0d\n    parser.nextToken();\x0d\n    return parser.parseExpression()\x0d\n  };\x0d\n\x0d\n  Parser.tokenizer = function tokenizer (input\x2C options) {\x0d\n    return new this(options\x2C input)\x0d\n  };\x0d\n\x0d\n  Object.defineProperties( Parser.prototype\x2C prototypeAccessors );\x0d\n\x0d\n  var pp$9 = Parser.prototype;\x0d\n\x0d\n  // ## Parser utilities\x0d\n\x0d\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|"((?:\\\\.|[^"\\\\])*?)")/;\x0d\n  pp$9.strictDirective = function(start) {\x0d\n    if (this.options.ecmaVersion < 5) { return false }\x0d\n    for (;;) {\x0d\n      // Try to find string literal.\x0d\n      skipWhiteSpace.lastIndex = start;\x0d\n      start += skipWhiteSpace.exec(this.input)[0].length;\x0d\n      var match = literal.exec(this.input.slice(start));\x0d\n      if (!match) { return false }\x0d\n      if ((match[1] || match[2]) === "use strict") {\x0d\n        skipWhiteSpace.lastIndex = start + match[0].length;\x0d\n        var spaceAfter = skipWhiteSpace.exec(this.input)\x2C end = spaceAfter.index + spaceAfter[0].length;\x0d\n        var next = this.input.charAt(end);\x0d\n        return next === ";" || next === "}" ||\x0d\n          (lineBreak.test(spaceAfter[0]) &&\x0d\n           !(/[(`.[+\\-/*%<>=\x2C?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "="))\x0d\n      }\x0d\n      start += match[0].length;\x0d\n\x0d\n      // Skip semicolon\x2C if any.\x0d\n      skipWhiteSpace.lastIndex = start;\x0d\n      start += skipWhiteSpace.exec(this.input)[0].length;\x0d\n      if (this.input[start] === ";")\x0d\n        { start++; }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Predicate that tests whether the next token is of the given\x0d\n  // type\x2C and if yes\x2C consumes it as a side effect.\x0d\n\x0d\n  pp$9.eat = function(type) {\x0d\n    if (this.type === type) {\x0d\n      this.next();\x0d\n      return true\x0d\n    } else {\x0d\n      return false\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Tests whether parsed token is a contextual keyword.\x0d\n\x0d\n  pp$9.isContextual = function(name) {\x0d\n    return this.type === types$1.name && this.value === name && !this.containsEsc\x0d\n  };\x0d\n\x0d\n  // Consumes contextual keyword if possible.\x0d\n\x0d\n  pp$9.eatContextual = function(name) {\x0d\n    if (!this.isContextual(name)) { return false }\x0d\n    this.next();\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Asserts that following token is given contextual keyword.\x0d\n\x0d\n  pp$9.expectContextual = function(name) {\x0d\n    if (!this.eatContextual(name)) { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  // Test whether a semicolon can be inserted at the current position.\x0d\n\x0d\n  pp$9.canInsertSemicolon = function() {\x0d\n    return this.type === types$1.eof ||\x0d\n      this.type === types$1.braceR ||\x0d\n      lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))\x0d\n  };\x0d\n\x0d\n  pp$9.insertSemicolon = function() {\x0d\n    if (this.canInsertSemicolon()) {\x0d\n      if (this.options.onInsertedSemicolon)\x0d\n        { this.options.onInsertedSemicolon(this.lastTokEnd\x2C this.lastTokEndLoc); }\x0d\n      return true\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Consume a semicolon\x2C or\x2C failing that\x2C see if we are allowed to\x0d\n  // pretend that there is a semicolon at this position.\x0d\n\x0d\n  pp$9.semicolon = function() {\x0d\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  pp$9.afterTrailingComma = function(tokType\x2C notNext) {\x0d\n    if (this.type === tokType) {\x0d\n      if (this.options.onTrailingComma)\x0d\n        { this.options.onTrailingComma(this.lastTokStart\x2C this.lastTokStartLoc); }\x0d\n      if (!notNext)\x0d\n        { this.next(); }\x0d\n      return true\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Expect a token of a given type. If found\x2C consume it\x2C otherwise\x2C\x0d\n  // raise an unexpected token error.\x0d\n\x0d\n  pp$9.expect = function(type) {\x0d\n    this.eat(type) || this.unexpected();\x0d\n  };\x0d\n\x0d\n  // Raise an unexpected token error.\x0d\n\x0d\n  pp$9.unexpected = function(pos) {\x0d\n    this.raise(pos != null ? pos : this.start\x2C "Unexpected token");\x0d\n  };\x0d\n\x0d\n  var DestructuringErrors = function DestructuringErrors() {\x0d\n    this.shorthandAssign =\x0d\n    this.trailingComma =\x0d\n    this.parenthesizedAssign =\x0d\n    this.parenthesizedBind =\x0d\n    this.doubleProto =\x0d\n      -1;\x0d\n  };\x0d\n\x0d\n  pp$9.checkPatternErrors = function(refDestructuringErrors\x2C isAssign) {\x0d\n    if (!refDestructuringErrors) { return }\x0d\n    if (refDestructuringErrors.trailingComma > -1)\x0d\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma\x2C "Comma is not permitted after the rest element"); }\x0d\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\x0d\n    if (parens > -1) { this.raiseRecoverable(parens\x2C isAssign ? "Assigning to rvalue" : "Parenthesized pattern"); }\x0d\n  };\x0d\n\x0d\n  pp$9.checkExpressionErrors = function(refDestructuringErrors\x2C andThrow) {\x0d\n    if (!refDestructuringErrors) { return false }\x0d\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\x0d\n    var doubleProto = refDestructuringErrors.doubleProto;\x0d\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\x0d\n    if (shorthandAssign >= 0)\x0d\n      { this.raise(shorthandAssign\x2C "Shorthand property assignments are valid only in destructuring patterns"); }\x0d\n    if (doubleProto >= 0)\x0d\n      { this.raiseRecoverable(doubleProto\x2C "Redefinition of __proto__ property"); }\x0d\n  };\x0d\n\x0d\n  pp$9.checkYieldAwaitInDefaultParams = function() {\x0d\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\x0d\n      { this.raise(this.yieldPos\x2C "Yield expression cannot be a default value"); }\x0d\n    if (this.awaitPos)\x0d\n      { this.raise(this.awaitPos\x2C "Await expression cannot be a default value"); }\x0d\n  };\x0d\n\x0d\n  pp$9.isSimpleAssignTarget = function(expr) {\x0d\n    if (expr.type === "ParenthesizedExpression")\x0d\n      { return this.isSimpleAssignTarget(expr.expression) }\x0d\n    return expr.type === "Identifier" || expr.type === "MemberExpression"\x0d\n  };\x0d\n\x0d\n  var pp$8 = Parser.prototype;\x0d\n\x0d\n  // ### Statement parsing\x0d\n\x0d\n  // Parse a program. Initializes the parser\x2C reads any number of\x0d\n  // statements\x2C and wraps them in a Program node.  Optionally takes a\x0d\n  // `program` argument.  If present\x2C the statements will be appended\x0d\n  // to its body instead of creating a new node.\x0d\n\x0d\n  pp$8.parseTopLevel = function(node) {\x0d\n    var exports = Object.create(null);\x0d\n    if (!node.body) { node.body = []; }\x0d\n    while (this.type !== types$1.eof) {\x0d\n      var stmt = this.parseStatement(null\x2C true\x2C exports);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    if (this.inModule)\x0d\n      { for (var i = 0\x2C list = Object.keys(this.undefinedExports); i < list.length; i += 1)\x0d\n        {\x0d\n          var name = list[i];\x0d\n\x0d\n          this.raiseRecoverable(this.undefinedExports[name].start\x2C ("Export '" + name + "' is not defined"));\x0d\n        } }\x0d\n    this.adaptDirectivePrologue(node.body);\x0d\n    this.next();\x0d\n    node.sourceType = this.options.sourceType;\x0d\n    return this.finishNode(node\x2C "Program")\x0d\n  };\x0d\n\x0d\n  var loopLabel = {kind: "loop"}\x2C switchLabel = {kind: "switch"};\x0d\n\x0d\n  pp$8.isLet = function(context) {\x0d\n    if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }\x0d\n    skipWhiteSpace.lastIndex = this.pos;\x0d\n    var skip = skipWhiteSpace.exec(this.input);\x0d\n    var next = this.pos + skip[0].length\x2C nextCh = this.input.charCodeAt(next);\x0d\n    // For ambiguous cases\x2C determine if a LexicalDeclaration (or only a\x0d\n    // Statement) is allowed here. If context is not empty then only a Statement\x0d\n    // is allowed. However\x2C `let [` is an explicit negative lookahead for\x0d\n    // ExpressionStatement\x2C so special-case it first.\x0d\n    if (nextCh === 91 || nextCh === 92) { return true } // '['\x2C '/'\x0d\n    if (context) { return false }\x0d\n\x0d\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{'\x2C astral\x0d\n    if (isIdentifierStart(nextCh\x2C true)) {\x0d\n      var pos = next + 1;\x0d\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos)\x2C true)) { ++pos; }\x0d\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\x0d\n      var ident = this.input.slice(next\x2C pos);\x0d\n      if (!keywordRelationalOperator.test(ident)) { return true }\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // check 'async [no LineTerminator here] function'\x0d\n  // - 'async /*foo*/ function' is OK.\x0d\n  // - 'async /*\\n*/ function' is invalid.\x0d\n  pp$8.isAsyncFunction = function() {\x0d\n    if (this.options.ecmaVersion < 8 || !this.isContextual("async"))\x0d\n      { return false }\x0d\n\x0d\n    skipWhiteSpace.lastIndex = this.pos;\x0d\n    var skip = skipWhiteSpace.exec(this.input);\x0d\n    var next = this.pos + skip[0].length\x2C after;\x0d\n    return !lineBreak.test(this.input.slice(this.pos\x2C next)) &&\x0d\n      this.input.slice(next\x2C next + 8) === "function" &&\x0d\n      (next + 8 === this.input.length ||\x0d\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\x0d\n  };\x0d\n\x0d\n  // Parse a single statement.\x0d\n  //\x0d\n  // If expecting a statement and finding a slash operator\x2C parse a\x0d\n  // regular expression literal. This is to handle cases like\x0d\n  // `if (foo) /blah/.exec(foo)`\x2C where looking at the previous token\x0d\n  // does not help.\x0d\n\x0d\n  pp$8.parseStatement = function(context\x2C topLevel\x2C exports) {\x0d\n    var starttype = this.type\x2C node = this.startNode()\x2C kind;\x0d\n\x0d\n    if (this.isLet(context)) {\x0d\n      starttype = types$1._var;\x0d\n      kind = "let";\x0d\n    }\x0d\n\x0d\n    // Most types of statements are recognized by the keyword they\x0d\n    // start with. Many are trivial to parse\x2C some require a bit of\x0d\n    // complexity.\x0d\n\x0d\n    switch (starttype) {\x0d\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node\x2C starttype.keyword)\x0d\n    case types$1._debugger: return this.parseDebuggerStatement(node)\x0d\n    case types$1._do: return this.parseDoStatement(node)\x0d\n    case types$1._for: return this.parseForStatement(node)\x0d\n    case types$1._function:\x0d\n      // Function as sole body of either an if statement or a labeled statement\x0d\n      // works\x2C but not when it is part of a labeled statement that is the sole\x0d\n      // body of an if statement.\x0d\n      if ((context && (this.strict || context !== "if" && context !== "label")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\x0d\n      return this.parseFunctionStatement(node\x2C false\x2C !context)\x0d\n    case types$1._class:\x0d\n      if (context) { this.unexpected(); }\x0d\n      return this.parseClass(node\x2C true)\x0d\n    case types$1._if: return this.parseIfStatement(node)\x0d\n    case types$1._return: return this.parseReturnStatement(node)\x0d\n    case types$1._switch: return this.parseSwitchStatement(node)\x0d\n    case types$1._throw: return this.parseThrowStatement(node)\x0d\n    case types$1._try: return this.parseTryStatement(node)\x0d\n    case types$1._const: case types$1._var:\x0d\n      kind = kind || this.value;\x0d\n      if (context && kind !== "var") { this.unexpected(); }\x0d\n      return this.parseVarStatement(node\x2C kind)\x0d\n    case types$1._while: return this.parseWhileStatement(node)\x0d\n    case types$1._with: return this.parseWithStatement(node)\x0d\n    case types$1.braceL: return this.parseBlock(true\x2C node)\x0d\n    case types$1.semi: return this.parseEmptyStatement(node)\x0d\n    case types$1._export:\x0d\n    case types$1._import:\x0d\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\x0d\n        skipWhiteSpace.lastIndex = this.pos;\x0d\n        var skip = skipWhiteSpace.exec(this.input);\x0d\n        var next = this.pos + skip[0].length\x2C nextCh = this.input.charCodeAt(next);\x0d\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\x0d\n          { return this.parseExpressionStatement(node\x2C this.parseExpression()) }\x0d\n      }\x0d\n\x0d\n      if (!this.options.allowImportExportEverywhere) {\x0d\n        if (!topLevel)\x0d\n          { this.raise(this.start\x2C "'import' and 'export' may only appear at the top level"); }\x0d\n        if (!this.inModule)\x0d\n          { this.raise(this.start\x2C "'import' and 'export' may appear only with 'sourceType: module'"); }\x0d\n      }\x0d\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node\x2C exports)\x0d\n\x0d\n      // If the statement does not start with a statement keyword or a\x0d\n      // brace\x2C it's an ExpressionStatement or LabeledStatement. We\x0d\n      // simply start parsing an expression\x2C and afterwards\x2C if the\x0d\n      // next token is a colon and the expression was a simple\x0d\n      // Identifier node\x2C we switch to interpreting it as a label.\x0d\n    default:\x0d\n      if (this.isAsyncFunction()) {\x0d\n        if (context) { this.unexpected(); }\x0d\n        this.next();\x0d\n        return this.parseFunctionStatement(node\x2C true\x2C !context)\x0d\n      }\x0d\n\x0d\n      var maybeName = this.value\x2C expr = this.parseExpression();\x0d\n      if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon))\x0d\n        { return this.parseLabeledStatement(node\x2C maybeName\x2C expr\x2C context) }\x0d\n      else { return this.parseExpressionStatement(node\x2C expr) }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseBreakContinueStatement = function(node\x2C keyword) {\x0d\n    var isBreak = keyword === "break";\x0d\n    this.next();\x0d\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\x0d\n    else if (this.type !== types$1.name) { this.unexpected(); }\x0d\n    else {\x0d\n      node.label = this.parseIdent();\x0d\n      this.semicolon();\x0d\n    }\x0d\n\x0d\n    // Verify that there is an actual destination to break or\x0d\n    // continue to.\x0d\n    var i = 0;\x0d\n    for (; i < this.labels.length; ++i) {\x0d\n      var lab = this.labels[i];\x0d\n      if (node.label == null || lab.name === node.label.name) {\x0d\n        if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }\x0d\n        if (node.label && isBreak) { break }\x0d\n      }\x0d\n    }\x0d\n    if (i === this.labels.length) { this.raise(node.start\x2C "Unsyntactic " + keyword); }\x0d\n    return this.finishNode(node\x2C isBreak ? "BreakStatement" : "ContinueStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseDebuggerStatement = function(node) {\x0d\n    this.next();\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "DebuggerStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseDoStatement = function(node) {\x0d\n    this.next();\x0d\n    this.labels.push(loopLabel);\x0d\n    node.body = this.parseStatement("do");\x0d\n    this.labels.pop();\x0d\n    this.expect(types$1._while);\x0d\n    node.test = this.parseParenExpression();\x0d\n    if (this.options.ecmaVersion >= 6)\x0d\n      { this.eat(types$1.semi); }\x0d\n    else\x0d\n      { this.semicolon(); }\x0d\n    return this.finishNode(node\x2C "DoWhileStatement")\x0d\n  };\x0d\n\x0d\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\x0d\n  // loop is non-trivial. Basically\x2C we have to parse the init `var`\x0d\n  // statement or expression\x2C disallowing the `in` operator (see\x0d\n  // the second parameter to `parseExpression`)\x2C and then check\x0d\n  // whether the next token is `in` or `of`. When there is no init\x0d\n  // part (semicolon immediately after the opening parenthesis)\x2C it\x0d\n  // is a regular `for` loop.\x0d\n\x0d\n  pp$8.parseForStatement = function(node) {\x0d\n    this.next();\x0d\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await")) ? this.lastTokStart : -1;\x0d\n    this.labels.push(loopLabel);\x0d\n    this.enterScope(0);\x0d\n    this.expect(types$1.parenL);\x0d\n    if (this.type === types$1.semi) {\x0d\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n      return this.parseFor(node\x2C null)\x0d\n    }\x0d\n    var isLet = this.isLet();\x0d\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\x0d\n      var init$1 = this.startNode()\x2C kind = isLet ? "let" : this.value;\x0d\n      this.next();\x0d\n      this.parseVar(init$1\x2C true\x2C kind);\x0d\n      this.finishNode(init$1\x2C "VariableDeclaration");\x0d\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1) {\x0d\n        if (this.options.ecmaVersion >= 9) {\x0d\n          if (this.type === types$1._in) {\x0d\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n          } else { node.await = awaitAt > -1; }\x0d\n        }\x0d\n        return this.parseForIn(node\x2C init$1)\x0d\n      }\x0d\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n      return this.parseFor(node\x2C init$1)\x0d\n    }\x0d\n    var startsWithLet = this.isContextual("let")\x2C isForOf = false;\x0d\n    var refDestructuringErrors = new DestructuringErrors;\x0d\n    var init = this.parseExpression(awaitAt > -1 ? "await" : true\x2C refDestructuringErrors);\x0d\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        if (this.type === types$1._in) {\x0d\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n        } else { node.await = awaitAt > -1; }\x0d\n      }\x0d\n      if (startsWithLet && isForOf) { this.raise(init.start\x2C "The left-hand side of a for-of loop may not start with 'let'."); }\x0d\n      this.toAssignable(init\x2C false\x2C refDestructuringErrors);\x0d\n      this.checkLValPattern(init);\x0d\n      return this.parseForIn(node\x2C init)\x0d\n    } else {\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n    }\x0d\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n    return this.parseFor(node\x2C init)\x0d\n  };\x0d\n\x0d\n  pp$8.parseFunctionStatement = function(node\x2C isAsync\x2C declarationPosition) {\x0d\n    this.next();\x0d\n    return this.parseFunction(node\x2C FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT)\x2C false\x2C isAsync)\x0d\n  };\x0d\n\x0d\n  pp$8.parseIfStatement = function(node) {\x0d\n    this.next();\x0d\n    node.test = this.parseParenExpression();\x0d\n    // allow function declarations in branches\x2C but only in non-strict mode\x0d\n    node.consequent = this.parseStatement("if");\x0d\n    node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;\x0d\n    return this.finishNode(node\x2C "IfStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseReturnStatement = function(node) {\x0d\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\x0d\n      { this.raise(this.start\x2C "'return' outside of function"); }\x0d\n    this.next();\x0d\n\x0d\n    // In `return` (and `break`/`continue`)\x2C the keywords with\x0d\n    // optional arguments\x2C we eagerly look for a semicolon or the\x0d\n    // possibility to insert one.\x0d\n\x0d\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\x0d\n    else { node.argument = this.parseExpression(); this.semicolon(); }\x0d\n    return this.finishNode(node\x2C "ReturnStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseSwitchStatement = function(node) {\x0d\n    this.next();\x0d\n    node.discriminant = this.parseParenExpression();\x0d\n    node.cases = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    this.labels.push(switchLabel);\x0d\n    this.enterScope(0);\x0d\n\x0d\n    // Statements under must be grouped (by label) in SwitchCase\x0d\n    // nodes. `cur` is used to keep the node that we are currently\x0d\n    // adding statements to.\x0d\n\x0d\n    var cur;\x0d\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\x0d\n      if (this.type === types$1._case || this.type === types$1._default) {\x0d\n        var isCase = this.type === types$1._case;\x0d\n        if (cur) { this.finishNode(cur\x2C "SwitchCase"); }\x0d\n        node.cases.push(cur = this.startNode());\x0d\n        cur.consequent = [];\x0d\n        this.next();\x0d\n        if (isCase) {\x0d\n          cur.test = this.parseExpression();\x0d\n        } else {\x0d\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart\x2C "Multiple default clauses"); }\x0d\n          sawDefault = true;\x0d\n          cur.test = null;\x0d\n        }\x0d\n        this.expect(types$1.colon);\x0d\n      } else {\x0d\n        if (!cur) { this.unexpected(); }\x0d\n        cur.consequent.push(this.parseStatement(null));\x0d\n      }\x0d\n    }\x0d\n    this.exitScope();\x0d\n    if (cur) { this.finishNode(cur\x2C "SwitchCase"); }\x0d\n    this.next(); // Closing brace\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "SwitchStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseThrowStatement = function(node) {\x0d\n    this.next();\x0d\n    if (lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start)))\x0d\n      { this.raise(this.lastTokEnd\x2C "Illegal newline after throw"); }\x0d\n    node.argument = this.parseExpression();\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ThrowStatement")\x0d\n  };\x0d\n\x0d\n  // Reused empty array added for node fields that are always empty.\x0d\n\x0d\n  var empty$1 = [];\x0d\n\x0d\n  pp$8.parseTryStatement = function(node) {\x0d\n    this.next();\x0d\n    node.block = this.parseBlock();\x0d\n    node.handler = null;\x0d\n    if (this.type === types$1._catch) {\x0d\n      var clause = this.startNode();\x0d\n      this.next();\x0d\n      if (this.eat(types$1.parenL)) {\x0d\n        clause.param = this.parseBindingAtom();\x0d\n        var simple = clause.param.type === "Identifier";\x0d\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\x0d\n        this.checkLValPattern(clause.param\x2C simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\x0d\n        this.expect(types$1.parenR);\x0d\n      } else {\x0d\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\x0d\n        clause.param = null;\x0d\n        this.enterScope(0);\x0d\n      }\x0d\n      clause.body = this.parseBlock(false);\x0d\n      this.exitScope();\x0d\n      node.handler = this.finishNode(clause\x2C "CatchClause");\x0d\n    }\x0d\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\x0d\n    if (!node.handler && !node.finalizer)\x0d\n      { this.raise(node.start\x2C "Missing catch or finally clause"); }\x0d\n    return this.finishNode(node\x2C "TryStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseVarStatement = function(node\x2C kind) {\x0d\n    this.next();\x0d\n    this.parseVar(node\x2C false\x2C kind);\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "VariableDeclaration")\x0d\n  };\x0d\n\x0d\n  pp$8.parseWhileStatement = function(node) {\x0d\n    this.next();\x0d\n    node.test = this.parseParenExpression();\x0d\n    this.labels.push(loopLabel);\x0d\n    node.body = this.parseStatement("while");\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "WhileStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseWithStatement = function(node) {\x0d\n    if (this.strict) { this.raise(this.start\x2C "'with' in strict mode"); }\x0d\n    this.next();\x0d\n    node.object = this.parseParenExpression();\x0d\n    node.body = this.parseStatement("with");\x0d\n    return this.finishNode(node\x2C "WithStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseEmptyStatement = function(node) {\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "EmptyStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseLabeledStatement = function(node\x2C maybeName\x2C expr\x2C context) {\x0d\n    for (var i$1 = 0\x2C list = this.labels; i$1 < list.length; i$1 += 1)\x0d\n      {\x0d\n      var label = list[i$1];\x0d\n\x0d\n      if (label.name === maybeName)\x0d\n        { this.raise(expr.start\x2C "Label '" + maybeName + "' is already declared");\x0d\n    } }\x0d\n    var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;\x0d\n    for (var i = this.labels.length - 1; i >= 0; i--) {\x0d\n      var label$1 = this.labels[i];\x0d\n      if (label$1.statementStart === node.start) {\x0d\n        // Update information about previous labels on this node\x0d\n        label$1.statementStart = this.start;\x0d\n        label$1.kind = kind;\x0d\n      } else { break }\x0d\n    }\x0d\n    this.labels.push({name: maybeName\x2C kind: kind\x2C statementStart: this.start});\x0d\n    node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");\x0d\n    this.labels.pop();\x0d\n    node.label = expr;\x0d\n    return this.finishNode(node\x2C "LabeledStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseExpressionStatement = function(node\x2C expr) {\x0d\n    node.expression = expr;\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ExpressionStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a semicolon-enclosed block of statements\x2C handling `"use\x0d\n  // strict"` declarations when `allowStrict` is true (used for\x0d\n  // function bodies).\x0d\n\x0d\n  pp$8.parseBlock = function(createNewLexicalScope\x2C node\x2C exitStrict) {\x0d\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\x0d\n    if ( node === void 0 ) node = this.startNode();\x0d\n\x0d\n    node.body = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    if (createNewLexicalScope) { this.enterScope(0); }\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var stmt = this.parseStatement(null);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    if (exitStrict) { this.strict = false; }\x0d\n    this.next();\x0d\n    if (createNewLexicalScope) { this.exitScope(); }\x0d\n    return this.finishNode(node\x2C "BlockStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a regular `for` loop. The disambiguation code in\x0d\n  // `parseStatement` will already have parsed the init statement or\x0d\n  // expression.\x0d\n\x0d\n  pp$8.parseFor = function(node\x2C init) {\x0d\n    node.init = init;\x0d\n    this.expect(types$1.semi);\x0d\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\x0d\n    this.expect(types$1.semi);\x0d\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\x0d\n    this.expect(types$1.parenR);\x0d\n    node.body = this.parseStatement("for");\x0d\n    this.exitScope();\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "ForStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a `for`/`in` and `for`/`of` loop\x2C which are almost\x0d\n  // same from parser's perspective.\x0d\n\x0d\n  pp$8.parseForIn = function(node\x2C init) {\x0d\n    var isForIn = this.type === types$1._in;\x0d\n    this.next();\x0d\n\x0d\n    if (\x0d\n      init.type === "VariableDeclaration" &&\x0d\n      init.declarations[0].init != null &&\x0d\n      (\x0d\n        !isForIn ||\x0d\n        this.options.ecmaVersion < 8 ||\x0d\n        this.strict ||\x0d\n        init.kind !== "var" ||\x0d\n        init.declarations[0].id.type !== "Identifier"\x0d\n      )\x0d\n    ) {\x0d\n      this.raise(\x0d\n        init.start\x2C\x0d\n        ((isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer")\x0d\n      );\x0d\n    }\x0d\n    node.left = init;\x0d\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\x0d\n    this.expect(types$1.parenR);\x0d\n    node.body = this.parseStatement("for");\x0d\n    this.exitScope();\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C isForIn ? "ForInStatement" : "ForOfStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a list of variable declarations.\x0d\n\x0d\n  pp$8.parseVar = function(node\x2C isFor\x2C kind) {\x0d\n    node.declarations = [];\x0d\n    node.kind = kind;\x0d\n    for (;;) {\x0d\n      var decl = this.startNode();\x0d\n      this.parseVarId(decl\x2C kind);\x0d\n      if (this.eat(types$1.eq)) {\x0d\n        decl.init = this.parseMaybeAssign(isFor);\x0d\n      } else if (kind === "const" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of")))) {\x0d\n        this.unexpected();\x0d\n      } else if (decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {\x0d\n        this.raise(this.lastTokEnd\x2C "Complex binding patterns require an initialization value");\x0d\n      } else {\x0d\n        decl.init = null;\x0d\n      }\x0d\n      node.declarations.push(this.finishNode(decl\x2C "VariableDeclarator"));\x0d\n      if (!this.eat(types$1.comma)) { break }\x0d\n    }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$8.parseVarId = function(decl\x2C kind) {\x0d\n    decl.id = this.parseBindingAtom();\x0d\n    this.checkLValPattern(decl.id\x2C kind === "var" ? BIND_VAR : BIND_LEXICAL\x2C false);\x0d\n  };\x0d\n\x0d\n  var FUNC_STATEMENT = 1\x2C FUNC_HANGING_STATEMENT = 2\x2C FUNC_NULLABLE_ID = 4;\x0d\n\x0d\n  // Parse a function declaration or literal (depending on the\x0d\n  // `statement & FUNC_STATEMENT`).\x0d\n\x0d\n  // Remove `allowExpressionBody` for 7.0.0\x2C as it is only called with false\x0d\n  pp$8.parseFunction = function(node\x2C statement\x2C allowExpressionBody\x2C isAsync\x2C forInit) {\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\x0d\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\x0d\n        { this.unexpected(); }\x0d\n      node.generator = this.eat(types$1.star);\x0d\n    }\x0d\n    if (this.options.ecmaVersion >= 8)\x0d\n      { node.async = !!isAsync; }\x0d\n\x0d\n    if (statement & FUNC_STATEMENT) {\x0d\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\x0d\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\x0d\n        // If it is a regular function declaration in sloppy mode\x2C then it is\x0d\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise\x2C the binding\x0d\n        // mode depends on properties of the current scope (see\x0d\n        // treatFunctionsAsVar).\x0d\n        { this.checkLValSimple(node.id\x2C (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\x0d\n    }\x0d\n\x0d\n    var oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n    this.enterScope(functionFlags(node.async\x2C node.generator));\x0d\n\x0d\n    if (!(statement & FUNC_STATEMENT))\x0d\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\x0d\n\x0d\n    this.parseFunctionParams(node);\x0d\n    this.parseFunctionBody(node\x2C allowExpressionBody\x2C false\x2C forInit);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C (statement & FUNC_STATEMENT) ? "FunctionDeclaration" : "FunctionExpression")\x0d\n  };\x0d\n\x0d\n  pp$8.parseFunctionParams = function(node) {\x0d\n    this.expect(types$1.parenL);\x0d\n    node.params = this.parseBindingList(types$1.parenR\x2C false\x2C this.options.ecmaVersion >= 8);\x0d\n    this.checkYieldAwaitInDefaultParams();\x0d\n  };\x0d\n\x0d\n  // Parse a class declaration or literal (depending on the\x0d\n  // `isStatement` parameter).\x0d\n\x0d\n  pp$8.parseClass = function(node\x2C isStatement) {\x0d\n    this.next();\x0d\n\x0d\n    // ecma-262 14.6 Class Definitions\x0d\n    // A class definition is always strict mode code.\x0d\n    var oldStrict = this.strict;\x0d\n    this.strict = true;\x0d\n\x0d\n    this.parseClassId(node\x2C isStatement);\x0d\n    this.parseClassSuper(node);\x0d\n    var privateNameMap = this.enterClassBody();\x0d\n    var classBody = this.startNode();\x0d\n    var hadConstructor = false;\x0d\n    classBody.body = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var element = this.parseClassElement(node.superClass !== null);\x0d\n      if (element) {\x0d\n        classBody.body.push(element);\x0d\n        if (element.type === "MethodDefinition" && element.kind === "constructor") {\x0d\n          if (hadConstructor) { this.raise(element.start\x2C "Duplicate constructor in the same class"); }\x0d\n          hadConstructor = true;\x0d\n        } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap\x2C element)) {\x0d\n          this.raiseRecoverable(element.key.start\x2C ("Identifier '#" + (element.key.name) + "' has already been declared"));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    this.strict = oldStrict;\x0d\n    this.next();\x0d\n    node.body = this.finishNode(classBody\x2C "ClassBody");\x0d\n    this.exitClassBody();\x0d\n    return this.finishNode(node\x2C isStatement ? "ClassDeclaration" : "ClassExpression")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\x0d\n    if (this.eat(types$1.semi)) { return null }\x0d\n\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    var node = this.startNode();\x0d\n    var keyName = "";\x0d\n    var isGenerator = false;\x0d\n    var isAsync = false;\x0d\n    var kind = "method";\x0d\n    var isStatic = false;\x0d\n\x0d\n    if (this.eatContextual("static")) {\x0d\n      // Parse static init block\x0d\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\x0d\n        this.parseClassStaticBlock(node);\x0d\n        return node\x0d\n      }\x0d\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\x0d\n        isStatic = true;\x0d\n      } else {\x0d\n        keyName = "static";\x0d\n      }\x0d\n    }\x0d\n    node.static = isStatic;\x0d\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {\x0d\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\x0d\n        isAsync = true;\x0d\n      } else {\x0d\n        keyName = "async";\x0d\n      }\x0d\n    }\x0d\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\x0d\n      isGenerator = true;\x0d\n    }\x0d\n    if (!keyName && !isAsync && !isGenerator) {\x0d\n      var lastValue = this.value;\x0d\n      if (this.eatContextual("get") || this.eatContextual("set")) {\x0d\n        if (this.isClassElementNameStart()) {\x0d\n          kind = lastValue;\x0d\n        } else {\x0d\n          keyName = lastValue;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Parse element name\x0d\n    if (keyName) {\x0d\n      // 'async'\x2C 'get'\x2C 'set'\x2C or 'static' were not a keyword contextually.\x0d\n      // The last token is any of those. Make it the element name.\x0d\n      node.computed = false;\x0d\n      node.key = this.startNodeAt(this.lastTokStart\x2C this.lastTokStartLoc);\x0d\n      node.key.name = keyName;\x0d\n      this.finishNode(node.key\x2C "Identifier");\x0d\n    } else {\x0d\n      this.parseClassElementName(node);\x0d\n    }\x0d\n\x0d\n    // Parse element value\x0d\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {\x0d\n      var isConstructor = !node.static && checkKeyName(node\x2C "constructor");\x0d\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\x0d\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\x0d\n      if (isConstructor && kind !== "method") { this.raise(node.key.start\x2C "Constructor can't have get/set modifier"); }\x0d\n      node.kind = isConstructor ? "constructor" : kind;\x0d\n      this.parseClassMethod(node\x2C isGenerator\x2C isAsync\x2C allowsDirectSuper);\x0d\n    } else {\x0d\n      this.parseClassField(node);\x0d\n    }\x0d\n\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$8.isClassElementNameStart = function() {\x0d\n    return (\x0d\n      this.type === types$1.name ||\x0d\n      this.type === types$1.privateId ||\x0d\n      this.type === types$1.num ||\x0d\n      this.type === types$1.string ||\x0d\n      this.type === types$1.bracketL ||\x0d\n      this.type.keyword\x0d\n    )\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassElementName = function(element) {\x0d\n    if (this.type === types$1.privateId) {\x0d\n      if (this.value === "constructor") {\x0d\n        this.raise(this.start\x2C "Classes can't have an element named '#constructor'");\x0d\n      }\x0d\n      element.computed = false;\x0d\n      element.key = this.parsePrivateIdent();\x0d\n    } else {\x0d\n      this.parsePropertyName(element);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassMethod = function(method\x2C isGenerator\x2C isAsync\x2C allowsDirectSuper) {\x0d\n    // Check key and flags\x0d\n    var key = method.key;\x0d\n    if (method.kind === "constructor") {\x0d\n      if (isGenerator) { this.raise(key.start\x2C "Constructor can't be a generator"); }\x0d\n      if (isAsync) { this.raise(key.start\x2C "Constructor can't be an async method"); }\x0d\n    } else if (method.static && checkKeyName(method\x2C "prototype")) {\x0d\n      this.raise(key.start\x2C "Classes may not have a static property named prototype");\x0d\n    }\x0d\n\x0d\n    // Parse value\x0d\n    var value = method.value = this.parseMethod(isGenerator\x2C isAsync\x2C allowsDirectSuper);\x0d\n\x0d\n    // Check value\x0d\n    if (method.kind === "get" && value.params.length !== 0)\x0d\n      { this.raiseRecoverable(value.start\x2C "getter should have no params"); }\x0d\n    if (method.kind === "set" && value.params.length !== 1)\x0d\n      { this.raiseRecoverable(value.start\x2C "setter should have exactly one param"); }\x0d\n    if (method.kind === "set" && value.params[0].type === "RestElement")\x0d\n      { this.raiseRecoverable(value.params[0].start\x2C "Setter cannot use rest params"); }\x0d\n\x0d\n    return this.finishNode(method\x2C "MethodDefinition")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassField = function(field) {\x0d\n    if (checkKeyName(field\x2C "constructor")) {\x0d\n      this.raise(field.key.start\x2C "Classes can't have a field named 'constructor'");\x0d\n    } else if (field.static && checkKeyName(field\x2C "prototype")) {\x0d\n      this.raise(field.key.start\x2C "Classes can't have a static field named 'prototype'");\x0d\n    }\x0d\n\x0d\n    if (this.eat(types$1.eq)) {\x0d\n      // To raise SyntaxError if 'arguments' exists in the initializer.\x0d\n      var scope = this.currentThisScope();\x0d\n      var inClassFieldInit = scope.inClassFieldInit;\x0d\n      scope.inClassFieldInit = true;\x0d\n      field.value = this.parseMaybeAssign();\x0d\n      scope.inClassFieldInit = inClassFieldInit;\x0d\n    } else {\x0d\n      field.value = null;\x0d\n    }\x0d\n    this.semicolon();\x0d\n\x0d\n    return this.finishNode(field\x2C "PropertyDefinition")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassStaticBlock = function(node) {\x0d\n    node.body = [];\x0d\n\x0d\n    var oldLabels = this.labels;\x0d\n    this.labels = [];\x0d\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var stmt = this.parseStatement(null);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    this.next();\x0d\n    this.exitScope();\x0d\n    this.labels = oldLabels;\x0d\n\x0d\n    return this.finishNode(node\x2C "StaticBlock")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassId = function(node\x2C isStatement) {\x0d\n    if (this.type === types$1.name) {\x0d\n      node.id = this.parseIdent();\x0d\n      if (isStatement)\x0d\n        { this.checkLValSimple(node.id\x2C BIND_LEXICAL\x2C false); }\x0d\n    } else {\x0d\n      if (isStatement === true)\x0d\n        { this.unexpected(); }\x0d\n      node.id = null;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassSuper = function(node) {\x0d\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null\x2C false) : null;\x0d\n  };\x0d\n\x0d\n  pp$8.enterClassBody = function() {\x0d\n    var element = {declared: Object.create(null)\x2C used: []};\x0d\n    this.privateNameStack.push(element);\x0d\n    return element.declared\x0d\n  };\x0d\n\x0d\n  pp$8.exitClassBody = function() {\x0d\n    var ref = this.privateNameStack.pop();\x0d\n    var declared = ref.declared;\x0d\n    var used = ref.used;\x0d\n    var len = this.privateNameStack.length;\x0d\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\x0d\n    for (var i = 0; i < used.length; ++i) {\x0d\n      var id = used[i];\x0d\n      if (!hasOwn(declared\x2C id.name)) {\x0d\n        if (parent) {\x0d\n          parent.used.push(id);\x0d\n        } else {\x0d\n          this.raiseRecoverable(id.start\x2C ("Private field '#" + (id.name) + "' must be declared in an enclosing class"));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function isPrivateNameConflicted(privateNameMap\x2C element) {\x0d\n    var name = element.key.name;\x0d\n    var curr = privateNameMap[name];\x0d\n\x0d\n    var next = "true";\x0d\n    if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {\x0d\n      next = (element.static ? "s" : "i") + element.kind;\x0d\n    }\x0d\n\x0d\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\x0d\n    if (\x0d\n      curr === "iget" && next === "iset" ||\x0d\n      curr === "iset" && next === "iget" ||\x0d\n      curr === "sget" && next === "sset" ||\x0d\n      curr === "sset" && next === "sget"\x0d\n    ) {\x0d\n      privateNameMap[name] = "true";\x0d\n      return false\x0d\n    } else if (!curr) {\x0d\n      privateNameMap[name] = next;\x0d\n      return false\x0d\n    } else {\x0d\n      return true\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function checkKeyName(node\x2C name) {\x0d\n    var computed = node.computed;\x0d\n    var key = node.key;\x0d\n    return !computed && (\x0d\n      key.type === "Identifier" && key.name === name ||\x0d\n      key.type === "Literal" && key.value === name\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // Parses module export declaration.\x0d\n\x0d\n  pp$8.parseExport = function(node\x2C exports) {\x0d\n    this.next();\x0d\n    // export * from '...'\x0d\n    if (this.eat(types$1.star)) {\x0d\n      if (this.options.ecmaVersion >= 11) {\x0d\n        if (this.eatContextual("as")) {\x0d\n          node.exported = this.parseModuleExportName();\x0d\n          this.checkExport(exports\x2C node.exported\x2C this.lastTokStart);\x0d\n        } else {\x0d\n          node.exported = null;\x0d\n        }\x0d\n      }\x0d\n      this.expectContextual("from");\x0d\n      if (this.type !== types$1.string) { this.unexpected(); }\x0d\n      node.source = this.parseExprAtom();\x0d\n      this.semicolon();\x0d\n      return this.finishNode(node\x2C "ExportAllDeclaration")\x0d\n    }\x0d\n    if (this.eat(types$1._default)) { // export default ...\x0d\n      this.checkExport(exports\x2C "default"\x2C this.lastTokStart);\x0d\n      var isAsync;\x0d\n      if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\x0d\n        var fNode = this.startNode();\x0d\n        this.next();\x0d\n        if (isAsync) { this.next(); }\x0d\n        node.declaration = this.parseFunction(fNode\x2C FUNC_STATEMENT | FUNC_NULLABLE_ID\x2C false\x2C isAsync);\x0d\n      } else if (this.type === types$1._class) {\x0d\n        var cNode = this.startNode();\x0d\n        node.declaration = this.parseClass(cNode\x2C "nullableID");\x0d\n      } else {\x0d\n        node.declaration = this.parseMaybeAssign();\x0d\n        this.semicolon();\x0d\n      }\x0d\n      return this.finishNode(node\x2C "ExportDefaultDeclaration")\x0d\n    }\x0d\n    // export var|const|let|function|class ...\x0d\n    if (this.shouldParseExportStatement()) {\x0d\n      node.declaration = this.parseStatement(null);\x0d\n      if (node.declaration.type === "VariableDeclaration")\x0d\n        { this.checkVariableExport(exports\x2C node.declaration.declarations); }\x0d\n      else\x0d\n        { this.checkExport(exports\x2C node.declaration.id\x2C node.declaration.id.start); }\x0d\n      node.specifiers = [];\x0d\n      node.source = null;\x0d\n    } else { // export { x\x2C y as z } [from '...']\x0d\n      node.declaration = null;\x0d\n      node.specifiers = this.parseExportSpecifiers(exports);\x0d\n      if (this.eatContextual("from")) {\x0d\n        if (this.type !== types$1.string) { this.unexpected(); }\x0d\n        node.source = this.parseExprAtom();\x0d\n      } else {\x0d\n        for (var i = 0\x2C list = node.specifiers; i < list.length; i += 1) {\x0d\n          // check for keywords used as local names\x0d\n          var spec = list[i];\x0d\n\x0d\n          this.checkUnreserved(spec.local);\x0d\n          // check if export is defined\x0d\n          this.checkLocalExport(spec.local);\x0d\n\x0d\n          if (spec.local.type === "Literal") {\x0d\n            this.raise(spec.local.start\x2C "A string literal cannot be used as an exported binding without `from`.");\x0d\n          }\x0d\n        }\x0d\n\x0d\n        node.source = null;\x0d\n      }\x0d\n      this.semicolon();\x0d\n    }\x0d\n    return this.finishNode(node\x2C "ExportNamedDeclaration")\x0d\n  };\x0d\n\x0d\n  pp$8.checkExport = function(exports\x2C name\x2C pos) {\x0d\n    if (!exports) { return }\x0d\n    if (typeof name !== "string")\x0d\n      { name = name.type === "Identifier" ? name.name : name.value; }\x0d\n    if (hasOwn(exports\x2C name))\x0d\n      { this.raiseRecoverable(pos\x2C "Duplicate export '" + name + "'"); }\x0d\n    exports[name] = true;\x0d\n  };\x0d\n\x0d\n  pp$8.checkPatternExport = function(exports\x2C pat) {\x0d\n    var type = pat.type;\x0d\n    if (type === "Identifier")\x0d\n      { this.checkExport(exports\x2C pat\x2C pat.start); }\x0d\n    else if (type === "ObjectPattern")\x0d\n      { for (var i = 0\x2C list = pat.properties; i < list.length; i += 1)\x0d\n        {\x0d\n          var prop = list[i];\x0d\n\x0d\n          this.checkPatternExport(exports\x2C prop);\x0d\n        } }\x0d\n    else if (type === "ArrayPattern")\x0d\n      { for (var i$1 = 0\x2C list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\x0d\n        var elt = list$1[i$1];\x0d\n\x0d\n          if (elt) { this.checkPatternExport(exports\x2C elt); }\x0d\n      } }\x0d\n    else if (type === "Property")\x0d\n      { this.checkPatternExport(exports\x2C pat.value); }\x0d\n    else if (type === "AssignmentPattern")\x0d\n      { this.checkPatternExport(exports\x2C pat.left); }\x0d\n    else if (type === "RestElement")\x0d\n      { this.checkPatternExport(exports\x2C pat.argument); }\x0d\n    else if (type === "ParenthesizedExpression")\x0d\n      { this.checkPatternExport(exports\x2C pat.expression); }\x0d\n  };\x0d\n\x0d\n  pp$8.checkVariableExport = function(exports\x2C decls) {\x0d\n    if (!exports) { return }\x0d\n    for (var i = 0\x2C list = decls; i < list.length; i += 1)\x0d\n      {\x0d\n      var decl = list[i];\x0d\n\x0d\n      this.checkPatternExport(exports\x2C decl.id);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.shouldParseExportStatement = function() {\x0d\n    return this.type.keyword === "var" ||\x0d\n      this.type.keyword === "const" ||\x0d\n      this.type.keyword === "class" ||\x0d\n      this.type.keyword === "function" ||\x0d\n      this.isLet() ||\x0d\n      this.isAsyncFunction()\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of module exports.\x0d\n\x0d\n  pp$8.parseExportSpecifiers = function(exports) {\x0d\n    var nodes = []\x2C first = true;\x0d\n    // export { x\x2C y as z } [from '...']\x0d\n    this.expect(types$1.braceL);\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var node = this.startNode();\x0d\n      node.local = this.parseModuleExportName();\x0d\n      node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;\x0d\n      this.checkExport(\x0d\n        exports\x2C\x0d\n        node.exported\x2C\x0d\n        node.exported.start\x0d\n      );\x0d\n      nodes.push(this.finishNode(node\x2C "ExportSpecifier"));\x0d\n    }\x0d\n    return nodes\x0d\n  };\x0d\n\x0d\n  // Parses import declaration.\x0d\n\x0d\n  pp$8.parseImport = function(node) {\x0d\n    this.next();\x0d\n    // import '...'\x0d\n    if (this.type === types$1.string) {\x0d\n      node.specifiers = empty$1;\x0d\n      node.source = this.parseExprAtom();\x0d\n    } else {\x0d\n      node.specifiers = this.parseImportSpecifiers();\x0d\n      this.expectContextual("from");\x0d\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\x0d\n    }\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ImportDeclaration")\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of module imports.\x0d\n\x0d\n  pp$8.parseImportSpecifiers = function() {\x0d\n    var nodes = []\x2C first = true;\x0d\n    if (this.type === types$1.name) {\x0d\n      // import defaultObj\x2C { x\x2C y as z } from '...'\x0d\n      var node = this.startNode();\x0d\n      node.local = this.parseIdent();\x0d\n      this.checkLValSimple(node.local\x2C BIND_LEXICAL);\x0d\n      nodes.push(this.finishNode(node\x2C "ImportDefaultSpecifier"));\x0d\n      if (!this.eat(types$1.comma)) { return nodes }\x0d\n    }\x0d\n    if (this.type === types$1.star) {\x0d\n      var node$1 = this.startNode();\x0d\n      this.next();\x0d\n      this.expectContextual("as");\x0d\n      node$1.local = this.parseIdent();\x0d\n      this.checkLValSimple(node$1.local\x2C BIND_LEXICAL);\x0d\n      nodes.push(this.finishNode(node$1\x2C "ImportNamespaceSpecifier"));\x0d\n      return nodes\x0d\n    }\x0d\n    this.expect(types$1.braceL);\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var node$2 = this.startNode();\x0d\n      node$2.imported = this.parseModuleExportName();\x0d\n      if (this.eatContextual("as")) {\x0d\n        node$2.local = this.parseIdent();\x0d\n      } else {\x0d\n        this.checkUnreserved(node$2.imported);\x0d\n        node$2.local = node$2.imported;\x0d\n      }\x0d\n      this.checkLValSimple(node$2.local\x2C BIND_LEXICAL);\x0d\n      nodes.push(this.finishNode(node$2\x2C "ImportSpecifier"));\x0d\n    }\x0d\n    return nodes\x0d\n  };\x0d\n\x0d\n  pp$8.parseModuleExportName = function() {\x0d\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\x0d\n      var stringLiteral = this.parseLiteral(this.value);\x0d\n      if (loneSurrogate.test(stringLiteral.value)) {\x0d\n        this.raise(stringLiteral.start\x2C "An export name cannot include a lone surrogate.");\x0d\n      }\x0d\n      return stringLiteral\x0d\n    }\x0d\n    return this.parseIdent(true)\x0d\n  };\x0d\n\x0d\n  // Set `ExpressionStatement#directive` property for directive prologues.\x0d\n  pp$8.adaptDirectivePrologue = function(statements) {\x0d\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\x0d\n      statements[i].directive = statements[i].expression.raw.slice(1\x2C -1);\x0d\n    }\x0d\n  };\x0d\n  pp$8.isDirectiveCandidate = function(statement) {\x0d\n    return (\x0d\n      this.options.ecmaVersion >= 5 &&\x0d\n      statement.type === "ExpressionStatement" &&\x0d\n      statement.expression.type === "Literal" &&\x0d\n      typeof statement.expression.value === "string" &&\x0d\n      // Reject parenthesized strings.\x0d\n      (this.input[statement.start] === "\\"" || this.input[statement.start] === "'")\x0d\n    )\x0d\n  };\x0d\n\x0d\n  var pp$7 = Parser.prototype;\x0d\n\x0d\n  // Convert existing expression atom to assignable pattern\x0d\n  // if possible.\x0d\n\x0d\n  pp$7.toAssignable = function(node\x2C isBinding\x2C refDestructuringErrors) {\x0d\n    if (this.options.ecmaVersion >= 6 && node) {\x0d\n      switch (node.type) {\x0d\n      case "Identifier":\x0d\n        if (this.inAsync && node.name === "await")\x0d\n          { this.raise(node.start\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n        break\x0d\n\x0d\n      case "ObjectPattern":\x0d\n      case "ArrayPattern":\x0d\n      case "AssignmentPattern":\x0d\n      case "RestElement":\x0d\n        break\x0d\n\x0d\n      case "ObjectExpression":\x0d\n        node.type = "ObjectPattern";\x0d\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n        for (var i = 0\x2C list = node.properties; i < list.length; i += 1) {\x0d\n          var prop = list[i];\x0d\n\x0d\n        this.toAssignable(prop\x2C isBinding);\x0d\n          // Early error:\x0d\n          //   AssignmentRestProperty[Yield\x2C Await] :\x0d\n          //     `...` DestructuringAssignmentTarget[Yield\x2C Await]\x0d\n          //\x0d\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\x0d\n          if (\x0d\n            prop.type === "RestElement" &&\x0d\n            (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")\x0d\n          ) {\x0d\n            this.raise(prop.argument.start\x2C "Unexpected token");\x0d\n          }\x0d\n        }\x0d\n        break\x0d\n\x0d\n      case "Property":\x0d\n        // AssignmentProperty has type === "Property"\x0d\n        if (node.kind !== "init") { this.raise(node.key.start\x2C "Object pattern can't contain getter or setter"); }\x0d\n        this.toAssignable(node.value\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "ArrayExpression":\x0d\n        node.type = "ArrayPattern";\x0d\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n        this.toAssignableList(node.elements\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "SpreadElement":\x0d\n        node.type = "RestElement";\x0d\n        this.toAssignable(node.argument\x2C isBinding);\x0d\n        if (node.argument.type === "AssignmentPattern")\x0d\n          { this.raise(node.argument.start\x2C "Rest elements cannot have a default value"); }\x0d\n        break\x0d\n\x0d\n      case "AssignmentExpression":\x0d\n        if (node.operator !== "=") { this.raise(node.left.end\x2C "Only '=' operator can be used for specifying default value."); }\x0d\n        node.type = "AssignmentPattern";\x0d\n        delete node.operator;\x0d\n        this.toAssignable(node.left\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "ParenthesizedExpression":\x0d\n        this.toAssignable(node.expression\x2C isBinding\x2C refDestructuringErrors);\x0d\n        break\x0d\n\x0d\n      case "ChainExpression":\x0d\n        this.raiseRecoverable(node.start\x2C "Optional chaining cannot appear in left-hand side");\x0d\n        break\x0d\n\x0d\n      case "MemberExpression":\x0d\n        if (!isBinding) { break }\x0d\n\x0d\n      default:\x0d\n        this.raise(node.start\x2C "Assigning to rvalue");\x0d\n      }\x0d\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  // Convert list of expression atoms to binding list.\x0d\n\x0d\n  pp$7.toAssignableList = function(exprList\x2C isBinding) {\x0d\n    var end = exprList.length;\x0d\n    for (var i = 0; i < end; i++) {\x0d\n      var elt = exprList[i];\x0d\n      if (elt) { this.toAssignable(elt\x2C isBinding); }\x0d\n    }\x0d\n    if (end) {\x0d\n      var last = exprList[end - 1];\x0d\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")\x0d\n        { this.unexpected(last.argument.start); }\x0d\n    }\x0d\n    return exprList\x0d\n  };\x0d\n\x0d\n  // Parses spread element.\x0d\n\x0d\n  pp$7.parseSpread = function(refDestructuringErrors) {\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.argument = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n    return this.finishNode(node\x2C "SpreadElement")\x0d\n  };\x0d\n\x0d\n  pp$7.parseRestBinding = function() {\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n\x0d\n    // RestElement inside of a function parameter must be an identifier\x0d\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\x0d\n      { this.unexpected(); }\x0d\n\x0d\n    node.argument = this.parseBindingAtom();\x0d\n\x0d\n    return this.finishNode(node\x2C "RestElement")\x0d\n  };\x0d\n\x0d\n  // Parses lvalue (assignable) atom.\x0d\n\x0d\n  pp$7.parseBindingAtom = function() {\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      switch (this.type) {\x0d\n      case types$1.bracketL:\x0d\n        var node = this.startNode();\x0d\n        this.next();\x0d\n        node.elements = this.parseBindingList(types$1.bracketR\x2C true\x2C true);\x0d\n        return this.finishNode(node\x2C "ArrayPattern")\x0d\n\x0d\n      case types$1.braceL:\x0d\n        return this.parseObj(true)\x0d\n      }\x0d\n    }\x0d\n    return this.parseIdent()\x0d\n  };\x0d\n\x0d\n  pp$7.parseBindingList = function(close\x2C allowEmpty\x2C allowTrailingComma) {\x0d\n    var elts = []\x2C first = true;\x0d\n    while (!this.eat(close)) {\x0d\n      if (first) { first = false; }\x0d\n      else { this.expect(types$1.comma); }\x0d\n      if (allowEmpty && this.type === types$1.comma) {\x0d\n        elts.push(null);\x0d\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\x0d\n        break\x0d\n      } else if (this.type === types$1.ellipsis) {\x0d\n        var rest = this.parseRestBinding();\x0d\n        this.parseBindingListItem(rest);\x0d\n        elts.push(rest);\x0d\n        if (this.type === types$1.comma) { this.raise(this.start\x2C "Comma is not permitted after the rest element"); }\x0d\n        this.expect(close);\x0d\n        break\x0d\n      } else {\x0d\n        var elem = this.parseMaybeDefault(this.start\x2C this.startLoc);\x0d\n        this.parseBindingListItem(elem);\x0d\n        elts.push(elem);\x0d\n      }\x0d\n    }\x0d\n    return elts\x0d\n  };\x0d\n\x0d\n  pp$7.parseBindingListItem = function(param) {\x0d\n    return param\x0d\n  };\x0d\n\x0d\n  // Parses assignment pattern around given atom if possible.\x0d\n\x0d\n  pp$7.parseMaybeDefault = function(startPos\x2C startLoc\x2C left) {\x0d\n    left = left || this.parseBindingAtom();\x0d\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\x0d\n    var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n    node.left = left;\x0d\n    node.right = this.parseMaybeAssign();\x0d\n    return this.finishNode(node\x2C "AssignmentPattern")\x0d\n  };\x0d\n\x0d\n  // The following three functions all verify that a node is an lvalue \u2014\x0d\n  // something that can be bound\x2C or assigned to. In order to do so\x2C they perform\x0d\n  // a variety of checks:\x0d\n  //\x0d\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\x0d\n  // - Record name declarations for bindings in the appropriate scope.\x0d\n  // - Check duplicate argument names\x2C if checkClashes is set.\x0d\n  //\x0d\n  // If a complex binding pattern is encountered (e.g.\x2C object and array\x0d\n  // destructuring)\x2C the entire pattern is recursively checked.\x0d\n  //\x0d\n  // There are three versions of checkLVal*() appropriate for different\x0d\n  // circumstances:\x0d\n  //\x0d\n  // - checkLValSimple() shall be used if the syntactic construct supports\x0d\n  //   nothing other than identifiers and member expressions. Parenthesized\x0d\n  //   expressions are also correctly handled. This is generally appropriate for\x0d\n  //   constructs for which the spec says\x0d\n  //\x0d\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\x0d\n  //   > simple.\x0d\n  //\x0d\n  //   It is also appropriate for checking if an identifier is valid and not\x0d\n  //   defined elsewhere\x2C like import declarations or function/class identifiers.\x0d\n  //\x0d\n  //   Examples where this is used include:\x0d\n  //     a += \u2026;\x0d\n  //     import a from '\u2026';\x0d\n  //   where a is the node to be checked.\x0d\n  //\x0d\n  // - checkLValPattern() shall be used if the syntactic construct supports\x0d\n  //   anything checkLValSimple() supports\x2C as well as object and array\x0d\n  //   destructuring patterns. This is generally appropriate for constructs for\x0d\n  //   which the spec says\x0d\n  //\x0d\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\x0d\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\x0d\n  //   > simple.\x0d\n  //\x0d\n  //   Examples where this is used include:\x0d\n  //     (a = \u2026);\x0d\n  //     const a = \u2026;\x0d\n  //     try { \u2026 } catch (a) { \u2026 }\x0d\n  //   where a is the node to be checked.\x0d\n  //\x0d\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\x0d\n  //   anything checkLValPattern() supports\x2C as well as default assignment\x0d\n  //   patterns\x2C rest elements\x2C and other constructs that may appear within an\x0d\n  //   object or array destructuring pattern.\x0d\n  //\x0d\n  //   As a special case\x2C function parameters also use checkLValInnerPattern()\x2C\x0d\n  //   as they also support defaults and rest constructs.\x0d\n  //\x0d\n  // These functions deliberately support both assignment and binding constructs\x2C\x0d\n  // as the logic for both is exceedingly similar. If the node is the target of\x0d\n  // an assignment\x2C then bindingType should be set to BIND_NONE. Otherwise\x2C it\x0d\n  // should be set to the appropriate BIND_* constant\x2C like BIND_VAR or\x0d\n  // BIND_LEXICAL.\x0d\n  //\x0d\n  // If the function is called with a non-BIND_NONE bindingType\x2C then\x0d\n  // additionally a checkClashes object may be specified to allow checking for\x0d\n  // duplicate argument names. checkClashes is ignored if the provided construct\x0d\n  // is an assignment (i.e.\x2C bindingType is BIND_NONE).\x0d\n\x0d\n  pp$7.checkLValSimple = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    var isBind = bindingType !== BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "Identifier":\x0d\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\x0d\n        { this.raiseRecoverable(expr.start\x2C (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }\x0d\n      if (isBind) {\x0d\n        if (bindingType === BIND_LEXICAL && expr.name === "let")\x0d\n          { this.raiseRecoverable(expr.start\x2C "let is disallowed as a lexically bound name"); }\x0d\n        if (checkClashes) {\x0d\n          if (hasOwn(checkClashes\x2C expr.name))\x0d\n            { this.raiseRecoverable(expr.start\x2C "Argument name clash"); }\x0d\n          checkClashes[expr.name] = true;\x0d\n        }\x0d\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name\x2C bindingType\x2C expr.start); }\x0d\n      }\x0d\n      break\x0d\n\x0d\n    case "ChainExpression":\x0d\n      this.raiseRecoverable(expr.start\x2C "Optional chaining cannot appear in left-hand side");\x0d\n      break\x0d\n\x0d\n    case "MemberExpression":\x0d\n      if (isBind) { this.raiseRecoverable(expr.start\x2C "Binding member expression"); }\x0d\n      break\x0d\n\x0d\n    case "ParenthesizedExpression":\x0d\n      if (isBind) { this.raiseRecoverable(expr.start\x2C "Binding parenthesized expression"); }\x0d\n      return this.checkLValSimple(expr.expression\x2C bindingType\x2C checkClashes)\x0d\n\x0d\n    default:\x0d\n      this.raise(expr.start\x2C (isBind ? "Binding" : "Assigning to") + " rvalue");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$7.checkLValPattern = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "ObjectPattern":\x0d\n      for (var i = 0\x2C list = expr.properties; i < list.length; i += 1) {\x0d\n        var prop = list[i];\x0d\n\x0d\n      this.checkLValInnerPattern(prop\x2C bindingType\x2C checkClashes);\x0d\n      }\x0d\n      break\x0d\n\x0d\n    case "ArrayPattern":\x0d\n      for (var i$1 = 0\x2C list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\x0d\n        var elem = list$1[i$1];\x0d\n\x0d\n      if (elem) { this.checkLValInnerPattern(elem\x2C bindingType\x2C checkClashes); }\x0d\n      }\x0d\n      break\x0d\n\x0d\n    default:\x0d\n      this.checkLValSimple(expr\x2C bindingType\x2C checkClashes);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$7.checkLValInnerPattern = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "Property":\x0d\n      // AssignmentProperty has type === "Property"\x0d\n      this.checkLValInnerPattern(expr.value\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    case "AssignmentPattern":\x0d\n      this.checkLValPattern(expr.left\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    case "RestElement":\x0d\n      this.checkLValPattern(expr.argument\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    default:\x0d\n      this.checkLValPattern(expr\x2C bindingType\x2C checkClashes);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // The algorithm used to determine whether a regexp can appear at a\x0d\n\x0d\n  var TokContext = function TokContext(token\x2C isExpr\x2C preserveSpace\x2C override\x2C generator) {\x0d\n    this.token = token;\x0d\n    this.isExpr = !!isExpr;\x0d\n    this.preserveSpace = !!preserveSpace;\x0d\n    this.override = override;\x0d\n    this.generator = !!generator;\x0d\n  };\x0d\n\x0d\n  var types = {\x0d\n    b_stat: new TokContext("{"\x2C false)\x2C\x0d\n    b_expr: new TokContext("{"\x2C true)\x2C\x0d\n    b_tmpl: new TokContext("${"\x2C false)\x2C\x0d\n    p_stat: new TokContext("("\x2C false)\x2C\x0d\n    p_expr: new TokContext("("\x2C true)\x2C\x0d\n    q_tmpl: new TokContext("`"\x2C true\x2C true\x2C function (p) { return p.tryReadTemplateToken(); })\x2C\x0d\n    f_stat: new TokContext("function"\x2C false)\x2C\x0d\n    f_expr: new TokContext("function"\x2C true)\x2C\x0d\n    f_expr_gen: new TokContext("function"\x2C true\x2C false\x2C null\x2C true)\x2C\x0d\n    f_gen: new TokContext("function"\x2C false\x2C false\x2C null\x2C true)\x0d\n  };\x0d\n\x0d\n  var pp$6 = Parser.prototype;\x0d\n\x0d\n  pp$6.initialContext = function() {\x0d\n    return [types.b_stat]\x0d\n  };\x0d\n\x0d\n  pp$6.curContext = function() {\x0d\n    return this.context[this.context.length - 1]\x0d\n  };\x0d\n\x0d\n  pp$6.braceIsBlock = function(prevType) {\x0d\n    var parent = this.curContext();\x0d\n    if (parent === types.f_expr || parent === types.f_stat)\x0d\n      { return true }\x0d\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\x0d\n      { return !parent.isExpr }\x0d\n\x0d\n    // The check for `tt.name && exprAllowed` detects whether we are\x0d\n    // after a `yield` or `of` construct. See the `updateContext` for\x0d\n    // `tt.name`.\x0d\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\x0d\n      { return lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start)) }\x0d\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\x0d\n      { return true }\x0d\n    if (prevType === types$1.braceL)\x0d\n      { return parent === types.b_stat }\x0d\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\x0d\n      { return false }\x0d\n    return !this.exprAllowed\x0d\n  };\x0d\n\x0d\n  pp$6.inGeneratorContext = function() {\x0d\n    for (var i = this.context.length - 1; i >= 1; i--) {\x0d\n      var context = this.context[i];\x0d\n      if (context.token === "function")\x0d\n        { return context.generator }\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  pp$6.updateContext = function(prevType) {\x0d\n    var update\x2C type = this.type;\x0d\n    if (type.keyword && prevType === types$1.dot)\x0d\n      { this.exprAllowed = false; }\x0d\n    else if (update = type.updateContext)\x0d\n      { update.call(this\x2C prevType); }\x0d\n    else\x0d\n      { this.exprAllowed = type.beforeExpr; }\x0d\n  };\x0d\n\x0d\n  // Used to handle egde cases when token context could not be inferred correctly during tokenization phase\x0d\n\x0d\n  pp$6.overrideContext = function(tokenCtx) {\x0d\n    if (this.curContext() !== tokenCtx) {\x0d\n      this.context[this.context.length - 1] = tokenCtx;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Token-specific context update code\x0d\n\x0d\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\x0d\n    if (this.context.length === 1) {\x0d\n      this.exprAllowed = true;\x0d\n      return\x0d\n    }\x0d\n    var out = this.context.pop();\x0d\n    if (out === types.b_stat && this.curContext().token === "function") {\x0d\n      out = this.context.pop();\x0d\n    }\x0d\n    this.exprAllowed = !out.isExpr;\x0d\n  };\x0d\n\x0d\n  types$1.braceL.updateContext = function(prevType) {\x0d\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.dollarBraceL.updateContext = function() {\x0d\n    this.context.push(types.b_tmpl);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.parenL.updateContext = function(prevType) {\x0d\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\x0d\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.incDec.updateContext = function() {\x0d\n    // tokExprAllowed stays unchanged\x0d\n  };\x0d\n\x0d\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\x0d\n    if (prevType.beforeExpr && prevType !== types$1._else &&\x0d\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\x0d\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))) &&\x0d\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\x0d\n      { this.context.push(types.f_expr); }\x0d\n    else\x0d\n      { this.context.push(types.f_stat); }\x0d\n    this.exprAllowed = false;\x0d\n  };\x0d\n\x0d\n  types$1.backQuote.updateContext = function() {\x0d\n    if (this.curContext() === types.q_tmpl)\x0d\n      { this.context.pop(); }\x0d\n    else\x0d\n      { this.context.push(types.q_tmpl); }\x0d\n    this.exprAllowed = false;\x0d\n  };\x0d\n\x0d\n  types$1.star.updateContext = function(prevType) {\x0d\n    if (prevType === types$1._function) {\x0d\n      var index = this.context.length - 1;\x0d\n      if (this.context[index] === types.f_expr)\x0d\n        { this.context[index] = types.f_expr_gen; }\x0d\n      else\x0d\n        { this.context[index] = types.f_gen; }\x0d\n    }\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.name.updateContext = function(prevType) {\x0d\n    var allowed = false;\x0d\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\x0d\n      if (this.value === "of" && !this.exprAllowed ||\x0d\n          this.value === "yield" && this.inGeneratorContext())\x0d\n        { allowed = true; }\x0d\n    }\x0d\n    this.exprAllowed = allowed;\x0d\n  };\x0d\n\x0d\n  // A recursive descent parser operates by defining functions for all\x0d\n\x0d\n  var pp$5 = Parser.prototype;\x0d\n\x0d\n  // Check if property name clashes with already added.\x0d\n  // Object/class getters and setters are not allowed to clash \u2014\x0d\n  // either with each other or with an init property \u2014 and in\x0d\n  // strict mode\x2C init properties are also not allowed to be repeated.\x0d\n\x0d\n  pp$5.checkPropClash = function(prop\x2C propHash\x2C refDestructuringErrors) {\x0d\n    if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")\x0d\n      { return }\x0d\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\x0d\n      { return }\x0d\n    var key = prop.key;\x0d\n    var name;\x0d\n    switch (key.type) {\x0d\n    case "Identifier": name = key.name; break\x0d\n    case "Literal": name = String(key.value); break\x0d\n    default: return\x0d\n    }\x0d\n    var kind = prop.kind;\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      if (name === "__proto__" && kind === "init") {\x0d\n        if (propHash.proto) {\x0d\n          if (refDestructuringErrors) {\x0d\n            if (refDestructuringErrors.doubleProto < 0) {\x0d\n              refDestructuringErrors.doubleProto = key.start;\x0d\n            }\x0d\n          } else {\x0d\n            this.raiseRecoverable(key.start\x2C "Redefinition of __proto__ property");\x0d\n          }\x0d\n        }\x0d\n        propHash.proto = true;\x0d\n      }\x0d\n      return\x0d\n    }\x0d\n    name = "$" + name;\x0d\n    var other = propHash[name];\x0d\n    if (other) {\x0d\n      var redefinition;\x0d\n      if (kind === "init") {\x0d\n        redefinition = this.strict && other.init || other.get || other.set;\x0d\n      } else {\x0d\n        redefinition = other.init || other[kind];\x0d\n      }\x0d\n      if (redefinition)\x0d\n        { this.raiseRecoverable(key.start\x2C "Redefinition of property"); }\x0d\n    } else {\x0d\n      other = propHash[name] = {\x0d\n        init: false\x2C\x0d\n        get: false\x2C\x0d\n        set: false\x0d\n      };\x0d\n    }\x0d\n    other[kind] = true;\x0d\n  };\x0d\n\x0d\n  // ### Expression parsing\x0d\n\x0d\n  // These nest\x2C from the most general expression type at the top to\x0d\n  // 'atomic'\x2C nondivisible expression types at the bottom. Most of\x0d\n  // the functions will simply let the function(s) below them parse\x2C\x0d\n  // and\x2C *if* the syntactic construct they handle is present\x2C wrap\x0d\n  // the AST node that the inner parser gave them in another node.\x0d\n\x0d\n  // Parse a full expression. The optional arguments are used to\x0d\n  // forbid the `in` operator (in for loops initalization expressions)\x0d\n  // and provide reference for storing '=' operator inside shorthand\x0d\n  // property assignment in contexts where both object expression\x0d\n  // and object pattern might appear (so it's possible to raise\x0d\n  // delayed syntax error at correct position).\x0d\n\x0d\n  pp$5.parseExpression = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseMaybeAssign(forInit\x2C refDestructuringErrors);\x0d\n    if (this.type === types$1.comma) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.expressions = [expr];\x0d\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit\x2C refDestructuringErrors)); }\x0d\n      return this.finishNode(node\x2C "SequenceExpression")\x0d\n    }\x0d\n    return expr\x0d\n  };\x0d\n\x0d\n  // Parse an assignment expression. This includes applications of\x0d\n  // operators like `+=`.\x0d\n\x0d\n  pp$5.parseMaybeAssign = function(forInit\x2C refDestructuringErrors\x2C afterLeftParse) {\x0d\n    if (this.isContextual("yield")) {\x0d\n      if (this.inGenerator) { return this.parseYield(forInit) }\x0d\n      // The tokenizer will assume an expression is allowed after\x0d\n      // `yield`\x2C but this isn't that kind of yield\x0d\n      else { this.exprAllowed = false; }\x0d\n    }\x0d\n\x0d\n    var ownDestructuringErrors = false\x2C oldParenAssign = -1\x2C oldTrailingComma = -1\x2C oldDoubleProto = -1;\x0d\n    if (refDestructuringErrors) {\x0d\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\x0d\n      oldTrailingComma = refDestructuringErrors.trailingComma;\x0d\n      oldDoubleProto = refDestructuringErrors.doubleProto;\x0d\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\x0d\n    } else {\x0d\n      refDestructuringErrors = new DestructuringErrors;\x0d\n      ownDestructuringErrors = true;\x0d\n    }\x0d\n\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    if (this.type === types$1.parenL || this.type === types$1.name) {\x0d\n      this.potentialArrowAt = this.start;\x0d\n      this.potentialArrowInForAwait = forInit === "await";\x0d\n    }\x0d\n    var left = this.parseMaybeConditional(forInit\x2C refDestructuringErrors);\x0d\n    if (afterLeftParse) { left = afterLeftParse.call(this\x2C left\x2C startPos\x2C startLoc); }\x0d\n    if (this.type.isAssign) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.operator = this.value;\x0d\n      if (this.type === types$1.eq)\x0d\n        { left = this.toAssignable(left\x2C false\x2C refDestructuringErrors); }\x0d\n      if (!ownDestructuringErrors) {\x0d\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\x0d\n      }\x0d\n      if (refDestructuringErrors.shorthandAssign >= left.start)\x0d\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\x0d\n      if (this.type === types$1.eq)\x0d\n        { this.checkLValPattern(left); }\x0d\n      else\x0d\n        { this.checkLValSimple(left); }\x0d\n      node.left = left;\x0d\n      this.next();\x0d\n      node.right = this.parseMaybeAssign(forInit);\x0d\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\x0d\n      return this.finishNode(node\x2C "AssignmentExpression")\x0d\n    } else {\x0d\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors\x2C true); }\x0d\n    }\x0d\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\x0d\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\x0d\n    return left\x0d\n  };\x0d\n\x0d\n  // Parse a ternary conditional (`?:`) operator.\x0d\n\x0d\n  pp$5.parseMaybeConditional = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseExprOps(forInit\x2C refDestructuringErrors);\x0d\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n    if (this.eat(types$1.question)) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.test = expr;\x0d\n      node.consequent = this.parseMaybeAssign();\x0d\n      this.expect(types$1.colon);\x0d\n      node.alternate = this.parseMaybeAssign(forInit);\x0d\n      return this.finishNode(node\x2C "ConditionalExpression")\x0d\n    }\x0d\n    return expr\x0d\n  };\x0d\n\x0d\n  // Start the precedence parser.\x0d\n\x0d\n  pp$5.parseExprOps = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseMaybeUnary(refDestructuringErrors\x2C false\x2C false\x2C forInit);\x0d\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n    return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr\x2C startPos\x2C startLoc\x2C -1\x2C forInit)\x0d\n  };\x0d\n\x0d\n  // Parse binary operators with the operator precedence parsing\x0d\n  // algorithm. `left` is the left-hand side of the operator.\x0d\n  // `minPrec` provides context that allows the function to stop and\x0d\n  // defer further parser to one of its callers when it encounters an\x0d\n  // operator that has a lower precedence than the set it is parsing.\x0d\n\x0d\n  pp$5.parseExprOp = function(left\x2C leftStartPos\x2C leftStartLoc\x2C minPrec\x2C forInit) {\x0d\n    var prec = this.type.binop;\x0d\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\x0d\n      if (prec > minPrec) {\x0d\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\x0d\n        var coalesce = this.type === types$1.coalesce;\x0d\n        if (coalesce) {\x0d\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\x0d\n          // In other words\x2C `node.right` shouldn't contain logical expressions in order to check the mixed error.\x0d\n          prec = types$1.logicalAND.binop;\x0d\n        }\x0d\n        var op = this.value;\x0d\n        this.next();\x0d\n        var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n        var right = this.parseExprOp(this.parseMaybeUnary(null\x2C false\x2C false\x2C forInit)\x2C startPos\x2C startLoc\x2C prec\x2C forInit);\x0d\n        var node = this.buildBinary(leftStartPos\x2C leftStartLoc\x2C left\x2C right\x2C op\x2C logical || coalesce);\x0d\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\x0d\n          this.raiseRecoverable(this.start\x2C "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");\x0d\n        }\x0d\n        return this.parseExprOp(node\x2C leftStartPos\x2C leftStartLoc\x2C minPrec\x2C forInit)\x0d\n      }\x0d\n    }\x0d\n    return left\x0d\n  };\x0d\n\x0d\n  pp$5.buildBinary = function(startPos\x2C startLoc\x2C left\x2C right\x2C op\x2C logical) {\x0d\n    if (right.type === "PrivateIdentifier") { this.raise(right.start\x2C "Private identifier can only be left side of binary expression"); }\x0d\n    var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n    node.left = left;\x0d\n    node.operator = op;\x0d\n    node.right = right;\x0d\n    return this.finishNode(node\x2C logical ? "LogicalExpression" : "BinaryExpression")\x0d\n  };\x0d\n\x0d\n  // Parse unary operators\x2C both prefix and postfix.\x0d\n\x0d\n  pp$5.parseMaybeUnary = function(refDestructuringErrors\x2C sawUnary\x2C incDec\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc\x2C expr;\x0d\n    if (this.isContextual("await") && this.canAwait) {\x0d\n      expr = this.parseAwait(forInit);\x0d\n      sawUnary = true;\x0d\n    } else if (this.type.prefix) {\x0d\n      var node = this.startNode()\x2C update = this.type === types$1.incDec;\x0d\n      node.operator = this.value;\x0d\n      node.prefix = true;\x0d\n      this.next();\x0d\n      node.argument = this.parseMaybeUnary(null\x2C true\x2C update\x2C forInit);\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      if (update) { this.checkLValSimple(node.argument); }\x0d\n      else if (this.strict && node.operator === "delete" &&\x0d\n               node.argument.type === "Identifier")\x0d\n        { this.raiseRecoverable(node.start\x2C "Deleting local variable in strict mode"); }\x0d\n      else if (node.operator === "delete" && isPrivateFieldAccess(node.argument))\x0d\n        { this.raiseRecoverable(node.start\x2C "Private fields can not be deleted"); }\x0d\n      else { sawUnary = true; }\x0d\n      expr = this.finishNode(node\x2C update ? "UpdateExpression" : "UnaryExpression");\x0d\n    } else if (!sawUnary && this.type === types$1.privateId) {\x0d\n      if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\x0d\n      expr = this.parsePrivateIdent();\x0d\n      // only could be private fields in 'in'\x2C such as #x in obj\x0d\n      if (this.type !== types$1._in) { this.unexpected(); }\x0d\n    } else {\x0d\n      expr = this.parseExprSubscripts(refDestructuringErrors\x2C forInit);\x0d\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n      while (this.type.postfix && !this.canInsertSemicolon()) {\x0d\n        var node$1 = this.startNodeAt(startPos\x2C startLoc);\x0d\n        node$1.operator = this.value;\x0d\n        node$1.prefix = false;\x0d\n        node$1.argument = expr;\x0d\n        this.checkLValSimple(expr);\x0d\n        this.next();\x0d\n        expr = this.finishNode(node$1\x2C "UpdateExpression");\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!incDec && this.eat(types$1.starstar)) {\x0d\n      if (sawUnary)\x0d\n        { this.unexpected(this.lastTokStart); }\x0d\n      else\x0d\n        { return this.buildBinary(startPos\x2C startLoc\x2C expr\x2C this.parseMaybeUnary(null\x2C false\x2C false\x2C forInit)\x2C "**"\x2C false) }\x0d\n    } else {\x0d\n      return expr\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function isPrivateFieldAccess(node) {\x0d\n    return (\x0d\n      node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" ||\x0d\n      node.type === "ChainExpression" && isPrivateFieldAccess(node.expression)\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // Parse call\x2C dot\x2C and `[]`-subscript expressions.\x0d\n\x0d\n  pp$5.parseExprSubscripts = function(refDestructuringErrors\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseExprAtom(refDestructuringErrors\x2C forInit);\x0d\n    if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart\x2C this.lastTokEnd) !== ")")\x0d\n      { return expr }\x0d\n    var result = this.parseSubscripts(expr\x2C startPos\x2C startLoc\x2C false\x2C forInit);\x0d\n    if (refDestructuringErrors && result.type === "MemberExpression") {\x0d\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\x0d\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\x0d\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\x0d\n    }\x0d\n    return result\x0d\n  };\x0d\n\x0d\n  pp$5.parseSubscripts = function(base\x2C startPos\x2C startLoc\x2C noCalls\x2C forInit) {\x0d\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&\x0d\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\x0d\n        this.potentialArrowAt === base.start;\x0d\n    var optionalChained = false;\x0d\n\x0d\n    while (true) {\x0d\n      var element = this.parseSubscript(base\x2C startPos\x2C startLoc\x2C noCalls\x2C maybeAsyncArrow\x2C optionalChained\x2C forInit);\x0d\n\x0d\n      if (element.optional) { optionalChained = true; }\x0d\n      if (element === base || element.type === "ArrowFunctionExpression") {\x0d\n        if (optionalChained) {\x0d\n          var chainNode = this.startNodeAt(startPos\x2C startLoc);\x0d\n          chainNode.expression = element;\x0d\n          element = this.finishNode(chainNode\x2C "ChainExpression");\x0d\n        }\x0d\n        return element\x0d\n      }\x0d\n\x0d\n      base = element;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseSubscript = function(base\x2C startPos\x2C startLoc\x2C noCalls\x2C maybeAsyncArrow\x2C optionalChained\x2C forInit) {\x0d\n    var optionalSupported = this.options.ecmaVersion >= 11;\x0d\n    var optional = optionalSupported && this.eat(types$1.questionDot);\x0d\n    if (noCalls && optional) { this.raise(this.lastTokStart\x2C "Optional chaining cannot appear in the callee of new expressions"); }\x0d\n\x0d\n    var computed = this.eat(types$1.bracketL);\x0d\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.object = base;\x0d\n      if (computed) {\x0d\n        node.property = this.parseExpression();\x0d\n        this.expect(types$1.bracketR);\x0d\n      } else if (this.type === types$1.privateId && base.type !== "Super") {\x0d\n        node.property = this.parsePrivateIdent();\x0d\n      } else {\x0d\n        node.property = this.parseIdent(this.options.allowReserved !== "never");\x0d\n      }\x0d\n      node.computed = !!computed;\x0d\n      if (optionalSupported) {\x0d\n        node.optional = optional;\x0d\n      }\x0d\n      base = this.finishNode(node\x2C "MemberExpression");\x0d\n    } else if (!noCalls && this.eat(types$1.parenL)) {\x0d\n      var refDestructuringErrors = new DestructuringErrors\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n      this.yieldPos = 0;\x0d\n      this.awaitPos = 0;\x0d\n      this.awaitIdentPos = 0;\x0d\n      var exprList = this.parseExprList(types$1.parenR\x2C this.options.ecmaVersion >= 8\x2C false\x2C refDestructuringErrors);\x0d\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\x0d\n        this.checkPatternErrors(refDestructuringErrors\x2C false);\x0d\n        this.checkYieldAwaitInDefaultParams();\x0d\n        if (this.awaitIdentPos > 0)\x0d\n          { this.raise(this.awaitIdentPos\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n        this.yieldPos = oldYieldPos;\x0d\n        this.awaitPos = oldAwaitPos;\x0d\n        this.awaitIdentPos = oldAwaitIdentPos;\x0d\n        return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C exprList\x2C true\x2C forInit)\x0d\n      }\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      this.yieldPos = oldYieldPos || this.yieldPos;\x0d\n      this.awaitPos = oldAwaitPos || this.awaitPos;\x0d\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\x0d\n      var node$1 = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node$1.callee = base;\x0d\n      node$1.arguments = exprList;\x0d\n      if (optionalSupported) {\x0d\n        node$1.optional = optional;\x0d\n      }\x0d\n      base = this.finishNode(node$1\x2C "CallExpression");\x0d\n    } else if (this.type === types$1.backQuote) {\x0d\n      if (optional || optionalChained) {\x0d\n        this.raise(this.start\x2C "Optional chaining cannot appear in the tag of tagged template expressions");\x0d\n      }\x0d\n      var node$2 = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node$2.tag = base;\x0d\n      node$2.quasi = this.parseTemplate({isTagged: true});\x0d\n      base = this.finishNode(node$2\x2C "TaggedTemplateExpression");\x0d\n    }\x0d\n    return base\x0d\n  };\x0d\n\x0d\n  // Parse an atomic expression \u2014 either a single token that is an\x0d\n  // expression\x2C an expression started by a keyword like `function` or\x0d\n  // `new`\x2C or an expression wrapped in punctuation like `()`\x2C `[]`\x2C\x0d\n  // or `{}`.\x0d\n\x0d\n  pp$5.parseExprAtom = function(refDestructuringErrors\x2C forInit) {\x0d\n    // If a division operator appears in an expression position\x2C the\x0d\n    // tokenizer got confused\x2C and we force it to read a regexp instead.\x0d\n    if (this.type === types$1.slash) { this.readRegexp(); }\x0d\n\x0d\n    var node\x2C canBeArrow = this.potentialArrowAt === this.start;\x0d\n    switch (this.type) {\x0d\n    case types$1._super:\x0d\n      if (!this.allowSuper)\x0d\n        { this.raise(this.start\x2C "'super' keyword outside a method"); }\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\x0d\n        { this.raise(node.start\x2C "super() call outside constructor of a subclass"); }\x0d\n      // The `super` keyword can appear at below:\x0d\n      // SuperProperty:\x0d\n      //     super [ Expression ]\x0d\n      //     super . IdentifierName\x0d\n      // SuperCall:\x0d\n      //     super ( Arguments )\x0d\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\x0d\n        { this.unexpected(); }\x0d\n      return this.finishNode(node\x2C "Super")\x0d\n\x0d\n    case types$1._this:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      return this.finishNode(node\x2C "ThisExpression")\x0d\n\x0d\n    case types$1.name:\x0d\n      var startPos = this.start\x2C startLoc = this.startLoc\x2C containsEsc = this.containsEsc;\x0d\n      var id = this.parseIdent(false);\x0d\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\x0d\n        this.overrideContext(types.f_expr);\x0d\n        return this.parseFunction(this.startNodeAt(startPos\x2C startLoc)\x2C 0\x2C false\x2C true\x2C forInit)\x0d\n      }\x0d\n      if (canBeArrow && !this.canInsertSemicolon()) {\x0d\n        if (this.eat(types$1.arrow))\x0d\n          { return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C [id]\x2C false\x2C forInit) }\x0d\n        if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc &&\x0d\n            (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {\x0d\n          id = this.parseIdent(false);\x0d\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\x0d\n            { this.unexpected(); }\x0d\n          return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C [id]\x2C true\x2C forInit)\x0d\n        }\x0d\n      }\x0d\n      return id\x0d\n\x0d\n    case types$1.regexp:\x0d\n      var value = this.value;\x0d\n      node = this.parseLiteral(value.value);\x0d\n      node.regex = {pattern: value.pattern\x2C flags: value.flags};\x0d\n      return node\x0d\n\x0d\n    case types$1.num: case types$1.string:\x0d\n      return this.parseLiteral(this.value)\x0d\n\x0d\n    case types$1._null: case types$1._true: case types$1._false:\x0d\n      node = this.startNode();\x0d\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\x0d\n      node.raw = this.type.keyword;\x0d\n      this.next();\x0d\n      return this.finishNode(node\x2C "Literal")\x0d\n\x0d\n    case types$1.parenL:\x0d\n      var start = this.start\x2C expr = this.parseParenAndDistinguishExpression(canBeArrow\x2C forInit);\x0d\n      if (refDestructuringErrors) {\x0d\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\x0d\n          { refDestructuringErrors.parenthesizedAssign = start; }\x0d\n        if (refDestructuringErrors.parenthesizedBind < 0)\x0d\n          { refDestructuringErrors.parenthesizedBind = start; }\x0d\n      }\x0d\n      return expr\x0d\n\x0d\n    case types$1.bracketL:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      node.elements = this.parseExprList(types$1.bracketR\x2C true\x2C true\x2C refDestructuringErrors);\x0d\n      return this.finishNode(node\x2C "ArrayExpression")\x0d\n\x0d\n    case types$1.braceL:\x0d\n      this.overrideContext(types.b_expr);\x0d\n      return this.parseObj(false\x2C refDestructuringErrors)\x0d\n\x0d\n    case types$1._function:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      return this.parseFunction(node\x2C 0)\x0d\n\x0d\n    case types$1._class:\x0d\n      return this.parseClass(this.startNode()\x2C false)\x0d\n\x0d\n    case types$1._new:\x0d\n      return this.parseNew()\x0d\n\x0d\n    case types$1.backQuote:\x0d\n      return this.parseTemplate()\x0d\n\x0d\n    case types$1._import:\x0d\n      if (this.options.ecmaVersion >= 11) {\x0d\n        return this.parseExprImport()\x0d\n      } else {\x0d\n        return this.unexpected()\x0d\n      }\x0d\n\x0d\n    default:\x0d\n      this.unexpected();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseExprImport = function() {\x0d\n    var node = this.startNode();\x0d\n\x0d\n    // Consume `import` as an identifier for `import.meta`.\x0d\n    // Because `this.parseIdent(true)` doesn't check escape sequences\x2C it needs the check of `this.containsEsc`.\x0d\n    if (this.containsEsc) { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword import"); }\x0d\n    var meta = this.parseIdent(true);\x0d\n\x0d\n    switch (this.type) {\x0d\n    case types$1.parenL:\x0d\n      return this.parseDynamicImport(node)\x0d\n    case types$1.dot:\x0d\n      node.meta = meta;\x0d\n      return this.parseImportMeta(node)\x0d\n    default:\x0d\n      this.unexpected();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseDynamicImport = function(node) {\x0d\n    this.next(); // skip `(`\x0d\n\x0d\n    // Parse node.source.\x0d\n    node.source = this.parseMaybeAssign();\x0d\n\x0d\n    // Verify ending.\x0d\n    if (!this.eat(types$1.parenR)) {\x0d\n      var errorPos = this.start;\x0d\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\x0d\n        this.raiseRecoverable(errorPos\x2C "Trailing comma is not allowed in import()");\x0d\n      } else {\x0d\n        this.unexpected(errorPos);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return this.finishNode(node\x2C "ImportExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseImportMeta = function(node) {\x0d\n    this.next(); // skip `.`\x0d\n\x0d\n    var containsEsc = this.containsEsc;\x0d\n    node.property = this.parseIdent(true);\x0d\n\x0d\n    if (node.property.name !== "meta")\x0d\n      { this.raiseRecoverable(node.property.start\x2C "The only valid meta property for import is 'import.meta'"); }\x0d\n    if (containsEsc)\x0d\n      { this.raiseRecoverable(node.start\x2C "'import.meta' must not contain escaped characters"); }\x0d\n    if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere)\x0d\n      { this.raiseRecoverable(node.start\x2C "Cannot use 'import.meta' outside a module"); }\x0d\n\x0d\n    return this.finishNode(node\x2C "MetaProperty")\x0d\n  };\x0d\n\x0d\n  pp$5.parseLiteral = function(value) {\x0d\n    var node = this.startNode();\x0d\n    node.value = value;\x0d\n    node.raw = this.input.slice(this.start\x2C this.end);\x0d\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0\x2C -1).replace(/_/g\x2C ""); }\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "Literal")\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenExpression = function() {\x0d\n    this.expect(types$1.parenL);\x0d\n    var val = this.parseExpression();\x0d\n    this.expect(types$1.parenR);\x0d\n    return val\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc\x2C val\x2C allowTrailingComma = this.options.ecmaVersion >= 8;\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      this.next();\x0d\n\x0d\n      var innerStartPos = this.start\x2C innerStartLoc = this.startLoc;\x0d\n      var exprList = []\x2C first = true\x2C lastIsComma = false;\x0d\n      var refDestructuringErrors = new DestructuringErrors\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C spreadStart;\x0d\n      this.yieldPos = 0;\x0d\n      this.awaitPos = 0;\x0d\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\x0d\n      while (this.type !== types$1.parenR) {\x0d\n        first ? first = false : this.expect(types$1.comma);\x0d\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR\x2C true)) {\x0d\n          lastIsComma = true;\x0d\n          break\x0d\n        } else if (this.type === types$1.ellipsis) {\x0d\n          spreadStart = this.start;\x0d\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\x0d\n          if (this.type === types$1.comma) { this.raise(this.start\x2C "Comma is not permitted after the rest element"); }\x0d\n          break\x0d\n        } else {\x0d\n          exprList.push(this.parseMaybeAssign(false\x2C refDestructuringErrors\x2C this.parseParenItem));\x0d\n        }\x0d\n      }\x0d\n      var innerEndPos = this.lastTokEnd\x2C innerEndLoc = this.lastTokEndLoc;\x0d\n      this.expect(types$1.parenR);\x0d\n\x0d\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\x0d\n        this.checkPatternErrors(refDestructuringErrors\x2C false);\x0d\n        this.checkYieldAwaitInDefaultParams();\x0d\n        this.yieldPos = oldYieldPos;\x0d\n        this.awaitPos = oldAwaitPos;\x0d\n        return this.parseParenArrowList(startPos\x2C startLoc\x2C exprList\x2C forInit)\x0d\n      }\x0d\n\x0d\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\x0d\n      if (spreadStart) { this.unexpected(spreadStart); }\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      this.yieldPos = oldYieldPos || this.yieldPos;\x0d\n      this.awaitPos = oldAwaitPos || this.awaitPos;\x0d\n\x0d\n      if (exprList.length > 1) {\x0d\n        val = this.startNodeAt(innerStartPos\x2C innerStartLoc);\x0d\n        val.expressions = exprList;\x0d\n        this.finishNodeAt(val\x2C "SequenceExpression"\x2C innerEndPos\x2C innerEndLoc);\x0d\n      } else {\x0d\n        val = exprList[0];\x0d\n      }\x0d\n    } else {\x0d\n      val = this.parseParenExpression();\x0d\n    }\x0d\n\x0d\n    if (this.options.preserveParens) {\x0d\n      var par = this.startNodeAt(startPos\x2C startLoc);\x0d\n      par.expression = val;\x0d\n      return this.finishNode(par\x2C "ParenthesizedExpression")\x0d\n    } else {\x0d\n      return val\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenItem = function(item) {\x0d\n    return item\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenArrowList = function(startPos\x2C startLoc\x2C exprList\x2C forInit) {\x0d\n    return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C exprList\x2C false\x2C forInit)\x0d\n  };\x0d\n\x0d\n  // New's precedence is slightly tricky. It must allow its argument to\x0d\n  // be a `[]` or dot subscript expression\x2C but not a call \u2014 at least\x2C\x0d\n  // not without wrapping it in parentheses. Thus\x2C it uses the noCalls\x0d\n  // argument to parseSubscripts to prevent it from consuming the\x0d\n  // argument list.\x0d\n\x0d\n  var empty = [];\x0d\n\x0d\n  pp$5.parseNew = function() {\x0d\n    if (this.containsEsc) { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword new"); }\x0d\n    var node = this.startNode();\x0d\n    var meta = this.parseIdent(true);\x0d\n    if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\x0d\n      node.meta = meta;\x0d\n      var containsEsc = this.containsEsc;\x0d\n      node.property = this.parseIdent(true);\x0d\n      if (node.property.name !== "target")\x0d\n        { this.raiseRecoverable(node.property.start\x2C "The only valid meta property for new is 'new.target'"); }\x0d\n      if (containsEsc)\x0d\n        { this.raiseRecoverable(node.start\x2C "'new.target' must not contain escaped characters"); }\x0d\n      if (!this.allowNewDotTarget)\x0d\n        { this.raiseRecoverable(node.start\x2C "'new.target' can only be used in functions and class static block"); }\x0d\n      return this.finishNode(node\x2C "MetaProperty")\x0d\n    }\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc\x2C isImport = this.type === types$1._import;\x0d\n    node.callee = this.parseSubscripts(this.parseExprAtom()\x2C startPos\x2C startLoc\x2C true\x2C false);\x0d\n    if (isImport && node.callee.type === "ImportExpression") {\x0d\n      this.raise(startPos\x2C "Cannot use new with import()");\x0d\n    }\x0d\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR\x2C this.options.ecmaVersion >= 8\x2C false); }\x0d\n    else { node.arguments = empty; }\x0d\n    return this.finishNode(node\x2C "NewExpression")\x0d\n  };\x0d\n\x0d\n  // Parse template expression.\x0d\n\x0d\n  pp$5.parseTemplateElement = function(ref) {\x0d\n    var isTagged = ref.isTagged;\x0d\n\x0d\n    var elem = this.startNode();\x0d\n    if (this.type === types$1.invalidTemplate) {\x0d\n      if (!isTagged) {\x0d\n        this.raiseRecoverable(this.start\x2C "Bad escape sequence in untagged template literal");\x0d\n      }\x0d\n      elem.value = {\x0d\n        raw: this.value\x2C\x0d\n        cooked: null\x0d\n      };\x0d\n    } else {\x0d\n      elem.value = {\x0d\n        raw: this.input.slice(this.start\x2C this.end).replace(/\\r\\n?/g\x2C "\\n")\x2C\x0d\n        cooked: this.value\x0d\n      };\x0d\n    }\x0d\n    this.next();\x0d\n    elem.tail = this.type === types$1.backQuote;\x0d\n    return this.finishNode(elem\x2C "TemplateElement")\x0d\n  };\x0d\n\x0d\n  pp$5.parseTemplate = function(ref) {\x0d\n    if ( ref === void 0 ) ref = {};\x0d\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.expressions = [];\x0d\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\x0d\n    node.quasis = [curElt];\x0d\n    while (!curElt.tail) {\x0d\n      if (this.type === types$1.eof) { this.raise(this.pos\x2C "Unterminated template literal"); }\x0d\n      this.expect(types$1.dollarBraceL);\x0d\n      node.expressions.push(this.parseExpression());\x0d\n      this.expect(types$1.braceR);\x0d\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\x0d\n    }\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "TemplateLiteral")\x0d\n  };\x0d\n\x0d\n  pp$5.isAsyncProp = function(prop) {\x0d\n    return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&\x0d\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\x0d\n      !lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))\x0d\n  };\x0d\n\x0d\n  // Parse an object literal or binding pattern.\x0d\n\x0d\n  pp$5.parseObj = function(isPattern\x2C refDestructuringErrors) {\x0d\n    var node = this.startNode()\x2C first = true\x2C propHash = {};\x0d\n    node.properties = [];\x0d\n    this.next();\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var prop = this.parseProperty(isPattern\x2C refDestructuringErrors);\x0d\n      if (!isPattern) { this.checkPropClash(prop\x2C propHash\x2C refDestructuringErrors); }\x0d\n      node.properties.push(prop);\x0d\n    }\x0d\n    return this.finishNode(node\x2C isPattern ? "ObjectPattern" : "ObjectExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseProperty = function(isPattern\x2C refDestructuringErrors) {\x0d\n    var prop = this.startNode()\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc;\x0d\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\x0d\n      if (isPattern) {\x0d\n        prop.argument = this.parseIdent(false);\x0d\n        if (this.type === types$1.comma) {\x0d\n          this.raise(this.start\x2C "Comma is not permitted after the rest element");\x0d\n        }\x0d\n        return this.finishNode(prop\x2C "RestElement")\x0d\n      }\x0d\n      // Parse argument.\x0d\n      prop.argument = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      // To disallow trailing comma via `this.toAssignable()`.\x0d\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\x0d\n        refDestructuringErrors.trailingComma = this.start;\x0d\n      }\x0d\n      // Finish\x0d\n      return this.finishNode(prop\x2C "SpreadElement")\x0d\n    }\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      prop.method = false;\x0d\n      prop.shorthand = false;\x0d\n      if (isPattern || refDestructuringErrors) {\x0d\n        startPos = this.start;\x0d\n        startLoc = this.startLoc;\x0d\n      }\x0d\n      if (!isPattern)\x0d\n        { isGenerator = this.eat(types$1.star); }\x0d\n    }\x0d\n    var containsEsc = this.containsEsc;\x0d\n    this.parsePropertyName(prop);\x0d\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\x0d\n      isAsync = true;\x0d\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\x0d\n      this.parsePropertyName(prop);\x0d\n    } else {\x0d\n      isAsync = false;\x0d\n    }\x0d\n    this.parsePropertyValue(prop\x2C isPattern\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc\x2C refDestructuringErrors\x2C containsEsc);\x0d\n    return this.finishNode(prop\x2C "Property")\x0d\n  };\x0d\n\x0d\n  pp$5.parsePropertyValue = function(prop\x2C isPattern\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc\x2C refDestructuringErrors\x2C containsEsc) {\x0d\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\x0d\n      { this.unexpected(); }\x0d\n\x0d\n    if (this.eat(types$1.colon)) {\x0d\n      prop.value = isPattern ? this.parseMaybeDefault(this.start\x2C this.startLoc) : this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      prop.kind = "init";\x0d\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\x0d\n      if (isPattern) { this.unexpected(); }\x0d\n      prop.kind = "init";\x0d\n      prop.method = true;\x0d\n      prop.value = this.parseMethod(isGenerator\x2C isAsync);\x0d\n    } else if (!isPattern && !containsEsc &&\x0d\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&\x0d\n               (prop.key.name === "get" || prop.key.name === "set") &&\x0d\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\x0d\n      if (isGenerator || isAsync) { this.unexpected(); }\x0d\n      prop.kind = prop.key.name;\x0d\n      this.parsePropertyName(prop);\x0d\n      prop.value = this.parseMethod(false);\x0d\n      var paramCount = prop.kind === "get" ? 0 : 1;\x0d\n      if (prop.value.params.length !== paramCount) {\x0d\n        var start = prop.value.start;\x0d\n        if (prop.kind === "get")\x0d\n          { this.raiseRecoverable(start\x2C "getter should have no params"); }\x0d\n        else\x0d\n          { this.raiseRecoverable(start\x2C "setter should have exactly one param"); }\x0d\n      } else {\x0d\n        if (prop.kind === "set" && prop.value.params[0].type === "RestElement")\x0d\n          { this.raiseRecoverable(prop.value.params[0].start\x2C "Setter cannot use rest params"); }\x0d\n      }\x0d\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {\x0d\n      if (isGenerator || isAsync) { this.unexpected(); }\x0d\n      this.checkUnreserved(prop.key);\x0d\n      if (prop.key.name === "await" && !this.awaitIdentPos)\x0d\n        { this.awaitIdentPos = startPos; }\x0d\n      prop.kind = "init";\x0d\n      if (isPattern) {\x0d\n        prop.value = this.parseMaybeDefault(startPos\x2C startLoc\x2C this.copyNode(prop.key));\x0d\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\x0d\n        if (refDestructuringErrors.shorthandAssign < 0)\x0d\n          { refDestructuringErrors.shorthandAssign = this.start; }\x0d\n        prop.value = this.parseMaybeDefault(startPos\x2C startLoc\x2C this.copyNode(prop.key));\x0d\n      } else {\x0d\n        prop.value = this.copyNode(prop.key);\x0d\n      }\x0d\n      prop.shorthand = true;\x0d\n    } else { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  pp$5.parsePropertyName = function(prop) {\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      if (this.eat(types$1.bracketL)) {\x0d\n        prop.computed = true;\x0d\n        prop.key = this.parseMaybeAssign();\x0d\n        this.expect(types$1.bracketR);\x0d\n        return prop.key\x0d\n      } else {\x0d\n        prop.computed = false;\x0d\n      }\x0d\n    }\x0d\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never")\x0d\n  };\x0d\n\x0d\n  // Initialize empty function node.\x0d\n\x0d\n  pp$5.initFunction = function(node) {\x0d\n    node.id = null;\x0d\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\x0d\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\x0d\n  };\x0d\n\x0d\n  // Parse object or class method.\x0d\n\x0d\n  pp$5.parseMethod = function(isGenerator\x2C isAsync\x2C allowDirectSuper) {\x0d\n    var node = this.startNode()\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 6)\x0d\n      { node.generator = isGenerator; }\x0d\n    if (this.options.ecmaVersion >= 8)\x0d\n      { node.async = !!isAsync; }\x0d\n\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n    this.enterScope(functionFlags(isAsync\x2C node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\x0d\n\x0d\n    this.expect(types$1.parenL);\x0d\n    node.params = this.parseBindingList(types$1.parenR\x2C false\x2C this.options.ecmaVersion >= 8);\x0d\n    this.checkYieldAwaitInDefaultParams();\x0d\n    this.parseFunctionBody(node\x2C false\x2C true\x2C false);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C "FunctionExpression")\x0d\n  };\x0d\n\x0d\n  // Parse arrow function expression with given parameters.\x0d\n\x0d\n  pp$5.parseArrowExpression = function(node\x2C params\x2C isAsync\x2C forInit) {\x0d\n    var oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n\x0d\n    this.enterScope(functionFlags(isAsync\x2C false) | SCOPE_ARROW);\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\x0d\n\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n\x0d\n    node.params = this.toAssignableList(params\x2C true);\x0d\n    this.parseFunctionBody(node\x2C true\x2C false\x2C forInit);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C "ArrowFunctionExpression")\x0d\n  };\x0d\n\x0d\n  // Parse function body and check parameters.\x0d\n\x0d\n  pp$5.parseFunctionBody = function(node\x2C isArrowFunction\x2C isMethod\x2C forInit) {\x0d\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\x0d\n    var oldStrict = this.strict\x2C useStrict = false;\x0d\n\x0d\n    if (isExpression) {\x0d\n      node.body = this.parseMaybeAssign(forInit);\x0d\n      node.expression = true;\x0d\n      this.checkParams(node\x2C false);\x0d\n    } else {\x0d\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\x0d\n      if (!oldStrict || nonSimple) {\x0d\n        useStrict = this.strictDirective(this.end);\x0d\n        // If this is a strict mode function\x2C verify that argument names\x0d\n        // are not repeated\x2C and it does not try to bind the words `eval`\x0d\n        // or `arguments`.\x0d\n        if (useStrict && nonSimple)\x0d\n          { this.raiseRecoverable(node.start\x2C "Illegal 'use strict' directive in function with non-simple parameter list"); }\x0d\n      }\x0d\n      // Start a new scope with regard to labels and the `inFunction`\x0d\n      // flag (restore them to their old value afterwards).\x0d\n      var oldLabels = this.labels;\x0d\n      this.labels = [];\x0d\n      if (useStrict) { this.strict = true; }\x0d\n\x0d\n      // Add the params to varDeclaredNames to ensure that an error is thrown\x0d\n      // if a let/const declaration in the function clashes with one of the params.\x0d\n      this.checkParams(node\x2C !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\x0d\n      // Ensure the function name isn't a forbidden identifier in strict mode\x2C e.g. 'eval'\x0d\n      if (this.strict && node.id) { this.checkLValSimple(node.id\x2C BIND_OUTSIDE); }\x0d\n      node.body = this.parseBlock(false\x2C undefined\x2C useStrict && !oldStrict);\x0d\n      node.expression = false;\x0d\n      this.adaptDirectivePrologue(node.body.body);\x0d\n      this.labels = oldLabels;\x0d\n    }\x0d\n    this.exitScope();\x0d\n  };\x0d\n\x0d\n  pp$5.isSimpleParamList = function(params) {\x0d\n    for (var i = 0\x2C list = params; i < list.length; i += 1)\x0d\n      {\x0d\n      var param = list[i];\x0d\n\x0d\n      if (param.type !== "Identifier") { return false\x0d\n    } }\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Checks function params for various disallowed patterns such as using "eval"\x0d\n  // or "arguments" and duplicate parameters.\x0d\n\x0d\n  pp$5.checkParams = function(node\x2C allowDuplicates) {\x0d\n    var nameHash = Object.create(null);\x0d\n    for (var i = 0\x2C list = node.params; i < list.length; i += 1)\x0d\n      {\x0d\n      var param = list[i];\x0d\n\x0d\n      this.checkLValInnerPattern(param\x2C BIND_VAR\x2C allowDuplicates ? null : nameHash);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of expressions\x2C and returns them as\x0d\n  // an array. `close` is the token type that ends the list\x2C and\x0d\n  // `allowEmpty` can be turned on to allow subsequent commas with\x0d\n  // nothing in between them to be parsed as `null` (which is needed\x0d\n  // for array literals).\x0d\n\x0d\n  pp$5.parseExprList = function(close\x2C allowTrailingComma\x2C allowEmpty\x2C refDestructuringErrors) {\x0d\n    var elts = []\x2C first = true;\x0d\n    while (!this.eat(close)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var elt = (void 0);\x0d\n      if (allowEmpty && this.type === types$1.comma)\x0d\n        { elt = null; }\x0d\n      else if (this.type === types$1.ellipsis) {\x0d\n        elt = this.parseSpread(refDestructuringErrors);\x0d\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\x0d\n          { refDestructuringErrors.trailingComma = this.start; }\x0d\n      } else {\x0d\n        elt = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      }\x0d\n      elts.push(elt);\x0d\n    }\x0d\n    return elts\x0d\n  };\x0d\n\x0d\n  pp$5.checkUnreserved = function(ref) {\x0d\n    var start = ref.start;\x0d\n    var end = ref.end;\x0d\n    var name = ref.name;\x0d\n\x0d\n    if (this.inGenerator && name === "yield")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'yield' as identifier inside a generator"); }\x0d\n    if (this.inAsync && name === "await")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n    if (this.currentThisScope().inClassFieldInit && name === "arguments")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'arguments' in class field initializer"); }\x0d\n    if (this.inClassStaticBlock && (name === "arguments" || name === "await"))\x0d\n      { this.raise(start\x2C ("Cannot use " + name + " in class static initialization block")); }\x0d\n    if (this.keywords.test(name))\x0d\n      { this.raise(start\x2C ("Unexpected keyword '" + name + "'")); }\x0d\n    if (this.options.ecmaVersion < 6 &&\x0d\n      this.input.slice(start\x2C end).indexOf("\\\\") !== -1) { return }\x0d\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\x0d\n    if (re.test(name)) {\x0d\n      if (!this.inAsync && name === "await")\x0d\n        { this.raiseRecoverable(start\x2C "Cannot use keyword 'await' outside an async function"); }\x0d\n      this.raiseRecoverable(start\x2C ("The keyword '" + name + "' is reserved"));\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Parse the next token as an identifier. If `liberal` is true (used\x0d\n  // when parsing properties)\x2C it will also convert keywords into\x0d\n  // identifiers.\x0d\n\x0d\n  pp$5.parseIdent = function(liberal) {\x0d\n    var node = this.startNode();\x0d\n    if (this.type === types$1.name) {\x0d\n      node.name = this.value;\x0d\n    } else if (this.type.keyword) {\x0d\n      node.name = this.type.keyword;\x0d\n\x0d\n      // To fix https://github.com/acornjs/acorn/issues/575\x0d\n      // `class` and `function` keywords push new context into this.context.\x0d\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\x0d\n      // If the previous token is a dot\x2C this does not apply because the context-managing code already ignored the keyword\x0d\n      if ((node.name === "class" || node.name === "function") &&\x0d\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\x0d\n        this.context.pop();\x0d\n      }\x0d\n    } else {\x0d\n      this.unexpected();\x0d\n    }\x0d\n    this.next(!!liberal);\x0d\n    this.finishNode(node\x2C "Identifier");\x0d\n    if (!liberal) {\x0d\n      this.checkUnreserved(node);\x0d\n      if (node.name === "await" && !this.awaitIdentPos)\x0d\n        { this.awaitIdentPos = node.start; }\x0d\n    }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$5.parsePrivateIdent = function() {\x0d\n    var node = this.startNode();\x0d\n    if (this.type === types$1.privateId) {\x0d\n      node.name = this.value;\x0d\n    } else {\x0d\n      this.unexpected();\x0d\n    }\x0d\n    this.next();\x0d\n    this.finishNode(node\x2C "PrivateIdentifier");\x0d\n\x0d\n    // For validating existence\x0d\n    if (this.privateNameStack.length === 0) {\x0d\n      this.raise(node.start\x2C ("Private field '#" + (node.name) + "' must be declared in an enclosing class"));\x0d\n    } else {\x0d\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\x0d\n    }\x0d\n\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  // Parses yield expression inside generator.\x0d\n\x0d\n  pp$5.parseYield = function(forInit) {\x0d\n    if (!this.yieldPos) { this.yieldPos = this.start; }\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\x0d\n      node.delegate = false;\x0d\n      node.argument = null;\x0d\n    } else {\x0d\n      node.delegate = this.eat(types$1.star);\x0d\n      node.argument = this.parseMaybeAssign(forInit);\x0d\n    }\x0d\n    return this.finishNode(node\x2C "YieldExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseAwait = function(forInit) {\x0d\n    if (!this.awaitPos) { this.awaitPos = this.start; }\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.argument = this.parseMaybeUnary(null\x2C true\x2C false\x2C forInit);\x0d\n    return this.finishNode(node\x2C "AwaitExpression")\x0d\n  };\x0d\n\x0d\n  var pp$4 = Parser.prototype;\x0d\n\x0d\n  // This function is used to raise exceptions on parse errors. It\x0d\n  // takes an offset integer (into the current `input`) to indicate\x0d\n  // the location of the error\x2C attaches the position to the end\x0d\n  // of the error message\x2C and then raises a `SyntaxError` with that\x0d\n  // message.\x0d\n\x0d\n  pp$4.raise = function(pos\x2C message) {\x0d\n    var loc = getLineInfo(this.input\x2C pos);\x0d\n    message += " (" + loc.line + ":" + loc.column + ")";\x0d\n    var err = new SyntaxError(message);\x0d\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\x0d\n    throw err\x0d\n  };\x0d\n\x0d\n  pp$4.raiseRecoverable = pp$4.raise;\x0d\n\x0d\n  pp$4.curPosition = function() {\x0d\n    if (this.options.locations) {\x0d\n      return new Position(this.curLine\x2C this.pos - this.lineStart)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  var pp$3 = Parser.prototype;\x0d\n\x0d\n  var Scope = function Scope(flags) {\x0d\n    this.flags = flags;\x0d\n    // A list of var-declared names in the current lexical scope\x0d\n    this.var = [];\x0d\n    // A list of lexically-declared names in the current lexical scope\x0d\n    this.lexical = [];\x0d\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\x0d\n    this.functions = [];\x0d\n    // A switch to disallow the identifier reference 'arguments'\x0d\n    this.inClassFieldInit = false;\x0d\n  };\x0d\n\x0d\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\x0d\n\x0d\n  pp$3.enterScope = function(flags) {\x0d\n    this.scopeStack.push(new Scope(flags));\x0d\n  };\x0d\n\x0d\n  pp$3.exitScope = function() {\x0d\n    this.scopeStack.pop();\x0d\n  };\x0d\n\x0d\n  // The spec says:\x0d\n  // > At the top level of a function\x2C or script\x2C function declarations are\x0d\n  // > treated like var declarations rather than like lexical declarations.\x0d\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\x0d\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\x0d\n  };\x0d\n\x0d\n  pp$3.declareName = function(name\x2C bindingType\x2C pos) {\x0d\n    var redeclared = false;\x0d\n    if (bindingType === BIND_LEXICAL) {\x0d\n      var scope = this.currentScope();\x0d\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\x0d\n      scope.lexical.push(name);\x0d\n      if (this.inModule && (scope.flags & SCOPE_TOP))\x0d\n        { delete this.undefinedExports[name]; }\x0d\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\x0d\n      var scope$1 = this.currentScope();\x0d\n      scope$1.lexical.push(name);\x0d\n    } else if (bindingType === BIND_FUNCTION) {\x0d\n      var scope$2 = this.currentScope();\x0d\n      if (this.treatFunctionsAsVar)\x0d\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\x0d\n      else\x0d\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\x0d\n      scope$2.functions.push(name);\x0d\n    } else {\x0d\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\x0d\n        var scope$3 = this.scopeStack[i];\x0d\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\x0d\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\x0d\n          redeclared = true;\x0d\n          break\x0d\n        }\x0d\n        scope$3.var.push(name);\x0d\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\x0d\n          { delete this.undefinedExports[name]; }\x0d\n        if (scope$3.flags & SCOPE_VAR) { break }\x0d\n      }\x0d\n    }\x0d\n    if (redeclared) { this.raiseRecoverable(pos\x2C ("Identifier '" + name + "' has already been declared")); }\x0d\n  };\x0d\n\x0d\n  pp$3.checkLocalExport = function(id) {\x0d\n    // scope.functions must be empty as Module code is always strict.\x0d\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\x0d\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\x0d\n      this.undefinedExports[id.name] = id;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$3.currentScope = function() {\x0d\n    return this.scopeStack[this.scopeStack.length - 1]\x0d\n  };\x0d\n\x0d\n  pp$3.currentVarScope = function() {\x0d\n    for (var i = this.scopeStack.length - 1;; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.flags & SCOPE_VAR) { return scope }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Could be useful for `this`\x2C `new.target`\x2C `super()`\x2C `super.property`\x2C and `super[property]`.\x0d\n  pp$3.currentThisScope = function() {\x0d\n    for (var i = this.scopeStack.length - 1;; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  var Node = function Node(parser\x2C pos\x2C loc) {\x0d\n    this.type = "";\x0d\n    this.start = pos;\x0d\n    this.end = 0;\x0d\n    if (parser.options.locations)\x0d\n      { this.loc = new SourceLocation(parser\x2C loc); }\x0d\n    if (parser.options.directSourceFile)\x0d\n      { this.sourceFile = parser.options.directSourceFile; }\x0d\n    if (parser.options.ranges)\x0d\n      { this.range = [pos\x2C 0]; }\x0d\n  };\x0d\n\x0d\n  // Start an AST node\x2C attaching a start offset.\x0d\n\x0d\n  var pp$2 = Parser.prototype;\x0d\n\x0d\n  pp$2.startNode = function() {\x0d\n    return new Node(this\x2C this.start\x2C this.startLoc)\x0d\n  };\x0d\n\x0d\n  pp$2.startNodeAt = function(pos\x2C loc) {\x0d\n    return new Node(this\x2C pos\x2C loc)\x0d\n  };\x0d\n\x0d\n  // Finish an AST node\x2C adding `type` and `end` properties.\x0d\n\x0d\n  function finishNodeAt(node\x2C type\x2C pos\x2C loc) {\x0d\n    node.type = type;\x0d\n    node.end = pos;\x0d\n    if (this.options.locations)\x0d\n      { node.loc.end = loc; }\x0d\n    if (this.options.ranges)\x0d\n      { node.range[1] = pos; }\x0d\n    return node\x0d\n  }\x0d\n\x0d\n  pp$2.finishNode = function(node\x2C type) {\x0d\n    return finishNodeAt.call(this\x2C node\x2C type\x2C this.lastTokEnd\x2C this.lastTokEndLoc)\x0d\n  };\x0d\n\x0d\n  // Finish node at given position\x0d\n\x0d\n  pp$2.finishNodeAt = function(node\x2C type\x2C pos\x2C loc) {\x0d\n    return finishNodeAt.call(this\x2C node\x2C type\x2C pos\x2C loc)\x0d\n  };\x0d\n\x0d\n  pp$2.copyNode = function(node) {\x0d\n    var newNode = new Node(this\x2C node.start\x2C this.startLoc);\x0d\n    for (var prop in node) { newNode[prop] = node[prop]; }\x0d\n    return newNode\x0d\n  };\x0d\n\x0d\n  // This file contains Unicode properties extracted from the ECMAScript specification.\x0d\n  // The lists are extracted like so:\x0d\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\x0d\n\x0d\n  // #table-binary-unicode-properties\x0d\n  var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";\x0d\n  var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";\x0d\n  var ecma11BinaryProperties = ecma10BinaryProperties;\x0d\n  var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";\x0d\n  var ecma13BinaryProperties = ecma12BinaryProperties;\x0d\n  var ecma14BinaryProperties = ecma13BinaryProperties;\x0d\n\x0d\n  var unicodeBinaryProperties = {\x0d\n    9: ecma9BinaryProperties\x2C\x0d\n    10: ecma10BinaryProperties\x2C\x0d\n    11: ecma11BinaryProperties\x2C\x0d\n    12: ecma12BinaryProperties\x2C\x0d\n    13: ecma13BinaryProperties\x2C\x0d\n    14: ecma14BinaryProperties\x0d\n  };\x0d\n\x0d\n  // #table-unicode-general-category-values\x0d\n  var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";\x0d\n\x0d\n  // #table-unicode-script-values\x0d\n  var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";\x0d\n  var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";\x0d\n  var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";\x0d\n  var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";\x0d\n  var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";\x0d\n  var ecma14ScriptValues = ecma13ScriptValues + " Kawi Nag_Mundari Nagm";\x0d\n\x0d\n  var unicodeScriptValues = {\x0d\n    9: ecma9ScriptValues\x2C\x0d\n    10: ecma10ScriptValues\x2C\x0d\n    11: ecma11ScriptValues\x2C\x0d\n    12: ecma12ScriptValues\x2C\x0d\n    13: ecma13ScriptValues\x2C\x0d\n    14: ecma14ScriptValues\x0d\n  };\x0d\n\x0d\n  var data = {};\x0d\n  function buildUnicodeData(ecmaVersion) {\x0d\n    var d = data[ecmaVersion] = {\x0d\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues)\x2C\x0d\n      nonBinary: {\x0d\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues)\x2C\x0d\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\x0d\n      }\x0d\n    };\x0d\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\x0d\n\x0d\n    d.nonBinary.gc = d.nonBinary.General_Category;\x0d\n    d.nonBinary.sc = d.nonBinary.Script;\x0d\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\x0d\n  }\x0d\n\x0d\n  for (var i = 0\x2C list = [9\x2C 10\x2C 11\x2C 12\x2C 13\x2C 14]; i < list.length; i += 1) {\x0d\n    var ecmaVersion = list[i];\x0d\n\x0d\n    buildUnicodeData(ecmaVersion);\x0d\n  }\x0d\n\x0d\n  var pp$1 = Parser.prototype;\x0d\n\x0d\n  var RegExpValidationState = function RegExpValidationState(parser) {\x0d\n    this.parser = parser;\x0d\n    this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "");\x0d\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\x0d\n    this.source = "";\x0d\n    this.flags = "";\x0d\n    this.start = 0;\x0d\n    this.switchU = false;\x0d\n    this.switchN = false;\x0d\n    this.pos = 0;\x0d\n    this.lastIntValue = 0;\x0d\n    this.lastStringValue = "";\x0d\n    this.lastAssertionIsQuantifiable = false;\x0d\n    this.numCapturingParens = 0;\x0d\n    this.maxBackReference = 0;\x0d\n    this.groupNames = [];\x0d\n    this.backReferenceNames = [];\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.reset = function reset (start\x2C pattern\x2C flags) {\x0d\n    var unicode = flags.indexOf("u") !== -1;\x0d\n    this.start = start | 0;\x0d\n    this.source = pattern + "";\x0d\n    this.flags = flags;\x0d\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\x0d\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.raise = function raise (message) {\x0d\n    this.parser.raiseRecoverable(this.start\x2C ("Invalid regular expression: /" + (this.source) + "/: " + message));\x0d\n  };\x0d\n\x0d\n  // If u flag is given\x2C this returns the code point at the index (it combines a surrogate pair).\x0d\n  // Otherwise\x2C this returns the code unit of the index (can be a part of a surrogate pair).\x0d\n  RegExpValidationState.prototype.at = function at (i\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var s = this.source;\x0d\n    var l = s.length;\x0d\n    if (i >= l) {\x0d\n      return -1\x0d\n    }\x0d\n    var c = s.charCodeAt(i);\x0d\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\x0d\n      return c\x0d\n    }\x0d\n    var next = s.charCodeAt(i + 1);\x0d\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var s = this.source;\x0d\n    var l = s.length;\x0d\n    if (i >= l) {\x0d\n      return l\x0d\n    }\x0d\n    var c = s.charCodeAt(i)\x2C next;\x0d\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\x0d\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\x0d\n      return i + 1\x0d\n    }\x0d\n    return i + 2\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.current = function current (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    return this.at(this.pos\x2C forceU)\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    return this.at(this.nextIndex(this.pos\x2C forceU)\x2C forceU)\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.advance = function advance (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    this.pos = this.nextIndex(this.pos\x2C forceU);\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.eat = function eat (ch\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    if (this.current(forceU) === ch) {\x0d\n      this.advance(forceU);\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Validate the flags part of a given RegExpLiteral.\x0d\n   *\x0d\n   * @param {RegExpValidationState} state The state to validate RegExp.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  pp$1.validateRegExpFlags = function(state) {\x0d\n    var validFlags = state.validFlags;\x0d\n    var flags = state.flags;\x0d\n\x0d\n    for (var i = 0; i < flags.length; i++) {\x0d\n      var flag = flags.charAt(i);\x0d\n      if (validFlags.indexOf(flag) === -1) {\x0d\n        this.raise(state.start\x2C "Invalid regular expression flag");\x0d\n      }\x0d\n      if (flags.indexOf(flag\x2C i + 1) > -1) {\x0d\n        this.raise(state.start\x2C "Duplicate regular expression flag");\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Validate the pattern part of a given RegExpLiteral.\x0d\n   *\x0d\n   * @param {RegExpValidationState} state The state to validate RegExp.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  pp$1.validateRegExpPattern = function(state) {\x0d\n    this.regexp_pattern(state);\x0d\n\x0d\n    // The goal symbol for the parse is |Pattern[~U\x2C ~N]|. If the result of\x0d\n    // parsing contains a |GroupName|\x2C reparse with the goal symbol\x0d\n    // |Pattern[~U\x2C +N]| and use this result instead. Throw a *SyntaxError*\x0d\n    // exception if _P_ did not conform to the grammar\x2C if any elements of _P_\x0d\n    // were not matched by the parse\x2C or if any Early Error conditions exist.\x0d\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\x0d\n      state.switchN = true;\x0d\n      this.regexp_pattern(state);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\x0d\n  pp$1.regexp_pattern = function(state) {\x0d\n    state.pos = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    state.lastStringValue = "";\x0d\n    state.lastAssertionIsQuantifiable = false;\x0d\n    state.numCapturingParens = 0;\x0d\n    state.maxBackReference = 0;\x0d\n    state.groupNames.length = 0;\x0d\n    state.backReferenceNames.length = 0;\x0d\n\x0d\n    this.regexp_disjunction(state);\x0d\n\x0d\n    if (state.pos !== state.source.length) {\x0d\n      // Make the same messages as V8.\x0d\n      if (state.eat(0x29 /* ) */)) {\x0d\n        state.raise("Unmatched ')'");\x0d\n      }\x0d\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\x0d\n        state.raise("Lone quantifier brackets");\x0d\n      }\x0d\n    }\x0d\n    if (state.maxBackReference > state.numCapturingParens) {\x0d\n      state.raise("Invalid escape");\x0d\n    }\x0d\n    for (var i = 0\x2C list = state.backReferenceNames; i < list.length; i += 1) {\x0d\n      var name = list[i];\x0d\n\x0d\n      if (state.groupNames.indexOf(name) === -1) {\x0d\n        state.raise("Invalid named capture referenced");\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\x0d\n  pp$1.regexp_disjunction = function(state) {\x0d\n    this.regexp_alternative(state);\x0d\n    while (state.eat(0x7C /* | */)) {\x0d\n      this.regexp_alternative(state);\x0d\n    }\x0d\n\x0d\n    // Make the same message as V8.\x0d\n    if (this.regexp_eatQuantifier(state\x2C true)) {\x0d\n      state.raise("Nothing to repeat");\x0d\n    }\x0d\n    if (state.eat(0x7B /* { */)) {\x0d\n      state.raise("Lone quantifier brackets");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\x0d\n  pp$1.regexp_alternative = function(state) {\x0d\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\x0d\n      { }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\x0d\n  pp$1.regexp_eatTerm = function(state) {\x0d\n    if (this.regexp_eatAssertion(state)) {\x0d\n      // Handle `QuantifiableAssertion Quantifier` alternative.\x0d\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\x0d\n      // is a QuantifiableAssertion.\x0d\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\x0d\n        // Make the same message as V8.\x0d\n        if (state.switchU) {\x0d\n          state.raise("Invalid quantifier");\x0d\n        }\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\x0d\n      this.regexp_eatQuantifier(state);\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\x0d\n  pp$1.regexp_eatAssertion = function(state) {\x0d\n    var start = state.pos;\x0d\n    state.lastAssertionIsQuantifiable = false;\x0d\n\x0d\n    // ^\x2C $\x0d\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    // \\b \\B\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    // Lookahead / Lookbehind\x0d\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\x0d\n      var lookbehind = false;\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        lookbehind = state.eat(0x3C /* < */);\x0d\n      }\x0d\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\x0d\n        this.regexp_disjunction(state);\x0d\n        if (!state.eat(0x29 /* ) */)) {\x0d\n          state.raise("Unterminated group");\x0d\n        }\x0d\n        state.lastAssertionIsQuantifiable = !lookbehind;\x0d\n        return true\x0d\n      }\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\x0d\n  pp$1.regexp_eatQuantifier = function(state\x2C noError) {\x0d\n    if ( noError === void 0 ) noError = false;\x0d\n\x0d\n    if (this.regexp_eatQuantifierPrefix(state\x2C noError)) {\x0d\n      state.eat(0x3F /* ? */);\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\x0d\n  pp$1.regexp_eatQuantifierPrefix = function(state\x2C noError) {\x0d\n    return (\x0d\n      state.eat(0x2A /* * */) ||\x0d\n      state.eat(0x2B /* + */) ||\x0d\n      state.eat(0x3F /* ? */) ||\x0d\n      this.regexp_eatBracedQuantifier(state\x2C noError)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatBracedQuantifier = function(state\x2C noError) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x7B /* { */)) {\x0d\n      var min = 0\x2C max = -1;\x0d\n      if (this.regexp_eatDecimalDigits(state)) {\x0d\n        min = state.lastIntValue;\x0d\n        if (state.eat(0x2C /* \x2C */) && this.regexp_eatDecimalDigits(state)) {\x0d\n          max = state.lastIntValue;\x0d\n        }\x0d\n        if (state.eat(0x7D /* } */)) {\x0d\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\x0d\n          if (max !== -1 && max < min && !noError) {\x0d\n            state.raise("numbers out of order in {} quantifier");\x0d\n          }\x0d\n          return true\x0d\n        }\x0d\n      }\x0d\n      if (state.switchU && !noError) {\x0d\n        state.raise("Incomplete quantifier");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\x0d\n  pp$1.regexp_eatAtom = function(state) {\x0d\n    return (\x0d\n      this.regexp_eatPatternCharacters(state) ||\x0d\n      state.eat(0x2E /* . */) ||\x0d\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\x0d\n      this.regexp_eatCharacterClass(state) ||\x0d\n      this.regexp_eatUncapturingGroup(state) ||\x0d\n      this.regexp_eatCapturingGroup(state)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (this.regexp_eatAtomEscape(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatUncapturingGroup = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x28 /* ( */)) {\x0d\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\x0d\n        this.regexp_disjunction(state);\x0d\n        if (state.eat(0x29 /* ) */)) {\x0d\n          return true\x0d\n        }\x0d\n        state.raise("Unterminated group");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatCapturingGroup = function(state) {\x0d\n    if (state.eat(0x28 /* ( */)) {\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        this.regexp_groupSpecifier(state);\x0d\n      } else if (state.current() === 0x3F /* ? */) {\x0d\n        state.raise("Invalid group");\x0d\n      }\x0d\n      this.regexp_disjunction(state);\x0d\n      if (state.eat(0x29 /* ) */)) {\x0d\n        state.numCapturingParens += 1;\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Unterminated group");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\x0d\n  pp$1.regexp_eatExtendedAtom = function(state) {\x0d\n    return (\x0d\n      state.eat(0x2E /* . */) ||\x0d\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\x0d\n      this.regexp_eatCharacterClass(state) ||\x0d\n      this.regexp_eatUncapturingGroup(state) ||\x0d\n      this.regexp_eatCapturingGroup(state) ||\x0d\n      this.regexp_eatInvalidBracedQuantifier(state) ||\x0d\n      this.regexp_eatExtendedPatternCharacter(state)\x0d\n    )\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\x0d\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\x0d\n    if (this.regexp_eatBracedQuantifier(state\x2C true)) {\x0d\n      state.raise("Nothing to repeat");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\x0d\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isSyntaxCharacter(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  function isSyntaxCharacter(ch) {\x0d\n    return (\x0d\n      ch === 0x24 /* $ */ ||\x0d\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\x0d\n      ch === 0x2E /* . */ ||\x0d\n      ch === 0x3F /* ? */ ||\x0d\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\x0d\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\x0d\n  // But eat eager.\x0d\n  pp$1.regexp_eatPatternCharacters = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\x0d\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (\x0d\n      ch !== -1 &&\x0d\n      ch !== 0x24 /* $ */ &&\x0d\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\x0d\n      ch !== 0x2E /* . */ &&\x0d\n      ch !== 0x3F /* ? */ &&\x0d\n      ch !== 0x5B /* [ */ &&\x0d\n      ch !== 0x5E /* ^ */ &&\x0d\n      ch !== 0x7C /* | */\x0d\n    ) {\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // GroupSpecifier ::\x0d\n  //   [empty]\x0d\n  //   `?` GroupName\x0d\n  pp$1.regexp_groupSpecifier = function(state) {\x0d\n    if (state.eat(0x3F /* ? */)) {\x0d\n      if (this.regexp_eatGroupName(state)) {\x0d\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\x0d\n          state.raise("Duplicate capture group name");\x0d\n        }\x0d\n        state.groupNames.push(state.lastStringValue);\x0d\n        return\x0d\n      }\x0d\n      state.raise("Invalid group");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // GroupName ::\x0d\n  //   `<` RegExpIdentifierName `>`\x0d\n  // Note: this updates `state.lastStringValue` property with the eaten name.\x0d\n  pp$1.regexp_eatGroupName = function(state) {\x0d\n    state.lastStringValue = "";\x0d\n    if (state.eat(0x3C /* < */)) {\x0d\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Invalid capture group name");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // RegExpIdentifierName ::\x0d\n  //   RegExpIdentifierStart\x0d\n  //   RegExpIdentifierName RegExpIdentifierPart\x0d\n  // Note: this updates `state.lastStringValue` property with the eaten name.\x0d\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\x0d\n    state.lastStringValue = "";\x0d\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\x0d\n      state.lastStringValue += codePointToString(state.lastIntValue);\x0d\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\x0d\n        state.lastStringValue += codePointToString(state.lastIntValue);\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // RegExpIdentifierStart ::\x0d\n  //   UnicodeIDStart\x0d\n  //   `$`\x0d\n  //   `_`\x0d\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\x0d\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\x0d\n    var start = state.pos;\x0d\n    var forceU = this.options.ecmaVersion >= 11;\x0d\n    var ch = state.current(forceU);\x0d\n    state.advance(forceU);\x0d\n\x0d\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C forceU)) {\x0d\n      ch = state.lastIntValue;\x0d\n    }\x0d\n    if (isRegExpIdentifierStart(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n  function isRegExpIdentifierStart(ch) {\x0d\n    return isIdentifierStart(ch\x2C true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\x0d\n  }\x0d\n\x0d\n  // RegExpIdentifierPart ::\x0d\n  //   UnicodeIDContinue\x0d\n  //   `$`\x0d\n  //   `_`\x0d\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\x0d\n  //   <ZWNJ>\x0d\n  //   <ZWJ>\x0d\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\x0d\n    var start = state.pos;\x0d\n    var forceU = this.options.ecmaVersion >= 11;\x0d\n    var ch = state.current(forceU);\x0d\n    state.advance(forceU);\x0d\n\x0d\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C forceU)) {\x0d\n      ch = state.lastIntValue;\x0d\n    }\x0d\n    if (isRegExpIdentifierPart(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n  function isRegExpIdentifierPart(ch) {\x0d\n    return isIdentifierChar(ch\x2C true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\x0d\n  pp$1.regexp_eatAtomEscape = function(state) {\x0d\n    if (\x0d\n      this.regexp_eatBackReference(state) ||\x0d\n      this.regexp_eatCharacterClassEscape(state) ||\x0d\n      this.regexp_eatCharacterEscape(state) ||\x0d\n      (state.switchN && this.regexp_eatKGroupName(state))\x0d\n    ) {\x0d\n      return true\x0d\n    }\x0d\n    if (state.switchU) {\x0d\n      // Make the same message as V8.\x0d\n      if (state.current() === 0x63 /* c */) {\x0d\n        state.raise("Invalid unicode escape");\x0d\n      }\x0d\n      state.raise("Invalid escape");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatBackReference = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (this.regexp_eatDecimalEscape(state)) {\x0d\n      var n = state.lastIntValue;\x0d\n      if (state.switchU) {\x0d\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\x0d\n        if (n > state.maxBackReference) {\x0d\n          state.maxBackReference = n;\x0d\n        }\x0d\n        return true\x0d\n      }\x0d\n      if (n <= state.numCapturingParens) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatKGroupName = function(state) {\x0d\n    if (state.eat(0x6B /* k */)) {\x0d\n      if (this.regexp_eatGroupName(state)) {\x0d\n        state.backReferenceNames.push(state.lastStringValue);\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Invalid named reference");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\x0d\n  pp$1.regexp_eatCharacterEscape = function(state) {\x0d\n    return (\x0d\n      this.regexp_eatControlEscape(state) ||\x0d\n      this.regexp_eatCControlLetter(state) ||\x0d\n      this.regexp_eatZero(state) ||\x0d\n      this.regexp_eatHexEscapeSequence(state) ||\x0d\n      this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C false) ||\x0d\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\x0d\n      this.regexp_eatIdentityEscape(state)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatCControlLetter = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x63 /* c */)) {\x0d\n      if (this.regexp_eatControlLetter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatZero = function(state) {\x0d\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\x0d\n      state.lastIntValue = 0;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\x0d\n  pp$1.regexp_eatControlEscape = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (ch === 0x74 /* t */) {\x0d\n      state.lastIntValue = 0x09; /* \\t */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x6E /* n */) {\x0d\n      state.lastIntValue = 0x0A; /* \\n */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x76 /* v */) {\x0d\n      state.lastIntValue = 0x0B; /* \\v */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x66 /* f */) {\x0d\n      state.lastIntValue = 0x0C; /* \\f */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x72 /* r */) {\x0d\n      state.lastIntValue = 0x0D; /* \\r */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\x0d\n  pp$1.regexp_eatControlLetter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isControlLetter(ch)) {\x0d\n      state.lastIntValue = ch % 0x20;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  function isControlLetter(ch) {\x0d\n    return (\x0d\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\x0d\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\x0d\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state\x2C forceU) {\x0d\n    if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var start = state.pos;\x0d\n    var switchU = forceU || state.switchU;\x0d\n\x0d\n    if (state.eat(0x75 /* u */)) {\x0d\n      if (this.regexp_eatFixedHexDigits(state\x2C 4)) {\x0d\n        var lead = state.lastIntValue;\x0d\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\x0d\n          var leadSurrogateEnd = state.pos;\x0d\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state\x2C 4)) {\x0d\n            var trail = state.lastIntValue;\x0d\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\x0d\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\x0d\n              return true\x0d\n            }\x0d\n          }\x0d\n          state.pos = leadSurrogateEnd;\x0d\n          state.lastIntValue = lead;\x0d\n        }\x0d\n        return true\x0d\n      }\x0d\n      if (\x0d\n        switchU &&\x0d\n        state.eat(0x7B /* { */) &&\x0d\n        this.regexp_eatHexDigits(state) &&\x0d\n        state.eat(0x7D /* } */) &&\x0d\n        isValidUnicode(state.lastIntValue)\x0d\n      ) {\x0d\n        return true\x0d\n      }\x0d\n      if (switchU) {\x0d\n        state.raise("Invalid unicode escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n  function isValidUnicode(ch) {\x0d\n    return ch >= 0 && ch <= 0x10FFFF\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\x0d\n  pp$1.regexp_eatIdentityEscape = function(state) {\x0d\n    if (state.switchU) {\x0d\n      if (this.regexp_eatSyntaxCharacter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.eat(0x2F /* / */)) {\x0d\n        state.lastIntValue = 0x2F; /* / */\x0d\n        return true\x0d\n      }\x0d\n      return false\x0d\n    }\x0d\n\x0d\n    var ch = state.current();\x0d\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\x0d\n  pp$1.regexp_eatDecimalEscape = function(state) {\x0d\n    state.lastIntValue = 0;\x0d\n    var ch = state.current();\x0d\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\x0d\n      do {\x0d\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\x0d\n        state.advance();\x0d\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\x0d\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\x0d\n    var ch = state.current();\x0d\n\x0d\n    if (isCharacterClassEscape(ch)) {\x0d\n      state.lastIntValue = -1;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      state.switchU &&\x0d\n      this.options.ecmaVersion >= 9 &&\x0d\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\x0d\n    ) {\x0d\n      state.lastIntValue = -1;\x0d\n      state.advance();\x0d\n      if (\x0d\n        state.eat(0x7B /* { */) &&\x0d\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\x0d\n        state.eat(0x7D /* } */)\x0d\n      ) {\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Invalid property name");\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n  function isCharacterClassEscape(ch) {\x0d\n    return (\x0d\n      ch === 0x64 /* d */ ||\x0d\n      ch === 0x44 /* D */ ||\x0d\n      ch === 0x73 /* s */ ||\x0d\n      ch === 0x53 /* S */ ||\x0d\n      ch === 0x77 /* w */ ||\x0d\n      ch === 0x57 /* W */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // UnicodePropertyValueExpression ::\x0d\n  //   UnicodePropertyName `=` UnicodePropertyValue\x0d\n  //   LoneUnicodePropertyNameOrValue\x0d\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    // UnicodePropertyName `=` UnicodePropertyValue\x0d\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\x0d\n      var name = state.lastStringValue;\x0d\n      if (this.regexp_eatUnicodePropertyValue(state)) {\x0d\n        var value = state.lastStringValue;\x0d\n        this.regexp_validateUnicodePropertyNameAndValue(state\x2C name\x2C value);\x0d\n        return true\x0d\n      }\x0d\n    }\x0d\n    state.pos = start;\x0d\n\x0d\n    // LoneUnicodePropertyNameOrValue\x0d\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\x0d\n      var nameOrValue = state.lastStringValue;\x0d\n      this.regexp_validateUnicodePropertyNameOrValue(state\x2C nameOrValue);\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state\x2C name\x2C value) {\x0d\n    if (!hasOwn(state.unicodeProperties.nonBinary\x2C name))\x0d\n      { state.raise("Invalid property name"); }\x0d\n    if (!state.unicodeProperties.nonBinary[name].test(value))\x0d\n      { state.raise("Invalid property value"); }\x0d\n  };\x0d\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state\x2C nameOrValue) {\x0d\n    if (!state.unicodeProperties.binary.test(nameOrValue))\x0d\n      { state.raise("Invalid property name"); }\x0d\n  };\x0d\n\x0d\n  // UnicodePropertyName ::\x0d\n  //   UnicodePropertyNameCharacters\x0d\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\x0d\n    var ch = 0;\x0d\n    state.lastStringValue = "";\x0d\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\x0d\n      state.lastStringValue += codePointToString(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.lastStringValue !== ""\x0d\n  };\x0d\n  function isUnicodePropertyNameCharacter(ch) {\x0d\n    return isControlLetter(ch) || ch === 0x5F /* _ */\x0d\n  }\x0d\n\x0d\n  // UnicodePropertyValue ::\x0d\n  //   UnicodePropertyValueCharacters\x0d\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\x0d\n    var ch = 0;\x0d\n    state.lastStringValue = "";\x0d\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\x0d\n      state.lastStringValue += codePointToString(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.lastStringValue !== ""\x0d\n  };\x0d\n  function isUnicodePropertyValueCharacter(ch) {\x0d\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\x0d\n  }\x0d\n\x0d\n  // LoneUnicodePropertyNameOrValue ::\x0d\n  //   UnicodePropertyValueCharacters\x0d\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\x0d\n    return this.regexp_eatUnicodePropertyValue(state)\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\x0d\n  pp$1.regexp_eatCharacterClass = function(state) {\x0d\n    if (state.eat(0x5B /* [ */)) {\x0d\n      state.eat(0x5E /* ^ */);\x0d\n      this.regexp_classRanges(state);\x0d\n      if (state.eat(0x5D /* ] */)) {\x0d\n        return true\x0d\n      }\x0d\n      // Unreachable since it threw "unterminated regular expression" error before.\x0d\n      state.raise("Unterminated character class");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\x0d\n  pp$1.regexp_classRanges = function(state) {\x0d\n    while (this.regexp_eatClassAtom(state)) {\x0d\n      var left = state.lastIntValue;\x0d\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\x0d\n        var right = state.lastIntValue;\x0d\n        if (state.switchU && (left === -1 || right === -1)) {\x0d\n          state.raise("Invalid character class");\x0d\n        }\x0d\n        if (left !== -1 && right !== -1 && left > right) {\x0d\n          state.raise("Range out of order in character class");\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\x0d\n  pp$1.regexp_eatClassAtom = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (this.regexp_eatClassEscape(state)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.switchU) {\x0d\n        // Make the same message as V8.\x0d\n        var ch$1 = state.current();\x0d\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\x0d\n          state.raise("Invalid class escape");\x0d\n        }\x0d\n        state.raise("Invalid escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    var ch = state.current();\x0d\n    if (ch !== 0x5D /* ] */) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\x0d\n  pp$1.regexp_eatClassEscape = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    if (state.eat(0x62 /* b */)) {\x0d\n      state.lastIntValue = 0x08; /* <BS> */\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (state.switchU && state.eat(0x2D /* - */)) {\x0d\n      state.lastIntValue = 0x2D; /* - */\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (!state.switchU && state.eat(0x63 /* c */)) {\x0d\n      if (this.regexp_eatClassControlLetter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    return (\x0d\n      this.regexp_eatCharacterClassEscape(state) ||\x0d\n      this.regexp_eatCharacterEscape(state)\x0d\n    )\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\x0d\n  pp$1.regexp_eatClassControlLetter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\x0d\n      state.lastIntValue = ch % 0x20;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\x0d\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x78 /* x */)) {\x0d\n      if (this.regexp_eatFixedHexDigits(state\x2C 2)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.switchU) {\x0d\n        state.raise("Invalid escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\x0d\n  pp$1.regexp_eatDecimalDigits = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    while (isDecimalDigit(ch = state.current())) {\x0d\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n  function isDecimalDigit(ch) {\x0d\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\x0d\n  pp$1.regexp_eatHexDigits = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    while (isHexDigit(ch = state.current())) {\x0d\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n  function isHexDigit(ch) {\x0d\n    return (\x0d\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\x0d\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\x0d\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\x0d\n    )\x0d\n  }\x0d\n  function hexToInt(ch) {\x0d\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\x0d\n      return 10 + (ch - 0x41 /* A */)\x0d\n    }\x0d\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\x0d\n      return 10 + (ch - 0x61 /* a */)\x0d\n    }\x0d\n    return ch - 0x30 /* 0 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\x0d\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\x0d\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\x0d\n    if (this.regexp_eatOctalDigit(state)) {\x0d\n      var n1 = state.lastIntValue;\x0d\n      if (this.regexp_eatOctalDigit(state)) {\x0d\n        var n2 = state.lastIntValue;\x0d\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\x0d\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\x0d\n        } else {\x0d\n          state.lastIntValue = n1 * 8 + n2;\x0d\n        }\x0d\n      } else {\x0d\n        state.lastIntValue = n1;\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\x0d\n  pp$1.regexp_eatOctalDigit = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isOctalDigit(ch)) {\x0d\n      state.lastIntValue = ch - 0x30; /* 0 */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    state.lastIntValue = 0;\x0d\n    return false\x0d\n  };\x0d\n  function isOctalDigit(ch) {\x0d\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\x0d\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\x0d\n  pp$1.regexp_eatFixedHexDigits = function(state\x2C length) {\x0d\n    var start = state.pos;\x0d\n    state.lastIntValue = 0;\x0d\n    for (var i = 0; i < length; ++i) {\x0d\n      var ch = state.current();\x0d\n      if (!isHexDigit(ch)) {\x0d\n        state.pos = start;\x0d\n        return false\x0d\n      }\x0d\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Object type used to represent tokens. Note that normally\x2C tokens\x0d\n  // simply exist as properties on the parser object. This is only\x0d\n  // used for the onToken callback and the external tokenizer.\x0d\n\x0d\n  var Token = function Token(p) {\x0d\n    this.type = p.type;\x0d\n    this.value = p.value;\x0d\n    this.start = p.start;\x0d\n    this.end = p.end;\x0d\n    if (p.options.locations)\x0d\n      { this.loc = new SourceLocation(p\x2C p.startLoc\x2C p.endLoc); }\x0d\n    if (p.options.ranges)\x0d\n      { this.range = [p.start\x2C p.end]; }\x0d\n  };\x0d\n\x0d\n  // ## Tokenizer\x0d\n\x0d\n  var pp = Parser.prototype;\x0d\n\x0d\n  // Move to the next token\x0d\n\x0d\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\x0d\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\x0d\n      { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword " + this.type.keyword); }\x0d\n    if (this.options.onToken)\x0d\n      { this.options.onToken(new Token(this)); }\x0d\n\x0d\n    this.lastTokEnd = this.end;\x0d\n    this.lastTokStart = this.start;\x0d\n    this.lastTokEndLoc = this.endLoc;\x0d\n    this.lastTokStartLoc = this.startLoc;\x0d\n    this.nextToken();\x0d\n  };\x0d\n\x0d\n  pp.getToken = function() {\x0d\n    this.next();\x0d\n    return new Token(this)\x0d\n  };\x0d\n\x0d\n  // If we're in an ES6 environment\x2C make parsers iterable\x0d\n  if (typeof Symbol !== "undefined")\x0d\n    { pp[Symbol.iterator] = function() {\x0d\n      var this$1$1 = this;\x0d\n\x0d\n      return {\x0d\n        next: function () {\x0d\n          var token = this$1$1.getToken();\x0d\n          return {\x0d\n            done: token.type === types$1.eof\x2C\x0d\n            value: token\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }; }\x0d\n\x0d\n  // Toggle strict mode. Re-reads the next number or string to please\x0d\n  // pedantic tests (`"use strict"; 010;` should fail).\x0d\n\x0d\n  // Read a single token\x2C updating the parser object's token-related\x0d\n  // properties.\x0d\n\x0d\n  pp.nextToken = function() {\x0d\n    var curContext = this.curContext();\x0d\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\x0d\n\x0d\n    this.start = this.pos;\x0d\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\x0d\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\x0d\n\x0d\n    if (curContext.override) { return curContext.override(this) }\x0d\n    else { this.readToken(this.fullCharCodeAtPos()); }\x0d\n  };\x0d\n\x0d\n  pp.readToken = function(code) {\x0d\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\x0d\n    // identifiers\x2C so '\\' also dispatches to that.\x0d\n    if (isIdentifierStart(code\x2C this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\x0d\n      { return this.readWord() }\x0d\n\x0d\n    return this.getTokenFromCode(code)\x0d\n  };\x0d\n\x0d\n  pp.fullCharCodeAtPos = function() {\x0d\n    var code = this.input.charCodeAt(this.pos);\x0d\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\x0d\n  };\x0d\n\x0d\n  pp.skipBlockComment = function() {\x0d\n    var startLoc = this.options.onComment && this.curPosition();\x0d\n    var start = this.pos\x2C end = this.input.indexOf("*/"\x2C this.pos += 2);\x0d\n    if (end === -1) { this.raise(this.pos - 2\x2C "Unterminated comment"); }\x0d\n    this.pos = end + 2;\x0d\n    if (this.options.locations) {\x0d\n      for (var nextBreak = (void 0)\x2C pos = start; (nextBreak = nextLineBreak(this.input\x2C pos\x2C this.pos)) > -1;) {\x0d\n        ++this.curLine;\x0d\n        pos = this.lineStart = nextBreak;\x0d\n      }\x0d\n    }\x0d\n    if (this.options.onComment)\x0d\n      { this.options.onComment(true\x2C this.input.slice(start + 2\x2C end)\x2C start\x2C this.pos\x2C\x0d\n                             startLoc\x2C this.curPosition()); }\x0d\n  };\x0d\n\x0d\n  pp.skipLineComment = function(startSkip) {\x0d\n    var start = this.pos;\x0d\n    var startLoc = this.options.onComment && this.curPosition();\x0d\n    var ch = this.input.charCodeAt(this.pos += startSkip);\x0d\n    while (this.pos < this.input.length && !isNewLine(ch)) {\x0d\n      ch = this.input.charCodeAt(++this.pos);\x0d\n    }\x0d\n    if (this.options.onComment)\x0d\n      { this.options.onComment(false\x2C this.input.slice(start + startSkip\x2C this.pos)\x2C start\x2C this.pos\x2C\x0d\n                             startLoc\x2C this.curPosition()); }\x0d\n  };\x0d\n\x0d\n  // Called at the start of the parse and after every token. Skips\x0d\n  // whitespace and comments\x2C and.\x0d\n\x0d\n  pp.skipSpace = function() {\x0d\n    loop: while (this.pos < this.input.length) {\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      switch (ch) {\x0d\n      case 32: case 160: // ' '\x0d\n        ++this.pos;\x0d\n        break\x0d\n      case 13:\x0d\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\x0d\n          ++this.pos;\x0d\n        }\x0d\n      case 10: case 8232: case 8233:\x0d\n        ++this.pos;\x0d\n        if (this.options.locations) {\x0d\n          ++this.curLine;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n        break\x0d\n      case 47: // '/'\x0d\n        switch (this.input.charCodeAt(this.pos + 1)) {\x0d\n        case 42: // '*'\x0d\n          this.skipBlockComment();\x0d\n          break\x0d\n        case 47:\x0d\n          this.skipLineComment(2);\x0d\n          break\x0d\n        default:\x0d\n          break loop\x0d\n        }\x0d\n        break\x0d\n      default:\x0d\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\x0d\n          ++this.pos;\x0d\n        } else {\x0d\n          break loop\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Called at the end of every token. Sets `end`\x2C `val`\x2C and\x0d\n  // maintains `context` and `exprAllowed`\x2C and skips the space after\x0d\n  // the token\x2C so that the next one's `start` will point at the\x0d\n  // right position.\x0d\n\x0d\n  pp.finishToken = function(type\x2C val) {\x0d\n    this.end = this.pos;\x0d\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\x0d\n    var prevType = this.type;\x0d\n    this.type = type;\x0d\n    this.value = val;\x0d\n\x0d\n    this.updateContext(prevType);\x0d\n  };\x0d\n\x0d\n  // ### Token reading\x0d\n\x0d\n  // This is the function that is called to fetch the next token. It\x0d\n  // is somewhat obscure\x2C because it works in character codes rather\x0d\n  // than characters\x2C and because operator parsing has been inlined\x0d\n  // into it.\x0d\n  //\x0d\n  // All in the name of speed.\x0d\n  //\x0d\n  pp.readToken_dot = function() {\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\x0d\n    var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\x0d\n      this.pos += 3;\x0d\n      return this.finishToken(types$1.ellipsis)\x0d\n    } else {\x0d\n      ++this.pos;\x0d\n      return this.finishToken(types$1.dot)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp.readToken_slash = function() { // '/'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.slash\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    var size = 1;\x0d\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\x0d\n\x0d\n    // exponentiation operator ** and **=\x0d\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\x0d\n      ++size;\x0d\n      tokentype = types$1.starstar;\x0d\n      next = this.input.charCodeAt(this.pos + 2);\x0d\n    }\x0d\n\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C size + 1) }\x0d\n    return this.finishOp(tokentype\x2C size)\x0d\n  };\x0d\n\x0d\n  pp.readToken_pipe_amp = function(code) { // '|&'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === code) {\x0d\n      if (this.options.ecmaVersion >= 12) {\x0d\n        var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n        if (next2 === 61) { return this.finishOp(types$1.assign\x2C 3) }\x0d\n      }\x0d\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND\x2C 2)\x0d\n    }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_caret = function() { // '^'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.bitwiseXOR\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_plus_min = function(code) { // '+-'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === code) {\x0d\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\x0d\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.pos)))) {\x0d\n        // A `-->` line comment\x0d\n        this.skipLineComment(3);\x0d\n        this.skipSpace();\x0d\n        return this.nextToken()\x0d\n      }\x0d\n      return this.finishOp(types$1.incDec\x2C 2)\x0d\n    }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.plusMin\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_lt_gt = function(code) { // '<>'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    var size = 1;\x0d\n    if (next === code) {\x0d\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\x0d\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign\x2C size + 1) }\x0d\n      return this.finishOp(types$1.bitShift\x2C size)\x0d\n    }\x0d\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\x0d\n        this.input.charCodeAt(this.pos + 3) === 45) {\x0d\n      // `<!--`\x2C an XML-style comment that should be interpreted as a line comment\x0d\n      this.skipLineComment(4);\x0d\n      this.skipSpace();\x0d\n      return this.nextToken()\x0d\n    }\x0d\n    if (next === 61) { size = 2; }\x0d\n    return this.finishOp(types$1.relational\x2C size)\x0d\n  };\x0d\n\x0d\n  pp.readToken_eq_excl = function(code) { // '=!'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === 61) { return this.finishOp(types$1.equality\x2C this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\x0d\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\x0d\n      this.pos += 2;\x0d\n      return this.finishToken(types$1.arrow)\x0d\n    }\x0d\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_question = function() { // '?'\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    if (ecmaVersion >= 11) {\x0d\n      var next = this.input.charCodeAt(this.pos + 1);\x0d\n      if (next === 46) {\x0d\n        var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot\x2C 2) }\x0d\n      }\x0d\n      if (next === 63) {\x0d\n        if (ecmaVersion >= 12) {\x0d\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\x0d\n          if (next2$1 === 61) { return this.finishOp(types$1.assign\x2C 3) }\x0d\n        }\x0d\n        return this.finishOp(types$1.coalesce\x2C 2)\x0d\n      }\x0d\n    }\x0d\n    return this.finishOp(types$1.question\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_numberSign = function() { // '#'\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    var code = 35; // '#'\x0d\n    if (ecmaVersion >= 13) {\x0d\n      ++this.pos;\x0d\n      code = this.fullCharCodeAtPos();\x0d\n      if (isIdentifierStart(code\x2C true) || code === 92 /* '\\' */) {\x0d\n        return this.finishToken(types$1.privateId\x2C this.readWord1())\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.raise(this.pos\x2C "Unexpected character '" + codePointToString(code) + "'");\x0d\n  };\x0d\n\x0d\n  pp.getTokenFromCode = function(code) {\x0d\n    switch (code) {\x0d\n    // The interpretation of a dot depends on whether it is followed\x0d\n    // by a digit or another two dots.\x0d\n    case 46: // '.'\x0d\n      return this.readToken_dot()\x0d\n\x0d\n    // Punctuation tokens.\x0d\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\x0d\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\x0d\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\x0d\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\x0d\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\x0d\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\x0d\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\x0d\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\x0d\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\x0d\n\x0d\n    case 96: // '`'\x0d\n      if (this.options.ecmaVersion < 6) { break }\x0d\n      ++this.pos;\x0d\n      return this.finishToken(types$1.backQuote)\x0d\n\x0d\n    case 48: // '0'\x0d\n      var next = this.input.charCodeAt(this.pos + 1);\x0d\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x'\x2C '0X' - hex number\x0d\n      if (this.options.ecmaVersion >= 6) {\x0d\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o'\x2C '0O' - octal number\x0d\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b'\x2C '0B' - binary number\x0d\n      }\x0d\n\x0d\n    // Anything else beginning with a digit is an integer\x2C octal\x0d\n    // number\x2C or float.\x0d\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\x0d\n      return this.readNumber(false)\x0d\n\x0d\n    // Quotes produce strings.\x0d\n    case 34: case 39: // '"'\x2C "'"\x0d\n      return this.readString(code)\x0d\n\x0d\n    // Operators are parsed inline in tiny state machines. '=' (61) is\x0d\n    // often referred to. `finishOp` simply skips the amount of\x0d\n    // characters it is given as second argument\x2C and returns a token\x0d\n    // of the type given by its first argument.\x0d\n    case 47: // '/'\x0d\n      return this.readToken_slash()\x0d\n\x0d\n    case 37: case 42: // '%*'\x0d\n      return this.readToken_mult_modulo_exp(code)\x0d\n\x0d\n    case 124: case 38: // '|&'\x0d\n      return this.readToken_pipe_amp(code)\x0d\n\x0d\n    case 94: // '^'\x0d\n      return this.readToken_caret()\x0d\n\x0d\n    case 43: case 45: // '+-'\x0d\n      return this.readToken_plus_min(code)\x0d\n\x0d\n    case 60: case 62: // '<>'\x0d\n      return this.readToken_lt_gt(code)\x0d\n\x0d\n    case 61: case 33: // '=!'\x0d\n      return this.readToken_eq_excl(code)\x0d\n\x0d\n    case 63: // '?'\x0d\n      return this.readToken_question()\x0d\n\x0d\n    case 126: // '~'\x0d\n      return this.finishOp(types$1.prefix\x2C 1)\x0d\n\x0d\n    case 35: // '#'\x0d\n      return this.readToken_numberSign()\x0d\n    }\x0d\n\x0d\n    this.raise(this.pos\x2C "Unexpected character '" + codePointToString(code) + "'");\x0d\n  };\x0d\n\x0d\n  pp.finishOp = function(type\x2C size) {\x0d\n    var str = this.input.slice(this.pos\x2C this.pos + size);\x0d\n    this.pos += size;\x0d\n    return this.finishToken(type\x2C str)\x0d\n  };\x0d\n\x0d\n  pp.readRegexp = function() {\x0d\n    var escaped\x2C inClass\x2C start = this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(start\x2C "Unterminated regular expression"); }\x0d\n      var ch = this.input.charAt(this.pos);\x0d\n      if (lineBreak.test(ch)) { this.raise(start\x2C "Unterminated regular expression"); }\x0d\n      if (!escaped) {\x0d\n        if (ch === "[") { inClass = true; }\x0d\n        else if (ch === "]" && inClass) { inClass = false; }\x0d\n        else if (ch === "/" && !inClass) { break }\x0d\n        escaped = ch === "\\\\";\x0d\n      } else { escaped = false; }\x0d\n      ++this.pos;\x0d\n    }\x0d\n    var pattern = this.input.slice(start\x2C this.pos);\x0d\n    ++this.pos;\x0d\n    var flagsStart = this.pos;\x0d\n    var flags = this.readWord1();\x0d\n    if (this.containsEsc) { this.unexpected(flagsStart); }\x0d\n\x0d\n    // Validate pattern\x0d\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\x0d\n    state.reset(start\x2C pattern\x2C flags);\x0d\n    this.validateRegExpFlags(state);\x0d\n    this.validateRegExpPattern(state);\x0d\n\x0d\n    // Create Literal#value property value.\x0d\n    var value = null;\x0d\n    try {\x0d\n      value = new RegExp(pattern\x2C flags);\x0d\n    } catch (e) {\x0d\n      // ESTree requires null if it failed to instantiate RegExp object.\x0d\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\x0d\n    }\x0d\n\x0d\n    return this.finishToken(types$1.regexp\x2C {pattern: pattern\x2C flags: flags\x2C value: value})\x0d\n  };\x0d\n\x0d\n  // Read an integer in the given radix. Return null if zero digits\x0d\n  // were read\x2C the integer value otherwise. When `len` is given\x2C this\x0d\n  // will return `null` unless the integer has exactly `len` digits.\x0d\n\x0d\n  pp.readInt = function(radix\x2C len\x2C maybeLegacyOctalNumericLiteral) {\x0d\n    // `len` is used for character escape sequences. In that case\x2C disallow separators.\x0d\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\x0d\n\x0d\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x\x2C0o\x2C0b)\x0d\n    // and isn't fraction part nor exponent part. In that case\x2C if the first digit\x0d\n    // is zero then disallow separators.\x0d\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\x0d\n\x0d\n    var start = this.pos\x2C total = 0\x2C lastCode = 0;\x0d\n    for (var i = 0\x2C e = len == null ? Infinity : len; i < e; ++i\x2C ++this.pos) {\x0d\n      var code = this.input.charCodeAt(this.pos)\x2C val = (void 0);\x0d\n\x0d\n      if (allowSeparators && code === 95) {\x0d\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos\x2C "Numeric separator is not allowed in legacy octal numeric literals"); }\x0d\n        if (lastCode === 95) { this.raiseRecoverable(this.pos\x2C "Numeric separator must be exactly one underscore"); }\x0d\n        if (i === 0) { this.raiseRecoverable(this.pos\x2C "Numeric separator is not allowed at the first of digits"); }\x0d\n        lastCode = code;\x0d\n        continue\x0d\n      }\x0d\n\x0d\n      if (code >= 97) { val = code - 97 + 10; } // a\x0d\n      else if (code >= 65) { val = code - 65 + 10; } // A\x0d\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\x0d\n      else { val = Infinity; }\x0d\n      if (val >= radix) { break }\x0d\n      lastCode = code;\x0d\n      total = total * radix + val;\x0d\n    }\x0d\n\x0d\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1\x2C "Numeric separator is not allowed at the last of digits"); }\x0d\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\x0d\n\x0d\n    return total\x0d\n  };\x0d\n\x0d\n  function stringToNumber(str\x2C isLegacyOctalNumericLiteral) {\x0d\n    if (isLegacyOctalNumericLiteral) {\x0d\n      return parseInt(str\x2C 8)\x0d\n    }\x0d\n\x0d\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\x0d\n    return parseFloat(str.replace(/_/g\x2C ""))\x0d\n  }\x0d\n\x0d\n  function stringToBigInt(str) {\x0d\n    if (typeof BigInt !== "function") {\x0d\n      return null\x0d\n    }\x0d\n\x0d\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\x0d\n    return BigInt(str.replace(/_/g\x2C ""))\x0d\n  }\x0d\n\x0d\n  pp.readRadixNumber = function(radix) {\x0d\n    var start = this.pos;\x0d\n    this.pos += 2; // 0x\x0d\n    var val = this.readInt(radix);\x0d\n    if (val == null) { this.raise(this.start + 2\x2C "Expected number in radix " + radix); }\x0d\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\x0d\n      val = stringToBigInt(this.input.slice(start\x2C this.pos));\x0d\n      ++this.pos;\x0d\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n    return this.finishToken(types$1.num\x2C val)\x0d\n  };\x0d\n\x0d\n  // Read an integer\x2C octal integer\x2C or floating-point number.\x0d\n\x0d\n  pp.readNumber = function(startsWithDot) {\x0d\n    var start = this.pos;\x0d\n    if (!startsWithDot && this.readInt(10\x2C undefined\x2C true) === null) { this.raise(start\x2C "Invalid number"); }\x0d\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\x0d\n    if (octal && this.strict) { this.raise(start\x2C "Invalid number"); }\x0d\n    var next = this.input.charCodeAt(this.pos);\x0d\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\x0d\n      var val$1 = stringToBigInt(this.input.slice(start\x2C this.pos));\x0d\n      ++this.pos;\x0d\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n      return this.finishToken(types$1.num\x2C val$1)\x0d\n    }\x0d\n    if (octal && /[89]/.test(this.input.slice(start\x2C this.pos))) { octal = false; }\x0d\n    if (next === 46 && !octal) { // '.'\x0d\n      ++this.pos;\x0d\n      this.readInt(10);\x0d\n      next = this.input.charCodeAt(this.pos);\x0d\n    }\x0d\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\x0d\n      next = this.input.charCodeAt(++this.pos);\x0d\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\x0d\n      if (this.readInt(10) === null) { this.raise(start\x2C "Invalid number"); }\x0d\n    }\x0d\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n\x0d\n    var val = stringToNumber(this.input.slice(start\x2C this.pos)\x2C octal);\x0d\n    return this.finishToken(types$1.num\x2C val)\x0d\n  };\x0d\n\x0d\n  // Read a string value\x2C interpreting backslash-escapes.\x0d\n\x0d\n  pp.readCodePoint = function() {\x0d\n    var ch = this.input.charCodeAt(this.pos)\x2C code;\x0d\n\x0d\n    if (ch === 123) { // '{'\x0d\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\x0d\n      var codePos = ++this.pos;\x0d\n      code = this.readHexChar(this.input.indexOf("}"\x2C this.pos) - this.pos);\x0d\n      ++this.pos;\x0d\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos\x2C "Code point out of bounds"); }\x0d\n    } else {\x0d\n      code = this.readHexChar(4);\x0d\n    }\x0d\n    return code\x0d\n  };\x0d\n\x0d\n  pp.readString = function(quote) {\x0d\n    var out = ""\x2C chunkStart = ++this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      if (ch === quote) { break }\x0d\n      if (ch === 92) { // '\\'\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        out += this.readEscapedChar(false);\x0d\n        chunkStart = this.pos;\x0d\n      } else if (ch === 0x2028 || ch === 0x2029) {\x0d\n        if (this.options.ecmaVersion < 10) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n        ++this.pos;\x0d\n        if (this.options.locations) {\x0d\n          this.curLine++;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n      } else {\x0d\n        if (isNewLine(ch)) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n        ++this.pos;\x0d\n      }\x0d\n    }\x0d\n    out += this.input.slice(chunkStart\x2C this.pos++);\x0d\n    return this.finishToken(types$1.string\x2C out)\x0d\n  };\x0d\n\x0d\n  // Reads template string tokens.\x0d\n\x0d\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\x0d\n\x0d\n  pp.tryReadTemplateToken = function() {\x0d\n    this.inTemplateElement = true;\x0d\n    try {\x0d\n      this.readTmplToken();\x0d\n    } catch (err) {\x0d\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\x0d\n        this.readInvalidTemplateToken();\x0d\n      } else {\x0d\n        throw err\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.inTemplateElement = false;\x0d\n  };\x0d\n\x0d\n  pp.invalidStringToken = function(position\x2C message) {\x0d\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\x0d\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\x0d\n    } else {\x0d\n      this.raise(position\x2C message);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp.readTmplToken = function() {\x0d\n    var out = ""\x2C chunkStart = this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(this.start\x2C "Unterminated template"); }\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`'\x2C '${'\x0d\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\x0d\n          if (ch === 36) {\x0d\n            this.pos += 2;\x0d\n            return this.finishToken(types$1.dollarBraceL)\x0d\n          } else {\x0d\n            ++this.pos;\x0d\n            return this.finishToken(types$1.backQuote)\x0d\n          }\x0d\n        }\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        return this.finishToken(types$1.template\x2C out)\x0d\n      }\x0d\n      if (ch === 92) { // '\\'\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        out += this.readEscapedChar(true);\x0d\n        chunkStart = this.pos;\x0d\n      } else if (isNewLine(ch)) {\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        ++this.pos;\x0d\n        switch (ch) {\x0d\n        case 13:\x0d\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\x0d\n        case 10:\x0d\n          out += "\\n";\x0d\n          break\x0d\n        default:\x0d\n          out += String.fromCharCode(ch);\x0d\n          break\x0d\n        }\x0d\n        if (this.options.locations) {\x0d\n          ++this.curLine;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n        chunkStart = this.pos;\x0d\n      } else {\x0d\n        ++this.pos;\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Reads a template token to search for the end\x2C without validating any escape sequences\x0d\n  pp.readInvalidTemplateToken = function() {\x0d\n    for (; this.pos < this.input.length; this.pos++) {\x0d\n      switch (this.input[this.pos]) {\x0d\n      case "\\\\":\x0d\n        ++this.pos;\x0d\n        break\x0d\n\x0d\n      case "$":\x0d\n        if (this.input[this.pos + 1] !== "{") {\x0d\n          break\x0d\n        }\x0d\n\x0d\n      // falls through\x0d\n      case "`":\x0d\n        return this.finishToken(types$1.invalidTemplate\x2C this.input.slice(this.start\x2C this.pos))\x0d\n\x0d\n      // no default\x0d\n      }\x0d\n    }\x0d\n    this.raise(this.start\x2C "Unterminated template");\x0d\n  };\x0d\n\x0d\n  // Used to read escaped characters\x0d\n\x0d\n  pp.readEscapedChar = function(inTemplate) {\x0d\n    var ch = this.input.charCodeAt(++this.pos);\x0d\n    ++this.pos;\x0d\n    switch (ch) {\x0d\n    case 110: return "\\n" // 'n' -> '\\n'\x0d\n    case 114: return "\\r" // 'r' -> '\\r'\x0d\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\x0d\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\x0d\n    case 116: return "\\t" // 't' -> '\\t'\x0d\n    case 98: return "\\b" // 'b' -> '\\b'\x0d\n    case 118: return "\\u000b" // 'v' -> '\\u000b'\x0d\n    case 102: return "\\f" // 'f' -> '\\f'\x0d\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\x0d\n    case 10: // ' \\n'\x0d\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\x0d\n      return ""\x0d\n    case 56:\x0d\n    case 57:\x0d\n      if (this.strict) {\x0d\n        this.invalidStringToken(\x0d\n          this.pos - 1\x2C\x0d\n          "Invalid escape sequence"\x0d\n        );\x0d\n      }\x0d\n      if (inTemplate) {\x0d\n        var codePos = this.pos - 1;\x0d\n\x0d\n        this.invalidStringToken(\x0d\n          codePos\x2C\x0d\n          "Invalid escape sequence in template string"\x0d\n        );\x0d\n      }\x0d\n    default:\x0d\n      if (ch >= 48 && ch <= 55) {\x0d\n        var octalStr = this.input.substr(this.pos - 1\x2C 3).match(/^[0-7]+/)[0];\x0d\n        var octal = parseInt(octalStr\x2C 8);\x0d\n        if (octal > 255) {\x0d\n          octalStr = octalStr.slice(0\x2C -1);\x0d\n          octal = parseInt(octalStr\x2C 8);\x0d\n        }\x0d\n        this.pos += octalStr.length - 1;\x0d\n        ch = this.input.charCodeAt(this.pos);\x0d\n        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\x0d\n          this.invalidStringToken(\x0d\n            this.pos - 1 - octalStr.length\x2C\x0d\n            inTemplate\x0d\n              ? "Octal literal in template string"\x0d\n              : "Octal literal in strict mode"\x0d\n          );\x0d\n        }\x0d\n        return String.fromCharCode(octal)\x0d\n      }\x0d\n      if (isNewLine(ch)) {\x0d\n        // Unicode new line characters after \\ get removed from output in both\x0d\n        // template literals and strings\x0d\n        return ""\x0d\n      }\x0d\n      return String.fromCharCode(ch)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Used to read character escape sequences ('\\x'\x2C '\\u'\x2C '\\U').\x0d\n\x0d\n  pp.readHexChar = function(len) {\x0d\n    var codePos = this.pos;\x0d\n    var n = this.readInt(16\x2C len);\x0d\n    if (n === null) { this.invalidStringToken(codePos\x2C "Bad character escape sequence"); }\x0d\n    return n\x0d\n  };\x0d\n\x0d\n  // Read an identifier\x2C and return it as a string. Sets `this.containsEsc`\x0d\n  // to whether the word contained a '\\u' escape.\x0d\n  //\x0d\n  // Incrementally adds only escaped chars\x2C adding other chunks as-is\x0d\n  // as a micro-optimization.\x0d\n\x0d\n  pp.readWord1 = function() {\x0d\n    this.containsEsc = false;\x0d\n    var word = ""\x2C first = true\x2C chunkStart = this.pos;\x0d\n    var astral = this.options.ecmaVersion >= 6;\x0d\n    while (this.pos < this.input.length) {\x0d\n      var ch = this.fullCharCodeAtPos();\x0d\n      if (isIdentifierChar(ch\x2C astral)) {\x0d\n        this.pos += ch <= 0xffff ? 1 : 2;\x0d\n      } else if (ch === 92) { // "\\"\x0d\n        this.containsEsc = true;\x0d\n        word += this.input.slice(chunkStart\x2C this.pos);\x0d\n        var escStart = this.pos;\x0d\n        if (this.input.charCodeAt(++this.pos) !== 117) // "u"\x0d\n          { this.invalidStringToken(this.pos\x2C "Expecting Unicode escape sequence \\\\uXXXX"); }\x0d\n        ++this.pos;\x0d\n        var esc = this.readCodePoint();\x0d\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc\x2C astral))\x0d\n          { this.invalidStringToken(escStart\x2C "Invalid Unicode escape"); }\x0d\n        word += codePointToString(esc);\x0d\n        chunkStart = this.pos;\x0d\n      } else {\x0d\n        break\x0d\n      }\x0d\n      first = false;\x0d\n    }\x0d\n    return word + this.input.slice(chunkStart\x2C this.pos)\x0d\n  };\x0d\n\x0d\n  // Read an identifier or keyword token. Will check for reserved\x0d\n  // words when necessary.\x0d\n\x0d\n  pp.readWord = function() {\x0d\n    var word = this.readWord1();\x0d\n    var type = types$1.name;\x0d\n    if (this.keywords.test(word)) {\x0d\n      type = keywords[word];\x0d\n    }\x0d\n    return this.finishToken(type\x2C word)\x0d\n  };\x0d\n\x0d\n  // Acorn is a tiny\x2C fast JavaScript parser written in JavaScript.\x0d\n\x0d\n  var version = "8.8.2";\x0d\n\x0d\n  Parser.acorn = {\x0d\n    Parser: Parser\x2C\x0d\n    version: version\x2C\x0d\n    defaultOptions: defaultOptions\x2C\x0d\n    Position: Position\x2C\x0d\n    SourceLocation: SourceLocation\x2C\x0d\n    getLineInfo: getLineInfo\x2C\x0d\n    Node: Node\x2C\x0d\n    TokenType: TokenType\x2C\x0d\n    tokTypes: types$1\x2C\x0d\n    keywordTypes: keywords\x2C\x0d\n    TokContext: TokContext\x2C\x0d\n    tokContexts: types\x2C\x0d\n    isIdentifierChar: isIdentifierChar\x2C\x0d\n    isIdentifierStart: isIdentifierStart\x2C\x0d\n    Token: Token\x2C\x0d\n    isNewLine: isNewLine\x2C\x0d\n    lineBreak: lineBreak\x2C\x0d\n    lineBreakG: lineBreakG\x2C\x0d\n    nonASCIIwhitespace: nonASCIIwhitespace\x0d\n  };\x0d\n\x0d\n  // The main exported interface (under `self.acorn` when in the\x0d\n  // browser) is a `parse` function that takes a code string and\x0d\n  // returns an abstract syntax tree as specified by [Mozilla parser\x0d\n  // API][api].\x0d\n  //\x0d\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\x0d\n\x0d\n  function parse(input\x2C options) {\x0d\n    return Parser.parse(input\x2C options)\x0d\n  }\x0d\n\x0d\n  // This function tries to parse a single expression at a given\x0d\n  // offset in a string. Useful for parsing mixed-language formats\x0d\n  // that embed JavaScript expressions.\x0d\n\x0d\n  function parseExpressionAt(input\x2C pos\x2C options) {\x0d\n    return Parser.parseExpressionAt(input\x2C pos\x2C options)\x0d\n  }\x0d\n\x0d\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\x0d\n  // The `tokenizer` export provides an interface to the tokenizer.\x0d\n\x0d\n  function tokenizer(input\x2C options) {\x0d\n    return Parser.tokenizer(input\x2C options)\x0d\n  }\x0d\n\x0d\n  exports.Node = Node;\x0d\n  exports.Parser = Parser;\x0d\n  exports.Position = Position;\x0d\n  exports.SourceLocation = SourceLocation;\x0d\n  exports.TokContext = TokContext;\x0d\n  exports.Token = Token;\x0d\n  exports.TokenType = TokenType;\x0d\n  exports.defaultOptions = defaultOptions;\x0d\n  exports.getLineInfo = getLineInfo;\x0d\n  exports.isIdentifierChar = isIdentifierChar;\x0d\n  exports.isIdentifierStart = isIdentifierStart;\x0d\n  exports.isNewLine = isNewLine;\x0d\n  exports.keywordTypes = keywords;\x0d\n  exports.lineBreak = lineBreak;\x0d\n  exports.lineBreakG = lineBreakG;\x0d\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\x0d\n  exports.parse = parse;\x0d\n  exports.parseExpressionAt = parseExpressionAt;\x0d\n  exports.tokContexts = types;\x0d\n  exports.tokTypes = types$1;\x0d\n  exports.tokenizer = tokenizer;\x0d\n  exports.version = version;\x0d\n\x0d\n}));\x0d\n
code-source-info,0xa2a2ac82ee,448,0,223624,C0O0C4O223624,,
code-creation,JS,10,573933,0xa2a2ac83ee,30, node:internal/deps/acorn/acorn/dist/acorn:1:1,0xa2a2ac8268,~
code-source-info,0xa2a2ac83ee,448,0,223624,C0O0C13O0C23O304C29O223623,,
code-creation,JS,10,573955,0xa2a2ad6bb6,7969, node:internal/deps/acorn/acorn/dist/acorn:5:20,0xa2a2ac8358,~
code-source-info,0xa2a2ad6bb
code-creation,JS,10,574786,0xa2a2ad974e,20, node:internal/deps/acorn/acorn/dist/acorn:275:44,0xa2a2ac9010,~
code-source-info,0xa2a2ad974e,448,20608,20677,C0O20616C3O20639C8O20639C16O20649C19O20675,,
code-creation,JS,10,574805,0xa2a2ad97ee,15, node:internal/deps/acorn/acorn/dist/acorn:271:43,0xa2a2ac8fd8,~
code-source-info,0xa2a2ad97ee,448,20485,20559,C0O20503C3O20532C8O20532C14O20557,,
code-creation,JS,10,574821,0xa2a2ad98de,87, node:internal/deps/acorn/acorn/dist/acorn:1:11,0xa2a2ac8320,~
code-source-info,0xa2a2ad98de,448,10,303,C0O33C15O96C28O150C32O157C47O163C61O243C68O256C70O266C75O280C77O293C81O272C86O302,,
tick,0x7ff7785cf1cb,576883,1,0x7ff7776556e0,5,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x18bc1ab99ad,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,JS,10,578961,0xa2a2ae88d6,102,TokenType node:internal/deps/acorn/acorn/dist/acorn:111:37,0xa2a2ac8f88,~
code-source-info,0xa2a2ae88d6,448,14533,14949,C0O14554C4O14577C7O14595C9O14606C13O14640C17O14633C21O14679C27O14670C31O14721C37O14712C41O14759C47O14750C51O14795C57O14786C61O14831C67O14822C71O14866C77O14857C81O14898C91O14891C95O14918C96O14937C101O14948,,
code-creation,JS,10,579227,0xa2a2af4776,25,binop node:internal/deps/acorn/acorn/dist/acorn:126:17,0xa2a2ac8538,~
code-source-info,0xa2a2af4776,448,14970,15054,C0O14990C3O15011C10O15043C19O14997C24O15049,,
code-creation,JS,11,579347,0x7ff6f838e440,168,binop node:internal/deps/acorn/acorn/dist/acorn:126:17,0xa2a2ac8538,^
code-source-info,0x7ff6f838e440,448,14970,15054,,,
code-creation,JS,11,579379,0x7ff6f838e580,532,validateStringArray node:internal/validators:306:29,0xf2fdb6dd98,^
code-source-info,0x7ff6f838e580,14,8554,8700,,,
code-creation,JS,11,579404,0x7ff6f838e840,236,SafeWeakMap node:internal/per_context/primordials:414:16,0x2f9728b8438,^
code-source-info,0x7ff6f838e840,6,12212,12229,,,
code-creation,JS,11,579425,0x7ff6f838e9c0,260,protoGetter node:net:857:21,0x2173c77cfa8,^
code-source-info,0x7ff6f838e9c0,428,23322,23491,,,
code-creation,JS,11,579455,0x7ff6f838eb80,1364,deprecate node:internal/util:111:19,0xf2fdb744a0,^
code-source-info,0x7ff6f838eb80,15,2869,4237,,,
code-creation,JS,11,579475,0x7ff6f838f180,412, node:child_process:682:7,0x1ac513ecf10,^
code-source-info,0x7ff6f838f180,426,19086,19302,,,
code-creation,JS,11,579496,0x7ff6f838f3c0,408,validateArgumentNullCheck node:child_process:966:35,0x2173c76ea28,^
code-source-info,0x7ff6f838f3c0,426,26605,26798,,,
code-creation,JS,11,579515,0x7ff6f838f600,152,maybeFastPath node:internal/promise_hooks:70:23,0x18bc1a89790,^
code-source-info,0x7ff6f838f600,435,1741,1806,,,
code-creation,JS,11,579536,0x7ff6f838f740,336,hideStackFrames node:internal/errors:411:25,0xf2fdb569f8,^
script-source,11,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^([A-Z][a-z0-9]*)+$/;\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nconst kNoOverride = Symbol('kNoOverride');\x0d\nlet userStackTraceLimit;\x0d\nconst nodeInternalPrefix = '__node_internal_';\x0d\nconst prepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  const firstFrame = trace[0]?.getFunctionName();\x0d\n  if (firstFrame && StringPrototypeStartsWith(firstFrame\x2C nodeInternalPrefix)) {\x0d\n    for (let l = trace.length - 1; l >= 0; l--) {\x0d\n      const fn = trace[l]?.getFunctionName();\x0d\n      if (fn && StringPrototypeStartsWith(fn\x2C nodeInternalPrefix)) {\x0d\n        ArrayPrototypeSplice(trace\x2C 0\x2C l + 1);\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    // `userStackTraceLimit` is the user value for `Error.stackTraceLimit`\x2C\x0d\n    // it is updated at every new exception in `captureLargerStackTrace`.\x0d\n    if (trace.length > userStackTraceLimit)\x0d\n      ArrayPrototypeSplice(trace\x2C userStackTraceLimit);\x0d\n  }\x0d\n\x0d\n  const globalOverride =\x0d\n    maybeOverridePrepareStackTrace(globalThis\x2C error\x2C trace);\x0d\n  if (globalOverride !== kNoOverride) return globalOverride;\x0d\n\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n};\x0d\n\x0d\nconst maybeOverridePrepareStackTrace = (globalThis\x2C error\x2C trace) => {\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  return kNoOverride;\x0d\n};\x0d\n\x0d\nconst aggregateTwoErrors = hideStackFrames((innerError\x2C outerError) => {\x0d\n  if (innerError && outerError && innerError !== outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new AggregateError(new SafeArrayIterator([\x0d\n      outerError\x2C\x0d\n      innerError\x2C\x0d\n    ])\x2C outerError.message);\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n});\x0d\n\x0d\nconst aggregateErrors = hideStackFrames((errors\x2C message\x2C code) => {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new AggregateError(new SafeArrayIterator(errors)\x2C message);\x0d\n  err.code = errors[0]?.code;\x0d\n  return err;\x0d\n});\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\nlet assert;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  internalUtil ??= require('internal/util');\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  internalUtilInspect ??= require('internal/util/inspect');\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  buffer ??= require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\x0d\n  // it again during deserialization.\x0d\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\nfunction inspectWithNoCustomRetry(obj\x2C options) {\x0d\n  const utilInspect = lazyInternalUtilInspect();\x0d\n\x0d\n  try {\x0d\n    return utilInspect.inspect(obj\x2C options);\x0d\n  } catch {\x0d\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    super();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    captureLargerStackTrace(this);\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        __proto__: null\x2C\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        __proto__: null\x2C\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        __proto__: null\x2C\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        __proto__: null\x2C\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  return function NodeError(...args) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    const error = new Base();\x0d\n    // Reset the limit and setting the name property.\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = limit;\x0d\n    const message = getMessage(key\x2C args\x2C error);\x0d\n    ObjectDefineProperties(error\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        __proto__: null\x2C\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        __proto__: null\x2C\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      toString: {\x0d\n        __proto__: null\x2C\x0d\n        value() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    captureLargerStackTrace(error);\x0d\n    error.code = key;\x0d\n    return error;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: unknown[]) => unknown} T\x0d\n * @param {T} fn\x0d\n * @returns {T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  // We rename the functions that will be hidden to cut off the stacktrace\x0d\n  // at the outermost one\x0d\n  const hidden = nodeInternalPrefix + fn.name;\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: hidden });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n  if (def === SystemError) {\x0d\n    def = makeSystemErrorWithCode(sym);\x0d\n  } else {\x0d\n    def = makeNodeErrorWithCode(def\x2C sym);\x0d\n  }\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    otherClasses.forEach((clazz) => {\x0d\n      def[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n    });\x0d\n  }\x0d\n  codes[sym] = def;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  assert ??= require('internal/assert');\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x2C\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const regex = /%[dfijoOs]/g;\x0d\n  let expectedLength = 0;\x0d\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x2C\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  uvBinding.errmap ??= uvBinding.getErrorMap();\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\nconst captureLargerStackTrace = hideStackFrames(\x0d\n  function captureLargerStackTrace(err) {\x0d\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\x0d\n    if (stackTraceLimitIsWritable) {\x0d\n      userStackTraceLimit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = Infinity;\x0d\n    }\x0d\n    ErrorCaptureStackTrace(err);\x0d\n    // Reset the limit\x0d\n    if (stackTraceLimitIsWritable) Error.stackTraceLimit = userStackTraceLimit;\x0d\n\x0d\n    return err;\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n *\x0d\n * @param {object} ctx\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvException = hideStackFrames(function uvException(ctx) {\x0d\n  const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n  let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n  let path;\x0d\n  let dest;\x0d\n  if (ctx.path) {\x0d\n    path = ctx.path.toString();\x0d\n    message += ` '${path}'`;\x0d\n  }\x0d\n  if (ctx.dest) {\x0d\n    dest = ctx.dest.toString();\x0d\n    message += ` -> '${dest}'`;\x0d\n  }\x0d\n\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // Pass the message to the constructor instead of setting it on the object\x0d\n  // to make sure it is the same as the one created in C++\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n\x0d\n  for (const prop of ObjectKeys(ctx)) {\x0d\n    if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n      continue;\x0d\n    }\x0d\n    err[prop] = ctx[prop];\x0d\n  }\x0d\n\x0d\n  err.code = code;\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  if (dest) {\x0d\n    err.dest = dest;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(err);\x0d\n});\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst uvExceptionWithHostPort = hideStackFrames(\x0d\n  function uvExceptionWithHostPort(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${message}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.code = code;\x0d\n    ex.errno = err;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n *\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} [original]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst errnoException = hideStackFrames(\x0d\n  function errnoException(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(message);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new function is `uvExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst exceptionWithHostPort = hideStackFrames(\x0d\n  function exceptionWithHostPort(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    // Reducing the limit improves the performance significantly. We do not\x0d\n    // lose the stack frames due to the `captureStackTrace()` function that\x0d\n    // is called later.\x0d\n    const tmpLimit = Error.stackTraceLimit;\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const ex = new Error(`${syscall} ${code}${details}`);\x0d\n    if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n    ex.errno = err;\x0d\n    ex.code = code;\x0d\n    ex.syscall = syscall;\x0d\n    ex.address = address;\x0d\n    if (port) {\x0d\n      ex.port = port;\x0d\n    }\x0d\n\x0d\n    return captureLargerStackTrace(ex);\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n * @param {string} syscall\x0d\n * @param {string} [hostname]\x0d\n * @returns {Error}\x0d\n */\x0d\nconst dnsException = hideStackFrames(function(code\x2C syscall\x2C hostname) {\x0d\n  let errno;\x0d\n  // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n  // c-ares error code.\x0d\n  // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n  // make them available in a property that's not error.errno (since they\x0d\n  // can be in conflict with libuv error codes). Also make sure\x0d\n  // util.getSystemErrorName() can understand them when an being informed that\x0d\n  // the number is a c-ares error code.\x0d\n  if (typeof code === 'number') {\x0d\n    errno = code;\x0d\n    // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n    // long enough that it's not practical to remove it.\x0d\n    if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n      code = 'ENOTFOUND'; // Fabricated error name.\x0d\n    } else {\x0d\n      code = lazyInternalUtil().getSystemErrorName(code);\x0d\n    }\x0d\n  }\x0d\n  const message = `${syscall} ${code}${hostname ? ` ${hostname}` : ''}`;\x0d\n  // Reducing the limit improves the performance significantly. We do not lose\x0d\n  // the stack frames due to the `captureStackTrace()` function that is called\x0d\n  // later.\x0d\n  const tmpLimit = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmpLimit;\x0d\n  ex.errno = errno;\x0d\n  ex.code = code;\x0d\n  ex.syscall = syscall;\x0d\n  if (hostname) {\x0d\n    ex.hostname = hostname;\x0d\n  }\x0d\n\x0d\n  return captureLargerStackTrace(ex);\x0d\n});\x0d\n\x0d\nfunction connResetException(msg) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const ex = new Error(msg);\x0d\n  ex.code = 'ECONNRESET';\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n *\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (process.platform === 'win32') {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x2C\x0d\n      }\x2C\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors &&\x0d\n                   ((internalBinding('util').guessHandleType(2) === 'TTY' &&\x0d\n                   require('internal/tty').hasColors()) ||\x0d\n                   defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n// Ensures the printed error line is from user code.\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  err[arrow_message_private_symbol] = arrowMessage;\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x2C\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\x0d\n    if (options !== undefined && typeof options !== 'object') {\x0d\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n    }\x0d\n    super(message\x2C options);\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates a generic Node.js error.\x0d\n *\x0d\n * @param {string} message The error message.\x0d\n * @param {object} errorProperties Object with additional properties to be added to the error.\x0d\n * @returns {Error}\x0d\n */\x0d\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  ObjectAssign(err\x2C errorProperties);\x0d\n  return err;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Determine the specific type of a value for type-mismatch errors.\x0d\n * @param {*} value\x0d\n * @returns {string}\x0d\n */\x0d\nfunction determineSpecificType(value) {\x0d\n  if (value == null) {\x0d\n    return '' + value;\x0d\n  }\x0d\n  if (typeof value === 'function' && value.name) {\x0d\n    return `function ${value.name}`;\x0d\n  }\x0d\n  if (typeof value === 'object') {\x0d\n    if (value.constructor?.name) {\x0d\n      return `an instance of ${value.constructor.name}`;\x0d\n    }\x0d\n    return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\x0d\n  }\x0d\n  let inspected = lazyInternalUtilInspect()\x0d\n    .inspect(value\x2C { colors: false });\x0d\n  if (inspected.length > 28) { inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 25)}...`; }\x0d\n\x0d\n  return `type ${typeof value} (${inspected})`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\x0d\n * We cannot use Intl.ListFormat because it's not available in\x0d\n * --without-intl builds.\x0d\n * @param {string[]} array An array of strings.\x0d\n * @param {string} [type] The list type to be inserted before the last element.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction formatList(array\x2C type = 'and') {\x0d\n  return array.length < 3 ? ArrayPrototypeJoin(array\x2C ` ${type} `) :\x0d\n    `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n  aggregateErrors\x2C\x0d\n  captureLargerStackTrace\x2C\x0d\n  codes\x2C\x0d\n  connResetException\x2C\x0d\n  dnsException\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  determineSpecificType\x2C\x0d\n  E\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  formatList\x2C\x0d\n  genericNodeError\x2C\x0d\n  getMessage\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  hideStackFrames\x2C\x0d\n  inspectWithNoCustomRetry\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  kIsNodeError\x2C\x0d\n  kNoOverride\x2C\x0d\n  maybeOverridePrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  prepareStackTrace\x2C\x0d\n  setArrowMessage\x2C\x0d\n  SystemError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x2C\x0d\n  uvExceptionWithHostPort\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\x0d\n  'Deserialize main function is already configured.'\x2C Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\x0d\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\x0d\n  'Module "%s" is not of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\x0d\n  'Module "%s" needs an import assertion of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\x0d\n  'Import assertion type "%s" is unsupported'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 1) {\x0d\n        msg += `one of ${formatList(other\x2C 'or')}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    msg += `. Received ${determineSpecificType(actual)}`;\x0d\n\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\x0d\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\x0d\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${value}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  let type;\x0d\n  if (value?.constructor?.name) {\x0d\n    type = `instance of ${value.constructor.name}`;\x0d\n  } else {\x0d\n    type = `type ${typeof value}`;\x0d\n  }\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" function but got ${type}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  const type = determineSpecificType(value);\x0d\n\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input) {\x0d\n  this.input = input;\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE(\x0d\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\x0d\n  '"%s" did not call the next hook in its chain and did not' +\x0d\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\x0d\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\x0d\n  Error\x2C\x0d\n);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x2C\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x2C\x0d\n    );\x0d\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C (path\x2C base\x2C type = 'package') => {\x0d\n  return `Cannot find ${type} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\x0d\n  "import '%s' received a bad response: %s"\x2C Error);\x0d\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\x0d\n  "import of '%s' by %s is not supported: %s"\x2C Error);\x0d\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\x0d\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\x0d\n  'command does not take positional arguments'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\x0d\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\x0d\n    "argument starting with a '-'\x2C place it at the end of the command after " +\x0d\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\x0d\n  return `Unknown option '${option}'${suggestDashDash}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\x0d\n  'Socket closed before the connection was established'\x2C\x0d\n  Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError);\x0d\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\x0d\n  hideInternalStackFrames(this);\x0d\n  this.cause = tokenCausedError;\x0d\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\x0d\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\x0d\n  return errorMsg + errorDetails;\x0d\n}\x2C SyntaxError);\x0d\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\x0d\n  hideInternalStackFrames(this);\x0d\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\x0d\n         "The 'failureType' argument must be of type string or symbol.");\x0d\n\x0d\n  let msg = error?.message ?? error;\x0d\n\x0d\n  if (typeof msg !== 'string') {\x0d\n    msg = inspectWithNoCustomRetry(msg);\x0d\n  }\x0d\n\x0d\n  this.failureType = failureType;\x0d\n  this.cause = error;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C (ext\x2C path\x2C suggestion) => {\x0d\n  let msg = `Unknown file extension "${ext}" for ${path}`;\x0d\n  if (suggestion) {\x0d\n    msg += `. ${suggestion}`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\x0d\n  RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C "Directory import '%s' is not supported " +\x0d\n'resolving ES modules imported from %s'\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\x0d\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\x0d\n  this.cause = cause;\x0d\n  return message;\x0d\n}\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x7ff6f838f740,11,11944,12191,,,
code-creation,JS,11,582467,0x7ff6f838f940,108,get node:net:2193:6,0x2173c77ef80,^
code-source-info,0x7ff6f838f940,428,62806,62834,,,
code-creation,JS,11,582497,0x7ff6f838fa40,136,hasHooks node:internal/async_hooks:471:18,0xf2fdb69370,^
code-source-info,0x7ff6f838fa40,13,16586,16634,,,
code-creation,JS,11,582532,0x7ff6f838fb80,880,TokenType node:internal/deps/acorn/acorn/dist/acorn:111:37,0xa2a2ac8f88,^
code-source-info,0x7ff6f838fb80,448,14533,14949,,,
code-creation,JS,10,582715,0xa2a2af4f9e,40,kw node:internal/deps/acorn/acorn/dist/acorn:136:14,0xa2a2ac8588,~
code-source-info,0xa2a2af4f9e,448,15260,15416,C0O15283C4O15309C7O15330C9O15346C13O15359C27O15383C33O15381C39O15411,,
code-creation,JS,10,583238,0xa2a2af858e,38,TokContext node:internal/deps/acorn/acorn/dist/acorn:2214:39,0xa2a2acc480,~
code-source-info,0xa2a2af858e,448,95580,95801,C0O95639C2O95650C6O95664C8O95680C10O95676C14O95693C16O95716C18O95712C22O95736C24O95750C28O95767C30O95786C32O95782C37O95800,,
code-creation,JS,10,583407,0xa2a2af9c86,168,buildUnicodeData node:internal/deps/acorn/acorn/dist/acorn:3660:28,0xa2a2ac89e8,~
code-source-info,0xa2a2af9c86,448,158489,159024,C0O158518C3O158523C16O158590C22O158604C28O158610C32O158555C40O158661C51O158690C67O158781C71O158750C87O158536C94O158820C99O158852C104O158862C108O158848C112O158879C117O158896C122O158906C126O158892C130O158931C135O158948C140O158958C144O158944C148O158973C153O158991C158O159001C162O158987C167O159023,,
code-creation,JS,10,583476,0xa2a2af9f3e,45,wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:279:23,0xa2a2ac8678,~
code-source-info,0xa2a2af9f3e,448,20705,20784,C0O20720C7O20753C21O20753C27O20745C33O20772C39O20727C44O20779,,
new,MemoryChunk,0x28387b80000,262144
new,MemoryChunk,0x3ae4d700000,262144
new,MemoryChunk,0x34539480000,262144
new,MemoryChunk,0x537ee40000,262144
new,MemoryChunk,0x2ff70780000,262144
code-creation,Eval,10,585665,0xa2a2afd626,5, node:readline:1:1,0xa2a2afd350,~
script-source,449,node:readline,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\nconst emitKeypressEvents = require('internal/readline/emitKeypressEvents');\x0d\nconst promises = require('readline/promises');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateAbortSignal } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * @typedef {import('./stream.js').Readable} Readable\x0d\n * @typedef {import('./stream.js').Writable} Writable\x0d\n */\x0d\n\x0d\nconst {\x0d\n  Interface: _Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n} = require('internal/readline/interface');\x0d\n\x0d\nfunction Interface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  if (!(this instanceof Interface)) {\x0d\n    return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n\x0d\n  if (input?.input &&\x0d\n      typeof input.completer === 'function' && input.completer.length !== 2) {\x0d\n    const { completer } = input;\x0d\n    input.completer = (v\x2C cb) => cb(null\x2C completer(v));\x0d\n  } else if (typeof completer === 'function' && completer.length !== 2) {\x0d\n    const realCompleter = completer;\x0d\n    completer = (v\x2C cb) => cb(null\x2C realCompleter(v));\x0d\n  }\x0d\n\x0d\n  FunctionPrototypeCall(InterfaceConstructor\x2C this\x2C\x0d\n                        input\x2C output\x2C completer\x2C terminal);\x0d\n\x0d\n  if (process.env.TERM === 'dumb') {\x0d\n    this._ttyWrite = FunctionPrototypeBind(_ttyWriteDumb\x2C this);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Interface.prototype\x2C _Interface.prototype);\x0d\nObjectSetPrototypeOf(Interface\x2C _Interface);\x0d\n\x0d\n/**\x0d\n * Displays `query` by writing it to the `output`.\x0d\n * @param {string} query\x0d\n * @param {{ signal?: AbortSignal; }} [options]\x0d\n * @param {Function} cb\x0d\n * @returns {void}\x0d\n */\x0d\nInterface.prototype.question = function question(query\x2C options\x2C cb) {\x0d\n  cb = typeof options === 'function' ? options : cb;\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n    if (options.signal.aborted) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const onAbort = () => {\x0d\n      this[kQuestionCancel]();\x0d\n    };\x0d\n    options.signal.addEventListener('abort'\x2C onAbort\x2C { once: true });\x0d\n    const cleanup = () => {\x0d\n      options.signal.removeEventListener('abort'\x2C onAbort);\x0d\n    };\x0d\n    const originalCb = cb;\x0d\n    cb = typeof cb === 'function' ? (answer) => {\x0d\n      cleanup();\x0d\n      return originalCb(answer);\x0d\n    } : cleanup;\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    this[kQuestion](query\x2C cb);\x0d\n  }\x0d\n};\x0d\nInterface.prototype.question[promisify.custom] = function question(query\x2C options) {\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (options.signal && options.signal.aborted) {\x0d\n    return PromiseReject(\x0d\n      new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n  }\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let cb = resolve;\x0d\n\x0d\n    if (options.signal) {\x0d\n      const onAbort = () => {\x0d\n        reject(new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n      };\x0d\n      options.signal.addEventListener('abort'\x2C onAbort\x2C { once: true });\x0d\n      cb = (answer) => {\x0d\n        options.signal.removeEventListener('abort'\x2C onAbort);\x0d\n        resolve(answer);\x0d\n      };\x0d\n    }\x0d\n\x0d\n    this.question(query\x2C options\x2C cb);\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a new `readline.Interface` instance.\x0d\n * @param {Readable | {\x0d\n *   input: Readable;\x0d\n *   output: Writable;\x0d\n *   completer?: Function;\x0d\n *   terminal?: boolean;\x0d\n *   history?: string[];\x0d\n *   historySize?: number;\x0d\n *   removeHistoryDuplicates?: boolean;\x0d\n *   prompt?: string;\x0d\n *   crlfDelay?: number;\x0d\n *   escapeCodeTimeout?: number;\x0d\n *   tabSize?: number;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} input\x0d\n * @param {Writable} [output]\x0d\n * @param {Function} [completer]\x0d\n * @param {boolean} [terminal]\x0d\n * @returns {Interface}\x0d\n */\x0d\nfunction createInterface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Interface.prototype\x2C {\x0d\n  // Redirect internal prototype methods to the underscore notation for backward\x0d\n  // compatibility.\x0d\n  [kSetRawMode]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._setRawMode;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kOnLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._onLine;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToOutput]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writeToOutput;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kAddHistory]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._addHistory;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kRefreshLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._refreshLine;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kNormalWrite]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._normalWrite;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kInsertString]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._insertString;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kTabComplete]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._tabComplete;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWordLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._wordLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWordRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._wordRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteWordLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteWordLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteWordRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteWordRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLineLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLineLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLineRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLineRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._line;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kHistoryNext]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._historyNext;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kHistoryPrev]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._historyPrev;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetDisplayPos]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._getDisplayPos;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kMoveCursor]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._moveCursor;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kTtyWrite]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._ttyWrite;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Defining proxies for the internal instance properties for backward\x0d\n  // compatibility.\x0d\n  _decoder: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kDecoder];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kDecoder] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _line_buffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kLine_buffer];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kLine_buffer] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _oldPrompt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kOldPrompt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kOldPrompt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _previousKey: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPreviousKey];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPreviousKey] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _prompt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPrompt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPrompt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _questionCallback: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kQuestionCallback];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kQuestionCallback] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _sawKeyPress: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kSawKeyPress];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kSawKeyPress] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _sawReturnAt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kSawReturnAt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kSawReturnAt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make internal methods public for backward compatibility.\x0d\nInterface.prototype._setRawMode = _Interface.prototype[kSetRawMode];\x0d\nInterface.prototype._onLine = _Interface.prototype[kOnLine];\x0d\nInterface.prototype._writeToOutput = _Interface.prototype[kWriteToOutput];\x0d\nInterface.prototype._addHistory = _Interface.prototype[kAddHistory];\x0d\nInterface.prototype._refreshLine = _Interface.prototype[kRefreshLine];\x0d\nInterface.prototype._normalWrite = _Interface.prototype[kNormalWrite];\x0d\nInterface.prototype._insertString = _Interface.prototype[kInsertString];\x0d\nInterface.prototype._tabComplete = function(lastKeypressWasTab) {\x0d\n  // Overriding parent method because `this.completer` in the legacy\x0d\n  // implementation takes a callback instead of being an async function.\x0d\n  this.pause();\x0d\n  const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n  this.completer(string\x2C (err\x2C value) => {\x0d\n    this.resume();\x0d\n\x0d\n    if (err) {\x0d\n      this._writeToOutput(`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  });\x0d\n};\x0d\nInterface.prototype._wordLeft = _Interface.prototype[kWordLeft];\x0d\nInterface.prototype._wordRight = _Interface.prototype[kWordRight];\x0d\nInterface.prototype._deleteLeft = _Interface.prototype[kDeleteLeft];\x0d\nInterface.prototype._deleteRight = _Interface.prototype[kDeleteRight];\x0d\nInterface.prototype._deleteWordLeft = _Interface.prototype[kDeleteWordLeft];\x0d\nInterface.prototype._deleteWordRight = _Interface.prototype[kDeleteWordRight];\x0d\nInterface.prototype._deleteLineLeft = _Interface.prototype[kDeleteLineLeft];\x0d\nInterface.prototype._deleteLineRight = _Interface.prototype[kDeleteLineRight];\x0d\nInterface.prototype._line = _Interface.prototype[kLine];\x0d\nInterface.prototype._historyNext = _Interface.prototype[kHistoryNext];\x0d\nInterface.prototype._historyPrev = _Interface.prototype[kHistoryPrev];\x0d\nInterface.prototype._getDisplayPos = _Interface.prototype[kGetDisplayPos];\x0d\nInterface.prototype._getCursorPos = _Interface.prototype.getCursorPos;\x0d\nInterface.prototype._moveCursor = _Interface.prototype[kMoveCursor];\x0d\nInterface.prototype._ttyWrite = _Interface.prototype[kTtyWrite];\x0d\n\x0d\nfunction _ttyWriteDumb(s\x2C key) {\x0d\n  key = key || kEmptyObject;\x0d\n\x0d\n  if (key.name === 'escape') return;\x0d\n\x0d\n  if (this[kSawReturnAt] && key.name !== 'enter')\x0d\n    this[kSawReturnAt] = 0;\x0d\n\x0d\n  if (key.ctrl) {\x0d\n    if (key.name === 'c') {\x0d\n      if (this.listenerCount('SIGINT') > 0) {\x0d\n        this.emit('SIGINT');\x0d\n      } else {\x0d\n        // This readline instance is finished\x0d\n        this.close();\x0d\n      }\x0d\n\x0d\n      return;\x0d\n    } else if (key.name === 'd') {\x0d\n      this.close();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  switch (key.name) {\x0d\n    case 'return':  // Carriage return\x2C i.e. \\r\x0d\n      this[kSawReturnAt] = DateNow();\x0d\n      this._line();\x0d\n      break;\x0d\n\x0d\n    case 'enter':\x0d\n      // When key interval > crlfDelay\x0d\n      if (this[kSawReturnAt] === 0 ||\x0d\n          DateNow() - this[kSawReturnAt] > this.crlfDelay) {\x0d\n        this._line();\x0d\n      }\x0d\n      this[kSawReturnAt] = 0;\x0d\n      break;\x0d\n\x0d\n    default:\x0d\n      if (typeof s === 'string' && s) {\x0d\n        this.line += s;\x0d\n        this.cursor += s.length;\x0d\n        this._writeToOutput(s);\x0d\n      }\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  createInterface\x2C\x0d\n  cursorTo\x2C\x0d\n  emitKeypressEvents\x2C\x0d\n  moveCursor\x2C\x0d\n  promises\x2C\x0d\n};\x0d\n
code-source-info,0xa2a2afd626,449,0,13230,C0O0C4O13230,,
code-creation,JS,10,586330,0xa2a2afeff6,2312, node:readline:1:1,0xa2a2afd5a0,~
code-source-info,0xa2a2afeff6,449,0,13230,C0O0C93O1183C99O1195C105O1221C111O1247C116O1274C121O1299C127O1311C133O1329C139O1447C143O1447C149O1383C154O1397C159O1417C164O1430C169O1515C173O1515C178O1582C182O1582C187O1643C191O1643C197O1626C203O1697C207O1697C213O1683C219O1776C223O1776C229O1743C235O1760C240O1835C244O1835C250O1811C256O2607C260O2607C266O2014C271O2029C277O2054C282O2070C288O2083C293O2099C298O2119C303O2140C308O2157C313O2177C319O2198C325O2217C331O2234C337O2251C343O2269C349O2279C355O2296C361O2312C367O2329C373O2344C379O2356C385O2373C391O2385C397O2399C403O2421C409O2441C415O2458C421O2475C427O2492C433O2508C439O2525C445O2543C451O2557C457O2571C463O2586C469O3419C473O3450C479O3472C485O3419C490O3485C494O3485C499O3715C503O3725C513O3744C517O4551C521O4561C527O4571C533O4590C543O4598C547O6044C551O6077C565O6197C567O6211C573O6240C590O6298C592O6308C598O6337C615O6391C617O6408C623O6437C640O6498C642O6512C648O6541C665O6599C667O6614C673O6643C690O6702C692O6717C698O6746C715O6805C717O6821C723O6850C740O6910C742O6925C748O6954C765O7013C767O7025C773O7054C790O7110C792O7123C798O7152C815O7209C817O7223C823O7252C840O7310C842O7325C848O7354C865O7413C867O7431C873O7460C890O7522C892O7541C898O7570C915O7633C917O7651C923O7680C940O7742C942O7761C948O7790C965O7853C967O7861C973O7890C990O7942C992O7957C998O7986C1015O8045C1017O8060C1023O8089C1040O8148C1042O8165C1048O8194C1065O8255C1067O8269C1073O8298C1090O8356C1092O8368C1098O8397C1117O8558C1123O8587C1131O8638C1150O8713C1156O8742C1164O8797C1191O8874C1200O8903C1212O8956C1239O9033C1248O9062C1260O9117C1287O9191C1296O9220C1308O9270C1335O9349C1344O9378C1356O9438C1383O9522C1392O9551C1404O9606C1431O9685C1440O9714C1452O9769C1475O6044C1485O9900C1489O9910C1495O9945C1503O9954C1509O9932C1517O9970C1521O9980C1527O10011C1535O10020C1541O9998C1549O10032C1553O10042C1559O10080C1567O10089C1573O10067C1581O10108C1585O10118C1591O10153C1599O10162C1605O10140C1613O10178C1617O10188C1623O10224C1631O10233C1637O10211C1645O10250C1649O10260C1655O10296C1663O10305C1669O10283C1677O10322C1681O10332C1687O10369C1695O10378C1701O10356C1709O10396C1713O10406C1723O10429C1731O10930C1735O10940C1741O10973C1749O10982C1755O10960C1763O10996C1767O11006C1773O11040C1781O11049C1787O11027C1795O11064C1799O11074C1805O11109C1813O11118C1819O11096C1827O11134C1831O11144C1837O11180C1845O11189C1851O11167C1859O11206C1863O11216C1869O11255C1877O11264C1883O11242C1891O11284C1895O11294C1901O11334C1909O11343C1915O11321C1923O11364C1927O11374C1933O11413C1941O11422C1947O11400C1955O11442C1959O11452C1965O11492C1973O11501C1979O11479C1987O11522C1991O11532C1997O11561C2005O11570C2011O11548C2019O11580C2023O11590C2029O11626C2037O11635C2043O11613C2051O11652C2055O11662C2061O11698C2069O11707C2075O11685C2083O11724C2087O11734C2093O11772C2101O11781C2107O11759C2115O11800C2119O11810C2125O11847C2131O11857C2139O11834C2147O11872C2151O11882C2157O11917C2165O11926C2171O11904C2179O11942C2183O11952C2189O11985C2197O11994C2203O11972C2211O13074C2222O13096C2232O13110C2242O13124C2252O13144C2262O13164C2272O13177C2282O13200C2292O13215C2302O13089C2311O13229,,
code-creation,Eval,10,587113,0x2ff70782ab6,5, node:internal/readline/callbacks:1:1,0x2ff707828d0,~
script-source,450,node:internal/readline/callbacks,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberIsNaN\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CURSOR_POS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  CSI\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n} = CSI;\x0d\n\x0d\n\x0d\n/**\x0d\n * moves the cursor to the x and y coordinate on the given stream\x0d\n */\x0d\n\x0d\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (typeof y === 'function') {\x0d\n    callback = y;\x0d\n    y = undefined;\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\x0d\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\x0d\n\x0d\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\x0d\n\x0d\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * moves the cursor relative to its current location\x0d\n */\x0d\n\x0d\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream == null || !(dx || dy)) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  let data = '';\x0d\n\x0d\n  if (dx < 0) {\x0d\n    data += CSI`${-dx}D`;\x0d\n  } else if (dx > 0) {\x0d\n    data += CSI`${dx}C`;\x0d\n  }\x0d\n\x0d\n  if (dy < 0) {\x0d\n    data += CSI`${-dy}A`;\x0d\n  } else if (dy > 0) {\x0d\n    data += CSI`${dy}B`;\x0d\n  }\x0d\n\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the current line the cursor is on:\x0d\n *   -1 for left of the cursor\x0d\n *   +1 for right of the cursor\x0d\n *    0 for the entire line\x0d\n */\x0d\n\x0d\nfunction clearLine(stream\x2C dir\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const type =\x0d\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\x0d\n  return stream.write(type\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the screen from the current position of the cursor down\x0d\n */\x0d\n\x0d\nfunction clearScreenDown(stream\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  return stream.write(kClearScreenDown\x2C callback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n};\x0d\n
code-source-info,0x2ff70782ab6,450,0,2886,C0O0C4O2886,,
code-creation,JS,10,587281,0x2ff70782d86,179, node:internal/readline/callbacks:1:1,0x2ff70782a30,~
code-source-info,0x2ff70782d86,450,0,2886,C0O0C56O28C62O150C65O150C70O80C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885,,
code-creation,Eval,10,587708,0x2ff70783866,5, node:internal/readline/utils:1:1,0x2ff70783670,~
script-source,451,node:internal/readline/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\x0d\nconst kEscape = '\\x1b';\x0d\nconst kSubstringSearch = Symbol('kSubstringSearch');\x0d\n\x0d\nfunction CSI(strings\x2C ...args) {\x0d\n  let ret = `${kEscape}[`;\x0d\n  for (let n = 0; n < strings.length; n++) {\x0d\n    ret += strings[n];\x0d\n    if (n < args.length)\x0d\n      ret += args[n];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nCSI.kEscape = kEscape;\x0d\nCSI.kClearToLineBeginning = CSI`1K`;\x0d\nCSI.kClearToLineEnd = CSI`0K`;\x0d\nCSI.kClearLine = CSI`2K`;\x0d\nCSI.kClearScreenDown = CSI`0J`;\x0d\n\x0d\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\x0d\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\x0d\n// Check Canonical_Combining_Class in\x0d\n// http://userguide.icu-project.org/strings/properties\x0d\nfunction charLengthLeft(str\x2C i) {\x0d\n  if (i <= 0)\x0d\n    return 0;\x0d\n  if ((i > 1 &&\x0d\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\x0d\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\x0d\n    return 2;\x0d\n  }\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nfunction charLengthAt(str\x2C i) {\x0d\n  if (str.length <= i) {\x0d\n    // Pretend to move to the right. This is necessary to autocomplete while\x0d\n    // moving to the right.\x0d\n    return 1;\x0d\n  }\x0d\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\x0d\n}\x0d\n\x0d\n/*\x0d\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\x0d\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\x0d\n\x0d\n  ESC letter\x0d\n  ESC [ letter\x0d\n  ESC [ modifier letter\x0d\n  ESC [ 1 ; modifier letter\x0d\n  ESC [ num char\x0d\n  ESC [ num ; modifier char\x0d\n  ESC O letter\x0d\n  ESC O modifier letter\x0d\n  ESC O 1 ; modifier letter\x0d\n  ESC N letter\x0d\n  ESC [ [ num ; modifier char\x0d\n  ESC [ [ 1 ; modifier letter\x0d\n  ESC ESC [ num char\x0d\n  ESC ESC O letter\x0d\n\x0d\n  - char is usually ~ but $ and ^ also happen with rxvt\x0d\n  - modifier is 1 +\x0d\n                (shift     * 1) +\x0d\n                (left_alt  * 2) +\x0d\n                (ctrl      * 4) +\x0d\n                (right_alt * 8)\x0d\n  - two leading ESCs apparently mean the same as one leading ESC\x0d\n*/\x0d\nfunction* emitKeys(stream) {\x0d\n  while (true) {\x0d\n    let ch = yield;\x0d\n    let s = ch;\x0d\n    let escaped = false;\x0d\n    const key = {\x0d\n      sequence: null\x2C\x0d\n      name: undefined\x2C\x0d\n      ctrl: false\x2C\x0d\n      meta: false\x2C\x0d\n      shift: false\x2C\x0d\n    };\x0d\n\x0d\n    if (ch === kEscape) {\x0d\n      escaped = true;\x0d\n      s += (ch = yield);\x0d\n\x0d\n      if (ch === kEscape) {\x0d\n        s += (ch = yield);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (escaped && (ch === 'O' || ch === '[')) {\x0d\n      // ANSI escape sequence\x0d\n      let code = ch;\x0d\n      let modifier = 0;\x0d\n\x0d\n      if (ch === 'O') {\x0d\n        // ESC O letter\x0d\n        // ESC O modifier letter\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          modifier = (ch >> 0) - 1;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        code += ch;\x0d\n      } else if (ch === '[') {\x0d\n        // ESC [ letter\x0d\n        // ESC [ modifier letter\x0d\n        // ESC [ [ modifier letter\x0d\n        // ESC [ [ num char\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch === '[') {\x0d\n          // \\x1b[[A\x0d\n          //      ^--- escape codes might have a second bracket\x0d\n          code += ch;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * Here and later we try to buffer just enough data to get\x0d\n         * a complete ascii sequence.\x0d\n         *\x0d\n         * We have basically two classes of ascii characters to process:\x0d\n         *\x0d\n         *\x0d\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+F12 in xterm.\x0d\n         *\x0d\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\x0d\n         *  - first part can contain one or two digits\x0d\n         *\x0d\n         * So the generic regexp is like /^\\d\\d?(;\\d)?[~^$]$/\x0d\n         *\x0d\n         *\x0d\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+Home in xterm.\x0d\n         *\x0d\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\x0d\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\x0d\n         *\x0d\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\x0d\n         *\x0d\n         */\x0d\n        const cmdStart = s.length - 1;\x0d\n\x0d\n        // Skip one or two leading digits\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += (ch = yield);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        // skip modifier\x0d\n        if (ch === ';') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += yield;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * We buffered enough data\x2C now trying to extract code\x0d\n         * and modifier from it\x0d\n         */\x0d\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\x0d\n        let match;\x0d\n\x0d\n        if ((match = RegExpPrototypeExec(/^(\\d\\d?)(;(\\d))?([~^$])$/\x2C cmd))) {\x0d\n          code += match[1] + match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else if (\x0d\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\x0d\n        ) {\x0d\n          code += match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else {\x0d\n          code += cmd;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Parse the key modifier\x0d\n      key.ctrl = !!(modifier & 4);\x0d\n      key.meta = !!(modifier & 10);\x0d\n      key.shift = !!(modifier & 1);\x0d\n      key.code = code;\x0d\n\x0d\n      // Parse the key itself\x0d\n      switch (code) {\x0d\n        /* xterm/gnome ESC [ letter (with modifier) */\x0d\n        case '[P': key.name = 'f1'; break;\x0d\n        case '[Q': key.name = 'f2'; break;\x0d\n        case '[R': key.name = 'f3'; break;\x0d\n        case '[S': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter (without modifier) */\x0d\n        case 'OP': key.name = 'f1'; break;\x0d\n        case 'OQ': key.name = 'f2'; break;\x0d\n        case 'OR': key.name = 'f3'; break;\x0d\n        case 'OS': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[11~': key.name = 'f1'; break;\x0d\n        case '[12~': key.name = 'f2'; break;\x0d\n        case '[13~': key.name = 'f3'; break;\x0d\n        case '[14~': key.name = 'f4'; break;\x0d\n\x0d\n        /* from Cygwin and used in libuv */\x0d\n        case '[[A': key.name = 'f1'; break;\x0d\n        case '[[B': key.name = 'f2'; break;\x0d\n        case '[[C': key.name = 'f3'; break;\x0d\n        case '[[D': key.name = 'f4'; break;\x0d\n        case '[[E': key.name = 'f5'; break;\x0d\n\x0d\n        /* common */\x0d\n        case '[15~': key.name = 'f5'; break;\x0d\n        case '[17~': key.name = 'f6'; break;\x0d\n        case '[18~': key.name = 'f7'; break;\x0d\n        case '[19~': key.name = 'f8'; break;\x0d\n        case '[20~': key.name = 'f9'; break;\x0d\n        case '[21~': key.name = 'f10'; break;\x0d\n        case '[23~': key.name = 'f11'; break;\x0d\n        case '[24~': key.name = 'f12'; break;\x0d\n\x0d\n        /* xterm ESC [ letter */\x0d\n        case '[A': key.name = 'up'; break;\x0d\n        case '[B': key.name = 'down'; break;\x0d\n        case '[C': key.name = 'right'; break;\x0d\n        case '[D': key.name = 'left'; break;\x0d\n        case '[E': key.name = 'clear'; break;\x0d\n        case '[F': key.name = 'end'; break;\x0d\n        case '[H': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter */\x0d\n        case 'OA': key.name = 'up'; break;\x0d\n        case 'OB': key.name = 'down'; break;\x0d\n        case 'OC': key.name = 'right'; break;\x0d\n        case 'OD': key.name = 'left'; break;\x0d\n        case 'OE': key.name = 'clear'; break;\x0d\n        case 'OF': key.name = 'end'; break;\x0d\n        case 'OH': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[1~': key.name = 'home'; break;\x0d\n        case '[2~': key.name = 'insert'; break;\x0d\n        case '[3~': key.name = 'delete'; break;\x0d\n        case '[4~': key.name = 'end'; break;\x0d\n        case '[5~': key.name = 'pageup'; break;\x0d\n        case '[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* putty */\x0d\n        case '[[5~': key.name = 'pageup'; break;\x0d\n        case '[[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* rxvt */\x0d\n        case '[7~': key.name = 'home'; break;\x0d\n        case '[8~': key.name = 'end'; break;\x0d\n\x0d\n        /* rxvt keys with modifiers */\x0d\n        case '[a': key.name = 'up'; key.shift = true; break;\x0d\n        case '[b': key.name = 'down'; key.shift = true; break;\x0d\n        case '[c': key.name = 'right'; key.shift = true; break;\x0d\n        case '[d': key.name = 'left'; key.shift = true; break;\x0d\n        case '[e': key.name = 'clear'; key.shift = true; break;\x0d\n\x0d\n        case '[2$': key.name = 'insert'; key.shift = true; break;\x0d\n        case '[3$': key.name = 'delete'; key.shift = true; break;\x0d\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\x0d\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\x0d\n        case '[7$': key.name = 'home'; key.shift = true; break;\x0d\n        case '[8$': key.name = 'end'; key.shift = true; break;\x0d\n\x0d\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\x0d\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\x0d\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\x0d\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\x0d\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\x0d\n\x0d\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\x0d\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\x0d\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\x0d\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\x0d\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\x0d\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\x0d\n\x0d\n        /* misc. */\x0d\n        case '[Z': key.name = 'tab'; key.shift = true; break;\x0d\n        default: key.name = 'undefined'; break;\x0d\n      }\x0d\n    } else if (ch === '\\r') {\x0d\n      // carriage return\x0d\n      key.name = 'return';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\n') {\x0d\n      // Enter\x2C should have been called linefeed\x0d\n      key.name = 'enter';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\t') {\x0d\n      // tab\x0d\n      key.name = 'tab';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\b' || ch === '\\x7f') {\x0d\n      // backspace or ctrl+h\x0d\n      key.name = 'backspace';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === kEscape) {\x0d\n      // escape key\x0d\n      key.name = 'escape';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === ' ') {\x0d\n      key.name = 'space';\x0d\n      key.meta = escaped;\x0d\n    } else if (!escaped && ch <= '\\x1a') {\x0d\n      // ctrl+letter\x0d\n      key.name = StringFromCharCode(\x0d\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x2C\x0d\n      );\x0d\n      key.ctrl = true;\x0d\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\x0d\n      // Letter\x2C number\x2C shift+letter\x0d\n      key.name = StringPrototypeToLowerCase(ch);\x0d\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\x0d\n      key.meta = escaped;\x0d\n    } else if (escaped) {\x0d\n      // Escape sequence timeout\x0d\n      key.name = ch.length ? undefined : 'escape';\x0d\n      key.meta = true;\x0d\n    }\x0d\n\x0d\n    key.sequence = s;\x0d\n\x0d\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\x0d\n      /* Named character or sequence */\x0d\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\x0d\n    } else if (charLengthAt(s\x2C 0) === s.length) {\x0d\n      /* Single unnamed character\x2C e.g. "." */\x0d\n      stream.emit('keypress'\x2C s\x2C key);\x0d\n    }\x0d\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\x0d\n  }\x0d\n}\x0d\n\x0d\n// This runs in O(n log n).\x0d\nfunction commonPrefix(strings) {\x0d\n  if (strings.length === 0) {\x0d\n    return '';\x0d\n  }\x0d\n  if (strings.length === 1) {\x0d\n    return strings[0];\x0d\n  }\x0d\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\x0d\n  const min = sorted[0];\x0d\n  const max = sorted[sorted.length - 1];\x0d\n  for (let i = 0; i < min.length; i++) {\x0d\n    if (min[i] !== max[i]) {\x0d\n      return StringPrototypeSlice(min\x2C 0\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return min;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  emitKeys\x2C\x0d\n  kSubstringSearch\x2C\x0d\n  CSI\x2C\x0d\n};\x0d\n
code-source-info,0x2ff70783866,451,0,12295,C0O0C4O12295,,
code-creation,JS,10,588267,0x2ff70783cae,237, node:internal/readline/utils:1:1,0x2ff707837e0,~
code-source-info,0x2ff70783cae,451,0,12295,C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12176C195O12198C201O12215C207O12234C213O12251C219O12264C225O12285C231O12191C236O12294,,
code-creation,JS,10,588624,0x2ff70784cde,76,CSI node:internal/readline/utils:19:13,0x2ff70783898,~
code-source-info,0x2ff70784cde,451,415,605,C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C73O591C75O602,,
code-creation,Eval,10,588865,0x2ff7078630e,5, node:internal/readline/emitKeypressEvents:1:1,0x2ff70786118,~
script-source,452,node:internal/readline/emitKeypressEvents,'use strict';\x0d\n\x0d\nconst {\x0d\n  SafeStringIterator\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  CSI\x2C\x0d\n  emitKeys\x2C\x0d\n} = require('internal/readline/utils');\x0d\nconst {\x0d\n  kSawKeyPress\x2C\x0d\n} = require('internal/readline/interface');\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst {\x0d\n  kEscape\x2C\x0d\n} = CSI;\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nconst KEYPRESS_DECODER = Symbol('keypress-decoder');\x0d\nconst ESCAPE_DECODER = Symbol('escape-decoder');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n/**\x0d\n * accepts a readable Stream instance and makes it emit "keypress" events\x0d\n */\x0d\n\x0d\nfunction emitKeypressEvents(stream\x2C iface = {}) {\x0d\n  if (stream[KEYPRESS_DECODER]) return;\x0d\n\x0d\n  stream[KEYPRESS_DECODER] = new StringDecoder('utf8');\x0d\n\x0d\n  stream[ESCAPE_DECODER] = emitKeys(stream);\x0d\n  stream[ESCAPE_DECODER].next();\x0d\n\x0d\n  const triggerEscape = () => stream[ESCAPE_DECODER].next('');\x0d\n  const { escapeCodeTimeout = ESCAPE_CODE_TIMEOUT } = iface;\x0d\n  let timeoutId;\x0d\n\x0d\n  function onData(input) {\x0d\n    if (stream.listenerCount('keypress') > 0) {\x0d\n      const string = stream[KEYPRESS_DECODER].write(input);\x0d\n      if (string) {\x0d\n        clearTimeout(timeoutId);\x0d\n\x0d\n        // This supports characters of length 2.\x0d\n        iface[kSawKeyPress] = charLengthAt(string\x2C 0) === string.length;\x0d\n        iface.isCompletionEnabled = false;\x0d\n\x0d\n        let length = 0;\x0d\n        for (const character of new SafeStringIterator(string)) {\x0d\n          length += character.length;\x0d\n          if (length === string.length) {\x0d\n            iface.isCompletionEnabled = true;\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            stream[ESCAPE_DECODER].next(character);\x0d\n            // Escape letter at the tail position\x0d\n            if (length === string.length && character === kEscape) {\x0d\n              timeoutId = setTimeout(triggerEscape\x2C escapeCodeTimeout);\x0d\n            }\x0d\n          } catch (err) {\x0d\n            // If the generator throws (it could happen in the `keypress`\x0d\n            // event)\x2C we need to restart it.\x0d\n            stream[ESCAPE_DECODER] = emitKeys(stream);\x0d\n            stream[ESCAPE_DECODER].next();\x0d\n            throw err;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // Nobody's watching anyway\x0d\n      stream.removeListener('data'\x2C onData);\x0d\n      stream.on('newListener'\x2C onNewListener);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onNewListener(event) {\x0d\n    if (event === 'keypress') {\x0d\n      stream.on('data'\x2C onData);\x0d\n      stream.removeListener('newListener'\x2C onNewListener);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (stream.listenerCount('keypress') > 0) {\x0d\n    stream.on('data'\x2C onData);\x0d\n  } else {\x0d\n    stream.on('newListener'\x2C onNewListener);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = emitKeypressEvents;\x0d\n
code-source-info,0x2ff7078630e,452,0,2762,C0O0C4O2762,,
code-creation,JS,10,589014,0x2ff7078649e,165, node:internal/readline/emitKeypressEvents:1:1,0x2ff70786288,~
code-source-info,0x2ff7078649e,452,0,2762,C0O0C43O28C49O51C54O131C57O131C62O91C68O108C73O116C79O198C82O198C87O179C93O278C96O278C101O249C107O263C113O309C119O357C122O357C127O339C133O412C136O412C140O412C142O464C145O464C149O464C151O582C155O582C157O2724C159O2739C164O2761,,
code-creation,Eval,10,590069,0x2ff70788a36,5, node:internal/readline/interface:1:1,0x2ff70787598,~
script-source,453,node:internal/readline/interface,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathCeil\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SafeStringIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_USE_AFTER_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\nlet emitKeypressEvents;\x0d\nconst {\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\n// Lazy load Readable for startup performance.\x0d\nlet Readable;\x0d\n\x0d\nconst kHistorySize = 30;\x0d\nconst kMaxUndoRedoStackSize = 2048;\x0d\nconst kMincrlfDelay = 100;\x0d\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\x0d\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\x0d\n\x0d\nconst kLineObjectStream = Symbol('line object stream');\x0d\nconst kQuestionCancel = Symbol('kQuestionCancel');\x0d\nconst kQuestion = Symbol('kQuestion');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n// Max length of the kill ring\x0d\nconst kMaxLengthOfKillRing = 32;\x0d\n\x0d\nconst kAddHistory = Symbol('_addHistory');\x0d\nconst kBeforeEdit = Symbol('_beforeEdit');\x0d\nconst kDecoder = Symbol('_decoder');\x0d\nconst kDeleteLeft = Symbol('_deleteLeft');\x0d\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\x0d\nconst kDeleteLineRight = Symbol('_deleteLineRight');\x0d\nconst kDeleteRight = Symbol('_deleteRight');\x0d\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\x0d\nconst kDeleteWordRight = Symbol('_deleteWordRight');\x0d\nconst kGetDisplayPos = Symbol('_getDisplayPos');\x0d\nconst kHistoryNext = Symbol('_historyNext');\x0d\nconst kHistoryPrev = Symbol('_historyPrev');\x0d\nconst kInsertString = Symbol('_insertString');\x0d\nconst kLine = Symbol('_line');\x0d\nconst kLine_buffer = Symbol('_line_buffer');\x0d\nconst kKillRing = Symbol('_killRing');\x0d\nconst kKillRingCursor = Symbol('_killRingCursor');\x0d\nconst kMoveCursor = Symbol('_moveCursor');\x0d\nconst kNormalWrite = Symbol('_normalWrite');\x0d\nconst kOldPrompt = Symbol('_oldPrompt');\x0d\nconst kOnLine = Symbol('_onLine');\x0d\nconst kPreviousKey = Symbol('_previousKey');\x0d\nconst kPrompt = Symbol('_prompt');\x0d\nconst kPushToKillRing = Symbol('_pushToKillRing');\x0d\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\x0d\nconst kQuestionCallback = Symbol('_questionCallback');\x0d\nconst kRedo = Symbol('_redo');\x0d\nconst kRedoStack = Symbol('_redoStack');\x0d\nconst kRefreshLine = Symbol('_refreshLine');\x0d\nconst kSawKeyPress = Symbol('_sawKeyPress');\x0d\nconst kSawReturnAt = Symbol('_sawReturnAt');\x0d\nconst kSetRawMode = Symbol('_setRawMode');\x0d\nconst kTabComplete = Symbol('_tabComplete');\x0d\nconst kTabCompleter = Symbol('_tabCompleter');\x0d\nconst kTtyWrite = Symbol('_ttyWrite');\x0d\nconst kUndo = Symbol('_undo');\x0d\nconst kUndoStack = Symbol('_undoStack');\x0d\nconst kWordLeft = Symbol('_wordLeft');\x0d\nconst kWordRight = Symbol('_wordRight');\x0d\nconst kWriteToOutput = Symbol('_writeToOutput');\x0d\nconst kYank = Symbol('_yank');\x0d\nconst kYanking = Symbol('_yanking');\x0d\nconst kYankPop = Symbol('_yankPop');\x0d\n\x0d\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n  this[kSawReturnAt] = 0;\x0d\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\x0d\n  // might want to expose an alias and document that instead.\x0d\n  this.isCompletionEnabled = true;\x0d\n  this[kSawKeyPress] = false;\x0d\n  this[kPreviousKey] = null;\x0d\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\x0d\n  this.tabSize = 8;\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  let history;\x0d\n  let historySize;\x0d\n  let removeHistoryDuplicates = false;\x0d\n  let crlfDelay;\x0d\n  let prompt = '> ';\x0d\n  let signal;\x0d\n\x0d\n  if (input?.input) {\x0d\n    // An options object was given\x0d\n    output = input.output;\x0d\n    completer = input.completer;\x0d\n    terminal = input.terminal;\x0d\n    history = input.history;\x0d\n    historySize = input.historySize;\x0d\n    signal = input.signal;\x0d\n    if (input.tabSize !== undefined) {\x0d\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\x0d\n      this.tabSize = input.tabSize;\x0d\n    }\x0d\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\x0d\n    if (input.prompt !== undefined) {\x0d\n      prompt = input.prompt;\x0d\n    }\x0d\n    if (input.escapeCodeTimeout !== undefined) {\x0d\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\x0d\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'input.escapeCodeTimeout'\x2C\x0d\n          this.escapeCodeTimeout\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (signal) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    crlfDelay = input.crlfDelay;\x0d\n    input = input.input;\x0d\n  }\x0d\n\x0d\n  if (completer !== undefined && typeof completer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\x0d\n  }\x0d\n\x0d\n  if (history === undefined) {\x0d\n    history = [];\x0d\n  } else {\x0d\n    validateArray(history\x2C 'history');\x0d\n  }\x0d\n\x0d\n  if (historySize === undefined) {\x0d\n    historySize = kHistorySize;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof historySize !== 'number' ||\x0d\n      NumberIsNaN(historySize) ||\x0d\n      historySize < 0\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('historySize'\x2C historySize);\x0d\n  }\x0d\n\x0d\n  // Backwards compat; check the isTTY prop of the output stream\x0d\n  //  when `terminal` was not specified\x0d\n  if (terminal === undefined && !(output === null || output === undefined)) {\x0d\n    terminal = !!output.isTTY;\x0d\n  }\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  this.line = '';\x0d\n  this[kSubstringSearch] = null;\x0d\n  this.output = output;\x0d\n  this.input = input;\x0d\n  this[kUndoStack] = [];\x0d\n  this[kRedoStack] = [];\x0d\n  this.history = history;\x0d\n  this.historySize = historySize;\x0d\n\x0d\n  // The kill ring is a global list of blocks of text that were previously\x0d\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\x0d\n  // element will be removed to make room for the latest deletion. With kill\x0d\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\x0d\n  // killed texts\x2C quite similar to the behavior of Emacs.\x0d\n  this[kKillRing] = [];\x0d\n  this[kKillRingCursor] = 0;\x0d\n\x0d\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\x0d\n  this.crlfDelay = crlfDelay ?\x0d\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\x0d\n    kMincrlfDelay;\x0d\n  this.completer = completer;\x0d\n\x0d\n  this.setPrompt(prompt);\x0d\n\x0d\n  this.terminal = !!terminal;\x0d\n\x0d\n\x0d\n  function onerror(err) {\x0d\n    self.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  function ondata(data) {\x0d\n    self[kNormalWrite](data);\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    if (\x0d\n      typeof self[kLine_buffer] === 'string' &&\x0d\n        self[kLine_buffer].length > 0\x0d\n    ) {\x0d\n      self.emit('line'\x2C self[kLine_buffer]);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function ontermend() {\x0d\n    if (typeof self.line === 'string' && self.line.length > 0) {\x0d\n      self.emit('line'\x2C self.line);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function onkeypress(s\x2C key) {\x0d\n    self[kTtyWrite](s\x2C key);\x0d\n    if (key && key.sequence) {\x0d\n      // If the key.sequence is half of a surrogate pair\x0d\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\x0d\n      // the character is displayed appropriately.\x0d\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\x0d\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onresize() {\x0d\n    self[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  this[kLineObjectStream] = undefined;\x0d\n\x0d\n  input.on('error'\x2C onerror);\x0d\n\x0d\n  if (!this.terminal) {\x0d\n    function onSelfCloseWithoutTerminal() {\x0d\n      input.removeListener('data'\x2C ondata);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C onend);\x0d\n    }\x0d\n\x0d\n    input.on('data'\x2C ondata);\x0d\n    input.on('end'\x2C onend);\x0d\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\x0d\n    this[kDecoder] = new StringDecoder('utf8');\x0d\n  } else {\x0d\n    function onSelfCloseWithTerminal() {\x0d\n      input.removeListener('keypress'\x2C onkeypress);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C ontermend);\x0d\n      if (output !== null && output !== undefined) {\x0d\n        output.removeListener('resize'\x2C onresize);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\x0d\n    emitKeypressEvents(input\x2C this);\x0d\n\x0d\n    // `input` usually refers to stdin\x0d\n    input.on('keypress'\x2C onkeypress);\x0d\n    input.on('end'\x2C ontermend);\x0d\n\x0d\n    this[kSetRawMode](true);\x0d\n    this.terminal = true;\x0d\n\x0d\n    // Cursor position on the line.\x0d\n    this.cursor = 0;\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    if (output !== null && output !== undefined)\x0d\n      output.on('resize'\x2C onresize);\x0d\n\x0d\n    self.once('close'\x2C onSelfCloseWithTerminal);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    const onAborted = () => self.close();\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAborted);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted\x2C { once: true });\x0d\n      self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Current line\x0d\n  this.line = '';\x0d\n\x0d\n  input.resume();\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\x0d\n\x0d\nclass Interface extends InterfaceConstructor {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  get columns() {\x0d\n    if (this.output && this.output.columns) return this.output.columns;\x0d\n    return Infinity;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sets the prompt written to the output.\x0d\n   * @param {string} prompt\x0d\n   * @returns {void}\x0d\n   */\x0d\n  setPrompt(prompt) {\x0d\n    this[kPrompt] = prompt;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the current prompt used by `rl.prompt()`.\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getPrompt() {\x0d\n    return this[kPrompt];\x0d\n  }\x0d\n\x0d\n  [kSetRawMode](mode) {\x0d\n    const wasInRawMode = this.input.isRaw;\x0d\n\x0d\n    if (typeof this.input.setRawMode === 'function') {\x0d\n      this.input.setRawMode(mode);\x0d\n    }\x0d\n\x0d\n    return wasInRawMode;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes the configured `prompt` to a new line in `output`.\x0d\n   * @param {boolean} [preserveCursor]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  prompt(preserveCursor) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal && process.env.TERM !== 'dumb') {\x0d\n      if (!preserveCursor) this.cursor = 0;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      this[kWriteToOutput](this[kPrompt]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kQuestion](query\x2C cb) {\x0d\n    if (this.closed) {\x0d\n      throw new ERR_USE_AFTER_CLOSE('readline');\x0d\n    }\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this.prompt();\x0d\n    } else {\x0d\n      this[kOldPrompt] = this[kPrompt];\x0d\n      this.setPrompt(query);\x0d\n      this[kQuestionCallback] = cb;\x0d\n      this.prompt();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnLine](line) {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      const cb = this[kQuestionCallback];\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      cb(line);\x0d\n    } else {\x0d\n      this.emit('line'\x2C line);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kBeforeEdit](oldText\x2C oldCursor) {\x0d\n    this[kPushToUndoStack](oldText\x2C oldCursor);\x0d\n  }\x0d\n\x0d\n  [kQuestionCancel]() {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      this.clearLine();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWriteToOutput](stringToWrite) {\x0d\n    validateString(stringToWrite\x2C 'stringToWrite');\x0d\n\x0d\n    if (this.output !== null && this.output !== undefined) {\x0d\n      this.output.write(stringToWrite);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kAddHistory]() {\x0d\n    if (this.line.length === 0) return '';\x0d\n\x0d\n    // If the history is disabled then return the line\x0d\n    if (this.historySize === 0) return this.line;\x0d\n\x0d\n    // If the trimmed line is empty then return the line\x0d\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\x0d\n\x0d\n    if (this.history.length === 0 || this.history[0] !== this.line) {\x0d\n      if (this.removeHistoryDuplicates) {\x0d\n        // Remove older history line if identical to new one\x0d\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\x0d\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeUnshift(this.history\x2C this.line);\x0d\n\x0d\n      // Only store so many\x0d\n      if (this.history.length > this.historySize)\x0d\n        ArrayPrototypePop(this.history);\x0d\n    }\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    // The listener could change the history object\x2C possibly\x0d\n    // to remove the last added entry if it is sensitive and should\x0d\n    // not be persisted in the history\x2C like a password\x0d\n    const line = this.history[0];\x0d\n\x0d\n    // Emit history event to notify listeners of update\x0d\n    this.emit('history'\x2C this.history);\x0d\n\x0d\n    return line;\x0d\n  }\x0d\n\x0d\n  [kRefreshLine]() {\x0d\n    // line length\x0d\n    const line = this[kPrompt] + this.line;\x0d\n    const dispPos = this[kGetDisplayPos](line);\x0d\n    const lineCols = dispPos.cols;\x0d\n    const lineRows = dispPos.rows;\x0d\n\x0d\n    // cursor position\x0d\n    const cursorPos = this.getCursorPos();\x0d\n\x0d\n    // First move to the bottom of the current line\x2C based on cursor pos\x0d\n    const prevRows = this.prevRows || 0;\x0d\n    if (prevRows > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -prevRows);\x0d\n    }\x0d\n\x0d\n    // Cursor to left edge.\x0d\n    cursorTo(this.output\x2C 0);\x0d\n    // erase data\x0d\n    clearScreenDown(this.output);\x0d\n\x0d\n    // Write the prompt and the current buffer content.\x0d\n    this[kWriteToOutput](line);\x0d\n\x0d\n    // Force terminal to allocate a new line\x0d\n    if (lineCols === 0) {\x0d\n      this[kWriteToOutput](' ');\x0d\n    }\x0d\n\x0d\n    // Move cursor to original position.\x0d\n    cursorTo(this.output\x2C cursorPos.cols);\x0d\n\x0d\n    const diff = lineRows - cursorPos.rows;\x0d\n    if (diff > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -diff);\x0d\n    }\x0d\n\x0d\n    this.prevRows = cursorPos.rows;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Closes the `readline.Interface` instance.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (this.closed) return;\x0d\n    this.pause();\x0d\n    if (this.terminal) {\x0d\n      this[kSetRawMode](false);\x0d\n    }\x0d\n    this.closed = true;\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Pauses the `input` stream.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  pause() {\x0d\n    if (this.paused) return;\x0d\n    this.input.pause();\x0d\n    this.paused = true;\x0d\n    this.emit('pause');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resumes the `input` stream if paused.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  resume() {\x0d\n    if (!this.paused) return;\x0d\n    this.input.resume();\x0d\n    this.paused = false;\x0d\n    this.emit('resume');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes either `data` or a `key` sequence identified by\x0d\n   * `key` to the `output`.\x0d\n   * @param {string} d\x0d\n   * @param {{\x0d\n   *   ctrl?: boolean;\x0d\n   *   meta?: boolean;\x0d\n   *   shift?: boolean;\x0d\n   *   name?: string;\x0d\n   *   }} [key]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  write(d\x2C key) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal) {\x0d\n      this[kTtyWrite](d\x2C key);\x0d\n    } else {\x0d\n      this[kNormalWrite](d);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kNormalWrite](b) {\x0d\n    if (b === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    let string = this[kDecoder].write(b);\x0d\n    if (\x0d\n      this[kSawReturnAt] &&\x0d\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\x0d\n    ) {\x0d\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\x0d\n      this[kSawReturnAt] = 0;\x0d\n    }\x0d\n\x0d\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\x0d\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n    if (newPartContainsEnding !== null) {\x0d\n      if (this[kLine_buffer]) {\x0d\n        string = this[kLine_buffer] + string;\x0d\n        this[kLine_buffer] = null;\x0d\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\x0d\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n      }\x0d\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\x0d\n        DateNow() :\x0d\n        0;\x0d\n\x0d\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\x0d\n      let nextMatch;\x0d\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\x0d\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\x0d\n      }\x0d\n      const lastIndex = indexes.length - 1;\x0d\n      // Either '' or (conceivably) the unfinished portion of the next line\x0d\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\x0d\n      for (let i = 1; i < lastIndex; i += 2) {\x0d\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\x0d\n      }\x0d\n    } else if (string) {\x0d\n      // No newlines this time\x2C save what we have for next time\x0d\n      if (this[kLine_buffer]) {\x0d\n        this[kLine_buffer] += string;\x0d\n      } else {\x0d\n        this[kLine_buffer] = string;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kInsertString](c) {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const end = StringPrototypeSlice(\x0d\n        this.line\x2C\x0d\n        this.cursor\x2C\x0d\n        this.line.length\x2C\x0d\n      );\x0d\n      this.line = beg + c + end;\x0d\n      this.cursor += c.length;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      const oldPos = this.getCursorPos();\x0d\n      this.line += c;\x0d\n      this.cursor += c.length;\x0d\n      const newPos = this.getCursorPos();\x0d\n\x0d\n      if (oldPos.rows < newPos.rows) {\x0d\n        this[kRefreshLine]();\x0d\n      } else {\x0d\n        this[kWriteToOutput](c);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async [kTabComplete](lastKeypressWasTab) {\x0d\n    this.pause();\x0d\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    let value;\x0d\n    try {\x0d\n      value = await this.completer(string);\x0d\n    } catch (err) {\x0d\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    } finally {\x0d\n      this.resume();\x0d\n    }\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  }\x0d\n\x0d\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\x0d\n    // Result and the text that was completed.\x0d\n\x0d\n    if (!completions || completions.length === 0) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n    const prefix = commonPrefix(\x0d\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x2C\x0d\n    );\x0d\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\x0d\n        prefix.length > completeOn.length) {\x0d\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\x0d\n      return;\x0d\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\x0d\n      this.line = StringPrototypeSlice(this.line\x2C\x0d\n                                       0\x2C\x0d\n                                       this.cursor - completeOn.length) +\x0d\n                  prefix +\x0d\n                  StringPrototypeSlice(this.line\x2C\x0d\n                                       this.cursor\x2C\x0d\n                                       this.line.length);\x0d\n      this.cursor = this.cursor - completeOn.length + prefix.length;\x0d\n      this._refreshLine();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!lastKeypressWasTab) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n\x0d\n    // Apply/show completions.\x0d\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\x0d\n      getStringWidth(e)\x2C\x0d\n    );\x0d\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\x0d\n    let maxColumns = MathFloor(this.columns / width) || 1;\x0d\n    if (maxColumns === Infinity) {\x0d\n      maxColumns = 1;\x0d\n    }\x0d\n    let output = '\\r\\n';\x0d\n    let lineIndex = 0;\x0d\n    let whitespace = 0;\x0d\n    for (let i = 0; i < completions.length; i++) {\x0d\n      const completion = completions[i];\x0d\n      if (completion === '' || lineIndex === maxColumns) {\x0d\n        output += '\\r\\n';\x0d\n        lineIndex = 0;\x0d\n        whitespace = 0;\x0d\n      } else {\x0d\n        output += StringPrototypeRepeat(' '\x2C whitespace);\x0d\n      }\x0d\n      if (completion !== '') {\x0d\n        output += completion;\x0d\n        whitespace = width - completionsWidth[i];\x0d\n        lineIndex++;\x0d\n      } else {\x0d\n        output += '\\r\\n';\x0d\n      }\x0d\n    }\x0d\n    if (lineIndex !== 0) {\x0d\n      output += '\\r\\n\\r\\n';\x0d\n    }\x0d\n    this[kWriteToOutput](output);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      this[kMoveCursor](-match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\x0d\n      this[kMoveCursor](match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLeft]() {\x0d\n    if (this.cursor > 0 && this.line.length > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n\x0d\n      this.cursor -= charSize;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthAt(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          this.cursor + charSize\x2C\x0d\n          this.line.length\x2C\x0d\n        );\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      leading = StringPrototypeSlice(\x0d\n        leading\x2C\x0d\n        0\x2C\x0d\n        leading.length - match[0].length\x2C\x0d\n      );\x0d\n      this.line =\x0d\n        leading +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n      this.cursor = leading.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(trailing\x2C match[0].length);\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLineLeft]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.cursor = 0;\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kDeleteLineRight]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kPushToKillRing](del) {\x0d\n    if (!del || del === this[kKillRing][0]) return;\x0d\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\x0d\n    this[kKillRingCursor] = 0;\x0d\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\x0d\n      ArrayPrototypePop(this[kKillRing]);\x0d\n  }\x0d\n\x0d\n  [kYank]() {\x0d\n    if (this[kKillRing].length > 0) {\x0d\n      this[kYanking] = true;\x0d\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kYankPop]() {\x0d\n    if (!this[kYanking]) {\x0d\n      return;\x0d\n    }\x0d\n    if (this[kKillRing].length > 1) {\x0d\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      this[kKillRingCursor]++;\x0d\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\x0d\n        this[kKillRingCursor] = 0;\x0d\n      }\x0d\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      const head =\x0d\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\x0d\n      const tail =\x0d\n            StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      this.line = head + currentYank + tail;\x0d\n      this.cursor = head.length + currentYank.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  clearLine() {\x0d\n    this[kMoveCursor](+Infinity);\x0d\n    this[kWriteToOutput]('\\r\\n');\x0d\n    this.line = '';\x0d\n    this.cursor = 0;\x0d\n    this.prevRows = 0;\x0d\n  }\x0d\n\x0d\n  [kLine]() {\x0d\n    const line = this[kAddHistory]();\x0d\n    this[kUndoStack] = [];\x0d\n    this[kRedoStack] = [];\x0d\n    this.clearLine();\x0d\n    this[kOnLine](line);\x0d\n  }\x0d\n\x0d\n  [kPushToUndoStack](text\x2C cursor) {\x0d\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\x0d\n        kMaxUndoRedoStackSize) {\x0d\n      ArrayPrototypeShift(this[kUndoStack]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kUndo]() {\x0d\n    if (this[kUndoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kRedoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kUndoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kRedo]() {\x0d\n    if (this[kRedoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kUndoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kRedoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\x0d\n  // case no match is found. This should only be the visual part and not the\x0d\n  // actual line content!\x0d\n  // TODO(BridgeAR): In case the substring based search is active and the end is\x0d\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\x0d\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\x0d\n  // one.\x0d\n  [kHistoryNext]() {\x0d\n    if (this.historyIndex >= 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex - 1;\x0d\n      while (\x0d\n        index >= 0 &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index--;\x0d\n      }\x0d\n      if (index === -1) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kHistoryPrev]() {\x0d\n    if (this.historyIndex < this.history.length && this.history.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex + 1;\x0d\n      while (\x0d\n        index < this.history.length &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index++;\x0d\n      }\x0d\n      if (index === this.history.length) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Returns the last character's display position of the given string\x0d\n  [kGetDisplayPos](str) {\x0d\n    let offset = 0;\x0d\n    const col = this.columns;\x0d\n    let rows = 0;\x0d\n    str = stripVTControlCharacters(str);\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      if (char === '\\n') {\x0d\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\x0d\n        rows += MathCeil(offset / col) || 1;\x0d\n        offset = 0;\x0d\n        continue;\x0d\n      }\x0d\n      // Tabs must be aligned by an offset of the tab size.\x0d\n      if (char === '\\t') {\x0d\n        offset += this.tabSize - (offset % this.tabSize);\x0d\n        continue;\x0d\n      }\x0d\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\x0d\n      if (width === 0 || width === 1) {\x0d\n        offset += width;\x0d\n      } else {\x0d\n        // width === 2\x0d\n        if ((offset + 1) % col === 0) {\x0d\n          offset++;\x0d\n        }\x0d\n        offset += 2;\x0d\n      }\x0d\n    }\x0d\n    const cols = offset % col;\x0d\n    rows += (offset - cols) / col;\x0d\n    return { cols\x2C rows };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the real position of the cursor in relation\x0d\n   * to the input prompt + string.\x0d\n   * @returns {{\x0d\n   *   rows: number;\x0d\n   *   cols: number;\x0d\n   *   }}\x0d\n   */\x0d\n  getCursorPos() {\x0d\n    const strBeforeCursor =\x0d\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    return this[kGetDisplayPos](strBeforeCursor);\x0d\n  }\x0d\n\x0d\n  // This function moves cursor dx places to the right\x0d\n  // (-dx for left) and refreshes the line if it is needed.\x0d\n  [kMoveCursor](dx) {\x0d\n    if (dx === 0) {\x0d\n      return;\x0d\n    }\x0d\n    const oldPos = this.getCursorPos();\x0d\n    this.cursor += dx;\x0d\n\x0d\n    // Bounds check\x0d\n    if (this.cursor < 0) {\x0d\n      this.cursor = 0;\x0d\n    } else if (this.cursor > this.line.length) {\x0d\n      this.cursor = this.line.length;\x0d\n    }\x0d\n\x0d\n    const newPos = this.getCursorPos();\x0d\n\x0d\n    // Check if cursor stayed on the line.\x0d\n    if (oldPos.rows === newPos.rows) {\x0d\n      const diffWidth = newPos.cols - oldPos.cols;\x0d\n      moveCursor(this.output\x2C diffWidth\x2C 0);\x0d\n    } else {\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Handle a write from the tty\x0d\n  [kTtyWrite](s\x2C key) {\x0d\n    const previousKey = this[kPreviousKey];\x0d\n    key = key || kEmptyObject;\x0d\n    this[kPreviousKey] = key;\x0d\n\x0d\n    if (!key.meta || key.name !== 'y') {\x0d\n      // Reset yanking state unless we are doing yank pop.\x0d\n      this[kYanking] = false;\x0d\n    }\x0d\n\x0d\n    // Activate or deactivate substring search.\x0d\n    if (\x0d\n      (key.name === 'up' || key.name === 'down') &&\x0d\n      !key.ctrl &&\x0d\n      !key.meta &&\x0d\n      !key.shift\x0d\n    ) {\x0d\n      if (this[kSubstringSearch] === null) {\x0d\n        this[kSubstringSearch] = StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          0\x2C\x0d\n          this.cursor\x2C\x0d\n        );\x0d\n      }\x0d\n    } else if (this[kSubstringSearch] !== null) {\x0d\n      this[kSubstringSearch] = null;\x0d\n      // Reset the index in case there's no match.\x0d\n      if (this.history.length === this.historyIndex) {\x0d\n        this.historyIndex = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Undo & Redo\x0d\n    if (typeof key.sequence === 'string') {\x0d\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\x0d\n        case 0x1f:\x0d\n          this[kUndo]();\x0d\n          return;\x0d\n        case 0x1e:\x0d\n          this[kRedo]();\x0d\n          return;\x0d\n        default:\x0d\n          break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Ignore escape key\x2C fixes\x0d\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\x0d\n    if (key.name === 'escape') return;\x0d\n\x0d\n    if (key.ctrl && key.shift) {\x0d\n      /* Control and shift pressed */\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        case 'backspace':\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.ctrl) {\x0d\n      /* Control key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'c':\x0d\n          if (this.listenerCount('SIGINT') > 0) {\x0d\n            this.emit('SIGINT');\x0d\n          } else {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'h': // delete left\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete right or EOF\x0d\n          if (this.cursor === 0 && this.line.length === 0) {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          } else if (this.cursor < this.line.length) {\x0d\n            this[kDeleteRight]();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'u': // Delete from current to start of line\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'k': // Delete from current to end of line\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n\x0d\n        case 'a': // Go to the start of the line\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'e': // Go to the end of the line\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'b': // back one character\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'f': // Forward one character\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'l': // Clear the whole screen\x0d\n          cursorTo(this.output\x2C 0\x2C 0);\x0d\n          clearScreenDown(this.output);\x0d\n          this[kRefreshLine]();\x0d\n          break;\x0d\n\x0d\n        case 'n': // next history item\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'p': // Previous history item\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Yank killed string\x0d\n          this[kYank]();\x0d\n          break;\x0d\n\x0d\n        case 'z':\x0d\n          if (process.platform === 'win32') break;\x0d\n          if (this.listenerCount('SIGTSTP') > 0) {\x0d\n            this.emit('SIGTSTP');\x0d\n          } else {\x0d\n            process.once('SIGCONT'\x2C () => {\x0d\n              // Don't raise events if stream has already been abandoned.\x0d\n              if (!this.paused) {\x0d\n                // Stream must be paused and resumed after SIGCONT to catch\x0d\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\x0d\n                this.pause();\x0d\n                this.emit('SIGCONT');\x0d\n              }\x0d\n              // Explicitly re-enable "raw mode" and move the cursor to\x0d\n              // the correct position.\x0d\n              // See https://github.com/joyent/node/issues/3295.\x0d\n              this[kSetRawMode](true);\x0d\n              this[kRefreshLine]();\x0d\n            });\x0d\n            this[kSetRawMode](false);\x0d\n            process.kill(process.pid\x2C 'SIGTSTP');\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'w': // Delete backwards to a word boundary\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        // Falls through\x0d\n        case 'backspace':\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete': // Delete forward to a word boundary\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.meta) {\x0d\n      /* Meta key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'b': // backward word\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'f': // forward word\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete forward word\x0d\n        case 'delete':\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'backspace': // Delete backwards to a word boundary\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Doing yank pop\x0d\n          this[kYankPop]();\x0d\n          break;\x0d\n      }\x0d\n    } else {\x0d\n      /* No modifier keys used */\x0d\n\x0d\n      // \\r bookkeeping is only relevant if a \\n comes right after.\x0d\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'return': // Carriage return\x2C i.e. \\r\x0d\n          this[kSawReturnAt] = DateNow();\x0d\n          this[kLine]();\x0d\n          break;\x0d\n\x0d\n        case 'enter':\x0d\n          // When key interval > crlfDelay\x0d\n          if (\x0d\n            this[kSawReturnAt] === 0 ||\x0d\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\x0d\n          ) {\x0d\n            this[kLine]();\x0d\n          }\x0d\n          this[kSawReturnAt] = 0;\x0d\n          break;\x0d\n\x0d\n        case 'backspace':\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          // Obtain the code point to the left\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'home':\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'end':\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'up':\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'down':\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'tab':\x0d\n          // If tab completion enabled\x2C do that...\x0d\n          if (\x0d\n            typeof this.completer === 'function' &&\x0d\n            this.isCompletionEnabled\x0d\n          ) {\x0d\n            const lastKeypressWasTab =\x0d\n              previousKey && previousKey.name === 'tab';\x0d\n            this[kTabComplete](lastKeypressWasTab);\x0d\n            break;\x0d\n          }\x0d\n        // falls through\x0d\n        default:\x0d\n          if (typeof s === 'string' && s) {\x0d\n            // Erase state of previous searches.\x0d\n            lineEnding.lastIndex = 0;\x0d\n            let nextMatch = RegExpPrototypeExec(lineEnding\x2C s);\x0d\n            // If no line endings are found\x2C just insert the string as is.\x0d\n            if (nextMatch === null) {\x0d\n              this[kInsertString](s);\x0d\n            } else {\x0d\n              // Keep track of the end of the last match.\x0d\n              let lastIndex = 0;\x0d\n              do {\x0d\n                this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\x0d\n                ({ lastIndex } = lineEnding);\x0d\n                this[kLine]();\x0d\n                // Restore lastIndex as the call to kLine could have mutated it.\x0d\n                lineEnding.lastIndex = lastIndex;\x0d\n              } while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null);\x0d\n            }\x0d\n          }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Creates an `AsyncIterator` object that iterates through\x0d\n   * each line in the input stream as a string.\x0d\n   * @typedef {{\x0d\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\x0d\n   *   next: () => Promise<string>\x0d\n   * }} InterfaceAsyncIterator\x0d\n   * @returns {InterfaceAsyncIterator}\x0d\n   */\x0d\n  [SymbolAsyncIterator]() {\x0d\n    if (this[kLineObjectStream] === undefined) {\x0d\n      if (Readable === undefined) {\x0d\n        Readable = require('stream').Readable;\x0d\n      }\x0d\n      const readable = new Readable({\x0d\n        objectMode: true\x2C\x0d\n        read: () => {\x0d\n          this.resume();\x0d\n        }\x2C\x0d\n        destroy: (err\x2C cb) => {\x0d\n          this.off('line'\x2C lineListener);\x0d\n          this.off('close'\x2C closeListener);\x0d\n          this.close();\x0d\n          cb(err);\x0d\n        }\x2C\x0d\n      });\x0d\n      const lineListener = (input) => {\x0d\n        if (!readable.push(input)) {\x0d\n          // TODO(rexagod): drain to resume flow\x0d\n          this.pause();\x0d\n        }\x0d\n      };\x0d\n      const closeListener = () => {\x0d\n        readable.push(null);\x0d\n      };\x0d\n      const errorListener = (err) => {\x0d\n        readable.destroy(err);\x0d\n      };\x0d\n      this.on('error'\x2C errorListener);\x0d\n      this.on('line'\x2C lineListener);\x0d\n      this.on('close'\x2C closeListener);\x0d\n      this[kLineObjectStream] = readable;\x0d\n    }\x0d\n\x0d\n    return this[kLineObjectStream][SymbolAsyncIterator]();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n};\x0d\n
code-source-info,0x2ff70788a36,453,0,41276,C0O0C4O41276,,
code-creation,JS,10,591976,0x2ff7078b5fe,1866, node:internal/readline/interface:1:1,0x2ff707889b0,~
code-source-info,0x2ff7078b5fe
tick,0x7ff7785cf21f,592663,1,0x7ff7776556e0,5,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x2ff707864f0,0x7ff6f83840eb,0x7ff6f8383d61,0xa2a2aff0a3,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab9a22,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,Eval,10,593696,0x2ff7079075e,5, node:readline/promises:1:1,0x2ff707905a8,~
script-source,454,node:readline/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Readline\x2C\x0d\n} = require('internal/readline/promises');\x0d\n\x0d\nconst {\x0d\n  Interface: _Interface\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCancel\x2C\x0d\n} = require('internal/readline/interface');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateAbortSignal } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nclass Interface extends _Interface {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  question(query\x2C options = kEmptyObject) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      let cb = resolve;\x0d\n\x0d\n      if (options?.signal) {\x0d\n        validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n        if (options.signal.aborted) {\x0d\n          return reject(\x0d\n            new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n        }\x0d\n\x0d\n        const onAbort = () => {\x0d\n          this[kQuestionCancel]();\x0d\n          reject(new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n        };\x0d\n        options.signal.addEventListener('abort'\x2C onAbort\x2C { once: true });\x0d\n        cb = (answer) => {\x0d\n          options.signal.removeEventListener('abort'\x2C onAbort);\x0d\n          resolve(answer);\x0d\n        };\x0d\n      }\x0d\n\x0d\n      this[kQuestion](query\x2C cb);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createInterface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  Readline\x2C\x0d\n  createInterface\x2C\x0d\n};\x0d\n
code-source-info,0x2ff7079075e,454,0,1625,C0O0C4O1625,,
code-creation,JS,10,593870,0x2ff70790b06,176, node:readline/promises:1:1,0x2ff707906d8,~
code-source-info,0x2ff70790b06,454,0,1625,C0O0C31O28C37O84C40O84C45O69C50O199C53O199C58O148C63O163C69O177C75O270C78O270C83O253C89O331C92O331C97O307C103O396C106O396C111O377C117O449C143O425C145O1554C152O1576C158O1590C164O1603C170O1569C175O1624,,
code-creation,Eval,10,594495,0x2ff7079136e,5, node:internal/readline/promises:1:1,0x2ff707910a0,~
script-source,455,node:internal/readline/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { CSI } = require('internal/readline/utils');\x0d\nconst { validateBoolean\x2C validateInteger } = require('internal/validators');\x0d\nconst { isWritable } = require('internal/streams/utils');\x0d\nconst { codes: { ERR_INVALID_ARG_TYPE } } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n} = CSI;\x0d\n\x0d\nclass Readline {\x0d\n  #autoCommit = false;\x0d\n  #stream;\x0d\n  #todo = [];\x0d\n\x0d\n  constructor(stream\x2C options = undefined) {\x0d\n    if (!isWritable(stream))\x0d\n      throw new ERR_INVALID_ARG_TYPE('stream'\x2C 'Writable'\x2C stream);\x0d\n    this.#stream = stream;\x0d\n    if (options?.autoCommit != null) {\x0d\n      validateBoolean(options.autoCommit\x2C 'options.autoCommit');\x0d\n      this.#autoCommit = options.autoCommit;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Moves the cursor to the x and y coordinate on the given stream.\x0d\n   * @param {integer} x\x0d\n   * @param {integer} [y]\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  cursorTo(x\x2C y = undefined) {\x0d\n    validateInteger(x\x2C 'x');\x0d\n    if (y != null) validateInteger(y\x2C 'y');\x0d\n\x0d\n    const data = y == null ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n    if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n    else ArrayPrototypePush(this.#todo\x2C data);\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Moves the cursor relative to its current location.\x0d\n   * @param {integer} dx\x0d\n   * @param {integer} dy\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  moveCursor(dx\x2C dy) {\x0d\n    if (dx || dy) {\x0d\n      validateInteger(dx\x2C 'dx');\x0d\n      validateInteger(dy\x2C 'dy');\x0d\n\x0d\n      let data = '';\x0d\n\x0d\n      if (dx < 0) {\x0d\n        data += CSI`${-dx}D`;\x0d\n      } else if (dx > 0) {\x0d\n        data += CSI`${dx}C`;\x0d\n      }\x0d\n\x0d\n      if (dy < 0) {\x0d\n        data += CSI`${-dy}A`;\x0d\n      } else if (dy > 0) {\x0d\n        data += CSI`${dy}B`;\x0d\n      }\x0d\n      if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n      else ArrayPrototypePush(this.#todo\x2C data);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the current line the cursor is on.\x0d\n   * @param {-1|0|1} dir Direction to clear:\x0d\n   *   -1 for left of the cursor\x0d\n   *   +1 for right of the cursor\x0d\n   *    0 for the entire line\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  clearLine(dir) {\x0d\n    validateInteger(dir\x2C 'dir'\x2C -1\x2C 1);\x0d\n\x0d\n    const data =\x0d\n      dir < 0 ? kClearToLineBeginning :\x0d\n        dir > 0 ? kClearToLineEnd :\x0d\n          kClearLine;\x0d\n    if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n    else ArrayPrototypePush(this.#todo\x2C data);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the screen from the current position of the cursor down.\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  clearScreenDown() {\x0d\n    if (this.#autoCommit) {\x0d\n      process.nextTick(() => this.#stream.write(kClearScreenDown));\x0d\n    } else {\x0d\n      ArrayPrototypePush(this.#todo\x2C kClearScreenDown);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sends all the pending actions to the associated `stream` and clears the\x0d\n   * internal list of pending actions.\x0d\n   * @returns {Promise<void>} Resolves when all pending actions have been\x0d\n   * flushed to the associated `stream`.\x0d\n   */\x0d\n  commit() {\x0d\n    return new Promise((resolve) => {\x0d\n      this.#stream.write(ArrayPrototypeJoin(this.#todo\x2C '')\x2C resolve);\x0d\n      this.#todo = [];\x0d\n    });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the internal list of pending actions without sending it to the\x0d\n   * associated `stream`.\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  rollback() {\x0d\n    this.#todo = [];\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Readline\x2C\x0d\n};\x0d\n
code-source-info,0x2ff7079136e,455,0,3651,C0O0C4O3651,,
code-creation,JS,10,594943,0x2ff70791956,281, node:internal/readline/promises:1:1,0x2ff707912e8,~
code-source-info,0x2ff70791956,455,0,3651,C0O0C45O28C51O51C57O74C63O120C66O120C71O112C77O202C80O202C85O165C91O182C97O258C100O258C105O243C111O338C114O338C119O309C124O311C130O464C133O380C139O406C145O426C151O441C262O3614C269O3636C275O3629C280O3650,,
code-creation,JS,10,595000,0x2ff70791b2e,27,<instance_members_initializer> node:internal/readline/promises:21:1,0x2ff707915d0,~
code-source-info,0x2ff70791b2e,455,472,3610,C3O506C12O516C19O536C26O3610,,
code-creation,Eval,10,595687,0x2ff70793d86,5, node:console:1:1,0x2ff70793c40,~
script-source,456,node:console,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nmodule.exports = require('internal/console/global');\x0d\n
code-source-info,0x2ff70793d86,456,0,1226,C0O0C4O1226,,
code-creation,JS,10,595838,0x2ff70793e0e,13, node:console:1:1,0x2ff70793d00,~
code-source-info,0x2ff70793e0e,456,0,1226,C0O1172C3O1189C7O1187C12O1225,,
code-creation,JS,10,596260,0x2ff70793fee,15, node:repl:127:3,0x18bc1ab85f8,~
code-source-info,0x2ff70793fee,447,3947,3988,C0O3954C8O3955C14O3988,,
code-creation,JS,10,596359,0x2ff70797ade,10, node:repl:130:17,0x18bc1ab8648,~
code-source-info,0x2ff70797ade,447,4061,4083,C0O4070C5O4078C9O4083,,
code-creation,JS,10,596526,0x2ff70797c06,26, node:repl:133:3,0x18bc1ab8698,~
code-source-info,0x2ff70797c06,447,4158,4223,C0O4167C7O4186C15O4217C20O4167C25O4223,,
tick,0x7ff777d23515,597236,1,0x7ff7776556e0,2,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x18bc1ab9aa6,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,Eval,10,597872,0x2ff70798586,5, node:domain:1:1,0x2ff70798220,~
script-source,457,node:domain,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// WARNING: THIS MODULE IS PENDING DEPRECATION.\x0d\n//\x0d\n// No new pull requests targeting this module will be accepted\x0d\n// unless they address existing\x2C critical bugs.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  ERR_DOMAIN_CALLBACK_NOT_AVAILABLE\x2C\x0d\n  ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE\x2C\x0d\n  ERR_UNHANDLED_ERROR\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { createHook } = require('async_hooks');\x0d\nconst { useDomainTrampoline } = require('internal/async_hooks');\x0d\n\x0d\n// TODO(addaleax): Use a non-internal solution for this.\x0d\nconst kWeak = Symbol('kWeak');\x0d\nconst { WeakReference } = internalBinding('util');\x0d\n\x0d\n// Overwrite process.domain with a getter/setter that will allow for more\x0d\n// effective optimizations\x0d\nconst _domain = [null];\x0d\nObjectDefineProperty(process\x2C 'domain'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return _domain[0];\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    return _domain[0] = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst vmPromises = new SafeWeakMap();\x0d\nconst pairing = new SafeMap();\x0d\nconst asyncHook = createHook({\x0d\n  init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    if (process.domain !== null && process.domain !== undefined) {\x0d\n      // If this operation is created while in a domain\x2C let's mark it\x0d\n      pairing.set(asyncId\x2C process.domain[kWeak]);\x0d\n      // Promises from other contexts\x2C such as with the VM module\x2C should not\x0d\n      // have a domain property as it can be used to escape the sandbox.\x0d\n      if (type !== 'PROMISE' || resource instanceof Promise) {\x0d\n        ObjectDefineProperty(resource\x2C 'domain'\x2C {\x0d\n          __proto__: null\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x2C\x0d\n          value: process.domain\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      // Because promises from other contexts don't get a domain field\x2C\x0d\n      // the domain needs to be held alive another way. Stuffing it in a\x0d\n      // weakmap connected to the promise lifetime can fix that.\x0d\n      } else {\x0d\n        vmPromises.set(resource\x2C process.domain);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  before(asyncId) {\x0d\n    const current = pairing.get(asyncId);\x0d\n    if (current !== undefined) { // Enter domain for this cb\x0d\n      // We will get the domain through current.get()\x2C because the resource\x0d\n      // object's .domain property makes sure it is not garbage collected.\x0d\n      // However\x2C we do need to make the reference to the domain non-weak\x2C\x0d\n      // so that it cannot be garbage collected before the after() hook.\x0d\n      current.incRef();\x0d\n      current.get().enter();\x0d\n    }\x0d\n  }\x2C\x0d\n  after(asyncId) {\x0d\n    const current = pairing.get(asyncId);\x0d\n    if (current !== undefined) { // Exit domain for this cb\x0d\n      const domain = current.get();\x0d\n      current.decRef();\x0d\n      domain.exit();\x0d\n    }\x0d\n  }\x2C\x0d\n  destroy(asyncId) {\x0d\n    pairing.delete(asyncId); // cleaning up\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// When domains are in use\x2C they claim full ownership of the\x0d\n// uncaught exception capture callback.\x0d\nif (process.hasUncaughtExceptionCaptureCallback()) {\x0d\n  throw new ERR_DOMAIN_CALLBACK_NOT_AVAILABLE();\x0d\n}\x0d\n\x0d\n// Get the stack trace at the point where `domain` was required.\x0d\n// eslint-disable-next-line no-restricted-syntax\x0d\nconst domainRequireStack = new Error('require(`domain`) at this point').stack;\x0d\n\x0d\nconst { setUncaughtExceptionCaptureCallback } = process;\x0d\nprocess.setUncaughtExceptionCaptureCallback = function(fn) {\x0d\n  const err = new ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE();\x0d\n  err.stack = err.stack + '\\n' + '-'.repeat(40) + '\\n' + domainRequireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n\x0d\nlet sendMakeCallbackDeprecation = false;\x0d\nfunction emitMakeCallbackDeprecation({ target\x2C method }) {\x0d\n  if (!sendMakeCallbackDeprecation) {\x0d\n    process.emitWarning(\x0d\n      'Using a domain property in MakeCallback is deprecated. Use the ' +\x0d\n      'async_context variant of MakeCallback or the AsyncResource class ' +\x0d\n      'instead. ' +\x0d\n      `(Triggered by calling ${method?.name || '<anonymous>'} ` +\x0d\n      `on ${target?.constructor?.name}.)`\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0097');\x0d\n    sendMakeCallbackDeprecation = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction topLevelDomainCallback(cb\x2C ...args) {\x0d\n  const domain = this.domain;\x0d\n  if (exports.active && domain)\x0d\n    emitMakeCallbackDeprecation({ target: this\x2C method: cb });\x0d\n\x0d\n  if (domain)\x0d\n    domain.enter();\x0d\n  const ret = ReflectApply(cb\x2C this\x2C args);\x0d\n  if (domain)\x0d\n    domain.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// It's possible to enter one domain while already inside\x0d\n// another one. The stack is each entered domain.\x0d\nlet stack = [];\x0d\nexports._stack = stack;\x0d\nuseDomainTrampoline(topLevelDomainCallback);\x0d\n\x0d\nfunction updateExceptionCapture() {\x0d\n  if (ArrayPrototypeEvery(stack\x2C\x0d\n                          (domain) => domain.listenerCount('error') === 0)) {\x0d\n    setUncaughtExceptionCaptureCallback(null);\x0d\n  } else {\x0d\n    setUncaughtExceptionCaptureCallback(null);\x0d\n    setUncaughtExceptionCaptureCallback((er) => {\x0d\n      return process.domain._errorHandler(er);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nprocess.on('newListener'\x2C (name\x2C listener) => {\x0d\n  if (name === 'uncaughtException' &&\x0d\n      listener !== domainUncaughtExceptionClear) {\x0d\n    // Make sure the first listener for `uncaughtException` always clears\x0d\n    // the domain stack.\x0d\n    process.removeListener(name\x2C domainUncaughtExceptionClear);\x0d\n    process.prependListener(name\x2C domainUncaughtExceptionClear);\x0d\n  }\x0d\n});\x0d\n\x0d\nprocess.on('removeListener'\x2C (name\x2C listener) => {\x0d\n  if (name === 'uncaughtException' &&\x0d\n      listener !== domainUncaughtExceptionClear) {\x0d\n    // If the domain listener would be the only remaining one\x2C remove it.\x0d\n    const listeners = process.listeners('uncaughtException');\x0d\n    if (listeners.length === 1 && listeners[0] === domainUncaughtExceptionClear)\x0d\n      process.removeListener(name\x2C domainUncaughtExceptionClear);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainUncaughtExceptionClear() {\x0d\n  stack.length = 0;\x0d\n  exports.active = process.domain = null;\x0d\n  updateExceptionCapture();\x0d\n}\x0d\n\x0d\n\x0d\nclass Domain extends EventEmitter {\x0d\n  constructor() {\x0d\n    super();\x0d\n\x0d\n    this.members = [];\x0d\n    this[kWeak] = new WeakReference(this);\x0d\n    asyncHook.enable();\x0d\n\x0d\n    this.on('removeListener'\x2C updateExceptionCapture);\x0d\n    this.on('newListener'\x2C updateExceptionCapture);\x0d\n  }\x0d\n}\x0d\n\x0d\nexports.Domain = Domain;\x0d\n\x0d\nexports.create = exports.createDomain = function createDomain() {\x0d\n  return new Domain();\x0d\n};\x0d\n\x0d\n// The active domain is always the one that we're currently in.\x0d\nexports.active = null;\x0d\nDomain.prototype.members = undefined;\x0d\n\x0d\n// Called by process._fatalException in case an error was thrown.\x0d\nDomain.prototype._errorHandler = function(er) {\x0d\n  let caught = false;\x0d\n\x0d\n  if ((typeof er === 'object' && er !== null) || typeof er === 'function') {\x0d\n    ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: this\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n    er.domainThrown = true;\x0d\n  }\x0d\n  // Pop all adjacent duplicates of the currently active domain from the stack.\x0d\n  // This is done to prevent a domain's error handler to run within the context\x0d\n  // of itself\x2C and re-entering itself recursively handler as a result of an\x0d\n  // exception thrown in its context.\x0d\n  while (exports.active === this) {\x0d\n    this.exit();\x0d\n  }\x0d\n\x0d\n  // The top-level domain-handler is handled separately.\x0d\n  //\x0d\n  // The reason is that if V8 was passed a command line option\x0d\n  // asking it to abort on an uncaught exception (currently\x0d\n  // "--abort-on-uncaught-exception")\x2C we want an uncaught exception\x0d\n  // in the top-level domain error handler to make the\x0d\n  // process abort. Using try/catch here would always make V8 think\x0d\n  // that these exceptions are caught\x2C and thus would prevent it from\x0d\n  // aborting in these cases.\x0d\n  if (stack.length === 0) {\x0d\n    // If there's no error handler\x2C do not emit an 'error' event\x0d\n    // as this would throw an error\x2C make the process exit\x2C and thus\x0d\n    // prevent the process 'uncaughtException' event from being emitted\x0d\n    // if a listener is set.\x0d\n    if (EventEmitter.listenerCount(this\x2C 'error') > 0) {\x0d\n      // Clear the uncaughtExceptionCaptureCallback so that we know that\x2C since\x0d\n      // the top-level domain is not active anymore\x2C it would be ok to abort on\x0d\n      // an uncaught exception at this point\x0d\n      setUncaughtExceptionCaptureCallback(null);\x0d\n      try {\x0d\n        caught = this.emit('error'\x2C er);\x0d\n      } finally {\x0d\n        updateExceptionCapture();\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    // Wrap this in a try/catch so we don't get infinite throwing\x0d\n    try {\x0d\n      // One of three things will happen here.\x0d\n      //\x0d\n      // 1. There is a handler\x2C caught = true\x0d\n      // 2. There is no handler\x2C caught = false\x0d\n      // 3. It throws\x2C caught = false\x0d\n      //\x0d\n      // If caught is false after this\x2C then there's no need to exit()\x0d\n      // the domain\x2C because we're going to crash the process anyway.\x0d\n      caught = this.emit('error'\x2C er);\x0d\n    } catch (er2) {\x0d\n      // The domain error handler threw!  oh no!\x0d\n      // See if another domain can catch THIS error\x2C\x0d\n      // or else crash on the original one.\x0d\n      updateExceptionCapture();\x0d\n      if (stack.length) {\x0d\n        exports.active = process.domain = stack[stack.length - 1];\x0d\n        caught = process.domain._errorHandler(er2);\x0d\n      } else {\x0d\n        // Pass on to the next exception handler.\x0d\n        throw er2;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Exit all domains on the stack.  Uncaught exceptions end the\x0d\n  // current tick and no domains should be left on the stack\x0d\n  // between ticks.\x0d\n  domainUncaughtExceptionClear();\x0d\n\x0d\n  return caught;\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.enter = function() {\x0d\n  // Note that this might be a no-op\x2C but we still need\x0d\n  // to push it onto the stack so that we can pop it later.\x0d\n  exports.active = process.domain = this;\x0d\n  ArrayPrototypePush(stack\x2C this);\x0d\n  updateExceptionCapture();\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.exit = function() {\x0d\n  // Don't do anything if this domain is not on the stack.\x0d\n  const index = ArrayPrototypeLastIndexOf(stack\x2C this);\x0d\n  if (index === -1) return;\x0d\n\x0d\n  // Exit all domains until this one.\x0d\n  ArrayPrototypeSplice(stack\x2C index);\x0d\n\x0d\n  exports.active = stack.length === 0 ? undefined : stack[stack.length - 1];\x0d\n  process.domain = exports.active;\x0d\n  updateExceptionCapture();\x0d\n};\x0d\n\x0d\n\x0d\n// note: this works for timers as well.\x0d\nDomain.prototype.add = function(ee) {\x0d\n  // If the domain is already added\x2C then nothing left to do.\x0d\n  if (ee.domain === this)\x0d\n    return;\x0d\n\x0d\n  // Has a domain already - remove it first.\x0d\n  if (ee.domain)\x0d\n    ee.domain.remove(ee);\x0d\n\x0d\n  // Check for circular Domain->Domain links.\x0d\n  // They cause big issues.\x0d\n  //\x0d\n  // For example:\x0d\n  // var d = domain.create();\x0d\n  // var e = domain.create();\x0d\n  // d.add(e);\x0d\n  // e.add(d);\x0d\n  // e.emit('error'\x2C er); // RangeError\x2C stack overflow!\x0d\n  if (this.domain && (ee instanceof Domain)) {\x0d\n    for (let d = this.domain; d; d = d.domain) {\x0d\n      if (ee === d) return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperty(ee\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: this\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n  ArrayPrototypePush(this.members\x2C ee);\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.remove = function(ee) {\x0d\n  ee.domain = null;\x0d\n  const index = ArrayPrototypeIndexOf(this.members\x2C ee);\x0d\n  if (index !== -1)\x0d\n    ArrayPrototypeSplice(this.members\x2C index\x2C 1);\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.run = function(fn) {\x0d\n  this.enter();\x0d\n  const ret = ReflectApply(fn\x2C this\x2C ArrayPrototypeSlice(arguments\x2C 1));\x0d\n  this.exit();\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nfunction intercepted(_this\x2C self\x2C cb\x2C fnargs) {\x0d\n  if (fnargs[0] && fnargs[0] instanceof Error) {\x0d\n    const er = fnargs[0];\x0d\n    er.domainBound = cb;\x0d\n    er.domainThrown = false;\x0d\n    ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: self\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n    self.emit('error'\x2C er);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  self.enter();\x0d\n  const ret = ReflectApply(cb\x2C _this\x2C ArrayPrototypeSlice(fnargs\x2C 1));\x0d\n  self.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nDomain.prototype.intercept = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function runIntercepted() {\x0d\n    return intercepted(this\x2C self\x2C cb\x2C arguments);\x0d\n  }\x0d\n\x0d\n  return runIntercepted;\x0d\n};\x0d\n\x0d\n\x0d\nfunction bound(_this\x2C self\x2C cb\x2C fnargs) {\x0d\n  self.enter();\x0d\n  const ret = ReflectApply(cb\x2C _this\x2C fnargs);\x0d\n  self.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nDomain.prototype.bind = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function runBound() {\x0d\n    return bound(this\x2C self\x2C cb\x2C arguments);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperty(runBound\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: this\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n\x0d\n  return runBound;\x0d\n};\x0d\n\x0d\n// Override EventEmitter methods to make it domain-aware.\x0d\nEventEmitter.usingDomains = true;\x0d\n\x0d\nconst eventInit = EventEmitter.init;\x0d\nEventEmitter.init = function(opts) {\x0d\n  ObjectDefineProperty(this\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: null\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n  if (exports.active && !(this instanceof exports.Domain)) {\x0d\n    this.domain = exports.active;\x0d\n  }\x0d\n\x0d\n  return FunctionPrototypeCall(eventInit\x2C this\x2C opts);\x0d\n};\x0d\n\x0d\nconst eventEmit = EventEmitter.prototype.emit;\x0d\nEventEmitter.prototype.emit = function emit(...args) {\x0d\n  const domain = this.domain;\x0d\n\x0d\n  const type = args[0];\x0d\n  const shouldEmitError = type === 'error' &&\x0d\n                          this.listenerCount(type) > 0;\x0d\n\x0d\n  // Just call original `emit` if current EE instance has `error`\x0d\n  // handler\x2C there's no active domain or this is process\x0d\n  if (shouldEmitError || domain === null || domain === undefined ||\x0d\n      this === process) {\x0d\n    return ReflectApply(eventEmit\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (type === 'error') {\x0d\n    const er = args.length > 1 && args[1] ?\x0d\n      args[1] : new ERR_UNHANDLED_ERROR();\x0d\n\x0d\n    if (typeof er === 'object') {\x0d\n      er.domainEmitter = this;\x0d\n      ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        value: domain\x2C\x0d\n        writable: true\x2C\x0d\n      });\x0d\n      er.domainThrown = false;\x0d\n    }\x0d\n\x0d\n    // Remove the current domain (and its duplicates) from the domains stack and\x0d\n    // set the active domain to its parent (if any) so that the domain's error\x0d\n    // handler doesn't run in its own context. This prevents any event emitter\x0d\n    // created or any exception thrown in that error handler from recursively\x0d\n    // executing that error handler.\x0d\n    const origDomainsStack = ArrayPrototypeSlice(stack);\x0d\n    const origActiveDomain = process.domain;\x0d\n\x0d\n    // Travel the domains stack from top to bottom to find the first domain\x0d\n    // instance that is not a duplicate of the current active domain.\x0d\n    let idx = stack.length - 1;\x0d\n    while (idx > -1 && process.domain === stack[idx]) {\x0d\n      --idx;\x0d\n    }\x0d\n\x0d\n    // Change the stack to not contain the current active domain\x2C and only the\x0d\n    // domains above it on the stack.\x0d\n    if (idx < 0) {\x0d\n      stack.length = 0;\x0d\n    } else {\x0d\n      ArrayPrototypeSplice(stack\x2C idx + 1);\x0d\n    }\x0d\n\x0d\n    // Change the current active domain\x0d\n    if (stack.length > 0) {\x0d\n      exports.active = process.domain = stack[stack.length - 1];\x0d\n    } else {\x0d\n      exports.active = process.domain = null;\x0d\n    }\x0d\n\x0d\n    updateExceptionCapture();\x0d\n\x0d\n    domain.emit('error'\x2C er);\x0d\n\x0d\n    // Now that the domain's error handler has completed\x2C restore the domains\x0d\n    // stack and the active domain to their original values.\x0d\n    exports._stack = stack = origDomainsStack;\x0d\n    exports.active = process.domain = origActiveDomain;\x0d\n    updateExceptionCapture();\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  domain.enter();\x0d\n  const ret = ReflectApply(eventEmit\x2C this\x2C args);\x0d\n  domain.exit();\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n
code-source-info,0x2ff70798586,457,0,17325,C0O0C4O17325,,
code-creation,JS,10,599659,0x2ff7079964e,785, node:domain:1:1,0x2ff70798500,~
code-source-info,0x2ff7079964e
code-creation,JS,10,600617,0x2ff7079b0fe,12,hasUncaughtExceptionCaptureCallback node:internal/process/execution:132:45,0x320a78ce9c8,~
script-source,32,node:internal/process/execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\x0d\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  executionAsyncId\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  afterHooksExist\x2C\x0d\n  emitAfter\x2C\x0d\n  popAsyncContext\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// shouldAbortOnUncaughtToggle is a typed array for faster\x0d\n// communication with JS.\x0d\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\x0d\n\x0d\nfunction tryGetCwd() {\x0d\n  try {\x0d\n    return process.cwd();\x0d\n  } catch {\x0d\n    // getcwd(3) can fail if the current working directory has been deleted.\x0d\n    // Fall back to the directory name of the (absolute) executable path.\x0d\n    // It's not really correct but what are the alternatives?\x0d\n    return path.dirname(process.execPath);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction evalModule(source\x2C print) {\x0d\n  if (print) {\x0d\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\x0d\n  }\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n  return handleMainPromise(loadESM((loader) => loader.eval(source)));\x0d\n}\x0d\n\x0d\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print\x2C shouldLoadESM = false) {\x0d\n  const CJSModule = require('internal/modules/cjs/loader').Module;\x0d\n  const { kVmBreakFirstLineSymbol } = require('internal/util');\x0d\n  const { pathToFileURL } = require('url');\x0d\n\x0d\n  const cwd = tryGetCwd();\x0d\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\x0d\n\x0d\n  const module = new CJSModule(name);\x0d\n  module.filename = path.join(cwd\x2C name);\x0d\n  module.paths = CJSModule._nodeModulePaths(cwd);\x0d\n\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  const asyncESM = require('internal/process/esm_loader');\x0d\n  const baseUrl = pathToFileURL(module.filename).href;\x0d\n  const { loadESM } = asyncESM;\x0d\n\x0d\n  const runScript = () => {\x0d\n    // Create wrapper for cache entry\x0d\n    const script = `\x0d\n      globalThis.module = module;\x0d\n      globalThis.exports = exports;\x0d\n      globalThis.__dirname = __dirname;\x0d\n      globalThis.require = require;\x0d\n      return (main) => main();\x0d\n    `;\x0d\n    globalThis.__filename = name;\x0d\n    RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n    const result = module._compile(script\x2C `${name}-wrapper`)(() =>\x0d\n      require('vm').runInThisContext(body\x2C {\x0d\n        filename: name\x2C\x0d\n        displayErrors: true\x2C\x0d\n        [kVmBreakFirstLineSymbol]: !!breakFirstLine\x2C\x0d\n        importModuleDynamically(specifier\x2C _\x2C importAssertions) {\x0d\n          const loader = asyncESM.esmLoader;\x0d\n          return loader.import(specifier\x2C baseUrl\x2C importAssertions);\x0d\n        }\x2C\x0d\n      }));\x0d\n    if (print) {\x0d\n      const { log } = require('internal/console/global');\x0d\n      log(result);\x0d\n    }\x0d\n\x0d\n    if (origModule !== undefined)\x0d\n      globalThis.module = origModule;\x0d\n  };\x0d\n\x0d\n  if (shouldLoadESM) {\x0d\n    return handleMainPromise(loadESM(runScript));\x0d\n  }\x0d\n  return runScript();\x0d\n}\x0d\n\x0d\nconst exceptionHandlerState = {\x0d\n  captureFn: null\x2C\x0d\n  reportFlag: false\x2C\x0d\n};\x0d\n\x0d\nfunction setUncaughtExceptionCaptureCallback(fn) {\x0d\n  if (fn === null) {\x0d\n    exceptionHandlerState.captureFn = fn;\x0d\n    shouldAbortOnUncaughtToggle[0] = 1;\x0d\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\x0d\n    return;\x0d\n  }\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\x0d\n  }\x0d\n  if (exceptionHandlerState.captureFn !== null) {\x0d\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\x0d\n  }\x0d\n  exceptionHandlerState.captureFn = fn;\x0d\n  shouldAbortOnUncaughtToggle[0] = 0;\x0d\n  exceptionHandlerState.reportFlag =\x0d\n    process.report.reportOnUncaughtException === true;\x0d\n  process.report.reportOnUncaughtException = false;\x0d\n}\x0d\n\x0d\nfunction hasUncaughtExceptionCaptureCallback() {\x0d\n  return exceptionHandlerState.captureFn !== null;\x0d\n}\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\x0d\n// and exported to be written to process._fatalException\x2C it has to be\x0d\n// returned as an *anonymous function* wrapped inside a factory function\x2C\x0d\n// otherwise it breaks the test-timers.setInterval async hooks test -\x0d\n// this may indicate that node::errors::TriggerUncaughtException() should\x0d\n// fix up the callback scope before calling into process._fatalException\x2C\x0d\n// or this function should take extra care of the async hooks before it\x0d\n// schedules a setImmediate.\x0d\nfunction createOnGlobalUncaughtException() {\x0d\n  // The C++ land node::errors::TriggerUncaughtException() will\x0d\n  // exit the process if it returns false\x2C and continue execution if it\x0d\n  // returns true (which indicates that the exception is handled by the user).\x0d\n  return (er\x2C fromPromise) => {\x0d\n    // It's possible that defaultTriggerAsyncId was set for a constructor\x0d\n    // call that threw and was never cleared. So clear it now.\x0d\n    clearDefaultTriggerAsyncId();\x0d\n\x0d\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\x0d\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\x0d\n    if (exceptionHandlerState.captureFn !== null) {\x0d\n      exceptionHandlerState.captureFn(er);\x0d\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\x0d\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\x0d\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\x0d\n      try {\x0d\n        if (!process._exiting) {\x0d\n          process._exiting = true;\x0d\n          process.exitCode = kGenericUserError;\x0d\n          process.emit('exit'\x2C kGenericUserError);\x0d\n        }\x0d\n      } catch {\x0d\n        // Nothing to be done about it at this point.\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    // If we handled an error\x2C then make sure any ticks get processed\x0d\n    // by ensuring that the next Immediate cycle isn't empty.\x0d\n    require('timers').setImmediate(noop);\x0d\n\x0d\n    // Emit the after() hooks now that the exception has been handled.\x0d\n    if (afterHooksExist()) {\x0d\n      do {\x0d\n        const asyncId = executionAsyncId();\x0d\n        if (asyncId === 0)\x0d\n          popAsyncContext(0);\x0d\n        else\x0d\n          emitAfter(asyncId);\x0d\n      } while (hasAsyncIdStack());\x0d\n    }\x0d\n    // And completely empty the id stack\x2C including anything that may be\x0d\n    // cached on the native side.\x0d\n    clearAsyncIdStack();\x0d\n\x0d\n    return true;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction readStdin(callback) {\x0d\n  process.stdin.setEncoding('utf8');\x0d\n\x0d\n  let code = '';\x0d\n  process.stdin.on('data'\x2C (d) => {\x0d\n    code += d;\x0d\n  });\x0d\n\x0d\n  process.stdin.on('end'\x2C () => {\x0d\n    callback(code);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  readStdin\x2C\x0d\n  tryGetCwd\x2C\x0d\n  evalModule\x2C\x0d\n  evalScript\x2C\x0d\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\x0d\n  setUncaughtExceptionCaptureCallback\x2C\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n};\x0d\n
code-source-info,0x2ff7079b0fe,32,4170,4229,C0O4178C5O4207C10O4217C11O4226,,
code-creation,JS,10,601613,0x2ff7079b426,344,prepareStackTrace node:internal/errors:89:27,0xf2fdb55668,~
code-source-info,0x2ff7079b
code-creation,JS,10,601862,0x2ff7079b71e,70,maybeOverridePrepareStackTrace node:internal/errors:134:40,0xf2fdb561b0,~
code-source-info,0x2ff7079b71e,11,3797,4520,C0O4030C7O4035C18O4096C23O4102C28O4102C34O4134C35O4362C40O4390C48O4431C53O4455C58O4455C64O4487C65O4498C69O4517,,
tick,0x7ff777ed93b0,601997,0,0x0,3,0x7ff777ca8e40,0x2ff7079b504,0x7ff77812f980,0x2ff70799802,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab9aa6,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,JS,10,602145,0x2ff7079cc16,10,useDomainTrampoline node:internal/async_hooks:114:29,0xf2fdb685e8,~
code-source-info,0x2ff7079cc16,13,5249,5277,C0O5259C2O5269C9O5276,,
code-creation,JS,10,602230,0x2ff7079ccfe,19,_getMaxListeners node:events:413:26,0x33cbf864c10,~
code-source-info,0x2ff7079ccfe,22,12436,12564,C0O12457C6O12491C9O12511C13O12531C14O12547C18O12561,,
code-creation,JS,10,602332,0x2ff7079cdf6,5,get node:events:271:16,0x33cbf8646e8,~
code-source-info,0x2ff7079cdf6,22,8160,8202,C0O8170C4O8197,,
code-creation,JS,10,602560,0x2ff7079d056,322,arrayClone node:events:881:20,0x33cbf865ba0,~
code-source-info,0x2ff7079d056,22,25960,26425,C0O26102C42O26125C50O26136C62O26144C71O26149C72O26163C80O26174C92O26182C104O26190C113O26195C114O26209C122O26220C134O26228C146O26236C158O26244C167O26249C168O26263C176O26274C188O26282C200O26290C212O26298C224O26306C233O26311C234O26325C242O26336C254O26344C266O26352C278O26360C290O26368C302O26376C311O26381C312O26390C317O26397C321O26422,,
code-creation,JS,10,602755,0x2ff7079d2de,50, node:domain:187:27,0x2ff70798a78,~
code-source-info,0x2ff7079d2de,457,6486,6838,C0O6511C2O6520C9O6563C14O6705C17O6713C25O6713C31O6770C34O6778C42O6778C49O6837,,
tick,0x7ff777d452d0,603620,1,0x7ff7776556e0,2,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x18bc1ab9b50,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1ab4bb8,0x7ff6f83840eb,0x7ff6f8383d61,0x18bc1a9e37e,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,Eval,10,604129,0x2ff7079e6d6,5, node:internal/repl/utils:1:1,0x2ff7079e370,~
script-source,458,node:internal/repl/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMin\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { tokTypes: tt\x2C Parser: AcornParser } =\x0d\n  require('internal/deps/acorn/acorn/dist/acorn');\x0d\n\x0d\nconst { sendInspectorCommand } = require('internal/util/inspector');\x0d\n\x0d\nconst {\x0d\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst {\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  getStringWidth\x2C\x0d\n  inspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst previewOptions = {\x0d\n  colors: false\x2C\x0d\n  depth: 1\x2C\x0d\n  showHidden: false\x2C\x0d\n};\x0d\n\x0d\nconst REPL_MODE_STRICT = Symbol('repl-strict');\x0d\n\x0d\n// If the error is that we've unexpectedly ended the input\x2C\x0d\n// then let the user try to recover by adding more input.\x0d\n// Note: `e` (the original exception) is not used by the current implementation\x2C\x0d\n// but may be needed in the future.\x0d\nfunction isRecoverableError(e\x2C code) {\x0d\n  // For similar reasons as `defaultEval`\x2C wrap expressions starting with a\x0d\n  // curly brace with parenthesis.  Note: only the open parenthesis is added\x0d\n  // here as the point is to test for potentially valid but incomplete\x0d\n  // expressions.\x0d\n  if (RegExpPrototypeExec(/^\\s*\\{/\x2C code) !== null &&\x0d\n      isRecoverableError(e\x2C `(${code}`))\x0d\n    return true;\x0d\n\x0d\n  let recoverable = false;\x0d\n\x0d\n  // Determine if the point of any error raised is at the end of the input.\x0d\n  // There are two cases to consider:\x0d\n  //\x0d\n  //   1.  Any error raised after we have encountered the 'eof' token.\x0d\n  //       This prevents us from declaring partial tokens (like '2e') as\x0d\n  //       recoverable.\x0d\n  //\x0d\n  //   2.  Three cases where tokens can legally span lines.  This is\x0d\n  //       template\x2C comment\x2C and strings with a backslash at the end of\x0d\n  //       the line\x2C indicating a continuation.  Note that we need to look\x0d\n  //       for the specific errors of 'unterminated' kind (not\x2C for example\x2C\x0d\n  //       a syntax error in a ${} expression in a template)\x2C and the only\x0d\n  //       way to do that currently is to look at the message.  Should Acorn\x0d\n  //       change these messages in the future\x2C this will lead to a test\x0d\n  //       failure\x2C indicating that this code needs to be updated.\x0d\n  //\x0d\n  const RecoverableParser = AcornParser\x0d\n    .extend(\x0d\n      (Parser) => {\x0d\n        return class extends Parser {\x0d\n          // eslint-disable-next-line no-useless-constructor\x0d\n          constructor(options\x2C input\x2C startPos) {\x0d\n            super(options\x2C input\x2C startPos);\x0d\n          }\x0d\n          nextToken() {\x0d\n            super.nextToken();\x0d\n            if (this.type === tt.eof)\x0d\n              recoverable = true;\x0d\n          }\x0d\n          raise(pos\x2C message) {\x0d\n            switch (message) {\x0d\n              case 'Unterminated template':\x0d\n              case 'Unterminated comment':\x0d\n                recoverable = true;\x0d\n                break;\x0d\n\x0d\n              case 'Unterminated string constant': {\x0d\n                const token = StringPrototypeSlice(this.input\x2C\x0d\n                                                   this.lastTokStart\x2C this.pos);\x0d\n                // See https://www.ecma-international.org/ecma-262/#sec-line-terminators\x0d\n                if (RegExpPrototypeExec(/\\\\(?:\\r\\n?|\\n|\\u2028|\\u2029)$/\x2C\x0d\n                                        token) !== null) {\x0d\n                  recoverable = true;\x0d\n                }\x0d\n              }\x0d\n            }\x0d\n            super.raise(pos\x2C message);\x0d\n          }\x0d\n        };\x0d\n      }\x2C\x0d\n    );\x0d\n\x0d\n  // Try to parse the code with acorn.  If the parse fails\x2C ignore the acorn\x0d\n  // error and return the recoverable status.\x0d\n  try {\x0d\n    RecoverableParser.parse(code\x2C { ecmaVersion: 'latest' });\x0d\n\x0d\n    // Odd case: the underlying JS engine (V8\x2C Chakra) rejected this input\x0d\n    // but Acorn detected no issue.  Presume that additional text won't\x0d\n    // address this issue.\x0d\n    return false;\x0d\n  } catch {\x0d\n    return recoverable;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupPreview(repl\x2C contextSymbol\x2C bufferSymbol\x2C active) {\x0d\n  // Simple terminals can't handle previews.\x0d\n  if (process.env.TERM === 'dumb' || !active) {\x0d\n    return { showPreview() {}\x2C clearPreview() {} };\x0d\n  }\x0d\n\x0d\n  let inputPreview = null;\x0d\n\x0d\n  let previewCompletionCounter = 0;\x0d\n  let completionPreview = null;\x0d\n\x0d\n  let hasCompletions = false;\x0d\n\x0d\n  let wrapped = false;\x0d\n\x0d\n  let escaped = null;\x0d\n\x0d\n  function getPreviewPos() {\x0d\n    const displayPos = repl._getDisplayPos(`${repl.getPrompt()}${repl.line}`);\x0d\n    const cursorPos = repl.line.length !== repl.cursor ?\x0d\n      repl.getCursorPos() :\x0d\n      displayPos;\x0d\n    return { displayPos\x2C cursorPos };\x0d\n  }\x0d\n\x0d\n  function isCursorAtInputEnd() {\x0d\n    const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n    return cursorPos.rows === displayPos.rows &&\x0d\n           cursorPos.cols === displayPos.cols;\x0d\n  }\x0d\n\x0d\n  const clearPreview = (key) => {\x0d\n    if (inputPreview !== null) {\x0d\n      const { displayPos\x2C cursorPos } = getPreviewPos();\x0d\n      const rows = displayPos.rows - cursorPos.rows + 1;\x0d\n      moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      clearLine(repl.output);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n      inputPreview = null;\x0d\n    }\x0d\n    if (completionPreview !== null) {\x0d\n      // Prevent cursor moves if not necessary!\x0d\n      const move = repl.line.length !== repl.cursor;\x0d\n      let pos\x2C rows;\x0d\n      if (move) {\x0d\n        pos = getPreviewPos();\x0d\n        cursorTo(repl.output\x2C pos.displayPos.cols);\x0d\n        rows = pos.displayPos.rows - pos.cursorPos.rows;\x0d\n        moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      }\x0d\n      const totalLine = `${repl.getPrompt()}${repl.line}${completionPreview}`;\x0d\n      const newPos = repl._getDisplayPos(totalLine);\x0d\n      // Minimize work for the terminal. It is enough to clear the right part of\x0d\n      // the current line in case the preview is visible on a single line.\x0d\n      if (newPos.rows === 0 || (pos && pos.displayPos.rows === newPos.rows)) {\x0d\n        clearLine(repl.output\x2C 1);\x0d\n      } else {\x0d\n        clearScreenDown(repl.output);\x0d\n      }\x0d\n      if (move) {\x0d\n        cursorTo(repl.output\x2C pos.cursorPos.cols);\x0d\n        moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n      }\x0d\n      if (!key.ctrl && !key.shift) {\x0d\n        if (key.name === 'escape') {\x0d\n          if (escaped === null && key.meta) {\x0d\n            escaped = repl.line;\x0d\n          }\x0d\n        } else if ((key.name === 'return' || key.name === 'enter') &&\x0d\n                   !key.meta &&\x0d\n                   escaped !== repl.line &&\x0d\n                   isCursorAtInputEnd()) {\x0d\n          repl._insertString(completionPreview);\x0d\n        }\x0d\n      }\x0d\n      completionPreview = null;\x0d\n    }\x0d\n    if (escaped !== repl.line) {\x0d\n      escaped = null;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function showCompletionPreview(line\x2C insertPreview) {\x0d\n    previewCompletionCounter++;\x0d\n\x0d\n    const count = previewCompletionCounter;\x0d\n\x0d\n    repl.completer(line\x2C (error\x2C data) => {\x0d\n      // Tab completion might be async and the result might already be outdated.\x0d\n      if (count !== previewCompletionCounter) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (error) {\x0d\n        debug('Error while generating completion preview'\x2C error);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Result and the text that was completed.\x0d\n      const { 0: rawCompletions\x2C 1: completeOn } = data;\x0d\n\x0d\n      if (!rawCompletions || rawCompletions.length === 0) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      hasCompletions = true;\x0d\n\x0d\n      // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n      const completions = ArrayPrototypeFilter(rawCompletions\x2C Boolean);\x0d\n      const prefix = commonPrefix(completions);\x0d\n\x0d\n      // No common prefix found.\x0d\n      if (prefix.length <= completeOn.length) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      const suffix = StringPrototypeSlice(prefix\x2C completeOn.length);\x0d\n\x0d\n      if (insertPreview) {\x0d\n        repl._insertString(suffix);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      completionPreview = suffix;\x0d\n\x0d\n      const result = repl.useColors ?\x0d\n        `\\u001b[90m${suffix}\\u001b[39m` :\x0d\n        ` // ${suffix}`;\x0d\n\x0d\n      const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n      if (repl.line.length !== repl.cursor) {\x0d\n        cursorTo(repl.output\x2C displayPos.cols);\x0d\n        moveCursor(repl.output\x2C 0\x2C displayPos.rows - cursorPos.rows);\x0d\n      }\x0d\n      repl.output.write(result);\x0d\n      cursorTo(repl.output\x2C cursorPos.cols);\x0d\n      const totalLine = `${repl.getPrompt()}${repl.line}${suffix}`;\x0d\n      const newPos = repl._getDisplayPos(totalLine);\x0d\n      const rows = newPos.rows - cursorPos.rows - (newPos.cols === 0 ? 1 : 0);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function isInStrictMode(repl) {\x0d\n    return repl.replMode === REPL_MODE_STRICT || ArrayPrototypeIncludes(\x0d\n      ArrayPrototypeMap(process.execArgv\x2C\x0d\n                        (e) => StringPrototypeReplaceAll(\x0d\n                          StringPrototypeToLowerCase(e)\x2C\x0d\n                          '_'\x2C\x0d\n                          '-'\x2C\x0d\n                        ))\x2C\x0d\n      '--use-strict');\x0d\n  }\x0d\n\x0d\n  // This returns a code preview for arbitrary input code.\x0d\n  function getInputPreview(input\x2C callback) {\x0d\n    // For similar reasons as `defaultEval`\x2C wrap expressions starting with a\x0d\n    // curly brace with parenthesis.\x0d\n    if (StringPrototypeStartsWith(input\x2C '{') &&\x0d\n        !StringPrototypeEndsWith(input\x2C ';') && !wrapped) {\x0d\n      input = `(${input})`;\x0d\n      wrapped = true;\x0d\n    }\x0d\n    sendInspectorCommand((session) => {\x0d\n      session.post('Runtime.evaluate'\x2C {\x0d\n        expression: input\x2C\x0d\n        throwOnSideEffect: true\x2C\x0d\n        timeout: 333\x2C\x0d\n        contextId: repl[contextSymbol]\x2C\x0d\n      }\x2C (error\x2C preview) => {\x0d\n        if (error) {\x0d\n          callback(error);\x0d\n          return;\x0d\n        }\x0d\n        const { result } = preview;\x0d\n        if (result.value !== undefined) {\x0d\n          callback(null\x2C inspect(result.value\x2C previewOptions));\x0d\n        // Ignore EvalErrors\x2C SyntaxErrors and ReferenceErrors. It is not clear\x0d\n        // where they came from and if they are recoverable or not. Other errors\x0d\n        // may be inspected.\x0d\n        } else if (preview.exceptionDetails &&\x0d\n                   (result.className === 'EvalError' ||\x0d\n                    result.className === 'SyntaxError' ||\x0d\n                    // Report ReferenceError in case the strict mode is active\x0d\n                    // for input that has no completions.\x0d\n                    (result.className === 'ReferenceError' &&\x0d\n                     (hasCompletions || !isInStrictMode(repl))))) {\x0d\n          callback(null\x2C null);\x0d\n        } else if (result.objectId) {\x0d\n          // The writer options might change and have influence on the inspect\x0d\n          // output. The user might change e.g.\x2C `showProxy`\x2C `getters` or\x0d\n          // `showHidden`. Use `inspect` instead of `JSON.stringify` to keep\x0d\n          // `Infinity` and similar intact.\x0d\n          const inspectOptions = inspect({\x0d\n            ...repl.writer.options\x2C\x0d\n            colors: false\x2C\x0d\n            depth: 1\x2C\x0d\n            compact: true\x2C\x0d\n            breakLength: Infinity\x2C\x0d\n          }\x2C previewOptions);\x0d\n          session.post('Runtime.callFunctionOn'\x2C {\x0d\n            functionDeclaration:\x0d\n              `(v) =>\x0d\n                    Reflect\x0d\n                    .getOwnPropertyDescriptor(globalThis\x2C 'util')\x0d\n                    .get().inspect(v\x2C ${inspectOptions})`\x2C\x0d\n            objectId: result.objectId\x2C\x0d\n            arguments: [result]\x2C\x0d\n          }\x2C (error\x2C preview) => {\x0d\n            if (error) {\x0d\n              callback(error);\x0d\n            } else {\x0d\n              callback(null\x2C preview.result.value);\x0d\n            }\x0d\n          });\x0d\n        } else {\x0d\n          // Either not serializable or undefined.\x0d\n          callback(null\x2C result.unserializableValue || result.type);\x0d\n        }\x0d\n      });\x0d\n    }\x2C () => callback(new ERR_INSPECTOR_NOT_AVAILABLE()));\x0d\n  }\x0d\n\x0d\n  const showPreview = () => {\x0d\n    // Prevent duplicated previews after a refresh.\x0d\n    if (inputPreview !== null || !repl.isCompletionEnabled) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const line = StringPrototypeTrim(repl.line);\x0d\n\x0d\n    // Do not preview in case the line only contains whitespace.\x0d\n    if (line === '') {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    hasCompletions = false;\x0d\n\x0d\n    // Add the autocompletion preview.\x0d\n    const insertPreview = false;\x0d\n    showCompletionPreview(repl.line\x2C insertPreview);\x0d\n\x0d\n    // Do not preview if the command is buffered.\x0d\n    if (repl[bufferSymbol]) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const inputPreviewCallback = (error\x2C inspected) => {\x0d\n      if (inspected == null) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      wrapped = false;\x0d\n\x0d\n      // Ignore the output if the value is identical to the current line.\x0d\n      if (line === inspected) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (error) {\x0d\n        debug('Error while generating preview'\x2C error);\x0d\n        return;\x0d\n      }\x0d\n      // Do not preview `undefined` if colors are deactivated or explicitly\x0d\n      // requested.\x0d\n      if (inspected === 'undefined' &&\x0d\n          (!repl.useColors || repl.ignoreUndefined)) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      inputPreview = inspected;\x0d\n\x0d\n      // Limit the output to maximum 250 characters. Otherwise it becomes a)\x0d\n      // difficult to read and b) non terminal REPLs would visualize the whole\x0d\n      // output.\x0d\n      let maxColumns = MathMin(repl.columns\x2C 250);\x0d\n\x0d\n      // Support unicode characters of width other than one by checking the\x0d\n      // actual width.\x0d\n      if (inspected.length * 2 >= maxColumns &&\x0d\n          getStringWidth(inspected) > maxColumns) {\x0d\n        maxColumns -= 4 + (repl.useColors ? 0 : 3);\x0d\n        let res = '';\x0d\n        for (const char of new SafeStringIterator(inspected)) {\x0d\n          maxColumns -= getStringWidth(char);\x0d\n          if (maxColumns < 0)\x0d\n            break;\x0d\n          res += char;\x0d\n        }\x0d\n        inspected = `${res}...`;\x0d\n      }\x0d\n\x0d\n      // Line breaks are very rare and probably only occur in case of error\x0d\n      // messages with line breaks.\x0d\n      const lineBreakPos = StringPrototypeIndexOf(inspected\x2C '\\n');\x0d\n      if (lineBreakPos !== -1) {\x0d\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C lineBreakPos)}`;\x0d\n      }\x0d\n\x0d\n      const result = repl.useColors ?\x0d\n        `\\u001b[90m${inspected}\\u001b[39m` :\x0d\n        `// ${inspected}`;\x0d\n\x0d\n      const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n      const rows = displayPos.rows - cursorPos.rows;\x0d\n      moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      repl.output.write(`\\n${result}`);\x0d\n      cursorTo(repl.output\x2C cursorPos.cols);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows - 1);\x0d\n    };\x0d\n\x0d\n    let previewLine = line;\x0d\n\x0d\n    if (completionPreview !== null &&\x0d\n        isCursorAtInputEnd() &&\x0d\n        escaped !== repl.line) {\x0d\n      previewLine += completionPreview;\x0d\n    }\x0d\n\x0d\n    getInputPreview(previewLine\x2C inputPreviewCallback);\x0d\n    if (wrapped) {\x0d\n      getInputPreview(previewLine\x2C inputPreviewCallback);\x0d\n    }\x0d\n    wrapped = false;\x0d\n  };\x0d\n\x0d\n  // -------------------------------------------------------------------------//\x0d\n  // Replace multiple interface functions. This is required to fully support  //\x0d\n  // previews without changing readlines behavior.                            //\x0d\n  // -------------------------------------------------------------------------//\x0d\n\x0d\n  // Refresh prints the whole screen again and the preview will be removed\x0d\n  // during that procedure. Print the preview again. This also makes sure\x0d\n  // the preview is always correct after resizing the terminal window.\x0d\n  const originalRefresh = FunctionPrototypeBind(repl._refreshLine\x2C repl);\x0d\n  repl._refreshLine = () => {\x0d\n    inputPreview = null;\x0d\n    originalRefresh();\x0d\n    showPreview();\x0d\n  };\x0d\n\x0d\n  let insertCompletionPreview = true;\x0d\n  // Insert the longest common suffix of the current input in case the user\x0d\n  // moves to the right while already being at the current input end.\x0d\n  const originalMoveCursor = FunctionPrototypeBind(repl._moveCursor\x2C repl);\x0d\n  repl._moveCursor = (dx) => {\x0d\n    const currentCursor = repl.cursor;\x0d\n    originalMoveCursor(dx);\x0d\n    if (currentCursor + dx > repl.line.length &&\x0d\n        typeof repl.completer === 'function' &&\x0d\n        insertCompletionPreview) {\x0d\n      const insertPreview = true;\x0d\n      showCompletionPreview(repl.line\x2C insertPreview);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // This is the only function that interferes with the completion insertion.\x0d\n  // Monkey patch it to prevent inserting the completion when it shouldn't be.\x0d\n  const originalClearLine = FunctionPrototypeBind(repl.clearLine\x2C repl);\x0d\n  repl.clearLine = () => {\x0d\n    insertCompletionPreview = false;\x0d\n    originalClearLine();\x0d\n    insertCompletionPreview = true;\x0d\n  };\x0d\n\x0d\n  return { showPreview\x2C clearPreview };\x0d\n}\x0d\n\x0d\nfunction setupReverseSearch(repl) {\x0d\n  // Simple terminals can't use reverse search.\x0d\n  if (process.env.TERM === 'dumb') {\x0d\n    return { reverseSearch() { return false; } };\x0d\n  }\x0d\n\x0d\n  const alreadyMatched = new SafeSet();\x0d\n  const labels = {\x0d\n    r: 'bck-i-search: '\x2C\x0d\n    s: 'fwd-i-search: '\x2C\x0d\n  };\x0d\n  let isInReverseSearch = false;\x0d\n  let historyIndex = -1;\x0d\n  let input = '';\x0d\n  let cursor = -1;\x0d\n  let dir = 'r';\x0d\n  let lastMatch = -1;\x0d\n  let lastCursor = -1;\x0d\n  let promptPos;\x0d\n\x0d\n  function checkAndSetDirectionKey(keyName) {\x0d\n    if (!labels[keyName]) {\x0d\n      return false;\x0d\n    }\x0d\n    if (dir !== keyName) {\x0d\n      // Reset the already matched set in case the direction is changed. That\x0d\n      // way it's possible to find those entries again.\x0d\n      alreadyMatched.clear();\x0d\n      dir = keyName;\x0d\n    }\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  function goToNextHistoryIndex() {\x0d\n    // Ignore this entry for further searches and continue to the next\x0d\n    // history entry.\x0d\n    alreadyMatched.add(repl.history[historyIndex]);\x0d\n    historyIndex += dir === 'r' ? 1 : -1;\x0d\n    cursor = -1;\x0d\n  }\x0d\n\x0d\n  function search() {\x0d\n    // Just print an empty line in case the user removed the search parameter.\x0d\n    if (input === '') {\x0d\n      print(repl.line\x2C `${labels[dir]}_`);\x0d\n      return;\x0d\n    }\x0d\n    // Fix the bounds in case the direction has changed in the meanwhile.\x0d\n    if (dir === 'r') {\x0d\n      if (historyIndex < 0) {\x0d\n        historyIndex = 0;\x0d\n      }\x0d\n    } else if (historyIndex >= repl.history.length) {\x0d\n      historyIndex = repl.history.length - 1;\x0d\n    }\x0d\n    // Check the history entries until a match is found.\x0d\n    while (historyIndex >= 0 && historyIndex < repl.history.length) {\x0d\n      let entry = repl.history[historyIndex];\x0d\n      // Visualize all potential matches only once.\x0d\n      if (alreadyMatched.has(entry)) {\x0d\n        historyIndex += dir === 'r' ? 1 : -1;\x0d\n        continue;\x0d\n      }\x0d\n      // Match the next entry either from the start or from the end\x2C depending\x0d\n      // on the current direction.\x0d\n      if (dir === 'r') {\x0d\n        // Update the cursor in case it's necessary.\x0d\n        if (cursor === -1) {\x0d\n          cursor = entry.length;\x0d\n        }\x0d\n        cursor = StringPrototypeLastIndexOf(entry\x2C input\x2C cursor - 1);\x0d\n      } else {\x0d\n        cursor = StringPrototypeIndexOf(entry\x2C input\x2C cursor + 1);\x0d\n      }\x0d\n      // Match not found.\x0d\n      if (cursor === -1) {\x0d\n        goToNextHistoryIndex();\x0d\n      // Match found.\x0d\n      } else {\x0d\n        if (repl.useColors) {\x0d\n          const start = StringPrototypeSlice(entry\x2C 0\x2C cursor);\x0d\n          const end = StringPrototypeSlice(entry\x2C cursor + input.length);\x0d\n          entry = `${start}\\x1B[4m${input}\\x1B[24m${end}`;\x0d\n        }\x0d\n        print(entry\x2C `${labels[dir]}${input}_`\x2C cursor);\x0d\n        lastMatch = historyIndex;\x0d\n        lastCursor = cursor;\x0d\n        // Explicitly go to the next history item in case no further matches are\x0d\n        // possible with the current entry.\x0d\n        if ((dir === 'r' && cursor === 0) ||\x0d\n            (dir === 's' && entry.length === cursor + input.length)) {\x0d\n          goToNextHistoryIndex();\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    print(repl.line\x2C `failed-${labels[dir]}${input}_`);\x0d\n  }\x0d\n\x0d\n  function print(outputLine\x2C inputLine\x2C cursor = repl.cursor) {\x0d\n    // TODO(BridgeAR): Resizing the terminal window hides the overlay. To fix\x0d\n    // that\x2C readline must be aware of this information. It's probably best to\x0d\n    // add a couple of properties to readline that allow to do the following:\x0d\n    // 1. Add arbitrary data to the end of the current line while not counting\x0d\n    //    towards the line. This would be useful for the completion previews.\x0d\n    // 2. Add arbitrary extra lines that do not count towards the regular line.\x0d\n    //    This would be useful for both\x2C the input preview and the reverse\x0d\n    //    search. It might be combined with the first part?\x0d\n    // 3. Add arbitrary input that is "on top" of the current line. That is\x0d\n    //    useful for the reverse search.\x0d\n    // 4. To trigger the line refresh\x2C functions should be used to pass through\x0d\n    //    the information. Alternatively\x2C getters and setters could be used.\x0d\n    //    That might even be more elegant.\x0d\n    // The data would then be accounted for when calling `_refreshLine()`.\x0d\n    // This function would then look similar to:\x0d\n    //   repl.overlay(outputLine);\x0d\n    //   repl.addTrailingLine(inputLine);\x0d\n    //   repl.setCursor(cursor);\x0d\n    // More potential improvements: use something similar to stream.cork().\x0d\n    // Multiple cursor moves on the same tick could be prevented in case all\x0d\n    // writes from the same tick are combined and the cursor is moved at the\x0d\n    // tick end instead of after each operation.\x0d\n    let rows = 0;\x0d\n    if (lastMatch !== -1) {\x0d\n      const line = StringPrototypeSlice(repl.history[lastMatch]\x2C 0\x2C lastCursor);\x0d\n      rows = repl._getDisplayPos(`${repl.getPrompt()}${line}`).rows;\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n    } else if (isInReverseSearch && repl.line !== '') {\x0d\n      rows = repl.getCursorPos().rows;\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n    }\x0d\n    if (rows !== 0)\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n\x0d\n    if (isInReverseSearch) {\x0d\n      clearScreenDown(repl.output);\x0d\n      repl.output.write(`${outputLine}\\n${inputLine}`);\x0d\n    } else {\x0d\n      repl.output.write(`\\n${inputLine}`);\x0d\n    }\x0d\n\x0d\n    lastMatch = -1;\x0d\n\x0d\n    // To know exactly how many rows we have to move the cursor back we need the\x0d\n    // cursor rows\x2C the output rows and the input rows.\x0d\n    const prompt = repl.getPrompt();\x0d\n    const cursorLine = prompt + StringPrototypeSlice(outputLine\x2C 0\x2C cursor);\x0d\n    const cursorPos = repl._getDisplayPos(cursorLine);\x0d\n    const outputPos = repl._getDisplayPos(`${prompt}${outputLine}`);\x0d\n    const inputPos = repl._getDisplayPos(inputLine);\x0d\n    const inputRows = inputPos.rows - (inputPos.cols === 0 ? 1 : 0);\x0d\n\x0d\n    rows = -1 - inputRows - (outputPos.rows - cursorPos.rows);\x0d\n\x0d\n    moveCursor(repl.output\x2C 0\x2C rows);\x0d\n    cursorTo(repl.output\x2C cursorPos.cols);\x0d\n  }\x0d\n\x0d\n  function reset(string) {\x0d\n    isInReverseSearch = string !== undefined;\x0d\n\x0d\n    // In case the reverse search ends and a history entry is found\x2C reset the\x0d\n    // line to the found entry.\x0d\n    if (!isInReverseSearch) {\x0d\n      if (lastMatch !== -1) {\x0d\n        repl.line = repl.history[lastMatch];\x0d\n        repl.cursor = lastCursor;\x0d\n        repl.historyIndex = lastMatch;\x0d\n      }\x0d\n\x0d\n      lastMatch = -1;\x0d\n\x0d\n      // Clear screen and write the current repl.line before exiting.\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n      moveCursor(repl.output\x2C 0\x2C promptPos.rows);\x0d\n      clearScreenDown(repl.output);\x0d\n      if (repl.line !== '') {\x0d\n        repl.output.write(repl.line);\x0d\n        if (repl.line.length !== repl.cursor) {\x0d\n          const { cols\x2C rows } = repl.getCursorPos();\x0d\n          cursorTo(repl.output\x2C cols);\x0d\n          moveCursor(repl.output\x2C 0\x2C rows);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    input = string || '';\x0d\n    cursor = -1;\x0d\n    historyIndex = repl.historyIndex;\x0d\n    alreadyMatched.clear();\x0d\n  }\x0d\n\x0d\n  function reverseSearch(string\x2C key) {\x0d\n    if (!isInReverseSearch) {\x0d\n      if (key.ctrl && checkAndSetDirectionKey(key.name)) {\x0d\n        historyIndex = repl.historyIndex;\x0d\n        promptPos = repl._getDisplayPos(`${repl.getPrompt()}`);\x0d\n        print(repl.line\x2C `${labels[dir]}_`);\x0d\n        isInReverseSearch = true;\x0d\n      }\x0d\n    } else if (key.ctrl && checkAndSetDirectionKey(key.name)) {\x0d\n      search();\x0d\n    } else if (key.name === 'backspace' ||\x0d\n        (key.ctrl && (key.name === 'h' || key.name === 'w'))) {\x0d\n      reset(StringPrototypeSlice(input\x2C 0\x2C input.length - 1));\x0d\n      search();\x0d\n      // Special handle <ctrl> + c and escape. Those should only cancel the\x0d\n      // reverse search. The original line is visible afterwards again.\x0d\n    } else if ((key.ctrl && key.name === 'c') || key.name === 'escape') {\x0d\n      lastMatch = -1;\x0d\n      reset();\x0d\n      return true;\x0d\n      // End search in case either enter is pressed or if any non-reverse-search\x0d\n      // key (combination) is pressed.\x0d\n    } else if (key.ctrl ||\x0d\n               key.meta ||\x0d\n               key.name === 'return' ||\x0d\n               key.name === 'enter' ||\x0d\n               typeof string !== 'string' ||\x0d\n               string === '') {\x0d\n      reset();\x0d\n      repl[kSubstringSearch] = '';\x0d\n    } else {\x0d\n      reset(`${input}${string}`);\x0d\n      search();\x0d\n    }\x0d\n    return isInReverseSearch;\x0d\n  }\x0d\n\x0d\n  return { reverseSearch };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  REPL_MODE_SLOPPY: Symbol('repl-sloppy')\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  isRecoverableError\x2C\x0d\n  kStandaloneREPL: Symbol('kStandaloneREPL')\x2C\x0d\n  setupPreview\x2C\x0d\n  setupReverseSearch\x2C\x0d\n};\x0d\n
code-source-info,0x2ff7079e6d6,458,0,25897,C0O0C4O25897,,
code-creation,JS,10,606225,0x2ff7079ec0e,456, node:internal/repl/utils:1:1,0x2ff7079e650,~
code-source-info,0x2ff7079ec0e,458,0,25897,C0O0C121O28C127O53C133O80C139O102C145O114C151O140C157O152C163O176C169O188C175O211C181O239C187O266C193O297C199O327C205O352C211O382C217O413C223O437C228O515C231O515C236O484C242O496C248O600C251O600C256O575C262O684C265O684C270O710C275O650C281O796C284O796C289O732C295O746C301O766C307O779C313O890C316O890C321O850C327O867C333O973C336O973C341O940C347O959C353O1022C356O1022C361O1055C374O1056C380O1022C382O1129C386O1129C388O1216C391O1216C395O1216C397O25698C405O25738C415O25764C421O25785C428O25825C438O25855C444O25872C450O25713C455O25896,,
code-creation,Eval,10,607298,0x2ff707a0ee6,5, node:internal/repl/history:1:1,0x2ff707a0cb0,~
script-source,459,node:internal/repl/history,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Interface } = require('readline');\x0d\nconst path = require('path');\x0d\nconst fs = require('fs');\x0d\nconst os = require('os');\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\n// XXX(chrisdickinson): The 15ms debounce value is somewhat arbitrary.\x0d\n// The debounce is to guard against code pasted into the REPL.\x0d\nconst kDebounceHistoryMS = 15;\x0d\n\x0d\nmodule.exports = setupHistory;\x0d\n\x0d\nfunction _writeToOutput(repl\x2C message) {\x0d\n  repl._writeToOutput(message);\x0d\n  repl._refreshLine();\x0d\n}\x0d\n\x0d\nfunction setupHistory(repl\x2C historyPath\x2C ready) {\x0d\n  // Empty string disables persistent history\x0d\n  if (typeof historyPath === 'string')\x0d\n    historyPath = StringPrototypeTrim(historyPath);\x0d\n\x0d\n  if (historyPath === '') {\x0d\n    repl._historyPrev = _replHistoryMessage;\x0d\n    return ready(null\x2C repl);\x0d\n  }\x0d\n\x0d\n  if (!historyPath) {\x0d\n    try {\x0d\n      historyPath = path.join(os.homedir()\x2C '.node_repl_history');\x0d\n    } catch (err) {\x0d\n      _writeToOutput(repl\x2C '\\nError: Could not get the home directory.\\n' +\x0d\n        'REPL session history will not be persisted.\\n');\x0d\n\x0d\n      debug(err.stack);\x0d\n      repl._historyPrev = _replHistoryMessage;\x0d\n      return ready(null\x2C repl);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let timer = null;\x0d\n  let writing = false;\x0d\n  let pending = false;\x0d\n  repl.pause();\x0d\n  // History files are conventionally not readable by others:\x0d\n  // https://github.com/nodejs/node/issues/3392\x0d\n  // https://github.com/nodejs/node/pull/3394\x0d\n  fs.open(historyPath\x2C 'a+'\x2C 0o0600\x2C oninit);\x0d\n\x0d\n  function oninit(err\x2C hnd) {\x0d\n    if (err) {\x0d\n      // Cannot open history file.\x0d\n      // Don't crash\x2C just don't persist history.\x0d\n      _writeToOutput(repl\x2C '\\nError: Could not open history file.\\n' +\x0d\n        'REPL session history will not be persisted.\\n');\x0d\n      debug(err.stack);\x0d\n\x0d\n      repl._historyPrev = _replHistoryMessage;\x0d\n      repl.resume();\x0d\n      return ready(null\x2C repl);\x0d\n    }\x0d\n    fs.close(hnd\x2C onclose);\x0d\n  }\x0d\n\x0d\n  function onclose(err) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n    fs.readFile(historyPath\x2C 'utf8'\x2C onread);\x0d\n  }\x0d\n\x0d\n  function onread(err\x2C data) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n\x0d\n    if (data) {\x0d\n      repl.history = RegExpPrototypeSymbolSplit(/[\\n\\r]+/\x2C data\x2C repl.historySize);\x0d\n    } else {\x0d\n      repl.history = [];\x0d\n    }\x0d\n\x0d\n    fs.open(historyPath\x2C 'r+'\x2C onhandle);\x0d\n  }\x0d\n\x0d\n  function onhandle(err\x2C hnd) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n    fs.ftruncate(hnd\x2C 0\x2C (err) => {\x0d\n      repl._historyHandle = hnd;\x0d\n      repl.on('line'\x2C online);\x0d\n      repl.once('exit'\x2C onexit);\x0d\n\x0d\n      // Reading the file data out erases it\x0d\n      repl.once('flushHistory'\x2C function() {\x0d\n        repl.resume();\x0d\n        ready(null\x2C repl);\x0d\n      });\x0d\n      flushHistory();\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // ------ history listeners ------\x0d\n  function online(line) {\x0d\n    repl._flushing = true;\x0d\n\x0d\n    if (timer) {\x0d\n      clearTimeout(timer);\x0d\n    }\x0d\n\x0d\n    timer = setTimeout(flushHistory\x2C kDebounceHistoryMS);\x0d\n  }\x0d\n\x0d\n  function flushHistory() {\x0d\n    timer = null;\x0d\n    if (writing) {\x0d\n      pending = true;\x0d\n      return;\x0d\n    }\x0d\n    writing = true;\x0d\n    const historyData = ArrayPrototypeJoin(repl.history\x2C os.EOL);\x0d\n    fs.write(repl._historyHandle\x2C historyData\x2C 0\x2C 'utf8'\x2C onwritten);\x0d\n  }\x0d\n\x0d\n  function onwritten(err\x2C data) {\x0d\n    writing = false;\x0d\n    if (pending) {\x0d\n      pending = false;\x0d\n      online();\x0d\n    } else {\x0d\n      repl._flushing = Boolean(timer);\x0d\n      if (!repl._flushing) {\x0d\n        repl.emit('flushHistory');\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onexit() {\x0d\n    if (repl._flushing) {\x0d\n      repl.once('flushHistory'\x2C onexit);\x0d\n      return;\x0d\n    }\x0d\n    repl.off('line'\x2C online);\x0d\n    fs.close(repl._historyHandle\x2C noop);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _replHistoryMessage() {\x0d\n  if (this.history.length === 0) {\x0d\n    _writeToOutput(\x0d\n      this\x2C\x0d\n      '\\nPersistent history support disabled. ' +\x0d\n      'Set the NODE_REPL_HISTORY environment\\nvariable to ' +\x0d\n      'a valid\x2C user-writable path to enable.\\n'\x2C\x0d\n    );\x0d\n  }\x0d\n  this._historyPrev = Interface.prototype._historyPrev;\x0d\n  return this._historyPrev();\x0d\n}\x0d\n
code-source-info,0x2ff707a0ee6,459,0,4357,C0O0C4O4357,,
code-creation,JS,10,607535,0x2ff707a11ce,196, node:internal/repl/history:1:1,0x2ff707a0e60,~
code-source-info,0x2ff707a11ce,459,0,4357,C0O0C61O28C67O51C73O63C78O85C84O116C90O180C93O180C98O166C104O215C107O215C111O215C113O244C116O244C120O244C122O271C125O271C129O271C131O299C134O299C139O332C152O333C158O299C160O418C163O418C168O389C174O403C180O453C182O453C184O638C186O638C188O645C190O660C195O4356,,
new,MemoryChunk,0x3f9aba40000,262144
code-creation,Script,10,608617,0x3f9aba45c0e,20, evalmachine.<anonymous>:1:1,0x3f9aba45b38,~
script-source,460,evalmachine.<anonymous>,Object.getOwnPropertyNames(globalThis)
code-source-info,0x3f9aba45c0e,460,0,38,C0O0C4O7C9O27C13O7C19O38,,
code-creation,JS,10,608979,0x3f9aba45e56,5,get node:internal/util/inspect:370:6,0x33cbf858520,~
code-source-info,0x3f9aba45e56,19,11494,11538,C0O11504C4O11533,,
code-creation,JS,10,609353,0x3f9aba47076,299,createRepl node:internal/repl:15:20,0x18bc1ab4a98,~
code-source-info,0x3f9aba47076,446,295,1265,C0O316C6O355C9O371C12O392C19O407C24O425C33O453C42O476C51O506C62O520C69O537C74O560C79O541C85O586C86O600C90O627C96O650C103O685C106O690C116O725C119O730C127O759C132O774C137O774C142O787C147O788C151O754C154O664C158O816C164O847C166O863C169O868C173O861C177O916C182O927C187O916C192O955C197O960C204O1000C209O1012C211O1029C217O1061C221O1078C225O1109C230O1114C235O1114C241O1143C246O1154C251O1169C260O1188C265O1195C270O1210C280O1223C282O1234C291O1210C298O1264,,
code-creation,JS,10,609551,0x3f9aba474ae,29,start node:repl:1042:15,0x18bc1ab80e8,~
code-source-info,0x3f9aba474ae,447,34366,34525,C0O34433C23O34440C28O34522,,
code-creation,JS,10,610123,0x3f9aba4889e,1690,REPLServer node:repl:225:20,0x18bc1ab7f78,~
code-source-info,0x3f9aba4889e
code-creation,JS,10,610734,0x3f9aba4980e,202,Interface node:readline:99:19,0xa2a2afd658,~
code-source-info,0x3f9aba4980e,449,2668,3415,C0O2710C2O2721C7O2751C24O2758C29O2808C30O2819C37O2828C46O2859C54O2893C59O2903C66O2910C78O2932C84O2958C88O2974C96O3021C102O3070C109O3077C121O3113C123O3113C125O3129C133O3190C140O3212C158O3190C163O3307C166O3319C171O3323C178O3328C183O3347C185O3364C191O3364C196O3362C201O3414,,
code-creation,JS,10,610945,0x3f9aba4aaa6,39,Interface node:internal/readline/interface:352:14,0x2ff70788b18,~
code-source-info,0x3f9aba4aaa6,453,10067,10158,C3O10111C5O10111C23O10111C38O10157,,
code-creation,JS,10,611309,0x3f9aba4dff6,1116,InterfaceConstructor node:internal/readline/interface:133:30,0x2ff70788a68,~
code-source-info,0x3f9aba4dff
code-creation,JS,10,611812,0x3f9aba4ecae,525,getStdin node:internal/bootstrap/switches/is_main_thread:191:18,0x1c416d91688,~
code-source-info,0x3f9aba4ecae
code-creation,JS,10,612152,0x3f9aba4f1ae,150,ReadStream node:tty:47:20,0x18bc1a9f528,~
code-source-info,0x3f9aba4f1ae,443,1708,2179,C0O1727C2O1738C7O1767C18O1774C23O1802C24O1806C26O1813C32O1818C38O1831C43O1841C50O1847C55O1841C56O1888C58O1907C71O1907C77O1936C83O1963C90O1969C95O1963C96O2009C101O2013C106O2020C118O2077C128O2114C132O2020C138O2135C139O2146C143O2158C144O2169C149O2178,,
code-creation,JS,10,612521,0x3f9aba4f86e,75,EventEmitter.init node:domain:462:29,0x2ff70799058,~
code-source-info,0x3f9aba4f86e,457,14386,14716,C0O14398C16O14398C21O14557C24O14569C33O14605C37O14586C42O14621C45O14643C49O14633C53O14661C60O14690C69O14668C74O14713,,
code-creation,JS,10,612774,0x3f9aba500c6,63,hasColors node:internal/tty:222:19,0x18bc1aa0c98,~
code-source-info,0x3f9aba500c6,444,6397,6662,C0O6415C18O6526C21O6544C27O6573C41O6573C46O6619C52O6640C56O6637C59O6632C62O6659,,
code-creation,JS,10,612935,0x3f9aba50596,11,createDomain node:domain:229:62,0x2ff70798b68,~
code-source-info,0x3f9aba50596,457,7804,7835,C0O7812C5O7819C10O7832,,
code-creation,JS,10,613022,0x3f9aba506b6,117,Domain node:domain:215:14,0x2ff70798b18,~
code-source-info,0x3f9aba506b6,457,7479,7708,C3O7489C5O7489C11O7489C23O7505C28O7518C32O7529C37O7534C42O7547C50O7543C55O7541C59O7573C64O7583C69O7583C73O7600C76O7605C87O7605C93O7656C96O7661C107O7661C116O7707,,
code-creation,JS,10,613174,0x3f9aba50bde,122, node:internal/promise_hooks:113:10,0x18bc1a8ad40,~
code-source-info,0x3f9aba50bde,435,3036,3103,C0O3068C22O3060C50O3060C53O3084C56O3049C121O3102,,
code-creation,JS,10,613247,0x3f9aba50d46,44,stop node:internal/promise_hooks:82:14,0x18bc1a89830,~
code-source-info,0x3f9aba50d46,435,2125,2278,C0O2157C5O2157C11O2195C12O2205C17O2218C31O2218C36O2261C39O2261C43O2277,,
code-creation,JS,10,613444,0x3f9aba513a6,53,Domain.bind node:domain:440:33,0x2ff70798fa8,~
code-source-info,0x3f9aba513a6,457,13923,14219,C0O13923C17O13946C19O13946C21O14035C31O14056C38O14161C45O14035C50O14200C52O14216,,
code-creation,JS,10,613669,0x3f9aba5189e,452,emit node:domain:478:44,0x2ff707990e0,~
code-source-info,0x3f9aba5189e,457,14812,17322,C0O14812C3O14847C8O14873C9O14877C13O14909C15O14914C20O14961C25O14961C32O14981C36O15117C48O15195C53O15215C60O15235C69O15222C74O15258C75O15269C77O15278C82O15314C89O15321C96O15332C103O15349C110O15359C113O15355C119O15389C123O15426C125O15443C129O15458C137O15479C144O15594C151O15458C156O15645C157O15661C161O16068C168O16088C171O16068C176O16126C179O16134C184O16307C189O16313C193O16320C197O16346C199O16341C207O16357C214O16368C219O16373C222O16364C227O16389C232O16330C236O16529C237O16537C242O16551C248O16564C254O16590C261O16611C266O16622C270O16590C275O16683C280O16693C286O16700C291O16714C299O16748C304O16754C307O16760C311O16767C314O16753C318O16746C324O16729C330O16794C338O16826C344O16809C348O16848C351O16848C354O16888C362O16888C368O17055C373O17078C379O17070C383O17103C391O17135C397O17118C401O17160C404O17160C407O17193C408O17206C409O17224C414O17224C418O17248C425O17261C434O17248C440O17295C445O17295C449O17308C451O17319,,
code-creation,JS,10,613923,0x3f9aba51cfe,62,updateExceptionCapture node:domain:174:32,0x2ff70798658,~
code-source-info,0x3f9aba51cfe,457,6113,6454,C0O6121C7O6145C15O6125C22O6236C29O6236C35O6296C42O6296C46O6344C56O6344C61O6453,,
code-creation,JS,10,614033,0x3f9aba51f26,166,setUncaughtExceptionCaptureCallback node:internal/process/execution:112:45,0x320a78ce978,~
code-source-info,0x3f9aba51f26,32,3454,4122,C0O3464C4O3488C11O3520C15O3531C24O3562C28O3572C31O3580C38O3615C41O3637C45O3613C49O3654C50O3661C51O3670C57O3707C75O3713C80O3707C81O3779C86O3805C92O3832C97O3838C102O3832C103O3896C110O3928C114O3937C122O3968C126O3976C134O4024C139O4031C147O4009C151O4070C154O4078C160O4111C165O4121,,
code-creation,JS,10,614130,0x3f9aba520fe,17,get node:internal/process/pre_execution:339:8,0xde6be05e70,~
code-source-info,0x3f9aba520fe,69,10419,10514,C0O10450C6O10450C11O10439C16O10507,,
code-creation,Eval,10,614367,0x3f9aba525c6,5, node:internal/process/report:1:1,0x3f9aba523d0,~
script-source,461,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x2C\x0d\n};\x0d\n
code-source-info,0x3f9aba525c6,461,0,2669,C0O0C4O2669,,
code-creation,JS,10,614628,0x3f9aba530d6,306, node:internal/process/report:1:1,0x3f9aba52540,~
code-source-info,0x3f9aba530d6,461,0,2669,C0O0C48O46C51O46C56O72C61O26C67O175C70O175C75O92C81O112C87O131C93O154C99O219C102O219C106O219C108O258C114O303C119O308C127O710C281O2613C288O2635C294O2656C300O2628C305O2668,,
code-creation,JS,10,615168,0x3f9aba557a6,30,set reportOnUncaughtException node:internal/process/report:91:32,0x3f9aba52d98,~
code-source-info,0x3f9aba557a6,461,2102,2209,C0O2119C8O2119C13O2163C18O2166C23O2166C29O2208,,
code-creation,JS,10,615244,0x3f9aba55c8e,13,clearBufferedCommand node:repl:1051:74,0x18bc1ab87d8,~
code-source-info,0x3f9aba55c8e,447,34721,34766,C0O34729C2O34734C7O34758C12O34765,,
code-creation,JS,10,615419,0x3f9aba566a6,49,setPrompt node:repl:1179:52,0x18bc1ab8a28,~
code-source-info,0x3f9aba566a6,447,38513,38623,C0O38527C2O38547C6O38560C13O38573C16O38583C21O38593C35O38611C42O38560C48O38622,,
code-creation,JS,10,615489,0x3f9aba567fe,13,setPrompt node:internal/readline/interface:365:12,0x2ff70788bd8,~
code-source-info,0x3f9aba567fe,453,10402,10446,C0O10418C2O10423C7O10432C12O10445,,
code-creation,JS,10,615642,0x3f9aba56bce,261,emitKeypressEvents node:internal/readline/emitKeypressEvents:34:28,0x2ff70786340,~
code-source-info,0x3f9aba56bce,452,704,2720,C0O704C51O730C60O741C62O740C67O760C68O767C69O773C78O780C85O804C93O800C98O798C102O832C111O839C118O857C126O857C130O855C134O878C143O885C145O884C149O901C154O901C158O936C162O936C164O1030C169O986C179O1006C183O1044C184O1044C186O2579C191O2590C199O2590C206O2616C211O2628C216O2635C227O2635C235O2672C240O2679C251O2679C260O2719,,
code-creation,JS,10,615778,0x3f9aba571de,71,StringDecoder node:string_decoder:84:23,0x2173c74d428,~
code-source-info,0x3f9aba571de,411,2816,2997,C0O2832C3O2848C7O2846C11O2880C13O2885C18O2903C21O2910C28O2916C31O2910C36O2901C40O2927C42O2932C44O2931C50O2948C55O2966C58O2984C62O2978C65O2964C70O2996,,
code-creation,JS,10,615875,0x3f9aba5738e,73,normalizeEncoding node:string_decoder:63:27,0x2173c74d3d8,~
code-source-info,0x3f9aba5738e,411,2220,2464,C0O2244C5O2257C10O2257C16O2284C18O2315C23O2326C30O2341C32O2337C39O2356C42O2363C47O2363C54O2387C61O2393C66O2387C67O2429C69O2440C70O2449C72O2461,,
code-creation,JS,10,615984,0x3f9aba575b6,73,alloc node:buffer:409:30,0x33cbf872700,~
code-source-info,0x3f9aba575b6,23,12269,12507,C0O12297C5O12297C9O12318C14O12349C20O12363C25O12387C30O12387C35O12418C40O12449C54O12425C59O12467C60O12476C67O12483C72O12504,,
code-creation,JS,10,616677,0x3f9aba588fe,2670,emitKeys node:internal/readline/utils:86:19,0x2ff70783988,~
code-source-info,0x3f9aba588fe
code-creation,JS,10,617370,0x3f9aba599ce,57,onNewListener node:internal/readline/emitKeypressEvents:85:25,0x3f9aba56a58,~
code-source-info,0x3f9aba599ce,452,2425,2573,C0O2440C2O2450C7O2475C14O2482C25O2482C31O2509C38O2516C49O2516C56O2572,,
code-creation,JS,10,617436,0x3f9aba59b26,70,Socket.resume node:net:748:35,0x2173c77dfc8,~
code-source-info,0x3f9aba59b26,428,20471,20653,C0O20479C2O20488C4O20487C9O20506C15O20525C21O20549C26O20557C32O20573C35O20573C39O20601C44O20615C49O20622C54O20632C59O20639C64O20639C69O20650,,
code-creation,JS,10,617501,0x3f9aba59c8e,53,Readable.resume node:internal/streams/readable:975:37,0x2173c744190,~
code-source-info,0x3f9aba59c8e,406,32012,32341,C0O32039C5O32069C11O32085C19O32085C23O32246C28O32237C32O32270C35O32270C40O32299C42O32305C46O32314C50O32326C52O32338,,
code-creation,JS,10,617559,0x3f9aba59dce,10, node:internal/streams/readable:50:66,0x2173c743968,~
code-source-info,0x3f9aba59dce,406,1826,1853,C0O1839C2O1845C9O1852,,
code-creation,JS,10,617607,0x3f9aba59e9e,35,resume node:internal/streams/readable:989:16,0x2173c743618,~
code-source-info,0x3f9aba59e9e,406,32361,32501,C0O32393C6O32417C7O32439C11O32452C14O32460C28O32460C34O32500,,
code-creation,JS,10,617800,0x3f9aba5a086,126,init node:domain:76:7,0x2ff707988a8,~
code-source-info,0x3f9aba5a086,457,2553,3521,C0O2602C3O2614C12O2641C18O2744C23O2752C31O2773C38O2780C40O2779C44O2752C50O2949C52O2958C59O2995C61O2984C66O3015C74O3036C82O3173C93O3015C100O3459C105O3470C113O3492C118O3470C125O3520,,
code-creation,JS,10,617874,0x3f9aba5a20e,10,get node:domain:65:16,0x2ff70798798,~
code-source-info,0x3f9aba5a20e,457,2341,2374,C0O2351C6O2365C9O2369,,
code-creation,JS,10,617944,0x3f9aba5a2ee,5,get node:readline:219:8,0xa2a2afd7e8,~
code-source-info,0x3f9aba5a2ee,449,6243,6286,C0O6267C4O6279,,
code-creation,JS,10,618007,0x3f9aba5a3d6,41, node:internal/readline/interface:377:16,0x2ff70788c78,~
code-source-info,0x3f9aba5a3d6,453,10610,10796,C0O10650C5O10656C10O10686C15O10692C23O10733C28O10739C33O10739C38O10771C40O10791,,
code-creation,JS,10,618100,0x3f9aba5a51e,75,ReadStream.setRawMode node:tty:73:43,0x18bc1a9f5c8,~
code-source-info,0x3f9aba5a51e,443,2341,2559,C0O2353C6O2388C13O2395C18O2397C27O2418C29O2439C39O2453C42O2460C50O2460C57O2439C63O2501C65O2513C66O2522C68O2533C72O2544C74O2556,,
code-creation,JS,10,618341,0x3f9aba5aafe,179,REPLServer.resetContext node:repl:1125:45,0x18bc1ab8908,~
code-source-info,0x3f9aba5aafe,447,36873,37911,C0O36873C9O36881C12O36901C17O36901C21O36894C25O36921C29O36945C33O36957C37O36984C41O37039C46O37050C50O37059C53O37064C60O37076C64O37087C74O37113C87O37186C95O37213C103O37087C108O37435C118O37461C131O37539C139O37571C147O37435C152O37875C155O37880C166O37899C171O37880C178O37910,,
code-creation,JS,10,618485,0x3f9aba5b0b6,291,REPLServer.createContext node:repl:1069:46,0x18bc1ab8878,~
code-source-info,0x3f9aba5b0b6,447,35183,36824,C0O35183C12O35195C13O35195C15O35207C18O35216C24O35234C30O35242C34O35273C51O35273C56O35623C67O35645C74O35671C77O35645C87O35623C92O36081C97O36096C101O36129C111O36146C118O36129C124O36160C137O36181C144O36291C148O36160C153O36339C165O36339C171O36367C175O36386C178O36396C190O36426C193O36396C199O36384C203O36446C216O36467C223O36568C227O36446C232O36590C245O36611C254O36713C257O36713C265O36590C270O36758C283O36758C288O36806C290O36821,,
code-creation,JS,10,618750,0x3f9aba5b4de,63,addBuiltinLibsToObject node:internal/modules/helpers:159:32,0x19ee585f9c0,~
code-source-info,0x3f9aba5b4de,61,4704,6690,C0O4704C12O4814C20O4814C25O4852C30O4872C35O5110C37O5110C42O5110C44O5144C51O5166C56O5144C62O6689,,
code-creation,JS,10,618858,0x3f9aba5b7e6,123, node:internal/modules/helpers:169:41,0x3f9aba5b418,~
code-source-info,0x3f9aba5b7e6,61,5182,6685,C0O5182C12O5334C25O5338C36O5387C45O5387C56O5434C67O5434C74O5488C75O5495C76O5811C80O5811C82O5995C97O6024C102O6068C112O6610C116O5995C122O6684,,
code-creation,JS,11,618994,0x7ff6f838ff80,1012, node:internal/modules/helpers:169:41,0x3f9aba5b418,^
code-source-info,0x7ff6f838ff80,61,5182,6685,,,
code-creation,JS,11,619019,0x7ff6f8390400,216,kw node:internal/deps/acorn/acorn/dist/acorn:136:14,0xa2a2ac8588,^
code-source-info,0x7ff6f8390400,448,15260,15416,,,
code-creation,JS,11,619040,0x7ff6f8390580,332,TokContext node:internal/deps/acorn/acorn/dist/acorn:2214:39,0xa2a2acc480,^
code-source-info,0x7ff6f8390580,448,95580,95801,,,
code-creation,JS,11,619060,0x7ff6f8390780,268,wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:279:23,0xa2a2ac8678,^
code-source-info,0x7ff6f8390780,448,20705,20784,,,
code-creation,JS,11,619079,0x7ff6f8390940,172, node:repl:127:3,0x18bc1ab85f8,^
code-source-info,0x7ff6f8390940,447,3947,3988,,,
code-creation,JS,11,619095,0x7ff6f8390a80,76, node:repl:130:17,0x18bc1ab8648,^
code-source-info,0x7ff6f8390a80,447,4061,4083,,,
code-creation,JS,11,619169,0x7ff6f8390b80,960,debuglog node:internal/util/debuglog:70:18,0x33cbf85b260,^
code-source-info,0x7ff6f8390b80,21,2286,3335,,,
tick,0x7ff777ed60d8,619348,0,0x0,0,0x7ff777c9fc40,0x3f9aba5b860,0x7ff77823a544,0x3f9aba5b516,0x3f9aba5b1d1,0x3f9aba5ab0f,0x3f9aba48dbc,0x3f9aba474c5,0x3f9aba47161,0x18bc1a9e395,0x18bc1a8bb95,0x7ff7781ceea8
code-creation,JS,11,619380,0x7ff6f8390fc0,924, node:internal/validators:247:3,0xf2fdb6dca8,^
code-source-info,0x7ff6f8390fc0,14,6515,7081,,,
code-creation,JS,11,619421,0x7ff6f8391400,156,checkListener node:events:264:23,0x33cbf8645c0,^
code-source-info,0x7ff6f8391400,22,7981,8039,,,
code-creation,JS,11,619565,0x7ff6f8391540,904,update node:internal/promise_hooks:74:16,0x18bc1a897e0,^
code-source-info,0x7ff6f8391540,435,1825,2108,,,
code-creation,JS,11,619607,0x7ff6f8391980,128,addListener node:events:603:58,0x33cbf865640,^
code-source-info,0x7ff6f8391980,22,18305,18379,,,
code-creation,JS,10,619889,0x3f9aba5d22e,219,defineDefaultCommands node:repl:1708:31,0x18bc1ab84f8,~
code-source-info,0x3f9aba5d22e,447,57039,59915,C0O57056C13O57151C21O57056C27O57253C29O57279C35O57297C40O57349C43O57420C58O57456C62O57483C70O57420C76O57708C89O57773C97O57708C103O57832C116O57907C124O57832C130O58577C143O58687C151O58577C157O58984C170O59077C178O58984C184O59649C190O59671C203O59738C211O59671C218O59914,,
code-creation,JS,10,620010,0x3f9aba5d62e,55,REPLServer.defineCommand node:repl:1606:46,0x18bc1ab8b98,~
code-source-info,0x3f9aba5d62e,447,53757,53939,C0O53777C6O53815C13O53831C24O53855C29O53876C37O53855C42O53912C49O53930C54O53938,,
code-creation,JS,10,620281,0x3f9aba5dcae,176,setupReverseSearch node:internal/repl/utils:511:28,0x2ff7079e848,~
code-source-info,0x3f9aba5dcae,458,17200,25694,C0O17200C74O17261C79O17273C84O17277C91O17282C96O17301C101O17310C111O17346C112O17380C119O17380C124O17380C126O17413C130O17413C132O17500C133O17500C135O17529C137O17529C139O17548C141O17548C143O17568C145O17568C147O17585C149O17585C151O17609C153O17609C155O17633C157O17633C159O17644C160O17644C162O25666C169O25675C175O25691,,
code-creation,JS,10,620706,0x3f9aba5ff5e,290,setupPreview node:internal/repl/utils:143:22,0x2ff7079e790,~
code-source-info,0x3f9aba5ff5e,458,4524,17169,C0O4524C80O4619C85O4631C90O4635C97O4640C104O4655C106O4670C111O4679C119O4697C129O4717C130O4747C131O4747C133O4789C134O4789C136O4819C137O4819C139O4851C140O4851C142O4877C143O4877C145O4903C146O4903C148O5393C153O12365C157O12365C159O15993C169O16020C177O15993C182O15993C184O16044C191O16062C195O16183C196O16183C198O16367C208O16394C216O16367C221O16367C223O16417C230O16434C234O16944C244O16971C252O16944C257O16944C259O16992C266O17007C270O17129C277O17138C283O17151C289O17166,,
code-creation,JS,10,620918,0x3f9aba606d6,138,REPLServer.displayPrompt node:repl:1164:46,0x18bc1ab8998,~
code-source-info,0x3f9aba606d6,447,37961,38397,C0O38001C5O38020C7O38029C9O38028C13O38053C19O38068C22O38106C27O38112C32O38118C38O38132C43O38138C48O38144C52O38151C59O38182C67O38182C73O38221C75O38240C85O38302C92O38315C95O38325C100O38335C114O38353C121O38302C126O38371C131O38371C137O38396,,
code-creation,JS,10,621049,0x3f9aba608be,87,prompt node:internal/readline/interface:392:9,0x2ff70788cc8,~
code-source-info,0x3f9aba608be,453,10948,11204,C0O10981C6O10994C11O10994C15O11018C24O11038C29O11042C36O11047C41O11068C45O11089C46O11101C50O11113C52O11118C54O11117C58O11131C64O11156C66O11161C68O11160C74O11182C76O11181C80O11176C86O11203,,
code-creation,JS,10,621125,0x3f9aba60a1e,5,get node:readline:243:8,0xa2a2afd928,~
code-source-info,0x3f9aba60a1e,449,6646,6690,C0O6670C4O6683,,
code-creation,JS,10,621168,0x3f9aba60b06,28,repl._refreshLine node:internal/repl/utils:478:23,0x3f9aba5fc38,~
code-source-info,0x3f9aba60b06,458,16064,16146,C0O16077C4O16090C10O16103C15O16103C18O16127C23O16127C27O16145,,
code-creation,JS,10,621278,0x3f9aba60c66,218, node:internal/readline/interface:483:17,0x2ff70788ef8,~
code-source-info,0x3f9aba60c66,453,13508,14537,C0O13551C2O13556C4O13555C8O13572C12O13565C16O13599C18O13604C20O13603C24O13619C30O13657C35O13693C40O13753C45O13753C50O13872C58O13892C59O13905C64O13919C69O13935C78O13946C81O13919C86O14001C91O14015C98O14001C103O14051C108O14072C113O14051C117O14145C119O14150C121O14149C125O14165C130O14226C131O14239C136O14255C138O14260C140O14259C147O14275C152O14338C157O14352C162O14370C167O14338C172O14418C176O14406C180O14429C181O14438C186O14452C191O14468C200O14479C203O14452C208O14527C212O14515C217O14536,,
code-creation,JS,10,621395,0x3f9aba60e9e,5,get node:readline:333:8,0xa2a2afddd8,~
code-source-info,0x3f9aba60e9e,449,8197,8243,C0O8221C4O8236,,
code-creation,JS,10,621534,0x3f9aba6104e,326, node:internal/readline/interface:988:19,0x2ff70789768,~
code-source-info,0x3f9aba6104e,453,28692,29647,C0O28718C2O28743C7O28768C9O28776C14O28782C20O28837C27O28837C50O28829C78O28829C81O28875C83O28884C88O28986C90O28994C95O29010C100O28994C115O29032C117O29053C119O29140C121O29149C126O29185C131O29210C135O29203C138O29193C148O29229C150O29269C158O29269C164O29336C165O29346C172O29361C177O29379C179O29389C188O29445C190O29457C196O29462C201O29468C206O29488C211O29518C217O28818C282O29565C284O29572C288O29584C290O29600C296O29608C306O29620C313O29629C319O29635C325O29642,,
code-creation,JS,10,621647,0x3f9aba6131e,31,get columns node:internal/readline/interface:355:14,0x2ff70788b88,~
code-source-info,0x3f9aba6131e,453,10173,10277,C0O10192C6O10207C11O10214C17O10235C22O10242C26O10250C27O10256C30O10272,,
code-creation,JS,10,621692,0x3f9aba6143e,35,stripVTControlCharacters node:internal/util/inspect:2404:34,0x33cbf859aa8,~
code-source-info,0x3f9aba6143e,19,83526,83624,C0O83537C8O83537C13O83570C20O83606C29O83577C34O83621,,
code-creation,JS,10,622016,0x3f9aba61a1e,142,getStringWidth node:internal/util/inspect:2317:43,0x33cbf859a20,~
code-source-info,0x3f9aba61a1e,19,80387,80972,C13O80439C15O80449C19O80482C24O80488C29O80544C31O80555C35O80549C40O80739C45O80739C51O80761C53O80770C58O80789C60O80798C63O80802C72O80817C79O80842C82O80842C91O80817C97O80802C109O80890C111O80913C113O80927C130O80564C135O80531C139O80954C141O80967,,
code-creation,JS,10,622224,0x3f9aba61c6e,48,getCursorPos node:internal/readline/interface:1029:15,0x2ff707897b8,~
code-source-info,0x3f9aba61c6e,453,29846,30007,C0O29887C2O29892C4O29891C10O29903C13O29929C20O29943C25O29903C30O29901C34O29957C36O29969C38O29968C42O29984C47O30002,,
code-creation,RegExp,3,622845,0x7ff6f8391a80,3376,[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1\x2C4}(?:;\\d{0\x2C4})*)?[\\dA-PR-TZcf-ntqry=><~]))
code-creation,JS,10,623067,0x3f9aba6220e,214,cursorTo node:internal/readline/callbacks:33:18,0x2ff70782ae8,~
code-source-info,0x3f9aba6220e,450,509,1200,C0O539C4O574C12O574C17O624C23O660C26O679C29O704C34O708C40O724C53O730C58O724C59O768C64O772C70O788C83O794C88O788C89O834C106O913C112O949C115O957C122O957C128O988C129O1000C130O1011C136O1038C141O1044C146O1038C147O1092C155O1116C158O1119C164O1124C168O1119C177O1133C180O1136C186O1141C192O1150C196O1136C202O1175C207O1175C213O1197,,
code-creation,JS,10,624118,0x3f9aba62a5e,66,clearScreenDown node:internal/readline/callbacks:114:25,0x2ff70782bd8,~
code-source-info,0x3f9aba62a5e,450,2486,2796,C0O2510C4O2545C12O2545C17O2595C25O2647C31O2683C34O2691C41O2691C47O2722C48O2734C49O2759C56O2765C59O2759C65O2793,,
code-creation,JS,10,624433,0x3f9aba62b8e,5,get node:readline:231:8,0xa2a2afd888,~
code-source-info,0x3f9aba62b8e,449,6440,6486,C0O6464C4O6479,,
code-creation,JS,10,624541,0x3f9aba62c7e,42, node:internal/readline/interface:439:19,0x2ff70788e58,~
code-source-info,0x3f9aba62c7e,453,12083,12270,C0O12106C8O12106C13O12170C19O12194C25O12230C30O12237C35O12237C41O12269,,
code-creation,JS,10,624957,0x3f9aba62e7e,220,showPreview node:internal/repl/utils:366:23,0x3f9aba5fbe8,~
code-source-info,0x3f9aba62e7e,458,12365,15409,C0O12365C8O12431C21O12466C27O12496C28O12503C29O12531C41O12556C46O12531C50O12531C52O12636C57O12645C62O12662C63O12669C64O12684C70O12699C78O12777C80O12789C90O12816C95O12789C100O12896C109O12904C114O12929C115O12936C116O12980C121O15076C124O15089C137O15132C146O15165C154O15182C158O15173C163O15197C167O15212C176O15245C181O15245C186O15302C194O15324C199O15324C204O15388C210O15396C219O15408,,
code-creation,JS,10,625092,0x3f9aba630be,21,setupHistory node:repl:1047:58,0x18bc1ab8788,~
code-source-info,0x3f9aba630be,447,34586,34643,C0O34609C14O34609C20O34642,,
code-creation,JS,10,625234,0x3f9aba636ce,318,setupHistory node:internal/repl/history:33:22,0x2ff707a0f68,~
code-source-info,0x3f9aba636ce,459,804,3980,C0O804C73O883C79O925C89O939C93O937C95O978C100O994C105O1009C112O1027C116O1055C124O1062C129O1080C130O1091C137O1129C144O1148C153O1153C156O1156C161O1156C169O1148C175O1141C190O1218C205O1286C209O1218C214O1356C224O1366C229O1356C233O1381C242O1399C246O1429C258O1436C263O1454C264O1484C265O1484C267O1507C268O1507C270O1531C271O1531C273O1541C276O1546C281O1546C285O1717C292O1720C311O1720C317O3979,,
code-creation,JS,10,625347,0x3f9aba63ff6,50,checkError node:os:64:45,0x18bc1aae978,~
code-source-info,0x3f9aba63ff6,445,2167,2333,C0O2167C3O2196C5O2217C12O2223C21O2229C25O2217C30O2240C32O2272C41O2278C46O2272C47O2317C49O2328,,
code-creation,JS,10,625516,0x3f9aba641a6,301,join node:path:425:7,0x320a78daf80,~
code-source-info,0x3f9aba641a
code-creation,JS,10,625659,0x3f9aba64476,43,pause node:internal/readline/interface:541:8,0x2ff70788f98,~
code-source-info,0x3f9aba64476,453,14898,15030,C0O14917C6O14925C7O14932C8O14943C13O14949C18O14949C22O14963C23O14975C27O14993C35O14993C40O15013C42O15025,,
code-creation,JS,10,625745,0x3f9aba645fe,120,Socket.pause node:net:734:34,0x2173c77df40,~
code-source-info,0x3f9aba645fe,428,20093,20430,C0O20101C2O20110C4O20109C9O20128C15O20147C21O20170C26O20178C32O20199C38O20215C42O20239C48O20276C53O20284C58O20284C63O20303C65O20326C72O20334C78O20334C84O20326C89O20379C94O20393C99O20400C104O20410C109O20416C114O20416C119O20427,,
code-creation,JS,10,625899,0x3f9aba647e6,91,Readable.pause node:internal/streams/readable:1009:36,0x2173c744218,~
code-source-info,0x3f9aba647e6,406,32806,33074,C0O32814C8O32850C13O32865C18O32814C23O32887C28O32902C38O32928C46O32928C50O32954C56O32977C60O32996C68O32996C73O33024C80O33039C84O33048C88O33059C90O33071,,
code-creation,JS,10,626002,0x3f9aba64946,20, node:internal/bootstrap/switches/is_main_thread:260:21,0x3f9aba4e998,~
code-source-info,0x3f9aba64946,46,7338,7382,C0O7351C5O7359C13O7359C19O7381,,
code-creation,JS,10,626327,0x3f9aba64af6,158,open node:fs:549:14,0x1c416daabb8,~
code-source-info,0x3f9aba64af6,49,14572,15158,C0O14572C2O14607C7O14614C13O14655C20O14662C25O14674C28O14697C32O14715C40O14739C46O14778C49O14800C57O14831C73O14838C80O14902C85O14902C90O14927C93O14938C99O14979C104O14979C110O15003C112O15018C116O15035C121O15043C128O15048C131O15059C136O15059C151O15043C157O15157,,
code-creation,JS,10,626456,0x3f9aba64d36,36,makeCallback node:fs:182:22,0x1c416daa578,~
code-source-info,0x3f9aba64d36,49,4791,4886,C0O4791C13O4801C26O4801C31O4834C35O4883,,
code-creation,JS,10,627212,0x3f9aba6508e,58,promiseAfterHook node:internal/async_hooks:345:26,0xf2fdb69000,~
code-source-info,0x3f9aba6508e,13,12840,13396,C0O12855C3O12855C7O12897C9O12905C11O12904C15O12926C20O12939C23O12930C29O12955C34O12955C38O12989C41O13005C44O13001C49O13363C52O13363C57O13395,,
code-creation,JS,10,627302,0x3f9aba651d6,36,after node:internal/inspector_async_hook:34:10,0x18bc1a88018,~
code-source-info,0x3f9aba651d6,65,965,1086,C0O993C5O1004C10O1004C17O1027C18O1034C19O1042C24O1052C29O1052C35O1085,,
code-creation,JS,10,627365,0x3f9aba652f6,48,after node:domain:109:8,0x2ff70798948,~
code-source-info,0x3f9aba652f6,457,4028,4239,C0O4061C5O4069C10O4069C16O4088C18O4174C23O4174C28O4196C33O4196C37O4220C42O4220C47O4238,,
code-creation,JS,10,627405,0x3f9aba6541e,13,executionAsyncId node:internal/async_hooks:572:26,0xf2fdb69780,~
code-source-info,0x3f9aba6541e,13,19382,19435,C0O19390C7O19413C9O19412C12O19432,,
code-creation,JS,10,627471,0x3f9aba6556e,167,popAsyncContext node:internal/async_hooks:554:25,0xf2fdb69730,~
code-source-info,0x3f9aba6556e,13,18749,19351,C0O18784C7O18802C9O18801C13O18820C14O18836C19O18843C20O18856C21O18862C24O18866C31O18889C36O18905C38O18904C44O18924C49O19008C54O19015C58O19041C59O19067C61O19079C65O19087C72O19103C77O19124C80O19135C87O19153C90O19150C93O19122C97O19167C104O19183C109O19202C112O19213C119O19231C122O19240C125O19228C128O19200C132O19249C137O19275C142O19275C146O19285C153O19303C158O19317C162O19330C163O19344C166O19348,,
code-creation,JS,10,627534,0x3f9aba6574e,13,enabledHooksExist node:internal/async_hooks:475:27,0xf2fdb693c0,~
code-source-info,0x3f9aba6574e,13,16664,16699,C0O16672C5O16688C8O16679C12O16696,,
code-creation,JS,10,627594,0x3f9aba6584e,48,before node:domain:98:9,0x2ff707988f8,~
code-source-info,0x3f9aba6584e,457,3532,4018,C0O3565C5O3573C10O3573C16O3592C18O3967C23O3967C27O3992C32O3992C37O3997C42O3998C47O4017,,
code-creation,JS,10,627721,0x3f9aba65a16,320,processTicksAndRejections node:internal/process/task_queues:67:35,0xf2fdb7f9d0,~
code-source-info,0x3f9aba65a
code-creation,JS,10,627826,0x3f9aba65ce6,48,shift node:internal/fixed_queue:108:8,0x320a78c5ff0,~
code-source-info,0x3f9aba65ce6,29,4061,4320,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4273C41O4283C45O4303C47O4315,,
code-creation,JS,10,627872,0x3f9aba65e2e,54,shift node:internal/fixed_queue:80:8,0x320a78c5d90,~
code-source-info,0x3f9aba65e2e,29,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,JS,10,627943,0x3f9aba65f7e,46,afterWriteTick node:internal/streams/writable:485:24,0x2173c750cc8,~
code-source-info,0x3f9aba65f7e,413,15598,15717,C0O15601C5O15609C10O15616C15O15623C20O15634C21O15659C25O15670C40O15677C45O15714,,
code-creation,JS,10,628014,0x3f9aba660d6,108,afterWrite node:internal/streams/writable:490:20,0x2173c750d18,~
code-source-info,0x3f9aba660d6,413,15740,16118,C0O15797C7O15815C14O15834C20O15841C25O15861C30O15875C32O15897C33O15913C37O15934C45O15934C50O15974C60O15974C65O15986C71O16001C75O16010C77O16010C81O15959C85O16040C91O16058C94O16058C98O16088C101O16088C107O16117,,
code-creation,JS,10,628076,0x3f9aba66266,35,get node:internal/streams/duplex:103:8,0x2173c741230,~
code-source-info,0x3f9aba66266,405,3916,4131,C0O3937C6O3983C12O4024C13O4037C14O4066C19O4081C25O4099C30O4114C34O4124,,
code-creation,JS,10,628148,0x3f9aba663a6,87, node:internal/console/constructor:355:10,0x13674f3c170,~
code-source-info,0x3f9aba663a6,38,11047,11881,C0O11268C7O11285C9O11281C17O11314C26O11333C31O11347C35O11375C40O11390C46O11792C54O11792C61O11815C66O11840C79O11840C86O11880,,
code-creation,JS,10,628252,0x3f9aba66556,97,finishMaybe node:internal/streams/writable:720:21,0x2173c750f20,~
code-source-info,0x3f9aba66556,413,21787,22285,C0O21814C3O21818C9O21844C12O21844C17O21885C23O21895C28O21911C32O21932C38O21947C42O21960C45O21968C61O21968C68O22177C71O22181C77O22211C83O22226C87O22239C90O22239C96O22284,,
code-creation,JS,10,628324,0x3f9aba6672e,80,needFinish node:internal/streams/writable:655:20,0x2173c750e08,~
code-source-info,0x3f9aba6672e,413,20124,20456,C0O20151C6O20179C13O20209C19O20241C25O20248C30O20275C37O20303C42O20312C48O20319C53O20346C60O20376C67O20405C74O20439C79O20453,,
code-creation,JS,10,628394,0x3f9aba66886,39,emitDestroyScript node:internal/async_hooks:526:27,0xf2fdb69640,~
code-source-info,0x3f9aba66886,13,17746,17935,C0O17835C5O17849C8O17840C15O17870C20O17881C21O17888C22O17892C27O17903C32O17903C38O17934,,
code-creation,JS,10,628463,0x3f9aba6699e,32,emitAfterScript node:internal/async_hooks:518:25,0xf2fdb695f0,~
code-source-info,0x3f9aba6699e,13,17613,17714,C0O17628C5O17641C8O17632C14O17655C19O17655C23O17686C26O17686C31O17713,,
code-creation,JS,10,628585,0x3f9aba66bee,87,resume_ node:internal/streams/readable:996:17,0x2173c743668,~
code-source-info,0x3f9aba66bee,406,32521,32767,C0O32542C8O32564C13O32542C18O32588C24O32611C31O32611C36O32630C37O32652C41O32671C49O32671C54O32690C57O32690C61O32717C67O32735C73O32756C80O32756C86O32766,,
code-creation,JS,10,628660,0x3f9aba66d7e,71,Socket.read node:net:757:33,0x2173c77e050,~
code-source-info,0x3f9aba66d7e,428,20692,20876,C0O20701C2O20710C4O20709C9O20728C15O20747C21O20771C26O20779C32O20795C35O20795C39O20823C44O20837C49O20844C54O20854C59O20859C64O20859C70O20873,,
code-creation,JS,10,628858,0x3f9aba670ce,632,Readable.read node:internal/streams/readable:402:35,0x2173c743d58,~
code-source-info,0x3f9aba670ce
code-creation,JS,10,629115,0x3f9aba675ae,108,howMuchToRead node:internal/streams/readable:385:23,0x2173c743320,~
code-source-info,0x3f9aba675ae,406,12758,13144,C0O12774C1O12780C6O12795C12O12802C17O12817C23O12830C24O12839C25O12853C31O12870C33O12879C34O12883C39O12887C45O12960C51O12977C57O13005C62O13012C67O13012C72O13019C76O13027C77O13046C81O13053C82O13077C86O13068C91O13090C93O13099C94O13116C100O13130C107O13141,,
code-creation,JS,10,629199,0x3f9aba67886,141,Socket._read node:net:696:34,0x2173c77dda0,~
code-source-info,0x3f9aba67886,428,19137,19461,C0O19137C13O19146C32O19203C45O19241C52O19146C57O19261C60O19270C69O19290C75O19306C85O19306C89O19347C92O19352C105O19352C113O19400C116O19410C121O19418C127O19434C135O19434C140O19460,,
code-creation,JS,10,629328,0x3f9aba67a5e,10, node:net:41:63,0x2173c77d780,~
code-source-info,0x3f9aba67a5e,428,1562,1589,C0O1575C2O1581C9O1588,,
code-creation,JS,10,629410,0x3f9aba67bd6,65,tryReadStart node:net:686:22,0x2173c77cf08,~
code-source-info,0x3f9aba67bd6,428,18802,19034,C0O18858C8O18858C12O18903C18O18919C22O18949C27O18957C32O18957C37O18973C39O18994C46O19002C52O19002C58O18994C64O19033,,
code-creation,JS,10,629522,0x3f9aba67d2e,46,flow node:internal/streams/readable:1020:14,0x2173c7436b8,~
code-source-info,0x3f9aba67d2e,406,33092,33230,C0O33127C5O33146C13O33166C18O33146C23O33192C29O33210C34O33210C40O33179C45O33229,,
code-creation,JS,10,629629,0x3f9aba67e2e,2,nop node:internal/streams/writable:73:13,0x2173c7509f8,~
code-source-info,0x3f9aba67e2e,413,2473,2478,C1O2477,,
code-creation,JS,10,629716,0x3f9aba67f0e,103,onpause node:internal/bootstrap/switches/is_main_thread:264:19,0x3f9aba4e8f8,~
code-source-info,0x3f9aba67f0e,46,7406,7638,C0O7416C7O7427C13O7443C14O7450C15O7456C22O7466C27O7474C37O7486C40O7492C46O7518C53O7524C59O7547C63O7563C70O7569C76O7585C80O7601C87O7607C92O7615C97O7615C102O7637,,
code-creation,JS,10,629802,0x3f9aba6807e,10,get node:internal/streams/readable:1211:18,0x2173c744808,~
code-source-info,0x3f9aba6807e,406,37812,37866,C0O37836C5O37851C9O37859,,
code-creation,JS,11,630011,0x7ff6f8392840,104,isEmpty node:internal/fixed_queue:67:10,0x320a78c5ca0,^
code-source-info,0x7ff6f8392840,29,3150,3197,,,
code-creation,JS,11,630079,0x7ff6f8392940,276, node:internal/validators:419:42,0xf2fdb6dfc8,^
code-source-info,0x7ff6f8392940,14,11696,11815,,,
code-creation,JS,11,630156,0x7ff6f8392b00,1796,emitInitNative node:internal/async_hooks:192:24,0xf2fdb68c90,^
code-source-info,0x7ff6f8392b00,13,7591,8730,,,
code-creation,JS,11,630192,0x7ff6f83932c0,300,lookupPublicResource node:internal/async_hooks:177:30,0xf2fdb68c40,^
code-source-info,0x7ff6f83932c0,13,7042,7370,,,
code-creation,JS,11,630222,0x7ff6f8393480,212,newAsyncId node:internal/async_hooks:417:20,0xf2fdb691e0,^
code-source-info,0x7ff6f8393480,13,14984,15037,,,
code-creation,JS,11,630257,0x7ff6f8393600,344,init node:internal/inspector_async_hook:16:9,0x18bc1a87f78,^
code-source-info,0x7ff6f8393600,65,288,816,,,
code-creation,JS,11,630363,0x7ff6f8393800,1600,emitHook node:internal/async_hooks:225:18,0xf2fdb68ce0,^
code-source-info,0x7ff6f8393800,13,8852,9850,,,
code-creation,JS,11,630494,0x7ff6f8393ec0,108,SafeIterator node:internal/per_context/primordials:327:16,0x2f9728b7898,^
code-source-info,0x7ff6f8393ec0,6,9488,9550,,,
code-creation,JS,10,630842,0x3f9aba68626,632,processPromiseRejections node:internal/process/promises:221:34,0x320a78c4598,~
script-source,28,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x2C\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x2C\x0d\n  exitCodes: { kGenericUserError }\x2C\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst multipleResolvesDeprecate = deprecate(\x0d\n  () => {}\x2C\x0d\n  'The multipleResolves event has been deprecated.'\x2C\x0d\n  'DEP0160'\x2C\x0d\n);\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\x0d\n      multipleResolvesDeprecate();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x2C\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x2C\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x2C\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x2C\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = kGenericUserError;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x3f9aba
code-creation,JS,10,631921,0x3f9aba68aae,25,setHasRejectionToWarn node:internal/process/promises:78:31,0x320a78c3f70,~
code-source-info,0x3f9aba68aae,28,2262,2324,C0O2275C7O2284C12O2307C19O2305C24O2323,,
new,MemoryChunk,0x3eba5c80000,262144
new,MemoryChunk,0x13de6fc0000,262144
code-creation,JS,10,633234,0x3f9aba68bbe,50,destroy node:internal/inspector_async_hook:40:12,0x18bc1a88068,~
code-source-info,0x3f9aba68bbe,65,1102,1255,C0O1130C5O1141C10O1141C17O1176C22O1187C27O1193C32O1203C33O1211C38O1221C43O1221C49O1254,,
code-creation,JS,10,633337,0x3f9aba68ce6,17,destroy node:domain:117:10,0x2ff70798998,~
code-source-info,0x3f9aba68ce6,457,4251,4312,C0O4268C5O4276C10O4282C16O4311,,
code-creation,JS,10,633464,0x3f9aba68e6e,173,callbackTrampoline node:internal/async_hooks:118:28,0xf2fdb68b00,~
code-source-info,0x3f9aba68e6e,13,5308,5850,C0O5308C14O5360C21O5378C23O5377C26O5392C30O5400C37O5433C41O5450C42O5462C52O5480C55O5471C61O5495C66O5495C70O5531C72O5542C73O5554C86O5608C91O5608C96O5626C101O5645C106O5645C115O5693C120O5693C127O5722C128O5734C138O5752C141O5743C147O5766C152O5766C156O5797C161O5823C166O5823C170O5833C172O5847,,
code-creation,JS,10,633550,0x3f9aba69046,25, node:fs:185:10,0x3f9aba64c80,~
code-source-info,0x3f9aba69046,49,4841,4882,C0O4841C3O4854C19O4854C24O4882,,
code-creation,JS,10,633605,0x3f9aba691a6,102,oninit node:internal/repl/history:65:18,0x3f9aba63310,~
code-source-info,0x3f9aba691a6,459,1781,2198,C0O1799C4O1904C17O1967C21O1904C26O2035C33O2045C38O2035C42O2062C49O2080C53O2110C56O2115C61O2115C65O2132C73O2139C78O2157C79O2170C86O2173C94O2173C101O2197,,
code-creation,JS,10,633666,0x3f9aba6932e,74,close node:fs:515:15,0x1c416daab18,~
code-source-info,0x3f9aba6932e,49,13807,14054,C14O13850C19O13855C24O13878C26O13891C31O13922C34O13933C39O13974C44O13974C50O13998C52O14013C56O14028C61O14036C66O14036C73O14053,,
code-creation,JS,10,633975,0x3f9aba69506,40,onclose node:internal/repl/history:80:19,0x3f9aba63360,~
code-source-info,0x3f9aba69506,459,2220,2328,C0O2233C4O2251C7O2258C11O2269C12O2282C19O2285C33O2285C39O2327,,
code-creation,JS,10,634142,0x3f9aba697be,270,readFile node:fs:376:18,0x1c416daa910,~
code-source-info,0x3f9aba697be,49,10094,11064,C0O10094C9O10125C16O10150C21O10136C27O10175C34O10196C39O10185C46O10248C54O10248C59O10347C69O10309C75O10361C79O10380C85O10380C89O10378C93O10438C99O10478C103O10468C107O10506C113O10523C118O10531C128O10531C134O10655C135O10662C136O10673C141O10698C146O10677C153O10722C154O10729C155O10755C162O10777C170O10755C176O10803C186O10810C190O10808C192O10851C199O10851C205O10875C207O10887C211O10901C215O10916C219O10940C226O10948C235O10953C238O10964C246O10964C263O10948C269O11063,,
code-creation,JS,10,634274,0x3f9aba69a5e,16,maybeCallback node:fs:173:23,0x1c416daa528,~
code-source-info,0x3f9aba69a5e,49,4506,4562,C0O4516C8O4516C13O4549C15O4559,,
code-creation,Eval,10,634581,0x3f9aba69e1e,5, node:internal/fs/read_file_context:1:1,0x3f9aba69bf8,~
script-source,462,node:internal/fs/read_file_context,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  MathMin\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n  }\x2C\x0d\n} = require('internal/fs/utils');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst { FSReqCallback\x2C close\x2C read } = internalBinding('fs');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nfunction readFileAfterRead(err\x2C bytesRead) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  context.pos += bytesRead;\x0d\n\x0d\n  if (context.pos === context.size || bytesRead === 0) {\x0d\n    context.close();\x0d\n  } else {\x0d\n    if (context.size === 0) {\x0d\n      // Unknown size\x2C just read until we don't get bytes.\x0d\n      const buffer = bytesRead === kReadFileUnknownBufferLength ?\x0d\n        context.buffer : context.buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(context.buffers\x2C buffer);\x0d\n    }\x0d\n    context.read();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readFileAfterClose(err) {\x0d\n  const context = this.context;\x0d\n  const callback = context.callback;\x0d\n  let buffer = null;\x0d\n\x0d\n  if (context.err || err)\x0d\n    return callback(aggregateTwoErrors(err\x2C context.err));\x0d\n\x0d\n  try {\x0d\n    if (context.size === 0)\x0d\n      buffer = Buffer.concat(context.buffers\x2C context.pos);\x0d\n    else if (context.pos < context.size)\x0d\n      buffer = context.buffer.slice(0\x2C context.pos);\x0d\n    else\x0d\n      buffer = context.buffer;\x0d\n\x0d\n    if (context.encoding)\x0d\n      buffer = buffer.toString(context.encoding);\x0d\n  } catch (err) {\x0d\n    return callback(err);\x0d\n  }\x0d\n\x0d\n  callback(null\x2C buffer);\x0d\n}\x0d\n\x0d\nclass ReadFileContext {\x0d\n  constructor(callback\x2C encoding) {\x0d\n    this.fd = undefined;\x0d\n    this.isUserFd = undefined;\x0d\n    this.size = 0;\x0d\n    this.callback = callback;\x0d\n    this.buffers = null;\x0d\n    this.buffer = null;\x0d\n    this.pos = 0;\x0d\n    this.encoding = encoding;\x0d\n    this.err = null;\x0d\n    this.signal = undefined;\x0d\n  }\x0d\n\x0d\n  read() {\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n\x0d\n    if (this.signal?.aborted) {\x0d\n      return this.close(\x0d\n        new AbortError(undefined\x2C { cause: this.signal?.reason }));\x0d\n    }\x0d\n    if (this.size === 0) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n      this.buffer = buffer;\x0d\n    } else {\x0d\n      buffer = this.buffer;\x0d\n      offset = this.pos;\x0d\n      length = MathMin(kReadFileBufferLength\x2C this.size - this.pos);\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = readFileAfterRead;\x0d\n    req.context = this;\x0d\n\x0d\n    read(this.fd\x2C buffer\x2C offset\x2C length\x2C -1\x2C req);\x0d\n  }\x0d\n\x0d\n  close(err) {\x0d\n    if (this.isUserFd) {\x0d\n      process.nextTick(function tick(context) {\x0d\n        ReflectApply(readFileAfterClose\x2C { context }\x2C [null]);\x0d\n      }\x2C this);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = readFileAfterClose;\x0d\n    req.context = this;\x0d\n    this.err = err;\x0d\n\x0d\n    close(this.fd\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = ReadFileContext;\x0d\n
code-source-info,0x3f9aba69e1e,462,0,3031,C0O0C4O3031,,
code-creation,JS,10,635021,0x3f9aba6a276,196, node:internal/fs/read_file_context:1:1,0x3f9aba69d98,~
code-source-info,0x3f9aba6a276,462,0,3031,C0O0C54O28C60O51C66O63C72O196C75O196C80O120C85O127C91O155C97O248C100O248C105O237C111O309C114O309C119O278C125O293C131O300C137O386C140O386C145O346C151O361C188O2996C190O3011C195O3030,,
tick,0x7ff8e7aeed54,635093,1,0x7ff7776556e0,3,0x7ff77812e530,0x7ff6f8384026,0x7ff6f8383d61,0x3f9aba697f4,0x3f9aba69527,0x3f9aba69059,0x3f9aba68ee6
code-creation,JS,10,635478,0x3f9aba6aa5e,54,ReadFileContext node:internal/fs/read_file_context:72:14,0x3f9aba69ef0,~
code-source-info,0x3f9aba6aa5e,462,1637,1926,C0O1665C1O1673C5O1691C6O1705C10O1723C11O1733C15O1743C17O1757C21O1774C22O1787C26O1800C27O1812C31O1825C32O1834C36O1844C38O1858C42O1875C43O1884C47O1897C48O1909C53O1925,,
code-creation,JS,10,635639,0x3f9aba6b3ee,65,checkAborted node:fs:354:22,0x1c416daa8c0,~
code-source-info,0x3f9aba6b3ee,49,9570,9728,C0O9594C7O9604C16O9622C18O9635C23O9646C38O9672C51O9631C57O9622C61O9691C62O9703C63O9712C64O9725,,
code-creation,JS,10,636081,0x3f9aba6b616,75,readFileAfterOpen node:fs:308:27,0x1c416daa820,~
code-source-info,0x3f9aba6b616,49,8367,8635,C0O8403C5O8417C9O8441C14O8441C19O8461C20O8468C21O8479C23O8490C27O8513C32O8513C38O8537C40O8552C44O8576C46O8588C50O8602C55O8610C68O8610C74O8634,,
code-creation,JS,10,636387,0x3f9aba6b9ce,162,readFileAfterStat node:fs:324:27,0x1c416daa870,~
code-source-info,0x3f9aba6b9ce,49,8665,9545,C0O8704C5O8718C9O8747C14O8747C19O8758C20O9003C25O9036C28O9018C40O9052C47O9016C54O9066C56O9077C58O9075C63O9098C70O9104C77O9157C82O9157C87O9168C91O9190C92O9199C97O9371C99O9387C105O9414C107O9431C110O9438C115O9438C120O9429C137O9507C145O9507C150O9518C151O9535C156O9535C161O9544,,
code-creation,JS,10,636592,0x3f9aba6be96,215,read node:internal/fs/read_file_context:85:7,0x3f9aba69f40,~
code-source-info,0x3f9aba6be96,462,1936,2632,C0O1950C2O1967C4O1984C6O2008C13O2014C22O2046C29O2066C34O2077C39O2102C49O2108C62O2062C68O2046C73O2121C74O2143C80O2148C85O2164C90O2180C97O2196C100O2180C106O2234C108O2253C113O2299C115O2311C121O2356C126O2385C131O2397C138O2414C141O2442C146O2454C150O2447C154O2406C160O2486C165O2486C171O2512C173O2527C177O2553C179O2565C183O2580C188O2590C208O2580C214O2631,,
code-creation,JS,10,636701,0x3f9aba6c0b6,19,allocUnsafeSlow node:buffer:432:50,0x33cbf8727a0,~
code-source-info,0x3f9aba6c0b6,23,13042,13110,C0O13054C5O13054C9O13075C14O13082C18O13107,,
code-creation,JS,10,636998,0x3f9aba6c2ae,136,readFileAfterRead node:internal/fs/read_file_context:25:27,0x3f9aba69e50,~
code-source-info,0x3f9aba6c2ae,462,443,973,C0O486C5O500C9O529C14O529C19O540C20O546C27O561C30O558C34O589C39O605C43O593C49O623C54O645C59O645C65O683C71O688C76O779C78O793C80O789C85O841C91O858C96O865C103O865C110O893C115O920C120O893C125O958C130O958C135O972,,
code-creation,JS,10,637125,0x3f9aba6c4e6,73,close node:internal/fs/read_file_context:112:8,0x3f9aba69f90,~
code-source-info,0x3f9aba6c4e6,462,2643,2989,C0O2665C6O2684C9O2692C19O2692C25O2814C26O2821C27O2848C32O2848C38O2874C40O2889C44O2916C46O2928C50O2941C52O2950C56O2964C61O2975C66O2964C72O2988,,
code-creation,JS,10,637396,0x3f9aba6c736,183,readFileAfterClose node:internal/fs/read_file_context:46:28,0x3f9aba69ea0,~
code-source-info,0x3f9aba6c736,462,1004,1595,C0O1036C5O1073C10O1099C12O1122C20O1129C22O1139C24O1155C27O1187C32O1155C38O1146C42O1193C46O1222C52O1227C57O1241C62O1257C67O1272C72O1289C77O1257C86O1317C91O1331C95O1321C100O1361C105O1368C112O1385C117O1368C126O1425C131O1452C137O1485C142O1502C147O1485C156O1476C166O1537C169O1544C173O1558C174O1569C176O1569C182O1594,,
code-creation,JS,10,637595,0x3f9aba6c9ce,259,concat node:buffer:585:32,0x33cbf872e98,~
code-source-info,0x3f9aba6c9ce,23,16991,18162,C0O17011C8O17011C13O17054C19O17061C24O17073C29O17080C34O17097C35O17103C39O17136C42O17166C44O17178C48O17171C53O17200C55O17208C59O17212C65O17231C67O17245C71O17249C83O17187C88O17153C94O17290C102O17290C107O17349C110O17356C115O17356C121O17390C123O17409C125O17421C129O17414C134O17453C136O17457C140O17467C145O17472C151O17631C161O17680C179O17716C185O17637C190O17631C191O17734C196O17778C210O17741C219O17430C224O17396C228O17867C230O17875C235O18086C251O18086C256O18145C258O18159,,
code-creation,JS,10,637767,0x3f9aba6cc66,91,onread node:internal/repl/history:87:18,0x3f9aba633b0,~
code-source-info,0x3f9aba6cc66,459,2349,2612,C0O2368C4O2386C7O2393C11O2404C12O2419C16O2438C23O2453C35O2502C43O2453C48O2451C54O2537C59O2550C63O2570C70O2573C84O2573C90O2611,,
code-creation,JS,10,638111,0x3f9aba6ce56,52,onhandle node:internal/repl/history:101:20,0x3f9aba63400,~
code-source-info,0x3f9aba6ce56,459,2635,3027,C0O2635C9O2653C13O2671C18O2678C22O2689C23O2702C30O2705C40O2715C45O2705C51O3026,,
code-creation,JS,10,638258,0x3f9aba6cfd6,114,ftruncate node:fs:1115:19,0x1c416dab138,~
code-source-info,0x3f9aba6cfd6,49,29984,30316,C16O30013C22O30051C25O30072C27O30089C32O30094C37O30117C45O30117C50O30149C57O30155C63O30175C66O30186C71O30227C76O30227C82O30251C84O30266C88O30281C93O30289C107O30289C113O30315,,
code-creation,JS,10,638519,0x3f9aba6d1c6,93, node:internal/repl/history:105:26,0x3f9aba6cda0,~
code-source-info,0x3f9aba6d1c6,459,2723,3020,C0O2741C7O2761C11O2775C16O2780C29O2780C35O2807C40O2812C53O2812C59O2889C64O2894C77O2894C83O2998C88O2998C92O3019,,
code-creation,JS,10,638678,0x3f9aba6d3e6,109,flushHistory node:internal/repl/history:130:24,0x3f9aba634a8,~
code-source-info,0x3f9aba6d3e6,459,3270,3522,C0O3280C4O3286C10O3299C16O3321C20O3329C26O3344C27O3351C28O3364C32O3372C38O3405C48O3429C57O3438C60O3441C65O3405C71O3452C78O3455C86O3466C102O3455C108O3521,,
code-creation,JS,10,638873,0x3f9aba6d656,403,write node:fs:831:15,0x1c416daae40,~
code-source-info,0x3f9aba6d
code-creation,JS,10,639023,0x3f9aba6d9ee,32, node:internal/fs/utils:886:60,0x320a78fb360,~
code-source-info,0x3f9aba6d9ee,54,25030,25222,C0O25053C6O25092C11O25131C24O25098C29O25092C31O25221,,
code-creation,JS,10,639112,0x3f9aba6db6e,65,validateEncoding node:internal/validators:366:26,0xf2fdb6ded8,~
code-source-info,0x3f9aba6db6e,14,10108,10425,C0O10157C5O10157C10O10209C15O10222C17O10245C24O10265C29O10269C34O10283C47O10407C57O10289C62O10283C64O10424,,
code-creation,JS,10,639286,0x3f9aba6dc9e,22,wrapper node:fs:832:19,0x3f9aba6d520,~
code-source-info,0x3f9aba6dc9e,49,22390,22526,C0O22485C8O22499C15O22485C21O22525,,
code-creation,JS,10,639358,0x3f9aba6ddbe,84,onwritten node:internal/repl/history:141:21,0x3f9aba634f8,~
code-source-info,0x3f9aba6ddbe,459,3546,3783,C0O3565C4O3573C10O3587C16O3609C20O3617C26O3633C29O3633C34O3664C41O3681C46O3689C49O3681C53O3679C57O3704C60O3714C66O3736C69O3741C77O3741C83O3782,,
code-creation,JS,10,639484,0x3f9aba6df8e,95,onceWrapper node:events:621:21,0x33cbf8657a0,~
code-source-info,0x3f9aba6df8e,22,18808,19060,C0O18808C2O18826C8O18845C13O18852C18O18872C23O18883C28O18852C34O18897C35O18908C39O18935C45O18942C50O18968C55O18977C60O18987C65O18977C70O18995C71O19013C76O19022C81O19033C86O19022C92O19052C94O19059,,
code-creation,JS,10,639578,0x3f9aba6e0fe,33, node:internal/repl/history:111:41,0x3f9aba6d0f8,~
code-source-info,0x3f9aba6e0fe,459,2923,2988,C0O2937C5O2942C10O2942C14O2961C26O2961C32O2987,,
code-creation,JS,10,639633,0x3f9aba6e20e,43,resume node:internal/readline/interface:553:9,0x2ff70788fe8,~
code-source-info,0x3f9aba6e20e,453,15134,15270,C0O15154C6O15162C7O15169C8O15180C13O15186C18O15186C22O15201C23O15213C27O15232C35O15232C40O15253C42O15265,,
code-creation,JS,10,639827,0x3f9aba6e3c6,40, node:internal/main/repl:45:45,0x18bc1a9e230,~
code-source-info,0x3f9aba6e3c6,389,1403,1703,C0O1403C9O1427C13O1447C15O1447C16O1474C19O1479C32O1479C39O1702,,
tick,0x7ff8e7af1be4,650563,0,0x0,8
tick,0x7ff8e7af1be4,666189,0,0x0,8
tick,0x7ff8e7af1be4,674560,0,0x0,8
tick,0x7ff8e7af1be4,691311,0,0x0,8
tick,0x7ff8e7af1be4,707201,0,0x0,8
tick,0x7ff8e7af1be4,715406,0,0x0,8
tick,0x7ff8e7af1be4,731900,0,0x0,8
tick,0x7ff8e7af1be4,747837,0,0x0,8
tick,0x7ff8e7af1be4,763626,0,0x0,8
tick,0x7ff8e7af1be4,779736,0,0x0,8
tick,0x7ff8e7af1be4,787584,0,0x0,8
tick,0x7ff8e7af1be4,803822,0,0x0,8
tick,0x7ff8e7af1be4,819431,0,0x0,8
tick,0x7ff8e7af1be4,827713,0,0x0,8
tick,0x7ff8e7af1be4,844116,0,0x0,8
tick,0x7ff8e7af1be4,860593,0,0x0,8
tick,0x7ff8e7af1be4,868527,0,0x0,8
tick,0x7ff8e7af1be4,881893,0,0x0,8
tick,0x7ff8e7af1be4,889707,0,0x0,8
tick,0x7ff8e7af1be4,906416,0,0x0,8
tick,0x7ff8e7af1be4,921888,0,0x0,8
tick,0x7ff8e7af1be4,930034,0,0x0,8
tick,0x7ff8e7af1be4,938741,0,0x0,8
tick,0x7ff8e7af1be4,954257,0,0x0,8
tick,0x7ff8e7af1be4,969369,0,0x0,8
tick,0x7ff8e7af1be4,978045,0,0x0,8
tick,0x7ff8e7af1be4,986752,0,0x0,8
tick,0x7ff8e7af1be4,1010779,0,0x0,8
tick,0x7ff8e7af1be4,1026975,0,0x0,8
tick,0x7ff8e7af1be4,1042356,0,0x0,8
tick,0x7ff8e7af1be4,1058038,0,0x0,8
tick,0x7ff8e7af1be4,1073949,0,0x0,8
tick,0x7ff8e7af1be4,1089813,0,0x0,8
tick,0x7ff8e7af1be4,1103341,0,0x0,8
tick,0x7ff8e7af1be4,1116303,0,0x0,8
tick,0x7ff8e7af1be4,1126563,0,0x0,8
tick,0x7ff8e7af1be4,1134565,0,0x0,8
tick,0x7ff8e7af1be4,1150451,0,0x0,8
tick,0x7ff8e7af1be4,1169650,0,0x0,8
tick,0x7ff8e7af1be4,1174694,0,0x0,8
tick,0x7ff8e7af1be4,1190721,0,0x0,8
tick,0x7ff8e7af1be4,1206925,0,0x0,8
tick,0x7ff8e7af1be4,1221804,0,0x0,8
tick,0x7ff8e7af1be4,1237703,0,0x0,8
tick,0x7ff8e7af1be4,1253978,0,0x0,8
tick,0x7ff8e7af1be4,1269539,0,0x0,8
tick,0x7ff8e7af1be4,1285340,0,0x0,8
tick,0x7ff8e7af1be4,1300985,0,0x0,8
tick,0x7ff8e7af1be4,1316747,0,0x0,8
tick,0x7ff8e7af1be4,1332419,0,0x0,8
tick,0x7ff8e7af1be4,1348500,0,0x0,8
tick,0x7ff8e7af1be4,1363821,0,0x0,8
tick,0x7ff8e7af1be4,1379124,0,0x0,8
tick,0x7ff8e7af1be4,1395510,0,0x0,8
tick,0x7ff8e7af1be4,1411208,0,0x0,8
tick,0x7ff8e7af1be4,1426943,0,0x0,8
tick,0x7ff8e7af1be4,1442537,0,0x0,8
tick,0x7ff8e7af1be4,1458574,0,0x0,8
tick,0x7ff8e7af1be4,1474948,0,0x0,8
tick,0x7ff8e7af1be4,1490742,0,0x0,8
tick,0x7ff8e7af1be4,1506455,0,0x0,8
tick,0x7ff8e7af1be4,1522216,0,0x0,8
tick,0x7ff8e7af1be4,1537866,0,0x0,8
tick,0x7ff8e7af1be4,1553589,0,0x0,8
tick,0x7ff8e7af1be4,1569154,0,0x0,8
tick,0x7ff8e7af1be4,1585530,0,0x0,8
tick,0x7ff8e7af1be4,1601156,0,0x0,8
tick,0x7ff8e7af1be4,1616560,0,0x0,8
tick,0x7ff8e7af1be4,1620438,0,0x0,8
tick,0x7ff8e7af1be4,1622290,0,0x0,8
tick,0x7ff8e7af1be4,1638875,0,0x0,8
tick,0x7ff8e7af1be4,1654634,0,0x0,8
tick,0x7ff8e7af1be4,1670011,0,0x0,8
tick,0x7ff8e7af1be4,1685548,0,0x0,8
tick,0x7ff8e7af1be4,1701417,0,0x0,8
tick,0x7ff8e7af1be4,1717674,0,0x0,8
tick,0x7ff8e7af1be4,1733255,0,0x0,8
tick,0x7ff8e7af1be4,1748963,0,0x0,8
tick,0x7ff8e7af1be4,1765274,0,0x0,8
tick,0x7ff8e7af1be4,1780505,0,0x0,8
tick,0x7ff8e7af1be4,1796321,0,0x0,8
tick,0x7ff8e7af1be4,1811818,0,0x0,8
tick,0x7ff8e7af1be4,1827675,0,0x0,8
tick,0x7ff8e7af1be4,1843118,0,0x0,8
tick,0x7ff8e7af1be4,1858787,0,0x0,8
tick,0x7ff8e7af1be4,1875092,0,0x0,8
tick,0x7ff8e7af1be4,1890679,0,0x0,8
tick,0x7ff8e7af1be4,1906224,0,0x0,8
tick,0x7ff8e7af1be4,1921916,0,0x0,8
tick,0x7ff8e7af1be4,1937669,0,0x0,8
tick,0x7ff8e7af1be4,1953137,0,0x0,8
tick,0x7ff8e7af1be4,1968802,0,0x0,8
tick,0x7ff8e7af1be4,1985093,0,0x0,8
tick,0x7ff8e7af1be4,2000952,0,0x0,8
tick,0x7ff8e7af1be4,2016325,0,0x0,8
tick,0x7ff8e7af1be4,2032259,0,0x0,8
tick,0x7ff8e7af1be4,2047555,0,0x0,8
tick,0x7ff8e7af1be4,2063231,0,0x0,8
tick,0x7ff8e7af1be4,2079204,0,0x0,8
tick,0x7ff8e7af1be4,2098559,0,0x0,8
tick,0x7ff8e7af1be4,2111225,0,0x0,8
tick,0x7ff8e7af1be4,2127100,0,0x0,8
tick,0x7ff8e7af1be4,2142795,0,0x0,8
tick,0x7ff8e7af1be4,2159005,0,0x0,8
tick,0x7ff8e7af1be4,2167477,0,0x0,8
tick,0x7ff8e7af1be4,2175623,0,0x0,8
tick,0x7ff8e7af1be4,2199844,0,0x0,8
tick,0x7ff8e7af1be4,2202005,0,0x0,8
tick,0x7ff8e7af1be4,2203072,0,0x0,8
tick,0x7ff8e7af1be4,2219454,0,0x0,8
tick,0x7ff8e7af1be4,2227308,0,0x0,8
tick,0x7ff8e7af1be4,2235591,0,0x0,8
tick,0x7ff8e7af1be4,2251539,0,0x0,8
tick,0x7ff8e7af1be4,2267254,0,0x0,8
tick,0x7ff8e7af1be4,2283282,0,0x0,8
tick,0x7ff8e7af1be4,2299175,0,0x0,8
tick,0x7ff8e7af1be4,2315140,0,0x0,8
tick,0x7ff8e7af1be4,2330690,0,0x0,8
tick,0x7ff8e7af1be4,2346520,0,0x0,8
tick,0x7ff8e7af1be4,2362489,0,0x0,8
tick,0x7ff8e7af1be4,2378510,0,0x0,8
tick,0x7ff8e7af1be4,2394337,0,0x0,8
tick,0x7ff8e7af1be4,2409880,0,0x0,8
tick,0x7ff8e7af1be4,2426546,0,0x0,8
tick,0x7ff8e7af1be4,2441421,0,0x0,8
tick,0x7ff8e7af1be4,2457198,0,0x0,8
tick,0x7ff8e7af1be4,2473033,0,0x0,8
tick,0x7ff8e7af1be4,2488843,0,0x0,8
tick,0x7ff8e7af1be4,2504879,0,0x0,8
tick,0x7ff8e7af1be4,2520350,0,0x0,8
tick,0x7ff8e7af1be4,2535986,0,0x0,8
tick,0x7ff8e7af1be4,2551711,0,0x0,8
tick,0x7ff8e7af1be4,2567299,0,0x0,8
tick,0x7ff8e7af1be4,2583275,0,0x0,8
tick,0x7ff8e7af1be4,2599110,0,0x0,8
tick,0x7ff8e7af1be4,2614576,0,0x0,8
tick,0x7ff8e7af1be4,2630559,0,0x0,8
tick,0x7ff8e7af1be4,2646232,0,0x0,8
tick,0x7ff8e7af1be4,2661739,0,0x0,8
tick,0x7ff8e7af1be4,2677917,0,0x0,8
tick,0x7ff8e7af1be4,2686044,0,0x0,8
tick,0x7ff8e7af1be4,2700771,0,0x0,8
tick,0x7ff8e7af1be4,2709013,0,0x0,8
tick,0x7ff8e7af1be4,2732988,0,0x0,8
tick,0x7ff8e7af1be4,2748610,0,0x0,8
tick,0x7ff8e7af1be4,2764369,0,0x0,8
tick,0x7ff8e7af1be4,2780510,0,0x0,8
tick,0x7ff8e7af1be4,2796108,0,0x0,8
tick,0x7ff8e7af1be4,2812008,0,0x0,8
tick,0x7ff8e7af1be4,2827448,0,0x0,8
tick,0x7ff8e7af1be4,2843092,0,0x0,8
tick,0x7ff8e7af1be4,2858848,0,0x0,8
tick,0x7ff8e7af1be4,2875014,0,0x0,8
tick,0x7ff8e7af1be4,2890716,0,0x0,8
tick,0x7ff8e7af1be4,2906567,0,0x0,8
tick,0x7ff8e7af1be4,2922111,0,0x0,8
tick,0x7ff8e7af1be4,2937683,0,0x0,8
tick,0x7ff8e7af1be4,2954402,0,0x0,8
tick,0x7ff8e7af1be4,2970107,0,0x0,8
tick,0x7ff8e7af1be4,2986554,0,0x0,8
tick,0x7ff8e7af1be4,3002344,0,0x0,8
tick,0x7ff8e7af1be4,3017634,0,0x0,8
tick,0x7ff8e7af1be4,3033605,0,0x0,8
tick,0x7ff8e7af1be4,3049113,0,0x0,8
tick,0x7ff8e7af1be4,3064609,0,0x0,8
tick,0x7ff8e7af1be4,3080448,0,0x0,8
tick,0x7ff8e7af1be4,3096027,0,0x0,8
tick,0x7ff8e7af1be4,3111714,0,0x0,8
tick,0x7ff8e7af1be4,3127171,0,0x0,8
tick,0x7ff8e7af1be4,3143012,0,0x0,8
tick,0x7ff8e7af1be4,3158666,0,0x0,8
tick,0x7ff8e7af1be4,3174593,0,0x0,8
tick,0x7ff8e7af1be4,3190317,0,0x0,8
tick,0x7ff8e7af1be4,3206471,0,0x0,8
tick,0x7ff8e7af1be4,3224319,0,0x0,8
tick,0x7ff8e7af1be4,3238549,0,0x0,8
tick,0x7ff8e7af1be4,3254544,0,0x0,8
tick,0x7ff8e7af1be4,3270200,0,0x0,8
tick,0x7ff8e7af1be4,3286422,0,0x0,8
tick,0x7ff8e7af1be4,3302477,0,0x0,8
tick,0x7ff8e7af1be4,3317791,0,0x0,8
tick,0x7ff8e7af1be4,3333855,0,0x0,8
tick,0x7ff8e7af1be4,3349201,0,0x0,8
tick,0x7ff8e7af1be4,3365486,0,0x0,8
tick,0x7ff8e7af1be4,3381515,0,0x0,8
tick,0x7ff8e7af1be4,3396584,0,0x0,8
tick,0x7ff8e7af1be4,3412799,0,0x0,8
tick,0x7ff8e7af1be4,3428647,0,0x0,8
tick,0x7ff8e7af1be4,3444293,0,0x0,8
tick,0x7ff8e7af1be4,3459942,0,0x0,8
tick,0x7ff8e7af1be4,3476849,0,0x0,8
tick,0x7ff8e7af1be4,3491334,0,0x0,8
tick,0x7ff8e7af1be4,3507230,0,0x0,8
tick,0x7ff8e7af1be4,3522697,0,0x0,8
tick,0x7ff8e7af1be4,3538421,0,0x0,8
tick,0x7ff8e7af1be4,3553812,0,0x0,8
tick,0x7ff8e7af1be4,3564393,0,0x0,8
tick,0x7ff8e7af1be4,3588416,0,0x0,8
tick,0x7ff8e7af1be4,3604169,0,0x0,8
tick,0x7ff8e7af1be4,3619872,0,0x0,8
tick,0x7ff8e7af1be4,3635479,0,0x0,8
tick,0x7ff8e7af1be4,3652065,0,0x0,8
tick,0x7ff8e7af1be4,3667358,0,0x0,8
tick,0x7ff8e7af1be4,3683343,0,0x0,8
tick,0x7ff8e7af1be4,3699132,0,0x0,8
tick,0x7ff8e7af1be4,3716197,0,0x0,8
tick,0x7ff8e7af1be4,3731965,0,0x0,8
tick,0x7ff8e7af1be4,3749365,0,0x0,8
tick,0x7ff8e7af1be4,3756030,0,0x0,8
tick,0x7ff8e7af1be4,3774998,0,0x0,8
tick,0x7ff8e7af1be4,3779797,0,0x0,8
tick,0x7ff8e7af1be4,3795986,0,0x0,8
tick,0x7ff8e7af1be4,3811438,0,0x0,8
tick,0x7ff8e7af1be4,3826981,0,0x0,8
tick,0x7ff8e7af1be4,3842645,0,0x0,8
tick,0x7ff8e7af1be4,3858314,0,0x0,8
tick,0x7ff8e7af1be4,3874518,0,0x0,8
tick,0x7ff8e7af1be4,3889933,0,0x0,8
tick,0x7ff8e7af1be4,3906194,0,0x0,8
tick,0x7ff8e7af1be4,3921220,0,0x0,8
tick,0x7ff8e7af1be4,3936710,0,0x0,8
tick,0x7ff8e7af1be4,3952402,0,0x0,8
tick,0x7ff8e7af1be4,3968059,0,0x0,8
tick,0x7ff8e7af1be4,3983854,0,0x0,8
tick,0x7ff8e7af1be4,3999817,0,0x0,8
tick,0x7ff8e7af1be4,4015249,0,0x0,8
tick,0x7ff8e7af1be4,4030880,0,0x0,8
tick,0x7ff8e7af1be4,4046466,0,0x0,8
tick,0x7ff8e7af1be4,4062112,0,0x0,8
tick,0x7ff8e7af1be4,4077952,0,0x0,8
tick,0x7ff8e7af1be4,4093672,0,0x0,8
tick,0x7ff8e7af1be4,4109226,0,0x0,8
tick,0x7ff8e7af1be4,4124936,0,0x0,8
tick,0x7ff8e7af1be4,4140501,0,0x0,8
tick,0x7ff8e7af1be4,4156181,0,0x0,8
tick,0x7ff8e7af1be4,4165595,0,0x0,8
tick,0x7ff8e7af1be4,4175481,0,0x0,8
tick,0x7ff8e7af1be4,4198316,0,0x0,8
tick,0x7ff8e7af1be4,4207220,0,0x0,8
tick,0x7ff8e7af1be4,4231867,0,0x0,8
tick,0x7ff8e7af1be4,4247107,0,0x0,8
tick,0x7ff8e7af1be4,4262999,0,0x0,8
tick,0x7ff8e7af1be4,4276031,0,0x0,8
tick,0x7ff8e7af1be4,4287578,0,0x0,8
tick,0x7ff8e7af1be4,4303977,0,0x0,8
tick,0x7ff8e7af1be4,4313164,0,0x0,8
tick,0x7ff8e7af1be4,4329349,0,0x0,8
tick,0x7ff8e7af1be4,4345135,0,0x0,8
tick,0x7ff8e7af1be4,4361165,0,0x0,8
tick,0x7ff8e7af1be4,4376618,0,0x0,8
tick,0x7ff8e7af1be4,4392980,0,0x0,8
tick,0x7ff8e7af1be4,4408132,0,0x0,8
tick,0x7ff8e7af1be4,4423539,0,0x0,8
tick,0x7ff8e7af1be4,4439144,0,0x0,8
tick,0x7ff8e7af1be4,4454917,0,0x0,8
tick,0x7ff8e7af1be4,4470996,0,0x0,8
tick,0x7ff8e7af1be4,4476843,0,0x0,8
tick,0x7ff8e7af1be4,4487267,0,0x0,8
tick,0x7ff8e7af1be4,4502903,0,0x0,8
tick,0x7ff8e7af1be4,4518406,0,0x0,8
tick,0x7ff8e7af1be4,4534446,0,0x0,8
tick,0x7ff8e7af1be4,4550632,0,0x0,8
tick,0x7ff8e7af1be4,4566424,0,0x0,8
tick,0x7ff8e7af1be4,4582654,0,0x0,8
tick,0x7ff8e7af1be4,4598563,0,0x0,8
tick,0x7ff8e7af1be4,4614377,0,0x0,8
tick,0x7ff8e7af1be4,4630248,0,0x0,8
tick,0x7ff8e7af1be4,4645955,0,0x0,8
tick,0x7ff8e7af1be4,4661885,0,0x0,8
tick,0x7ff8e7af1be4,4677519,0,0x0,8
tick,0x7ff8e7af1be4,4694063,0,0x0,8
tick,0x7ff8e7af1be4,4709664,0,0x0,8
tick,0x7ff8e7af1be4,4725621,0,0x0,8
tick,0x7ff8e7af1be4,4741364,0,0x0,8
tick,0x7ff8e7af1be4,4757116,0,0x0,8
tick,0x7ff8e7af1be4,4773072,0,0x0,8
tick,0x7ff8e7af1be4,4788568,0,0x0,8
tick,0x7ff8e7af1be4,4804933,0,0x0,8
tick,0x7ff8e7af1be4,4821207,0,0x0,8
tick,0x7ff8e7af1be4,4836855,0,0x0,8
tick,0x7ff8e7af1be4,4852973,0,0x0,8
tick,0x7ff8e7af1be4,4868625,0,0x0,8
tick,0x7ff8e7af1be4,4884879,0,0x0,8
tick,0x7ff8e7af1be4,4900504,0,0x0,8
tick,0x7ff8e7af1be4,4916804,0,0x0,8
tick,0x7ff8e7af1be4,4932724,0,0x0,8
tick,0x7ff8e7af1be4,4948377,0,0x0,8
tick,0x7ff8e7af1be4,4949593,0,0x0,8
tick,0x7ff8e7af1be4,4965708,0,0x0,8
tick,0x7ff8e7af1be4,4981307,0,0x0,8
tick,0x7ff8e7af1be4,4997190,0,0x0,8
tick,0x7ff8e7af1be4,5012973,0,0x0,8
tick,0x7ff8e7af1be4,5029052,0,0x0,8
tick,0x7ff8e7af1be4,5044443,0,0x0,8
tick,0x7ff8e7af1be4,5059700,0,0x0,8
tick,0x7ff8e7af1be4,5075380,0,0x0,8
tick,0x7ff8e7af1be4,5091126,0,0x0,8
tick,0x7ff8e7af1be4,5106964,0,0x0,8
tick,0x7ff8e7af1be4,5122460,0,0x0,8
tick,0x7ff8e7af1be4,5138206,0,0x0,8
tick,0x7ff8e7af1be4,5153602,0,0x0,8
tick,0x7ff8e7af1be4,5169759,0,0x0,8
tick,0x7ff8e7af1be4,5185432,0,0x0,8
tick,0x7ff8e7af1be4,5197364,0,0x0,8
tick,0x7ff8e7af1be4,5209678,0,0x0,8
tick,0x7ff8e7af1be4,5226072,0,0x0,8
tick,0x7ff8e7af1be4,5242663,0,0x0,8
tick,0x7ff8e7af1be4,5258578,0,0x0,8
tick,0x7ff8e7af1be4,5274496,0,0x0,8
tick,0x7ff8e7af1be4,5290347,0,0x0,8
tick,0x7ff8e7af1be4,5299211,0,0x0,8
tick,0x7ff8e7af1be4,5314455,0,0x0,8
tick,0x7ff8e7af1be4,5330881,0,0x0,8
tick,0x7ff8e7af1be4,5343092,0,0x0,8
tick,0x7ff8e7af1be4,5367575,0,0x0,8
tick,0x7ff8e7af1be4,5384083,0,0x0,8
tick,0x7ff8e7af1be4,5399701,0,0x0,8
tick,0x7ff8e7af1be4,5416453,0,0x0,8
tick,0x7ff8e7af1be4,5431539,0,0x0,8
tick,0x7ff8e7af1be4,5448025,0,0x0,8
tick,0x7ff8e7af1be4,5462611,0,0x0,8
tick,0x7ff8e7af1be4,5479038,0,0x0,8
tick,0x7ff8e7af1be4,5495010,0,0x0,8
tick,0x7ff8e7af1be4,5510207,0,0x0,8
tick,0x7ff8e7af1be4,5526239,0,0x0,8
tick,0x7ff8e7af1be4,5542171,0,0x0,8
tick,0x7ff8e7af1be4,5557654,0,0x0,8
tick,0x7ff8e7af1be4,5573678,0,0x0,8
tick,0x7ff8e7af1be4,5583759,0,0x0,8
tick,0x7ff8e7af1be4,5592989,0,0x0,8
tick,0x7ff8e7af1be4,5605918,0,0x0,8
tick,0x7ff8e7af1be4,5621561,0,0x0,8
tick,0x7ff8e7af1be4,5637951,0,0x0,8
tick,0x7ff8e7af1be4,5654444,0,0x0,8
tick,0x7ff8e7af1be4,5670482,0,0x0,8
tick,0x7ff8e7af1be4,5678636,0,0x0,8
tick,0x7ff8e7af1be4,5686599,0,0x0,8
tick,0x7ff8e7af1be4,5695143,0,0x0,8
tick,0x7ff8e7af1be4,5703311,0,0x0,8
tick,0x7ff8e7af1be4,5711456,0,0x0,8
tick,0x7ff8e7af1be4,5727288,0,0x0,8
tick,0x7ff8e7af1be4,5743419,0,0x0,8
tick,0x7ff8e7af1be4,5759401,0,0x0,8
tick,0x7ff8e7af1be4,5767635,0,0x0,8
tick,0x7ff8e7af1be4,5783800,0,0x0,8
tick,0x7ff8e7af1be4,5800160,0,0x0,8
tick,0x7ff8e7af1be4,5816376,0,0x0,8
tick,0x7ff8e7af1be4,5824529,0,0x0,8
tick,0x7ff8e7af1be4,5849124,0,0x0,8
tick,0x7ff8e7af1be4,5865448,0,0x0,8
tick,0x7ff8e7af1be4,5880902,0,0x0,8
tick,0x7ff8e7af1be4,5889095,0,0x0,8
tick,0x7ff8e7af1be4,5905298,0,0x0,8
tick,0x7ff8e7af1be4,5913240,0,0x0,8
tick,0x7ff8e7af1be4,5921392,0,0x0,8
tick,0x7ff8e7af1be4,5932294,0,0x0,8
tick,0x7ff8e7af1be4,5941730,0,0x0,8
tick,0x7ff8e7af1be4,5956730,0,0x0,8
tick,0x7ff8e7af1be4,5972703,0,0x0,8
tick,0x7ff8e7af1be4,5991753,0,0x0,8
tick,0x7ff8e7af1be4,5997048,0,0x0,8
tick,0x7ff8e7af1be4,6013244,0,0x0,8
tick,0x7ff8e7af1be4,6029975,0,0x0,8
tick,0x7ff8e7af1be4,6046261,0,0x0,8
tick,0x7ff8e7af1be4,6061364,0,0x0,8
tick,0x7ff8e7af1be4,6076728,0,0x0,8
tick,0x7ff8e7af1be4,6093044,0,0x0,8
tick,0x7ff8e7af1be4,6103363,0,0x0,8
tick,0x7ff8e7af1be4,6127686,0,0x0,8
tick,0x7ff8e7af1be4,6143020,0,0x0,8
tick,0x7ff8e7af1be4,6151529,0,0x0,8
tick,0x7ff8e7af1be4,6168482,0,0x0,8
tick,0x7ff8e7af1be4,6179946,0,0x0,8
tick,0x7ff8e7af1be4,6192675,0,0x0,8
tick,0x7ff8e7af1be4,6208842,0,0x0,8
tick,0x7ff8e7af1be4,6224184,0,0x0,8
tick,0x7ff8e7af1be4,6240251,0,0x0,8
tick,0x7ff8e7af1be4,6256258,0,0x0,8
tick,0x7ff8e7af1be4,6271540,0,0x0,8
tick,0x7ff8e7af1be4,6287447,0,0x0,8
tick,0x7ff8e7af1be4,6303722,0,0x0,8
tick,0x7ff8e7af1be4,6320595,0,0x0,8
tick,0x7ff8e7af1be4,6336281,0,0x0,8
tick,0x7ff8e7af1be4,6351960,0,0x0,8
tick,0x7ff8e7af1be4,6361623,0,0x0,8
tick,0x7ff8e7af1be4,6378133,0,0x0,8
tick,0x7ff8e7af1be4,6388562,0,0x0,8
tick,0x7ff8e7af1be4,6411220,0,0x0,8
tick,0x7ff8e7af1be4,6427227,0,0x0,8
tick,0x7ff8e7af1be4,6443080,0,0x0,8
tick,0x7ff8e7af1be4,6458929,0,0x0,8
tick,0x7ff8e7af1be4,6467164,0,0x0,8
tick,0x7ff8e7af1be4,6483199,0,0x0,8
tick,0x7ff8e7af1be4,6491331,0,0x0,8
tick,0x7ff8e7af1be4,6507284,0,0x0,8
tick,0x7ff8e7af1be4,6524058,0,0x0,8
tick,0x7ff8e7af1be4,6533266,0,0x0,8
tick,0x7ff8e7af1be4,6549602,0,0x0,8
tick,0x7ff8e7af1be4,6557563,0,0x0,8
tick,0x7ff8e7af1be4,6565831,0,0x0,8
tick,0x7ff8e7af1be4,6574630,0,0x0,8
tick,0x7ff8e7af1be4,6591410,0,0x0,8
tick,0x7ff8e7af1be4,6607743,0,0x0,8
tick,0x7ff8e7af1be4,6632266,0,0x0,8
tick,0x7ff8e7af1be4,6648072,0,0x0,8
tick,0x7ff8e7af1be4,6663942,0,0x0,8
tick,0x7ff8e7af1be4,6680597,0,0x0,8
tick,0x7ff8e7af1be4,6696650,0,0x0,8
tick,0x7ff8e7af1be4,6711644,0,0x0,8
tick,0x7ff8e7af1be4,6728052,0,0x0,8
tick,0x7ff8e7af1be4,6742889,0,0x0,8
tick,0x7ff8e7af1be4,6758768,0,0x0,8
tick,0x7ff8e7af1be4,6774265,0,0x0,8
tick,0x7ff8e7af1be4,6790345,0,0x0,8
tick,0x7ff8e7af1be4,6805918,0,0x0,8
tick,0x7ff8e7af1be4,6821640,0,0x0,8
tick,0x7ff8e7af1be4,6837550,0,0x0,8
tick,0x7ff8e7af1be4,6853741,0,0x0,8
tick,0x7ff8e7af1be4,6861702,0,0x0,8
tick,0x7ff8e7af1be4,6877852,0,0x0,8
tick,0x7ff8e7af1be4,6894682,0,0x0,8
tick,0x7ff8e7af1be4,6902718,0,0x0,8
tick,0x7ff8e7af1be4,6910685,0,0x0,8
tick,0x7ff8e7af1be4,6918611,0,0x0,8
tick,0x7ff8e7af1be4,6934618,0,0x0,8
tick,0x7ff8e7af1be4,6951022,0,0x0,8
tick,0x7ff8e7af1be4,6967194,0,0x0,8
tick,0x7ff8e7af1be4,6975568,0,0x0,8
tick,0x7ff8e7af1be4,6991733,0,0x0,8
tick,0x7ff8e7af1be4,7007652,0,0x0,8
tick,0x7ff8e7af1be4,7023270,0,0x0,8
tick,0x7ff8e7af1be4,7039135,0,0x0,8
tick,0x7ff8e7af1be4,7047375,0,0x0,8
tick,0x7ff8e7af1be4,7063515,0,0x0,8
tick,0x7ff8e7af1be4,7079593,0,0x0,8
tick,0x7ff8e7af1be4,7095828,0,0x0,8
tick,0x7ff8e7af1be4,7111264,0,0x0,8
tick,0x7ff8e7af1be4,7127377,0,0x0,8
tick,0x7ff8e7af1be4,7142946,0,0x0,8
tick,0x7ff8e7af1be4,7149261,0,0x0,8
tick,0x7ff8e7af1be4,7151387,0,0x0,8
tick,0x7ff8e7af1be4,7153117,0,0x0,8
tick,0x7ff8e7af1be4,7169676,0,0x0,8
tick,0x7ff8e7af1be4,7185222,0,0x0,8
tick,0x7ff8e7af1be4,7201463,0,0x0,8
tick,0x7ff8e7af1be4,7219227,0,0x0,8
tick,0x7ff8e7af1be4,7233324,0,0x0,8
tick,0x7ff8e7af1be4,7248902,0,0x0,8
tick,0x7ff8e7af1be4,7264515,0,0x0,8
tick,0x7ff8e7af1be4,7280116,0,0x0,8
tick,0x7ff8e7af1be4,7295981,0,0x0,8
tick,0x7ff8e7af1be4,7310322,0,0x0,8
tick,0x7ff8e7af1be4,7318499,0,0x0,8
tick,0x7ff8e7af1be4,7334480,0,0x0,8
tick,0x7ff8e7af1be4,7350789,0,0x0,8
tick,0x7ff8e7af1be4,7367357,0,0x0,8
tick,0x7ff8e7af1be4,7381903,0,0x0,8
tick,0x7ff8e7af1be4,7391946,0,0x0,8
tick,0x7ff8e7af1be4,7407670,0,0x0,8
tick,0x7ff8e7af1be4,7423946,0,0x0,8
tick,0x7ff8e7af1be4,7440051,0,0x0,8
tick,0x7ff8e7af1be4,7448402,0,0x0,8
tick,0x7ff8e7af1be4,7457575,0,0x0,8
tick,0x7ff8e7af1be4,7466059,0,0x0,8
tick,0x7ff8e7af1be4,7475279,0,0x0,8
tick,0x7ff8e7af1be4,7490287,0,0x0,8
tick,0x7ff8e7af1be4,7498517,0,0x0,8
tick,0x7ff8e7af1be4,7514645,0,0x0,8
tick,0x7ff8e7af1be4,7530530,0,0x0,8
tick,0x7ff8e7af1be4,7546399,0,0x0,8
tick,0x7ff8e7af1be4,7562565,0,0x0,8
tick,0x7ff8e7af1be4,7578281,0,0x0,8
tick,0x7ff8e7af1be4,7593991,0,0x0,8
tick,0x7ff8e7af1be4,7610273,0,0x0,8
tick,0x7ff8e7af1be4,7625703,0,0x0,8
tick,0x7ff8e7af1be4,7641613,0,0x0,8
tick,0x7ff8e7af1be4,7656740,0,0x0,8
tick,0x7ff8e7af1be4,7672694,0,0x0,8
tick,0x7ff8e7af1be4,7688471,0,0x0,8
tick,0x7ff8e7af1be4,7703941,0,0x0,8
tick,0x7ff8e7af1be4,7719395,0,0x0,8
tick,0x7ff8e7af1be4,7735154,0,0x0,8
tick,0x7ff8e7af1be4,7750936,0,0x0,8
tick,0x7ff8e7af1be4,7766748,0,0x0,8
tick,0x7ff8e7af1be4,7782679,0,0x0,8
tick,0x7ff8e7af1be4,7798862,0,0x0,8
tick,0x7ff8e7af1be4,7814727,0,0x0,8
tick,0x7ff8e7af1be4,7830548,0,0x0,8
tick,0x7ff8e7af1be4,7847008,0,0x0,8
tick,0x7ff8e7af1be4,7863403,0,0x0,8
tick,0x7ff8e7af1be4,7879690,0,0x0,8
tick,0x7ff8e7af1be4,7895039,0,0x0,8
tick,0x7ff8e7af1be4,7911305,0,0x0,8
tick,0x7ff8e7af1be4,7927032,0,0x0,8
tick,0x7ff8e7af1be4,7941848,0,0x0,8
tick,0x7ff8e7af1be4,7957371,0,0x0,8
tick,0x7ff8e7af1be4,7965917,0,0x0,8
tick,0x7ff8e7af1be4,7983030,0,0x0,8
tick,0x7ff8e7af1be4,7998944,0,0x0,8
tick,0x7ff8e7af1be4,8015009,0,0x0,8
tick,0x7ff8e7af1be4,8023508,0,0x0,8
tick,0x7ff8e7af1be4,8031539,0,0x0,8
tick,0x7ff8e7af1be4,8043040,0,0x0,8
tick,0x7ff8e7af1be4,8052752,0,0x0,8
tick,0x7ff8e7af1be4,8068049,0,0x0,8
tick,0x7ff8e7af1be4,8076978,0,0x0,8
tick,0x7ff8e7af1be4,8086239,0,0x0,8
tick,0x7ff8e7af1be4,8102565,0,0x0,8
tick,0x7ff8e7af1be4,8110394,0,0x0,8
tick,0x7ff8e7af1be4,8121089,0,0x0,8
tick,0x7ff8e7af1be4,8129179,0,0x0,8
tick,0x7ff8e7af1be4,8145084,0,0x0,8
tick,0x7ff8e7af1be4,8160787,0,0x0,8
tick,0x7ff8e7af1be4,8176493,0,0x0,8
tick,0x7ff8e7af1be4,8192399,0,0x0,8
tick,0x7ff8e7af1be4,8208394,0,0x0,8
tick,0x7ff8e7af1be4,8224313,0,0x0,8
tick,0x7ff8e7af1be4,8240224,0,0x0,8
tick,0x7ff8e7af1be4,8256189,0,0x0,8
tick,0x7ff8e7af1be4,8272349,0,0x0,8
tick,0x7ff8e7af1be4,8287967,0,0x0,8
tick,0x7ff8e7af1be4,8303736,0,0x0,8
tick,0x7ff8e7af1be4,8311992,0,0x0,8
tick,0x7ff8e7af1be4,8328561,0,0x0,8
tick,0x7ff8e7af1be4,8344776,0,0x0,8
tick,0x7ff8e7af1be4,8366424,0,0x0,8
tick,0x7ff8e7af1be4,8383126,0,0x0,8
tick,0x7ff8e7af1be4,8399079,0,0x0,8
tick,0x7ff8e7af1be4,8415109,0,0x0,8
tick,0x7ff8e7af1be4,8431499,0,0x0,8
tick,0x7ff8e7af1be4,8448237,0,0x0,8
tick,0x7ff8e7af1be4,8456265,0,0x0,8
tick,0x7ff8e7af1be4,8472960,0,0x0,8
tick,0x7ff8e7af1be4,8484410,0,0x0,8
tick,0x7ff8e7af1be4,8497642,0,0x0,8
tick,0x7ff8e7af1be4,8505924,0,0x0,8
tick,0x7ff8e7af1be4,8513963,0,0x0,8
tick,0x7ff8e7af1be4,8530000,0,0x0,8
tick,0x7ff8e7af1be4,8546334,0,0x0,8
tick,0x7ff8e7af1be4,8561124,0,0x0,8
tick,0x7ff8e7af1be4,8572123,0,0x0,8
tick,0x7ff8e7af1be4,8584690,0,0x0,8
tick,0x7ff8e7af1be4,8597147,0,0x0,8
tick,0x7ff8e7af1be4,8613091,0,0x0,8
tick,0x7ff8e7af1be4,8621238,0,0x0,8
tick,0x7ff8e7af1be4,8637287,0,0x0,8
tick,0x7ff8e7af1be4,8652166,0,0x0,8
tick,0x7ff8e7af1be4,8668402,0,0x0,8
tick,0x7ff8e7af1be4,8684919,0,0x0,8
tick,0x7ff8e7af1be4,8692914,0,0x0,8
tick,0x7ff8e7af1be4,8701129,0,0x0,8
tick,0x7ff8e7af1be4,8709103,0,0x0,8
tick,0x7ff8e7af1be4,8725314,0,0x0,8
tick,0x7ff777f71957,8740951,0,0x0,6
delete,MemoryChunk,0x1173fc40000
delete,MemoryChunk,0x4fb6780000
delete,MemoryChunk,0x6f345c0000
delete,MemoryChunk,0x3eb1cbc0000
tick,0x7ff8e7af1be4,8756551,0,0x0,8
tick,0x7ff8e7af1be4,8772166,0,0x0,8
tick,0x7ff8e7af1be4,8780304,0,0x0,8
tick,0x7ff8e7af1be4,8796571,0,0x0,8
tick,0x7ff8e7af1be4,8813505,0,0x0,8
tick,0x7ff8e7af1be4,8821719,0,0x0,8
tick,0x7ff8e7af1be4,8845862,0,0x0,8
tick,0x7ff8e7af1be4,8848404,0,0x0,8
tick,0x7ff8e7af1be4,8851003,0,0x0,8
tick,0x7ff8e7af1be4,8876413,0,0x0,8
tick,0x7ff8e7af1be4,8883291,0,0x0,8
tick,0x7ff8e7af1be4,8899394,0,0x0,8
tick,0x7ff8e7af1be4,8915020,0,0x0,8
tick,0x7ff8e7af1be4,8931049,0,0x0,8
tick,0x7ff8e7af1be4,8946709,0,0x0,8
tick,0x7ff8e7af1be4,8963016,0,0x0,8
tick,0x7ff8e7af1be4,8966050,0,0x0,8
tick,0x7ff8e7af1be4,8982055,0,0x0,8
tick,0x7ff8e7af1be4,8998250,0,0x0,8
tick,0x7ff8e7af1be4,9013878,0,0x0,8
tick,0x7ff8e7af1be4,9031043,0,0x0,8
tick,0x7ff8e7af1be4,9034538,0,0x0,8
tick,0x7ff8e7af1be4,9039659,0,0x0,8
tick,0x7ff8e7af1be4,9043021,0,0x0,8
tick,0x7ff8e7af1be4,9058756,0,0x0,8
tick,0x7ff8e7af1be4,9074700,0,0x0,8
tick,0x7ff8e7af1be4,9093205,0,0x0,8
tick,0x7ff8e7af1be4,9094626,0,0x0,8
tick,0x7ff8e7af1be4,9104790,0,0x0,8
tick,0x7ff8e7af1be4,9106503,0,0x0,8
tick,0x7ff8e7af1be4,9130043,0,0x0,8
tick,0x7ff8e7af1be4,9144743,0,0x0,8
tick,0x7ff8e7af1be4,9160205,0,0x0,8
tick,0x7ff8e7af1be4,9176471,0,0x0,8
tick,0x7ff8e7af1be4,9192390,0,0x0,8
tick,0x7ff8e7af1be4,9208579,0,0x0,8
tick,0x7ff8e7af1be4,9225102,0,0x0,8
tick,0x7ff8e7af1be4,9241742,0,0x0,8
tick,0x7ff8e7af1be4,9257635,0,0x0,8
tick,0x7ff8e7af1be4,9268084,0,0x0,8
tick,0x7ff8e7af1be4,9285015,0,0x0,8
tick,0x7ff8e7af1be4,9299828,0,0x0,8
tick,0x7ff8e7af1be4,9316043,0,0x0,8
tick,0x7ff8e7af1be4,9330825,0,0x0,8
tick,0x7ff8e7af1be4,9347480,0,0x0,8
new,MemoryChunk,0x3a9de280000,262144
new,MemoryChunk,0x61ccb00000,262144
new,MemoryChunk,0x30bdac80000,262144
new,MemoryChunk,0x1eb15b80000,262144
code-move,0x3f9aba45e56,0x13674f318d6
code-move,0x3f9aba47076,0x13674f3c4fe
code-move,0x3f9aba474ae,0x13674f11c46
sfi-move,0x3f9aba47958,0x13674f375c8
sfi-move,0x3f9aba479a8,0x13674f37618
sfi-move,0x2173c741190,0x1301b5a5bc8
sfi-move,0x2173c7411e0,0x1301b5a5c00
sfi-move,0x2173c741230,0x1301b5a5c50
sfi-move,0x2173c741280,0x1301b5a5c88
sfi-move,0x2173c7412d0,0x1301b5a5cd8
sfi-move,0x2173c741358,0x1301b5a5d60
sfi-move,0x2173c7413e0,0x1301b5a5dd0
sfi-move,0x3f9aba479f8,0x13674f10a50
sfi-move,0x3f9aba47a50,0x13674f11e88
sfi-move,0x3f9aba47aa0,0x13674f11ed8
sfi-move,0x3f9aba47af0,0x13674f31740
sfi-move,0x3f9aba47b40,0x13674f31790
sfi-move,0x3f9aba47c08,0x13674f3fd28
sfi-move,0x3f9aba47c58,0x13674f30d50
sfi-move,0x18bc1a84310,0x2ccab9db4c8
sfi-move,0x18bc1a843c8,0x2ccab9db538
sfi-move,0x18bc1a84510,0x2ccab9db638
sfi-move,0x18bc1a845c8,0x2ccab9db6a8
sfi-move,0x18bc1a84680,0x2ccab9db760
sfi-move,0x18bc1a84738,0x2ccab9db7d0
sfi-move,0x18bc1a847f0,0x2ccab9db888
sfi-move,0x18bc1a848f0,0x2ccab9db988
sfi-move,0x18bc1a84aa0,0x2ccab9ff928
sfi-move,0x18bc1a84be8,0x2ccab9fc728
sfi-move,0x3f9aba47d20,0x13674f309f0
sfi-move,0x3f9aba47d70,0x13674f30a40
sfi-move,0x2173c743190,0x209d2942cd8
sfi-move,0x2173c7431e0,0x209d297bf08
sfi-move,0x2173c743230,0x209d297bd40
sfi-move,0x3f9aba47e38,0x13674f30340
sfi-move,0x3f9aba47e88,0x13674f2fce0
sfi-move,0x3f9aba47f50,0x13674f2f430
sfi-move,0x3f9aba47fa0,0x13674f2f480
sfi-move,0x18bc1a84d30,0x2ccab9f8b80
sfi-move,0x18bc1a84e78,0x2ccab9f89d0
sfi-move,0x18bc1a84fc0,0x2ccab9f88b0
sfi-move,0x18bc1a85130,0x2ccab9f81f0
sfi-move,0x3f9aba47ff0,0x13674f2f4d0
sfi-move,0x3f9aba48040,0x13674f2ef70
sfi-move,0x3f9aba48090,0x13674f2efc0
sfi-move,0x3f9aba480e0,0x13674f2f010
sfi-move,0x3f9aba48130,0x13674f3c380
sfi-move,0x3f9aba48188,0x13674f3c3d8
sfi-move,0x3f9aba481d8,0x13674f3c428
sfi-move,0x18bc1a85478,0x2ccab9c1540
sfi-move,0x18bc1a855c0,0x2ccab9f4b90
sfi-move,0x18bc1a85708,0x2ccab9f3d38
sfi-move,0x18bc1a85850,0x2ccab9f3c18
code-move,0x3f9aba4889e,0x13674f1ab7e
sfi-move,0x3f9aba495f8,0x13674f1b8d8
sfi-move,0x18bc1a85b98,0x2ccab9f3b88
sfi-move,0x18bc1a85cf8,0x2ccab9f3a68
sfi-move,0x18bc1a86040,0x2ccab9ca3b8
sfi-move,0x18bc1a861a0,0x2ccab9f3948
sfi-move,0x3f9aba496c8,0x13674f1b9a8
code-move,0x3f9aba4980e,0x13674f1baee
sfi-move,0x18bc1a862e8,0x2ccab9c8b38
code-move,0x3f9aba4aaa6,0x13674f1cd86
sfi-move,0x18bc1a86430,0x2ccab9c85a8
sfi-move,0x18bc1a86578,0x2ccab9ffcd0
sfi-move,0x18bc1a868c0,0x2ccab9ffeb0
sfi-move,0x18bc1a86a08,0x2ccab9fffb0
sfi-move,0x18bc1a86b68,0x2ccab9fd708
sfi-move,0x18bc1a86eb0,0x2ccab9fd8f8
sfi-move,0x18bc1a86ff8,0x2ccab9fd9f8
sfi-move,0x18bc1a870f8,0x2ccab9fdaf8
sfi-move,0x18bc1a87258,0x2ccab9fdc58
sfi-move,0x18bc1a875a0,0x2ccab9d3100
sfi-move,0x18bc1a87928,0x2ccab9d32e0
sfi-move,0x18bc1a87a70,0x2ccab9d33e0
new,MemoryChunk,0x3b94bd80000,262144
sfi-move,0x3f9aba4d9c8,0x3b94bd83fe8
sfi-move,0x3f9aba4da18,0x3b94bd84038
sfi-move,0x3f9aba4da68,0x3b94bd84088
sfi-move,0x3f9aba4dab8,0x3b94bd840d8
sfi-move,0x3f9aba4db08,0x3b94bd84128
sfi-move,0x3f9aba4db58,0x3b94bd84178
sfi-move,0x3f9aba4dba8,0x3b94bd841c8
sfi-move,0x3f9aba4dbf8,0x3b94bd84218
sfi-move,0x3f9aba4dc48,0x3b94bd84268
sfi-move,0x3f9aba4dcd8,0x3b94bd842f8
code-move,0x18bc1a87e1e,0x2dcd665e03e
sfi-move,0x18bc1a87f78,0x2dcd6649f48
code-move,0x3f9aba4dff6,0x3b94bd84616
sfi-move,0x3f9aba4e8f8,0x3b94bd84f18
sfi-move,0x3f9aba4e948,0x3b94bd84f50
sfi-move,0x3f9aba4e998,0x3b94bd84fa0
sfi-move,0x18bc1a87fc8,0x2dcd6649430
sfi-move,0x18bc1a88018,0x2dcd66498e8
sfi-move,0x18bc1a88068,0x2dcd6649920
sfi-move,0x3f9aba4e9e8,0x3b94bd84fd8
code-move,0x18bc1a881de,0x2dcd6660dee
code-move,0x18bc1a8869e,0x2dcd667b06e
code-move,0x18bc1a88a0e,0x2dcd665ff66
code-move,0x18bc1a88b86,0x2dcd66594fe
code-move,0x18bc1a88d96,0x2dcd667b61e
code-move,0x18bc1a88f36,0x2dcd667b7be
code-move,0x18bc1a8901e,0x2dcd667b8a6
code-move,0x18bc1a89106,0x2dcd6675896
code-move,0x3f9aba4ecae,0x3b94bd8529e
code-move,0x3f9aba4f1ae,0x3b94bd8579e
sfi-move,0x18bc1a896f0,0x2dcd6649698
sfi-move,0x18bc1a89790,0x2dcd66496e8
sfi-move,0x18bc1a897e0,0x2dcd6649720
sfi-move,0x18bc1a89830,0x2dcd6649758
sfi-move,0x18bc1a898d0,0x2dcd6649790
code-move,0x3f9aba4f86e,0x3b94bd85e5e
sfi-move,0x18bc1a8a388,0x2dcd6649118
sfi-move,0x18bc1a8a930,0x2dcd6653118
code-move,0x3f9aba500c6,0x3b94bd866b6
code-move,0x3f9aba50596,0x3b94bd86b86
code-move,0x3f9aba506b6,0x3b94bd86ca6
sfi-move,0x2173c743280,0x209d297bd90
code-move,0x18bc1a8ac6e,0x2dcd664924e
sfi-move,0x18bc1a8ad40,0x2dcd6649320
sfi-move,0x2173c7432d0,0x209d297ae30
sfi-move,0x2173c743320,0x209d297ae80
sfi-move,0x2173c743370,0x209d297aad8
sfi-move,0x2173c7433c0,0x209d297ab28
sfi-move,0x2173c743410,0x209d2975be8
sfi-move,0x2173c743460,0x209d296cb28
sfi-move,0x2173c7434b0,0x209d296cb78
sfi-move,0x2173c743500,0x209d296ca70
sfi-move,0x2173c743578,0x209d2961120
sfi-move,0x2173c7435c8,0x209d2961170
sfi-move,0x2173c743618,0x209d294eb58
sfi-move,0x2173c743668,0x209d294eb90
sfi-move,0x2173c7436b8,0x209d2943d78
sfi-move,0x2173c743708,0x209d2943db0
sfi-move,0x2173c743758,0x209d2969540
sfi-move,0x2173c7437d8,0x209d29552d0
sfi-move,0x2173c743828,0x209d2955320
sfi-move,0x2173c743878,0x209d2971220
sfi-move,0x2173c7438c8,0x209d2971270
sfi-move,0x2173c743918,0x209d29704e8
sfi-move,0x2173c7439b8,0x209d2970538
sfi-move,0x2173c743a08,0x209d2970390
sfi-move,0x2173c743a98,0x209d2959188
sfi-move,0x2173c743b28,0x209d2955fe8
sfi-move,0x2173c743bb0,0x209d297fcd8
sfi-move,0x2173c743c38,0x209d297fd60
sfi-move,0x2173c743cc8,0x209d296ad88
sfi-move,0x2173c743d58,0x209d296ae18
sfi-move,0x2173c743de0,0x209d29717f8
sfi-move,0x2173c743e68,0x209d2971880
sfi-move,0x2173c743f60,0x209d29708c0
sfi-move,0x2173c743fe8,0x209d296be38
sfi-move,0x2173c744070,0x209d296be90
sfi-move,0x2173c744100,0x209d2954fd0
sfi-move,0x2173c744190,0x209d2955060
sfi-move,0x2173c744218,0x209d2952b08
sfi-move,0x2173c7442a0,0x209d2952b60
sfi-move,0x2173c744328,0x209d2971448
sfi-move,0x2173c7443b8,0x209d29714d8
sfi-move,0x2173c744448,0x209d29467e0
sfi-move,0x2173c744498,0x209d2946830
sfi-move,0x2173c7444e8,0x209d2946880
sfi-move,0x2173c7445b0,0x209d29655d0
sfi-move,0x2173c744678,0x209d2965698
sfi-move,0x2173c744740,0x209d2965760
sfi-move,0x2173c744808,0x209d2965828
sfi-move,0x2173c7448d0,0x209d29658d8
sfi-move,0x2173c744998,0x209d297a7c8
sfi-move,0x2173c7449e8,0x209d297a818
sfi-move,0x2173c744a38,0x209d297a868
sfi-move,0x2173c744a88,0x209d297a8b8
sfi-move,0x2173c744ad8,0x209d297a908
sfi-move,0x2173c744b28,0x209d297a958
sfi-move,0x2173c744b78,0x209d297a9a8
sfi-move,0x2173c744bc8,0x209d2953a00
sfi-move,0x2173c744c18,0x209d2953a50
sfi-move,0x2173c744c68,0x209d2953aa0
sfi-move,0x2173c744cb8,0x209d2953af0
sfi-move,0x2173c744d08,0x209d2953b40
sfi-move,0x2173c744d90,0x209d2953bc8
sfi-move,0x2173c744e18,0x209d2953c50
sfi-move,0x2173c744ea0,0x209d2953cd8
sfi-move,0x2173c749a18,0x209d295b760
sfi-move,0x2173c749a68,0x209d295b798
sfi-move,0x2173c749ab8,0x209d295b7e8
sfi-move,0x2173c74a838,0x209d295bbc8
sfi-move,0x2173c74a888,0x209d295bc18
sfi-move,0x2173c74a8d8,0x209d295bc68
sfi-move,0x2173c74b358,0x209d295c168
sfi-move,0x2173c74b3e0,0x209d295c1d8
sfi-move,0x2173c74b430,0x209d295c228
sfi-move,0x2173c74b480,0x209d295c278
sfi-move,0x2173c74b4d0,0x209d295c2c8
sfi-move,0x2173c74b520,0x209d295c318
sfi-move,0x2173c74b570,0x209d295c368
sfi-move,0x2173c74b5c0,0x209d295c3b8
sfi-move,0x2173c74b610,0x209d295c408
sfi-move,0x2173c74b660,0x209d295c458
sfi-move,0x2173c74b6e8,0x209d295c4e0
sfi-move,0x2173c74b738,0x209d295c530
sfi-move,0x2173c74b788,0x209d295c580
sfi-move,0x2173c74cab0,0x209d295c968
sfi-move,0x2173c74cb00,0x209d295c9a0
sfi-move,0x2173c74cb50,0x209d295c9d8
sfi-move,0x2173c74d3d8,0x209d295cdf8
sfi-move,0x2173c74d428,0x209d295ce30
sfi-move,0x2173c74d478,0x209d295ce68
sfi-move,0x2173c74d4c8,0x209d295ceb8
sfi-move,0x2173c74d518,0x209d295cf08
sfi-move,0x2173c74d568,0x209d295cf58
sfi-move,0x2173c74d5b8,0x209d295cfa8
sfi-move,0x2173c74d608,0x209d295cff8
code-move,0x3f9aba50bde,0x3b94bd87186
code-move,0x3f9aba50d46,0x3b94bd872ee
code-move,0x18bc1a8ae36,0x3d44c87995e
code-move,0x18bc1a8b056,0x3d44c86f696
sfi-move,0x3f9aba51288,0x3b94bd87830
code-move,0x18bc1a8b19e,0x3d44c86ea56
code-move,0x3f9aba513a6,0x3b94bd8794e
code-move,0x3f9aba5189e,0x3b94bd87dc6
code-move,0x18bc1a8b2e6,0x3d44c8683fe
code-move,0x18bc1a8b466,0x3d44c877f66
code-move,0x18bc1a8b61e,0x3d44c84f5ce
new,MemoryChunk,0x2fad2a00000,262144
sfi-move,0x3f9aba51bf0,0x3b94bd88118
sfi-move,0x3f9aba51c40,0x3b94bd88168
code-move,0x18bc1a8b866,0x3d44c877316
code-move,0x18bc1a8b986,0x3d44c877436
code-move,0x18bc1a8bb56,0x3d44c867e86
code-move,0x18bc1a8bd16,0x3d44c868046
code-move,0x3f9aba51cfe,0x3b94bd88226
code-move,0x3f9aba51f26,0x3b94bd8844e
code-move,0x18bc1a8be0e,0x3d44c86813e
sfi-move,0x2173c74ea40,0x2fad2a012d0
code-move,0x3f9aba520fe,0x3b94bd88626
sfi-move,0x3f9aba525f8,0x3b94bd889f0
sfi-move,0x2173c7509f8,0x2fad2a02380
sfi-move,0x2173c750a48,0x2fad2a023b8
sfi-move,0x3f9aba52648,0x3b94bd88a40
sfi-move,0x3f9aba52698,0x3b94bd88a90
sfi-move,0x3f9aba526e8,0x3b94bd88ae0
sfi-move,0x3f9aba52738,0x3b94bd88b30
sfi-move,0x3f9aba527a8,0x3b94bd88ba0
new,MemoryChunk,0x1b0323c0000,262144
sfi-move,0x3f9aba52818,0x3b94bd88c10
code-move,0x18bc1a8bf2e,0x1b0323c11ce
code-move,0x18bc1a8c096,0x1b0323c130e
code-move,0x18bc1a8c1ae,0x1b0323c1426
code-move,0x18bc1a8c33e,0x1b0323c1526
code-move,0x18bc1a8c4ee,0x1b0323c16d6
code-move,0x18bc1a8c726,0x1b0323c18ee
code-move,0x18bc1a8c86e,0x1b0323c1a16
code-move,0x18bc1a8c996,0x1b0323c1b3e
code-move,0x18bc1a8cbe6,0x1b0323c1d8e
code-move,0x18bc1a8d04e,0x1b0323c219e
code-move,0x18bc1a8d316,0x1b0323c244e
code-move,0x18bc1a8d53e,0x1b0323c262e
code-move,0x18bc1a8dae6,0x1b0323c2866
sfi-move,0x2173c750a98,0x2fad2a023f0
sfi-move,0x2173c750ae8,0x2fad2a02428
sfi-move,0x2173c750b38,0x2fad2a02460
sfi-move,0x2173c750b88,0x2fad2a02498
sfi-move,0x2173c750bd8,0x2fad2a024d0
sfi-move,0x3f9aba52888,0x3b94bd88c80
code-move,0x18bc1a8dd1e,0x1b0323c2a9e
code-move,0x18bc1a8df9e,0x1b0323c2cfe
code-move,0x18bc1a8e0ee,0x1b0323c2e4e
code-move,0x18bc1a8e216,0x1b0323c2f5e
code-move,0x18bc1a8e366,0x1b0323c30ae
sfi-move,0x18bc1a8eef0,0x1b0323c3788
sfi-move,0x18bc1a8ef40,0x1b0323c37d8
sfi-move,0x3f9aba528f8,0x3b94bd88cf0
sfi-move,0x3f9aba52968,0x3b94bd88d60
sfi-move,0x18bc1a8efc0,0x1b0323c3858
sfi-move,0x18bc1a8f010,0x1b0323c3890
sfi-move,0x3f9aba529d8,0x3b94bd88dd0
sfi-move,0x3f9aba52a48,0x3b94bd88e40
sfi-move,0x3f9aba52ab8,0x3b94bd88eb0
sfi-move,0x3f9aba52b30,0x3b94bd88f28
sfi-move,0x3f9aba52ba8,0x3b94bd88fa0
sfi-move,0x3f9aba52c20,0x3b94bd89018
sfi-move,0x3f9aba52c98,0x3b94bd89090
sfi-move,0x3f9aba52d18,0x3b94bd89110
sfi-move,0x18bc1a8f060,0x1b0323c38c8
sfi-move,0x18bc1a8f0b0,0x1b0323c3900
sfi-move,0x3f9aba52d98,0x3b94bd89190
sfi-move,0x3f9aba53978,0x3b94bd89420
sfi-move,0x18bc1a8f100,0x1b0323c3950
sfi-move,0x18bc1a8f150,0x1b0323c39a0
sfi-move,0x3f9aba53ac0,0x3b94bd89520
sfi-move,0x3f9aba53c08,0x3b94bd89620
sfi-move,0x18bc1a8f1a0,0x1b0323c39f0
code-move,0x18bc1a8f9a6,0x1b0323c3c2e
sfi-move,0x3f9aba53d70,0x3b94bd89740
sfi-move,0x3f9aba53ed8,0x3b94bd89860
sfi-move,0x3f9aba54040,0x3b94bd89980
sfi-move,0x3f9aba541a8,0x3b94bd89aa0
sfi-move,0x3f9aba54310,0x3b94bd89bc0
sfi-move,0x3f9aba54478,0x3b94bd89ce0
sfi-move,0x3f9aba545e0,0x3b94bd89e00
sfi-move,0x3f9aba54748,0x3b94bd89f20
sfi-move,0x18bc1a93528,0x1b0323c5b48
sfi-move,0x18bc1a93578,0x1b0323c5b98
sfi-move,0x18bc1a935c8,0x1b0323c5be8
sfi-move,0x18bc1a93618,0x1b0323c5c38
sfi-move,0x18bc1a93668,0x1b0323c5c88
sfi-move,0x18bc1a936b8,0x1b0323c5cd8
sfi-move,0x18bc1a93708,0x1b0323c5d28
sfi-move,0x3f9aba548b8,0x3b94bd8a048
sfi-move,0x3f9aba54a28,0x3b94bd8a170
sfi-move,0x18bc1a93758,0x1b0323c5d78
sfi-move,0x18bc1a937a8,0x1b0323c5dc8
sfi-move,0x3f9aba54b98,0x3b94bd8a298
sfi-move,0x3f9aba54d08,0x3b94bd8a3c0
sfi-move,0x18bc1a937f8,0x1b0323c5e18
sfi-move,0x2173c750c28,0x2fad2a02520
sfi-move,0x2173c750c78,0x2fad2a02570
sfi-move,0x2173c750cc8,0x2fad2a025a8
sfi-move,0x2173c750d18,0x2fad2a025e0
sfi-move,0x2173c750d68,0x2fad2a02618
sfi-move,0x2173c750db8,0x2fad2a02668
sfi-move,0x2173c750e08,0x2fad2a026b8
sfi-move,0x2173c750e58,0x2fad2a026f0
sfi-move,0x2173c750ed0,0x2fad2a02768
sfi-move,0x2173c750f20,0x2fad2a027b8
sfi-move,0x2173c750f70,0x2fad2a027f0
sfi-move,0x2173c750fc0,0x2fad2a02840
sfi-move,0x3f9aba54e80,0x3b94bd8a4f0
sfi-move,0x2173c751010,0x2fad2a02890
sfi-move,0x2173c751060,0x2fad2a028e0
sfi-move,0x2173c7510b0,0x2fad2a02930
sfi-move,0x2173c751138,0x2fad2a029b8
sfi-move,0x2173c7511c0,0x2fad2a02a40
sfi-move,0x2173c751248,0x2fad2a02a98
sfi-move,0x2173c7512d0,0x2fad2a02b20
sfi-move,0x2173c751358,0x2fad2a02ba8
sfi-move,0x2173c7513a8,0x2fad2a02bf8
sfi-move,0x18bc1a93848,0x1b0323c5e68
sfi-move,0x2173c751430,0x2fad2a02c80
sfi-move,0x2173c7514b8,0x2fad2a02cf0
sfi-move,0x2173c751508,0x2fad2a02d40
sfi-move,0x2173c751558,0x2fad2a02d90
sfi-move,0x2173c7515a8,0x2fad2a02de0
sfi-move,0x2173c7515f8,0x2fad2a02e30
sfi-move,0x2173c751648,0x2fad2a02e80
sfi-move,0x2173c751698,0x2fad2a02ed0
sfi-move,0x2173c7516e8,0x2fad2a02f20
sfi-move,0x2173c751738,0x2fad2a02f70
sfi-move,0x2173c751788,0x2fad2a02fc0
sfi-move,0x2173c7517d8,0x2fad2a03010
sfi-move,0x2173c751828,0x2fad2a03060
sfi-move,0x18bc1a93898,0x1b0323c5eb8
sfi-move,0x18bc1a938e8,0x1b0323c5f08
sfi-move,0x18bc1a93938,0x1b0323c5f58
sfi-move,0x18bc1a93988,0x1b0323c5fa8
sfi-move,0x18bc1a939d8,0x1b0323c5ff8
sfi-move,0x18bc1a93a28,0x1b0323c6048
sfi-move,0x18bc1a93a78,0x1b0323c6098
sfi-move,0x18bc1a93ac8,0x1b0323c60e8
sfi-move,0x18bc1a93b18,0x1b0323c6138
sfi-move,0x18bc1a93b68,0x1b0323c6188
sfi-move,0x18bc1a93bb8,0x1b0323c61d8
sfi-move,0x18bc1a93c08,0x1b0323c6228
sfi-move,0x18bc1a93c58,0x1b0323c6278
sfi-move,0x18bc1a93ca8,0x1b0323c62c8
sfi-move,0x18bc1a93cf8,0x1b0323c6318
sfi-move,0x18bc1a93d48,0x1b0323c6368
sfi-move,0x18bc1a93d98,0x1b0323c63b8
sfi-move,0x18bc1a93de8,0x1b0323c6408
sfi-move,0x18bc1a93e38,0x1b0323c6458
sfi-move,0x18bc1a97338,0x1b0323c6960
sfi-move,0x18bc1a97388,0x1b0323c69b0
sfi-move,0x18bc1a98420,0x1b0323c7010
sfi-move,0x18bc1a98470,0x1b0323c7060
sfi-move,0x18bc1a984c0,0x1b0323c70b0
sfi-move,0x18bc1a98510,0x1b0323c7100
sfi-move,0x18bc1a98560,0x1b0323c7150
sfi-move,0x18bc1a985b0,0x1b0323c71a0
sfi-move,0x18bc1a99270,0x1b0323c7400
code-move,0x3f9aba557a6,0x3b94bd8aa0e
code-move,0x3f9aba55c8e,0x3b94bd8aef6
code-move,0x18bc1a99d46,0x1b0323c775e
code-move,0x3f9aba566a6,0x3b94bd8b75e
code-move,0x3f9aba567fe,0x3b94bd8b8b6
sfi-move,0x3f9aba56a08,0x3b94bd8bac0
sfi-move,0x3f9aba56a58,0x3b94bd8bb10
sfi-move,0x18bc1a9b988,0x1b0323c9190
sfi-move,0x18bc1a9b9d8,0x1b0323c91e0
sfi-move,0x3f9aba56aa8,0x3b94bd8bb48
sfi-move,0x18bc1a9ba28,0x1b0323c9230
sfi-move,0x18bc1a9c7e8,0x1b0323c9698
sfi-move,0x18bc1a9c860,0x1b0323c9710
code-move,0x3f9aba56bce,0x3b94bd8bc6e
code-move,0x18bc1a9ce26,0x1b0323c99be
code-move,0x18bc1a9d056,0x1b0323c9bee
code-move,0x3f9aba571de,0x3b94bd8c27e
sfi-move,0x18bc1a9d200,0x1b0323c9d98
sfi-move,0x18bc1a9d250,0x1b0323c9de8
code-move,0x3f9aba5738e,0x3b94bd8c42e
code-move,0x3f9aba575b6,0x3b94bd8c656
code-move,0x18bc1a9d46e,0x1b0323ca006
code-move,0x18bc1a9d80e,0x1b0323ca3a6
code-move,0x18bc1a9da86,0x1b0323ca4c6
code-move,0x18bc1a9db9e,0x1b0323ca5de
code-move,0x3f9aba588fe,0x3b94bd8d99e
code-move,0x3f9aba599ce,0x3b94bd8ea6e
code-move,0x18bc1a9dcee,0x1b0323ca72e
code-move,0x18bc1a9df66,0x1b0323ca9a6
code-move,0x18bc1a9e176,0x1b0323cabb6
sfi-move,0x18bc1a9e230,0x1b0323cac20
code-move,0x3f9aba59b26,0x3b94bd8ebc6
code-move,0x18bc1a9e52e,0x1b0323cad1e
code-move,0x18bc1a9e65e,0x1b0323cae4e
code-move,0x18bc1a9e776,0x1b0323caf66
sfi-move,0x18bc1a9e840,0x1b0323cb030
code-move,0x3f9aba59c8e,0x3b94bd8ed2e
code-move,0x3f9aba59e9e,0x3b94bd8ee76
code-move,0x3f9aba5a086,0x3b94bd8f05e
code-move,0x3f9aba5a20e,0x3b94bd8f1e6
code-move,0x3f9aba5a2ee,0x3b94bd8f2c6
code-move,0x18bc1a9e91e,0x1b0323cb10e
sfi-move,0x18bc1a9eb58,0x1b0323cb328
code-move,0x3f9aba5a3d6,0x3b94bd8f3ae
code-move,0x18bc1a9eda6,0x1b0323cb576
code-move,0x3f9aba5a51e,0x3b94bd8f4f6
sfi-move,0x3f9aba5a768,0x3b94bd8f6c0
sfi-move,0x3f9aba5a7f0,0x3b94bd8f748
sfi-move,0x3f9aba5a878,0x3b94bd8f7d0
sfi-move,0x3f9aba5a900,0x3b94bd8f858
code-move,0x3f9aba5aafe,0x3b94bd8fa56
sfi-move,0x3f9aba5adc8,0x3b94bd8fcb0
sfi-move,0x3f9aba5ae18,0x3b94bd8fd00
sfi-move,0x3f9aba5ae68,0x3b94bd8fd50
code-move,0x3f9aba5b0b6,0x3b94bd8ff9e
sfi-move,0x3f9aba5b418,0x3b94bd902e0
code-move,0x3f9aba5b4de,0x3b94bd9038e
sfi-move,0x3f9aba5b610,0x3b94bd904c0
sfi-move,0x3f9aba5b660,0x3b94bd90510
code-move,0x3f9aba5b7e6,0x3b94bd90696
sfi-move,0x18bc1a9f4d8,0x1b0323cbab0
sfi-move,0x18bc1a9f528,0x1b0323cbb00
sfi-move,0x3f9aba5ca88,0x3b94bd91890
sfi-move,0x3f9aba5cb50,0x3b94bd91958
sfi-move,0x18bc1a9f578,0x1b0323cbb38
sfi-move,0x18bc1a9f5c8,0x1b0323cbb70
sfi-move,0x3f9aba5cc18,0x3b94bd91a20
sfi-move,0x18bc1a9f658,0x1b0323cbbe8
sfi-move,0x18bc1a9f6e8,0x1b0323cbc78
sfi-move,0x18bc1a9f778,0x1b0323cbd08
sfi-move,0x18bc1a9f808,0x1b0323cbd98
sfi-move,0x18bc1a9f898,0x1b0323cbe28
sfi-move,0x18bc1a9f928,0x1b0323cbeb8
sfi-move,0x18bc1aa0bf8,0x1b0323cc628
sfi-move,0x18bc1aa0c48,0x1b0323cc678
sfi-move,0x18bc1aa0c98,0x1b0323cc6b0
code-move,0x18bc1aa272e,0x1b0323cd10e
code-move,0x18bc1aa3356,0x1b0323cdd36
code-move,0x18bc1aa3aae,0x1b0323ce48e
sfi-move,0x18bc1aa3c90,0x1b0323ce670
code-move,0x18bc1aa3d9e,0x1b0323ce77e
code-move,0x18bc1aa3fee,0x1b0323ce9ce
code-move,0x18bc1aa4cd6,0x1b0323cf3e6
code-move,0x18bc1aa5186,0x1b0323cf896
code-move,0x18bc1aa52e6,0x1b0323cf9f6
code-move,0x18bc1aa542e,0x1b0323cfb3e
code-move,0x18bc1aa604e,0x1b0323d075e
sfi-move,0x18bc1aa6180,0x1b0323d0890
code-move,0x18bc1aa62b6,0x1b0323d09c6
code-move,0x18bc1aa674e,0x1b0323d0e5e
sfi-move,0x3f9aba5cce0,0x3b94bd91ae8
sfi-move,0x3f9aba5cda8,0x3b94bd91bb0
sfi-move,0x3f9aba5ce70,0x3b94bd91c78
sfi-move,0x3f9aba5cf38,0x3b94bd91d40
code-move,0x18bc1aa6b8e,0x1b0323d129e
code-move,0x3f9aba5d22e,0x3b94bd92036
sfi-move,0x2173c751878,0x2fad2a030b0
code-move,0x3f9aba5d62e,0x3b94bd92436
sfi-move,0x2173c7518c8,0x2fad2a03100
code-move,0x18bc1aa7196,0x1b0323d18a6
sfi-move,0x3f9aba5d920,0x3b94bd92728
sfi-move,0x3f9aba5d970,0x3b94bd92778
sfi-move,0x3f9aba5d9c0,0x3b94bd927c8
sfi-move,0x3f9aba5da10,0x3b94bd92818
sfi-move,0x3f9aba5da60,0x3b94bd92868
code-move,0x18bc1aa770e,0x1b0323d1e1e
code-move,0x18bc1aa77f6,0x1b0323d1f06
sfi-move,0x2173c751918,0x2fad2a03150
sfi-move,0x2173c7519e0,0x2fad2a03218
sfi-move,0x2173c751a68,0x2fad2a032a0
code-move,0x18bc1aa78de,0x1b0323d1fee
code-move,0x18bc1aa7b66,0x1b0323d2276
code-move,0x18bc1aa7dde,0x1b0323d24ee
code-move,0x18bc1aa8016,0x1b0323d2726
sfi-move,0x18bc1aa8a60,0x1b0323d30f0
sfi-move,0x18bc1aa8ad0,0x1b0323d3160
sfi-move,0x18bc1aa8b88,0x1b0323d31d0
code-move,0x18bc1aa8e0e,0x1b0323d3456
code-move,0x18bc1aa8f3e,0x1b0323d3586
sfi-move,0x18bc1aa9388,0x1b0323d39d0
sfi-move,0x18bc1aa93d8,0x1b0323d3a20
code-move,0x18bc1aa965e,0x1b0323d3ca6
sfi-move,0x3f9aba5dab0,0x3b94bd928b8
sfi-move,0x3f9aba5db00,0x3b94bd92908
code-move,0x3f9aba5dcae,0x3b94bd92ab6
sfi-move,0x18bc1aaaec0,0x1b0323d51a0
sfi-move,0x3f9aba5f968,0x3b94bd94670
sfi-move,0x3f9aba5f9b8,0x3b94bd946c0
sfi-move,0x18bc1aaaf10,0x1b0323d51f0
sfi-move,0x18bc1aaaf60,0x1b0323d5240
sfi-move,0x18bc1aaafb0,0x1b0323d5290
sfi-move,0x18bc1aab000,0x1b0323d52e0
sfi-move,0x18bc1aab050,0x1b0323d5330
sfi-move,0x18bc1aab0a0,0x1b0323d5380
sfi-move,0x2173c751af8,0x2fad2a03330
sfi-move,0x2173c751b88,0x2fad2a033c0
sfi-move,0x2173c751c10,0x2fad2a03448
sfi-move,0x18bc1aab0f0,0x1b0323d53d0
sfi-move,0x18bc1aab140,0x1b0323d5420
sfi-move,0x3f9aba5fa08,0x3b94bd94710
sfi-move,0x3f9aba5fa58,0x3b94bd94760
sfi-move,0x3f9aba5faa8,0x3b94bd947b0
sfi-move,0x3f9aba5faf8,0x3b94bd94800
sfi-move,0x3f9aba5fb48,0x3b94bd94850
sfi-move,0x3f9aba5fb98,0x3b94bd948a0
sfi-move,0x3f9aba5fbe8,0x3b94bd948f0
sfi-move,0x3f9aba5fc38,0x3b94bd94928
sfi-move,0x3f9aba5fcc8,0x3b94bd94980
sfi-move,0x3f9aba5fd58,0x3b94bd94a10
code-move,0x3f9aba5ff5e,0x3b94bd94c16
sfi-move,0x18bc1aab190,0x1b0323d5470
sfi-move,0x18bc1aab1e0,0x1b0323d54c0
sfi-move,0x18bc1aab230,0x1b0323d5510
sfi-move,0x18bc1aab280,0x1b0323d5560
sfi-move,0x18bc1aab2d0,0x1b0323d5598
sfi-move,0x18bc1aab320,0x1b0323d55e8
sfi-move,0x18bc1aab370,0x1b0323d5638
sfi-move,0x18bc1aab3c0,0x1b0323d5688
sfi-move,0x18bc1aab450,0x1b0323d5718
sfi-move,0x18bc1aab4e0,0x1b0323d57a8
sfi-move,0x18bc1aab570,0x1b0323d5838
sfi-move,0x18bc1aab600,0x1b0323d58c8
sfi-move,0x18bc1aab690,0x1b0323d5958
sfi-move,0x18bc1aab720,0x1b0323d59e8
code-move,0x3f9aba606d6,0x3b94bd952fe
sfi-move,0x18bc1aab7b0,0x1b0323d5a78
sfi-move,0x18bc1aab840,0x1b0323d5b08
sfi-move,0x18bc1aab8d0,0x1b0323d5b98
sfi-move,0x18bc1aab960,0x1b0323d5c28
sfi-move,0x18bc1aab9f0,0x1b0323d5cb8
sfi-move,0x18bc1aaba80,0x1b0323d5d48
sfi-move,0x18bc1aabb10,0x1b0323d5dd8
code-move,0x3f9aba608be,0x3b94bd954e6
sfi-move,0x18bc1aad8b8,0x1b0323d61c8
code-move,0x3f9aba60a1e,0x3b94bd95646
sfi-move,0x18bc1aada00,0x1b0323d6310
sfi-move,0x18bc1aadb48,0x1b0323d6458
sfi-move,0x18bc1aadc90,0x1b0323d65a0
sfi-move,0x18bc1aaddd8,0x1b0323d66e8
code-move,0x3f9aba60b06,0x3b94bd9572e
code-move,0x3f9aba60c66,0x3b94bd9588e
code-move,0x3f9aba60e9e,0x3b94bd95ac6
code-move,0x3f9aba6104e,0x3b94bd95c76
code-move,0x3f9aba6131e,0x3b94bd95f26
sfi-move,0x18bc1aadf20,0x1b0323d6830
code-move,0x3f9aba6143e,0x3b94bd96046
sfi-move,0x18bc1aae068,0x1b0323d6978
code-move,0x3f9aba61a1e,0x3b94bd96256
code-move,0x3f9aba61c6e,0x3b94bd96416
code-move,0x3f9aba6220e,0x3b94bd969b6
sfi-move,0x18bc1aae1b0,0x1b0323d6ac0
sfi-move,0x18bc1aae2f8,0x1b0323d6c08
sfi-move,0x18bc1aae440,0x1b0323d6d50
code-move,0x3f9aba62a5e,0x3b94bd97206
code-move,0x3f9aba62b8e,0x3b94bd97336
code-move,0x3f9aba62c7e,0x3b94bd97426
sfi-move,0x3f9aba62d90,0x3b94bd97538
code-move,0x3f9aba62e7e,0x3b94bd97626
code-move,0x3f9aba630be,0x3b94bd97866
sfi-move,0x3f9aba63310,0x3b94bd97ab8
sfi-move,0x3f9aba63360,0x3b94bd97af0
sfi-move,0x3f9aba633b0,0x3b94bd97b28
sfi-move,0x3f9aba63400,0x3b94bd97b60
sfi-move,0x3f9aba63458,0x3b94bd97b98
sfi-move,0x3f9aba634a8,0x3b94bd97be8
sfi-move,0x3f9aba634f8,0x3b94bd97c20
sfi-move,0x3f9aba63548,0x3b94bd97c58
code-move,0x3f9aba636ce,0x3b94bd97dde
code-move,0x3f9aba63ff6,0x3b94bd98706
sfi-move,0x2173c757050,0x2fad2a04980
code-move,0x3f9aba641a6,0x3b94bd9885e
code-move,0x3f9aba64476,0x3b94bd98b2e
code-move,0x3f9aba645fe,0x3b94bd98cb6
code-move,0x3f9aba647e6,0x3b94bd98e9e
code-move,0x3f9aba64946,0x3b94bd98ffe
code-move,0x3f9aba64af6,0x3b94bd991ae
sfi-move,0x3f9aba64c80,0x3b94bd99338
code-move,0x3f9aba64d36,0x3b94bd993d6
code-move,0x3f9aba6508e,0x3b94bd996e6
code-move,0x3f9aba651d6,0x3b94bd9982e
code-move,0x3f9aba652f6,0x3b94bd9994e
code-move,0x3f9aba6541e,0x3b94bd99a76
code-move,0x3f9aba6556e,0x3b94bd99ba6
code-move,0x3f9aba6574e,0x3b94bd99d86
code-move,0x3f9aba6584e,0x3b94bd99e86
code-move,0x3f9aba65a16,0x3b94bd9a036
sfi-move,0x18bc1aae588,0x1b0323d6e98
sfi-move,0x18bc1aae6d0,0x1b0323d6fe0
code-move,0x3f9aba65ce6,0x3b94bd9a306
sfi-move,0x18bc1aae818,0x1b0323d7128
code-move,0x3f9aba65e2e,0x3b94bd9a436
sfi-move,0x18bc1aae978,0x1b0323d7288
code-move,0x3f9aba65f7e,0x3b94bd9a586
code-move,0x3f9aba660d6,0x3b94bd9a6de
code-move,0x3f9aba66266,0x3b94bd9a86e
code-move,0x3f9aba663a6,0x3b94bd9a9ae
sfi-move,0x3f9aba664a8,0x3b94bd9aab0
code-move,0x18bc1ab0526,0x1b0323d8c6e
code-move,0x3f9aba66556,0x3b94bd9ab5e
code-move,0x18bc1ab0656,0x1b0323d8d9e
code-move,0x3f9aba6672e,0x3b94bd9ad36
code-move,0x3f9aba66886,0x3b94bd9ae8e
code-move,0x3f9aba6699e,0x3b94bd9afa6
code-move,0x3f9aba66bee,0x3b94bd9b1f6
code-move,0x3f9aba66d7e,0x3b94bd9b386
code-move,0x3f9aba670ce,0x3b94bd9b6d6
code-move,0x3f9aba675ae,0x3b94bd9bbb6
sfi-move,0x3f9aba67790,0x3b94bd9bd98
code-move,0x3f9aba67886,0x3b94bd9be8e
code-move,0x3f9aba67bd6,0x3b94bd9c116
code-move,0x3f9aba67d2e,0x3b94bd9c26e
code-move,0x3f9aba67e2e,0x3b94bd9c36e
code-move,0x3f9aba67f0e,0x3b94bd9c44e
code-move,0x3f9aba6807e,0x3b94bd9c5be
code-move,0x3f9aba68626,0x3b94bd9ca9e
code-move,0x3f9aba68aae,0x3b94bd9cf26
code-move,0x3f9aba68bbe,0x3b94bd9d036
code-move,0x3f9aba68ce6,0x3b94bd9d15e
code-move,0x3f9aba68e6e,0x3b94bd9d2e6
code-move,0x3f9aba69046,0x3b94bd9d4be
code-move,0x3f9aba691a6,0x3b94bd9d61e
code-move,0x3f9aba6932e,0x3b94bd9d7a6
code-move,0x3f9aba69506,0x3b94bd9d97e
sfi-move,0x3f9aba69658,0x3b94bd9dad0
code-move,0x3f9aba697be,0x3b94bd9dc36
code-move,0x3f9aba69a5e,0x3b94bd9ded6
sfi-move,0x3f9aba69e50,0x3b94bd9e198
sfi-move,0x3f9aba69ea0,0x3b94bd9e1d0
sfi-move,0x3f9aba69ef0,0x3b94bd9e208
sfi-move,0x3f9aba69f40,0x3b94bd9e240
sfi-move,0x3f9aba69f90,0x3b94bd9e278
code-move,0x18bc1ab090e,0x1b0323d8f6e
code-move,0x3f9aba6aa5e,0x3b94bd9e46e
code-move,0x18bc1ab0ff6,0x1b0323d95f6
code-move,0x18bc1ab129e,0x1b0323d9866
code-move,0x3f9aba6b3ee,0x3b94bd9eae6
code-move,0x3f9aba6b616,0x3b94bd9ec5e
code-move,0x3f9aba6b9ce,0x3b94bd9efce
code-move,0x3f9aba6be96,0x3b94bd9f256
code-move,0x3f9aba6c0b6,0x3b94bd9f476
code-move,0x3f9aba6c2ae,0x3b94bd9f66e
sfi-move,0x3f9aba6c408,0x3b94bd9f7c8
code-move,0x18bc1ab1436,0x1b0323d99fe
code-move,0x3f9aba6c4e6,0x3b94bd9f8a6
code-move,0x18bc1ab15e6,0x1b0323d9bae
code-move,0x18bc1ab19f6,0x1b0323d9f4e
code-move,0x18bc1ab1bde,0x1b0323da136
code-move,0x18bc1ab1fa6,0x1b0323da4fe
code-move,0x3f9aba6c736,0x3b94bd9faf6
code-move,0x3f9aba6c9ce,0x3b94bd9fd8e
code-move,0x18bc1ab21d6,0x1b0323da72e
sfi-move,0x18bc1ab22f0,0x1b0323da848
code-move,0x3f9aba6cc66,0x3b94bda0026
sfi-move,0x3f9aba6cda0,0x3b94bda0160
code-move,0x3f9aba6ce56,0x3b94bda01fe
code-move,0x3f9aba6cfd6,0x3b94bda037e
sfi-move,0x18bc1ab2340,0x1b0323da898
code-move,0x18bc1ab246e,0x1b0323da9c6
code-move,0x18bc1ab271e,0x1b0323dac76
code-move,0x18bc1ab283e,0x1b0323dad96
code-move,0x18bc1ab298e,0x1b0323daee6
sfi-move,0x3f9aba6d0f8,0x3b94bda04a0
code-move,0x18bc1ab2d8e,0x1b0323db136
code-move,0x18bc1ab2fd6,0x1b0323db37e
code-move,0x3f9aba6d1c6,0x3b94bda0556
code-move,0x3f9aba6d3e6,0x3b94bda0776
code-move,0x18bc1ab322e,0x1b0323db5d6
code-move,0x18bc1ab379e,0x1b0323dba06
code-move,0x18bc1ab3a8e,0x1b0323dbcf6
code-move,0x18bc1ab3b7e,0x1b0323dbde6
code-move,0x18bc1ab3c6e,0x1b0323dbed6
code-move,0x18bc1ab3d5e,0x1b0323dbfc6
code-move,0x18bc1ab403e,0x1b0323dc186
code-move,0x18bc1ab417e,0x1b0323dc2c6
code-move,0x18bc1ab4286,0x1b0323dc3ce
code-move,0x18bc1ab43b6,0x1b0323dc4fe
code-move,0x18bc1ab452e,0x1b0323dc676
sfi-move,0x18bc1ab4a98,0x1b0323dca88
sfi-move,0x18bc1ab7f28,0x1b0323deef0
sfi-move,0x18bc1ab7f78,0x1b0323def40
sfi-move,0x18bc1ab80e8,0x1b0323deff0
sfi-move,0x2173c757a70,0x2fad2a04cf8
sfi-move,0x2173c757ac0,0x2fad2a04d48
sfi-move,0x2173c757b10,0x2fad2a04d98
sfi-move,0x2173c757b60,0x2fad2a04de8
sfi-move,0x2173c757bf0,0x2fad2a04e78
sfi-move,0x2173c757c78,0x2fad2a04f00
sfi-move,0x18bc1ab8138,0x1b0323df028
sfi-move,0x18bc1ab8188,0x1b0323df078
sfi-move,0x18bc1ab81d8,0x1b0323df0c8
sfi-move,0x18bc1ab8228,0x1b0323df118
sfi-move,0x18bc1ab8278,0x1b0323df168
sfi-move,0x18bc1ab82c8,0x1b0323df1b8
sfi-move,0x18bc1ab8318,0x1b0323df208
sfi-move,0x18bc1ab83b8,0x1b0323df2a8
sfi-move,0x2173c758b78,0x2fad2a052c8
sfi-move,0x2173c758bc8,0x2fad2a05318
sfi-move,0x2173c75b290,0x2fad2a069d0
sfi-move,0x3f9aba6d520,0x3b94bda08b0
code-move,0x3f9aba6d656,0x3b94bda09ce
code-move,0x3f9aba6d9ee,0x3b94bda0d66
code-move,0x3f9aba6db6e,0x3b94bda0ebe
code-move,0x3f9aba6dc9e,0x3b94bda0fd6
sfi-move,0x2173c75b2e0,0x2fad2a06a20
sfi-move,0x2173c75b330,0x2fad2a06a70
sfi-move,0x2173c75b380,0x2fad2a06ac0
sfi-move,0x2173c75b3d0,0x2fad2a06b10
sfi-move,0x2173c75b420,0x2fad2a06b60
code-move,0x3f9aba6ddbe,0x3b94bda10f6
code-move,0x3f9aba6df8e,0x3b94bda12c6
code-move,0x3f9aba6e0fe,0x3b94bda1436
code-move,0x3f9aba6e20e,0x3b94bda1546
sfi-move,0x3f9aba6e310,0x3b94bda1648
code-move,0x3f9aba6e3c6,0x3b94bda16fe
sfi-move,0x18bc1ab8408,0x1b0323df2f8
sfi-move,0x18bc1ab8458,0x1b0323df348
sfi-move,0x18bc1ab84a8,0x1b0323df398
sfi-move,0x18bc1ab84f8,0x1b0323df3e8
sfi-move,0x18bc1ab85a8,0x1b0323df420
sfi-move,0x18bc1ab86e8,0x1b0323df470
sfi-move,0x18bc1ab8738,0x1b0323df4c0
sfi-move,0x18bc1ab8788,0x1b0323df510
sfi-move,0x18bc1ab87d8,0x1b0323df548
sfi-move,0x18bc1ab8828,0x1b0323df580
sfi-move,0x18bc1ab8878,0x1b0323df5d0
sfi-move,0x18bc1ab8908,0x1b0323df648
sfi-move,0x18bc1ab8998,0x1b0323df6c0
sfi-move,0x18bc1ab8a28,0x1b0323df718
sfi-move,0x18bc1ab8a78,0x1b0323df750
sfi-move,0x18bc1ab8b08,0x1b0323df7e0
sfi-move,0x18bc1ab8b98,0x1b0323df870
sfi-move,0x18bc1ab8c28,0x1b0323df8e8
sfi-move,0x18bc1ab8cb0,0x1b0323df970
sfi-move,0x18bc1ab8d88,0x1b0323df9f8
sfi-move,0x18bc1ab8e60,0x1b0323dfa80
sfi-move,0x2173c75c778,0x2fad2a073f0
sfi-move,0x2173c75c7c8,0x2fad2a07428
sfi-move,0x2173c75c818,0x2fad2a07478
sfi-move,0x2173c75c868,0x2fad2a074c8
sfi-move,0x2173c75c8b8,0x2fad2a07518
sfi-move,0x2173c75c908,0x2fad2a07568
sfi-move,0x2173c75c958,0x2fad2a075b8
sfi-move,0x2173c75c9d0,0x2fad2a07630
sfi-move,0x2173c75ca20,0x2fad2a07680
sfi-move,0x2173c75ca70,0x2fad2a076d0
sfi-move,0x2173c75cac0,0x2fad2a07708
sfi-move,0x2173c75cb10,0x2fad2a07758
sfi-move,0x2173c75cb60,0x2fad2a077a8
sfi-move,0x2173c75cbd8,0x2fad2a07820
sfi-move,0x2173c75cc28,0x2fad2a07870
code-move,0x2173c75e07e,0x2fad2a07dce
code-move,0x2173c75e6be,0x2fad2a0840e
sfi-move,0x2173c75f200,0x2fad2a08ea0
code-move,0x2173c75f316,0x2fad2a08f9e
code-move,0x2173c75f7de,0x2fad2a0940e
code-move,0x2173c75f94e,0x2fad2a09546
sfi-move,0x38242acdff8,0x1b0323ed578
sfi-move,0x38242ace0b0,0x1b0323ed5e8
code-move,0x2173c75fae6,0x2fad2a096ae
code-move,0x2173c75fe86,0x2fad2a09a4e
sfi-move,0x2173c7606a0,0x2fad2a0a028
sfi-move,0x2173c7606f0,0x2fad2a0a060
sfi-move,0x2173c760740,0x2fad2a0a0b0
sfi-move,0x2173c760790,0x2fad2a0a100
sfi-move,0x2173c7607e0,0x2fad2a0a150
sfi-move,0x2173c760830,0x2fad2a0a1a0
sfi-move,0x2173c760880,0x2fad2a0a1f0
sfi-move,0x2173c7608d0,0x2fad2a0a240
sfi-move,0x38242ace1f8,0x1b0323ed6e8
sfi-move,0x38242ace2b0,0x1b0323ed758
code-move,0x2173c7626c6,0x2fad2a0af7e
code-move,0x2173c762c36,0x2fad2a0b4d6
code-move,0x2173c762e4e,0x2fad2a0b6ee
sfi-move,0x38242ace368,0x1b0323ed810
sfi-move,0x38242ace420,0x1b0323ed880
sfi-move,0x38242ace4d8,0x1b0323ed938
sfi-move,0x38242ace5d8,0x1b0323eda38
code-move,0x2173c762f8e,0x2fad2a0b82e
sfi-move,0x2173c763660,0x2fad2a0bce8
sfi-move,0x2173c763718,0x2fad2a0bd20
sfi-move,0x2173c763768,0x2fad2a0bd70
sfi-move,0x2173c7637b8,0x2fad2a0bdc0
sfi-move,0x2173c763808,0x2fad2a0be10
sfi-move,0x2173c763858,0x2fad2a0be60
sfi-move,0x2173c7638a8,0x2fad2a0be98
sfi-move,0x2173c7638f8,0x2fad2a0bee8
sfi-move,0x2173c763988,0x2fad2a0bf60
code-move,0x2173c763ad6,0x2fad2a0c0ae
code-move,0x2173c7641b6,0x2fad2a0c78e
sfi-move,0x2173c7646f0,0x2fad2a0ca60
sfi-move,0x2173c764740,0x2fad2a0ca98
sfi-move,0x2173c764790,0x2fad2a0cae8
new,MemoryChunk,0x164cc380000,262144
tick,0x7ff7787de0b8,9363029,0,0x0,1
sfi-move,0x2173c765b80,0x2fad2a0d5e8
sfi-move,0x2173c765bd0,0x2fad2a0d620
sfi-move,0x2173c765c20,0x2fad2a0d658
sfi-move,0x2173c765c70,0x2fad2a0d6a8
sfi-move,0x2173c765cc0,0x2fad2a0d6e0
sfi-move,0x2173c765d10,0x2fad2a0d718
sfi-move,0x2173c765d60,0x2fad2a0d750
sfi-move,0xa2a2ac8448,0x164cc3854e8
sfi-move,0xa2a2ac8498,0x164cc385538
sfi-move,0xa2a2ac84e8,0x164cc385588
sfi-move,0xa2a2ac85d8,0x164cc3855d8
sfi-move,0xa2a2ac8628,0x164cc385628
sfi-move,0xa2a2ac8678,0x164cc385678
sfi-move,0xa2a2ac86c8,0x164cc3856b0
sfi-move,0xa2a2ac8718,0x164cc385700
sfi-move,0xa2a2ac8768,0x164cc385750
sfi-move,0xa2a2ac87e0,0x164cc3857c8
sfi-move,0xa2a2ac8858,0x164cc385840
sfi-move,0xa2a2ac88a8,0x164cc385890
sfi-move,0xa2a2ac88f8,0x164cc3858e0
sfi-move,0xa2a2ac8948,0x164cc385930
sfi-move,0xa2a2ac8998,0x164cc385980
sfi-move,0x38242ace788,0x1b0323edba0
sfi-move,0xa2a2ac8a38,0x164cc3859d0
sfi-move,0xa2a2ac8a88,0x164cc385a20
sfi-move,0xa2a2ac8ad8,0x164cc385a70
sfi-move,0xa2a2ac8b28,0x164cc385ac0
sfi-move,0x38242ace8d0,0x1b0323edca0
sfi-move,0x38242acea18,0x1b0323edda0
sfi-move,0x38242aceb60,0x1b0323edea0
sfi-move,0x38242aceca8,0x1b0323edfa0
sfi-move,0x38242acee18,0x1b0323ee0c8
sfi-move,0x38242acf160,0x1b0323ee2f0
sfi-move,0x38242acf2a8,0x1b0323ee3f0
sfi-move,0x38242acf3f0,0x1b0323ee4f0
sfi-move,0xa2a2ac8b78,0x164cc385b10
sfi-move,0xa2a2ac8bc8,0x164cc385b60
sfi-move,0xa2a2ac8c18,0x164cc385bb0
sfi-move,0xa2a2ac8c68,0x164cc385c00
sfi-move,0xa2a2ac8cb8,0x164cc385c50
sfi-move,0xa2a2ac8d08,0x164cc385ca0
sfi-move,0xa2a2ac8d58,0x164cc385cf0
sfi-move,0xa2a2ac8da8,0x164cc385d40
sfi-move,0xa2a2ac8df8,0x164cc385d90
sfi-move,0xa2a2ac8e48,0x164cc385de0
sfi-move,0xa2a2ac8e98,0x164cc385e30
sfi-move,0xa2a2ac8ee8,0x164cc385e80
sfi-move,0xa2a2ac8f38,0x164cc385ed0
sfi-move,0xa2a2ac8f88,0x164cc385f20
sfi-move,0xa2a2ac9048,0x164cc385f58
sfi-move,0xa2a2ac9098,0x164cc385fa8
sfi-move,0x38242acf538,0x1b0323ee638
sfi-move,0x38242acf880,0x1b0323ee818
sfi-move,0x38242acf9e0,0x1b0323ee978
sfi-move,0x38242acfd28,0x1b0323eeb58
sfi-move,0xa2a2ac90e8,0x164cc385ff8
sfi-move,0x38242acfe88,0x1b0323eec70
sfi-move,0x38242acffd0,0x1b0323eed70
sfi-move,0x38242ad0118,0x1b0323eee70
sfi-move,0x38242ad0260,0x1b0323eefb8
sfi-move,0x38242ad05a8,0x1b0323ef198
sfi-move,0x38242ad06f0,0x1b0323ef298
sfi-move,0x38242ad0850,0x1b0323ef3f8
sfi-move,0x38242ad0b98,0x1b0323ef5d8
sfi-move,0x38242ad0ce0,0x1b0323ef6d8
sfi-move,0x38242ad0de0,0x1b0323ef7d8
sfi-move,0x38242ad0f40,0x1b0323ef938
sfi-move,0x38242ad1288,0x1b0323efb60
sfi-move,0x38242ad1610,0x1b0323efd40
sfi-move,0x38242ad1758,0x1b0323efe40
sfi-move,0x38242ad1978,0x1b0323effd0
sfi-move,0x38242ad1c18,0x1b0323f01c0
code-move,0x38242ad1ede,0x1b0323f03ae
code-move,0x38242ad22c6,0x1b0323f0796
code-move,0x38242ad2616,0x1b0323f0ae6
code-move,0x38242ad2ac6,0x1b0323f0d8e
code-move,0x38242ad2bee,0x1b0323f0eb6
code-move,0x38242ad2d96,0x1b0323f105e
code-move,0x38242ad3056,0x1b0323f131e
code-move,0x38242ad33de,0x1b0323f1576
code-move,0x38242ad353e,0x1b0323f16be
code-move,0x38242ad3686,0x1b0323f17ee
code-move,0x38242ad4356,0x1b0323f239e
code-move,0x38242ad4576,0x1b0323f25be
code-move,0x38242ad47e6,0x1b0323f27ee
code-move,0x38242ad4ad6,0x1b0323f2a9e
sfi-move,0xa2a2ac9138,0x164cc386048
sfi-move,0xa2a2ac9188,0x164cc386098
code-move,0x38242ad4cee,0x1b0323f2c66
sfi-move,0xa2a2ac91d8,0x164cc3860e8
sfi-move,0xa2a2ac92a0,0x164cc3861b0
sfi-move,0xa2a2ac9368,0x164cc386278
sfi-move,0xa2a2ac9430,0x164cc386308
sfi-move,0xa2a2ac94f8,0x164cc3863b8
sfi-move,0xa2a2ac95c0,0x164cc386480
sfi-move,0xa2a2ac9688,0x164cc386548
sfi-move,0xa2a2ac9750,0x164cc386610
sfi-move,0xa2a2ac9818,0x164cc3866d8
sfi-move,0xa2a2ac98e0,0x164cc3867a0
sfi-move,0x2173c765db0,0x2fad2a0d7a0
sfi-move,0x2173c765e00,0x2fad2a0d7f0
sfi-move,0x2173c765e50,0x2fad2a0d840
sfi-move,0x2173c765ea0,0x2fad2a0d890
sfi-move,0x2173c765ef0,0x2fad2a0d8e0
sfi-move,0x2173c765f40,0x2fad2a0d930
sfi-move,0xa2a2ac9930,0x164cc3867f0
sfi-move,0xa2a2ac9980,0x164cc386840
sfi-move,0xa2a2ac99d0,0x164cc386890
sfi-move,0xa2a2ac9a20,0x164cc3868e0
sfi-move,0xa2a2ac9ab0,0x164cc386970
sfi-move,0xa2a2ac9b30,0x164cc3869d8
sfi-move,0xa2a2ac9bc0,0x164cc386a68
sfi-move,0xa2a2ac9c50,0x164cc386af8
sfi-move,0xa2a2ac9ce0,0x164cc386b88
sfi-move,0xa2a2ac9d70,0x164cc386c18
sfi-move,0xa2a2ac9e00,0x164cc386ca8
sfi-move,0xa2a2ac9e90,0x164cc386d38
sfi-move,0xa2a2ac9f20,0x164cc386dc8
sfi-move,0xa2a2ac9fa8,0x164cc386e38
sfi-move,0xa2a2aca038,0x164cc386ec8
sfi-move,0xa2a2aca088,0x164cc386f18
sfi-move,0xa2a2aca118,0x164cc386fa8
sfi-move,0xa2a2aca1a8,0x164cc387038
sfi-move,0xa2a2aca238,0x164cc3870c8
sfi-move,0xa2a2aca2c8,0x164cc387158
sfi-move,0xa2a2aca358,0x164cc3871e8
sfi-move,0xa2a2aca3e0,0x164cc387258
sfi-move,0xa2a2aca470,0x164cc3872e8
sfi-move,0xa2a2aca500,0x164cc387378
sfi-move,0xa2a2aca590,0x164cc387408
sfi-move,0xa2a2aca620,0x164cc387498
sfi-move,0xa2a2aca6b0,0x164cc387528
sfi-move,0xa2a2aca740,0x164cc3875b8
sfi-move,0xa2a2aca7d0,0x164cc387648
sfi-move,0xa2a2aca860,0x164cc3876d8
sfi-move,0xa2a2aca8f0,0x164cc387768
sfi-move,0xa2a2aca980,0x164cc3877f8
sfi-move,0xa2a2acaa10,0x164cc387888
sfi-move,0xa2a2acaaa0,0x164cc387918
sfi-move,0xa2a2acab30,0x164cc3879a8
sfi-move,0xa2a2acabc0,0x164cc387a38
sfi-move,0xa2a2acac50,0x164cc387ac8
sfi-move,0xa2a2acace0,0x164cc387b58
sfi-move,0xa2a2acad70,0x164cc387be8
sfi-move,0xa2a2acae00,0x164cc387c78
sfi-move,0xa2a2acae90,0x164cc387d08
sfi-move,0xa2a2acaf20,0x164cc387d98
sfi-move,0xa2a2acafb0,0x164cc387e28
sfi-move,0xa2a2acb040,0x164cc387eb8
sfi-move,0xa2a2acb0d0,0x164cc387f48
sfi-move,0xa2a2acb160,0x164cc387fd8
sfi-move,0xa2a2acb1f0,0x164cc388068
sfi-move,0xa2a2acb280,0x164cc3880f8
sfi-move,0xa2a2acb310,0x164cc388188
sfi-move,0xa2a2acb3a0,0x164cc388218
sfi-move,0xa2a2acb430,0x164cc3882a8
sfi-move,0xa2a2acb4c0,0x164cc388338
sfi-move,0xa2a2acb550,0x164cc3883c8
sfi-move,0xa2a2acb5e0,0x164cc388458
sfi-move,0xa2a2acb670,0x164cc3884e8
sfi-move,0xa2a2acb700,0x164cc388578
sfi-move,0xa2a2acb790,0x164cc388608
sfi-move,0xa2a2acb820,0x164cc388698
sfi-move,0xa2a2acb8b0,0x164cc388728
sfi-move,0xa2a2acb940,0x164cc3887b8
sfi-move,0xa2a2acb9d0,0x164cc388848
sfi-move,0xa2a2acba60,0x164cc3888d8
sfi-move,0xa2a2acbaf0,0x164cc388968
sfi-move,0xa2a2acbb80,0x164cc3889f8
sfi-move,0xa2a2acbc10,0x164cc388a88
sfi-move,0xa2a2acbca0,0x164cc388b18
sfi-move,0xa2a2acbd30,0x164cc388ba8
sfi-move,0xa2a2acbdc0,0x164cc388c38
sfi-move,0xa2a2acbe50,0x164cc388cc8
sfi-move,0xa2a2acbee0,0x164cc388d58
sfi-move,0xa2a2acbf70,0x164cc388de8
sfi-move,0xa2a2acc000,0x164cc388e78
sfi-move,0xa2a2acc090,0x164cc388f08
sfi-move,0xa2a2acc120,0x164cc388f98
sfi-move,0xa2a2acc1b0,0x164cc389028
sfi-move,0xa2a2acc240,0x164cc3890b8
sfi-move,0xa2a2acc2d0,0x164cc389148
sfi-move,0xa2a2acc360,0x164cc3891d8
sfi-move,0xa2a2acc3f0,0x164cc389268
sfi-move,0xa2a2acc480,0x164cc3892f8
sfi-move,0xa2a2acc4d0,0x164cc389330
sfi-move,0xa2a2acc558,0x164cc3893a0
sfi-move,0xa2a2acc5e8,0x164cc389430
sfi-move,0xa2a2acc678,0x164cc3894c0
sfi-move,0xa2a2acc708,0x164cc389550
sfi-move,0xa2a2acc798,0x164cc3895e0
sfi-move,0xa2a2acc828,0x164cc389670
sfi-move,0xa2a2acc8b8,0x164cc389700
sfi-move,0xa2a2acca48,0x164cc389890
sfi-move,0xa2a2accb18,0x164cc389960
sfi-move,0xa2a2accbe8,0x164cc389a30
sfi-move,0xa2a2acccb8,0x164cc389b00
sfi-move,0xa2a2accd88,0x164cc389bd0
sfi-move,0xa2a2accf18,0x164cc389d60
sfi-move,0xa2a2accfe8,0x164cc389e30
sfi-move,0xa2a2acd0b8,0x164cc389f00
sfi-move,0xa2a2acd188,0x164cc389fd0
sfi-move,0xa2a2acd218,0x164cc38a060
sfi-move,0xa2a2acd2a8,0x164cc38a0f0
sfi-move,0xa2a2acd338,0x164cc38a180
sfi-move,0xa2a2acd3c8,0x164cc38a210
sfi-move,0xa2a2acd458,0x164cc38a2a0
sfi-move,0xa2a2acd4e8,0x164cc38a330
sfi-move,0xa2a2acd578,0x164cc38a3c0
sfi-move,0xa2a2acd608,0x164cc38a450
sfi-move,0xa2a2acd698,0x164cc38a4e0
sfi-move,0xa2a2acd728,0x164cc38a570
sfi-move,0xa2a2acd7b8,0x164cc38a600
sfi-move,0xa2a2acd848,0x164cc38a690
sfi-move,0xa2a2acd8d8,0x164cc38a720
sfi-move,0xa2a2acd968,0x164cc38a7b0
sfi-move,0xa2a2acd9f8,0x164cc38a840
sfi-move,0xa2a2acda88,0x164cc38a8d0
sfi-move,0xa2a2acdb18,0x164cc38a960
sfi-move,0xa2a2acdba8,0x164cc38a9f0
sfi-move,0xa2a2acdc38,0x164cc38aa80
sfi-move,0xa2a2acdcc8,0x164cc38ab10
sfi-move,0xa2a2acdd58,0x164cc38aba0
sfi-move,0xa2a2acdde8,0x164cc38ac30
sfi-move,0xa2a2acde78,0x164cc38acc0
sfi-move,0xa2a2acdf08,0x164cc38ad50
sfi-move,0xa2a2acdf98,0x164cc38ade0
sfi-move,0xa2a2ace028,0x164cc38ae70
sfi-move,0xa2a2ace0b8,0x164cc38af00
sfi-move,0xa2a2ace148,0x164cc38af90
sfi-move,0xa2a2ace1d8,0x164cc38b020
sfi-move,0xa2a2ace268,0x164cc38b0b0
sfi-move,0xa2a2ace2f8,0x164cc38b140
sfi-move,0xa2a2ace388,0x164cc38b1d0
sfi-move,0xa2a2ace418,0x164cc38b260
sfi-move,0xa2a2ace4a8,0x164cc38b2f0
sfi-move,0xa2a2ace538,0x164cc38b380
sfi-move,0xa2a2ace5c8,0x164cc38b410
sfi-move,0xa2a2ace658,0x164cc38b4a0
sfi-move,0xa2a2ace6e8,0x164cc38b530
sfi-move,0xa2a2ace778,0x164cc38b5c0
sfi-move,0xa2a2ace808,0x164cc38b650
sfi-move,0xa2a2ace890,0x164cc38b6c0
sfi-move,0xa2a2ace920,0x164cc38b750
sfi-move,0xa2a2ace970,0x164cc38b7a0
sfi-move,0xa2a2acea00,0x164cc38b830
sfi-move,0xa2a2acea90,0x164cc38b8c0
sfi-move,0xa2a2aceb20,0x164cc38b950
sfi-move,0xa2a2acebb0,0x164cc38b9e0
sfi-move,0xa2a2acec40,0x164cc38ba70
sfi-move,0xa2a2acecd0,0x164cc38bb00
sfi-move,0xa2a2aced60,0x164cc38bb90
sfi-move,0xa2a2acedf0,0x164cc38bc20
sfi-move,0xa2a2acee40,0x164cc38bc70
sfi-move,0xa2a2aceed0,0x164cc38bd00
sfi-move,0xa2a2acef60,0x164cc38bd90
sfi-move,0xa2a2aceff0,0x164cc38be20
sfi-move,0xa2a2acf080,0x164cc38beb0
sfi-move,0xa2a2acf110,0x164cc38bf40
sfi-move,0xa2a2acf160,0x164cc38bf90
sfi-move,0xa2a2acf1b0,0x164cc38bfe0
sfi-move,0xa2a2acf200,0x164cc38c030
sfi-move,0xa2a2acf250,0x164cc38c080
sfi-move,0xa2a2acf2a0,0x164cc38c0d0
sfi-move,0xa2a2acf2f0,0x164cc38c120
sfi-move,0xa2a2acf340,0x164cc38c170
sfi-move,0xa2a2acf390,0x164cc38c1c0
sfi-move,0xa2a2acf3e0,0x164cc38c210
sfi-move,0xa2a2acf470,0x164cc38c2a0
sfi-move,0xa2a2acf500,0x164cc38c330
sfi-move,0xa2a2acf590,0x164cc38c3c0
sfi-move,0xa2a2acf620,0x164cc38c450
sfi-move,0xa2a2acf6b0,0x164cc38c4e0
sfi-move,0xa2a2acf740,0x164cc38c570
sfi-move,0xa2a2acf7d0,0x164cc38c600
sfi-move,0xa2a2acf860,0x164cc38c690
sfi-move,0xa2a2acf8f0,0x164cc38c720
sfi-move,0xa2a2acf980,0x164cc38c7b0
sfi-move,0xa2a2acfa10,0x164cc38c840
sfi-move,0xa2a2acfaa0,0x164cc38c8d0
sfi-move,0xa2a2acfb30,0x164cc38c960
sfi-move,0xa2a2acfbc0,0x164cc38c9f0
sfi-move,0xa2a2acfc50,0x164cc38ca80
sfi-move,0xa2a2acfce0,0x164cc38cb10
sfi-move,0xa2a2acfd70,0x164cc38cba0
sfi-move,0xa2a2acfe00,0x164cc38cc30
sfi-move,0xa2a2acfe90,0x164cc38ccc0
sfi-move,0xa2a2acff20,0x164cc38cd50
sfi-move,0xa2a2acffb0,0x164cc38cde0
sfi-move,0xa2a2ad0040,0x164cc38ce70
sfi-move,0xa2a2ad00d0,0x164cc38cf00
sfi-move,0xa2a2ad0160,0x164cc38cf90
sfi-move,0xa2a2ad01f0,0x164cc38d020
sfi-move,0xa2a2ad0280,0x164cc38d0b0
sfi-move,0xa2a2ad0310,0x164cc38d140
sfi-move,0xa2a2ad03a0,0x164cc38d1d0
sfi-move,0xa2a2ad0430,0x164cc38d260
sfi-move,0xa2a2ad04c0,0x164cc38d2f0
sfi-move,0xa2a2ad0550,0x164cc38d380
sfi-move,0xa2a2ad05e0,0x164cc38d410
sfi-move,0xa2a2ad0670,0x164cc38d4a0
sfi-move,0xa2a2ad0700,0x164cc38d530
sfi-move,0xa2a2ad0790,0x164cc38d5c0
sfi-move,0xa2a2ad0820,0x164cc38d650
sfi-move,0xa2a2ad08b0,0x164cc38d6e0
sfi-move,0xa2a2ad0940,0x164cc38d770
sfi-move,0xa2a2ad09d0,0x164cc38d800
sfi-move,0xa2a2ad0a60,0x164cc38d890
sfi-move,0xa2a2ad0af0,0x164cc38d920
sfi-move,0xa2a2ad0b80,0x164cc38d9b0
sfi-move,0xa2a2ad0c10,0x164cc38da40
sfi-move,0xa2a2ad0ca0,0x164cc38dad0
sfi-move,0xa2a2ad0d30,0x164cc38db60
sfi-move,0xa2a2ad0dc0,0x164cc38dbf0
sfi-move,0xa2a2ad0e50,0x164cc38dc80
sfi-move,0xa2a2ad0ee0,0x164cc38dd10
sfi-move,0xa2a2ad0f70,0x164cc38dda0
sfi-move,0xa2a2ad1000,0x164cc38de30
sfi-move,0xa2a2ad1090,0x164cc38dec0
sfi-move,0xa2a2ad1120,0x164cc38df50
sfi-move,0xa2a2ad11b0,0x164cc38dfe0
sfi-move,0xa2a2ad1200,0x164cc38e030
sfi-move,0xa2a2ad1280,0x164cc38e098
sfi-move,0xa2a2ad1310,0x164cc38e108
sfi-move,0xa2a2ad13c8,0x164cc38e1c0
sfi-move,0xa2a2ad1458,0x164cc38e230
sfi-move,0xa2a2ad14e8,0x164cc38e2a0
sfi-move,0xa2a2ad1578,0x164cc38e330
sfi-move,0xa2a2ad1608,0x164cc38e3c0
sfi-move,0xa2a2ad1698,0x164cc38e450
sfi-move,0xa2a2ad1728,0x164cc38e4c0
sfi-move,0xa2a2ad17b8,0x164cc38e550
sfi-move,0xa2a2ad1848,0x164cc38e5e0
sfi-move,0xa2a2ad18d8,0x164cc38e670
sfi-move,0xa2a2ad1968,0x164cc38e700
sfi-move,0xa2a2ad19f8,0x164cc38e790
sfi-move,0xa2a2ad1a88,0x164cc38e820
sfi-move,0xa2a2ad1b18,0x164cc38e8b0
sfi-move,0xa2a2ad1ba8,0x164cc38e940
sfi-move,0xa2a2ad1c38,0x164cc38e9d0
sfi-move,0xa2a2ad1cc8,0x164cc38ea60
sfi-move,0xa2a2ad1d58,0x164cc38eaf0
sfi-move,0xa2a2ad1de8,0x164cc38eb80
sfi-move,0xa2a2ad1e78,0x164cc38ebf0
sfi-move,0xa2a2ad1f08,0x164cc38ec80
sfi-move,0xa2a2ad1f90,0x164cc38ecf0
sfi-move,0xa2a2ad2020,0x164cc38ed80
sfi-move,0xa2a2ad20b0,0x164cc38ee10
sfi-move,0xa2a2ad2140,0x164cc38eea0
sfi-move,0xa2a2ad21d0,0x164cc38ef30
sfi-move,0xa2a2ad2260,0x164cc38efc0
sfi-move,0xa2a2ad22f0,0x164cc38f050
sfi-move,0xa2a2ad2380,0x164cc38f0e0
sfi-move,0xa2a2ad2410,0x164cc38f170
code-move,0x38242ad52de,0x1b0323f3156
sfi-move,0xa2a2ad24a0,0x164cc38f200
sfi-move,0xa2a2ad2530,0x164cc38f290
sfi-move,0xa2a2ad25c0,0x164cc38f300
code-move,0x38242ad5736,0x1b0323f35ae
code-move,0x38242ad5bde,0x1b0323f38ce
code-move,0x2173c766586,0x2fad2a0d9f6
code-move,0x38242ad895e,0x1b0323f664e
code-move,0x2173c767756,0x2fad2a0de86
code-move,0x38242ad8a46,0x1b0323f6736
code-move,0x2173c768636,0x2fad2a0ed1e
code-move,0x38242ad8bbe,0x1b0323f688e
code-move,0x38242ad8d3e,0x1b0323f6a0e
code-move,0x2173c7688ee,0x2fad2a0efd6
code-move,0x38242ad9116,0x1b0323f6de6
code-move,0x38242ad94ee,0x1b0323f71be
sfi-move,0x2173c768ce0,0x2fad2a0f248
sfi-move,0x2173c768d30,0x2fad2a0f298
sfi-move,0x2173c768d80,0x2fad2a0f2d0
code-move,0x38242ad9696,0x1b0323f734e
sfi-move,0x2173c768dd0,0x2fad2a0f320
sfi-move,0x2173c768e20,0x2fad2a0f370
sfi-move,0x2173c769828,0x2fad2a0f708
sfi-move,0x2173c769878,0x2fad2a0f758
code-move,0x38242ad9856,0x1b0323f750e
code-move,0xa2a2ae88d6,0x164cc3941de
code-move,0x2173c76af86,0x2fad2a102fe
code-move,0x38242ad99ce,0x1b0323f7686
code-move,0x38242ad9b26,0x1b0323f77de
code-move,0x38242ad9c2e,0x1b0323f78e6
code-move,0x2173c76b2ce,0x2fad2a10646
sfi-move,0x2173c76bca8,0x2fad2a10d10
sfi-move,0x2173c76bcf8,0x2fad2a10d60
sfi-move,0x2173c76bd48,0x2fad2a10db0
sfi-move,0x2173c76bd98,0x2fad2a10e00
sfi-move,0x2173c76bde8,0x2fad2a10e50
sfi-move,0x2173c76be38,0x2fad2a10ea0
sfi-move,0x2173c76be88,0x2fad2a10ef0
sfi-move,0x2173c76bed8,0x2fad2a10f40
sfi-move,0x2173c76bf28,0x2fad2a10f90
sfi-move,0x2173c76bf78,0x2fad2a10fe0
sfi-move,0x2173c76bfc8,0x2fad2a11030
sfi-move,0x2173c76c040,0x2fad2a110a8
sfi-move,0x2173c76c090,0x2fad2a110f8
sfi-move,0x2173c76c120,0x2fad2a11188
sfi-move,0x2173c76e518,0x2fad2a11f08
sfi-move,0x2173c76e568,0x2fad2a11f58
sfi-move,0x2173c76e5e8,0x2fad2a11fd8
sfi-move,0x2173c76e638,0x2fad2a12028
sfi-move,0x2173c76e688,0x2fad2a12078
sfi-move,0x2173c76e6d8,0x2fad2a120b0
sfi-move,0x2173c76e778,0x2fad2a12150
sfi-move,0x2173c76e7c8,0x2fad2a12188
sfi-move,0x2173c76e818,0x2fad2a121c0
sfi-move,0x2173c76e868,0x2fad2a12210
sfi-move,0x2173c76e8e8,0x2fad2a12290
sfi-move,0x2173c76e938,0x2fad2a122c8
sfi-move,0x2173c76e988,0x2fad2a12300
sfi-move,0x2173c76e9d8,0x2fad2a12338
sfi-move,0x2173c76ea28,0x2fad2a12388
sfi-move,0x2173c76ea78,0x2fad2a123c0
sfi-move,0x2173c76eac8,0x2fad2a123f8
sfi-move,0x2173c76eb18,0x2fad2a12430
sfi-move,0x2173c76eb68,0x2fad2a12468
code-move,0x38242ad9db6,0x1b0323f7a6e
sfi-move,0x2173c7728b8,0x2fad2a13600
code-move,0x38242ad9f7e,0x1b0323f7c36
sfi-move,0x2173c772928,0x2fad2a13670
sfi-move,0x2173c772998,0x2fad2a136e0
code-move,0x38242ada13e,0x1b0323f7df6
sfi-move,0x2173c772a08,0x2fad2a13750
sfi-move,0x2173c772a78,0x2fad2a137c0
sfi-move,0x2173c772ae8,0x2fad2a13830
code-move,0x38242ada38e,0x1b0323f8026
sfi-move,0x2173c772bb8,0x2fad2a138b8
code-move,0x38242ada61e,0x1b0323f82b6
code-move,0x38242ada78e,0x1b0323f8426
code-move,0x38242ada8e6,0x1b0323f857e
code-move,0x38242adaad6,0x1b0323f874e
code-move,0x38242adadd6,0x1b0323f8a4e
sfi-move,0x2173c772c88,0x2fad2a13988
sfi-move,0x2173c772cf8,0x2fad2a139f8
sfi-move,0x2173c772d68,0x2fad2a13a68
sfi-move,0x2173c772dd8,0x2fad2a13ad8
sfi-move,0x2173c772e48,0x2fad2a13b48
sfi-move,0x2173c772eb8,0x2fad2a13bb8
sfi-move,0x2173c772f28,0x2fad2a13c28
sfi-move,0x2173c772f98,0x2fad2a13c98
sfi-move,0x2173c773008,0x2fad2a13d08
sfi-move,0x2173c773078,0x2fad2a13d78
sfi-move,0x2173c773130,0x2fad2a13de8
sfi-move,0x2173c773238,0x2fad2a13ef0
code-move,0x38242adaf96,0x1b0323f8c0e
code-move,0x38242adb0de,0x1b0323f8d3e
sfi-move,0x2173c773688,0x2fad2a14118
code-move,0x38242adb39e,0x1b0323f8ffe
sfi-move,0x2173c775460,0x2fad2a15b00
code-move,0x38242adb79e,0x1b0323f93e6
sfi-move,0x2173c7754b0,0x2fad2a15b38
sfi-move,0x2173c775500,0x2fad2a15b88
code-move,0x38242adc436,0x1b0323f9e0e
sfi-move,0x2173c775550,0x2fad2a15bd8
sfi-move,0x2173c7755a0,0x2fad2a15c28
sfi-move,0x2173c7755f0,0x2fad2a15c78
sfi-move,0x2173c775640,0x2fad2a15cc8
sfi-move,0x2173c775690,0x2fad2a15d18
sfi-move,0x2173c7756e0,0x2fad2a15d68
sfi-move,0x2173c7757d0,0x2fad2a15e58
sfi-move,0x2173c775820,0x2fad2a15ea8
sfi-move,0x2173c7758a0,0x2fad2a15ee0
sfi-move,0x2173c7758f0,0x2fad2a15f30
sfi-move,0x2173c775940,0x2fad2a15f80
sfi-move,0x38242adc898,0x1b0323fa208
sfi-move,0x38242adc928,0x1b0323fa298
code-move,0xa2a2af858e,0x164cc3a1d3e
sfi-move,0x2173c775990,0x2fad2a15fb8
sfi-move,0x2173c7759e0,0x2fad2a16008
sfi-move,0x2173c775a30,0x2fad2a16058
sfi-move,0x2173c775a80,0x2fad2a160a8
sfi-move,0x2173c775ad0,0x2fad2a160f8
sfi-move,0x2173c775b20,0x2fad2a16148
code-move,0x38242adcb86,0x1b0323fa4f6
sfi-move,0x2173c775b70,0x2fad2a16198
sfi-move,0x2173c775bc0,0x2fad2a161e8
sfi-move,0x38242adcff0,0x1b0323fa888
sfi-move,0x38242add040,0x1b0323fa8d8
sfi-move,0x2173c775c10,0x2fad2a16238
sfi-move,0x2173c775c60,0x2fad2a16288
sfi-move,0x2173c775cb0,0x2fad2a162d8
sfi-move,0x2173c775d00,0x2fad2a16328
sfi-move,0x2173c775d88,0x2fad2a163b0
sfi-move,0x2173c775e10,0x2fad2a16438
sfi-move,0x2173c775e98,0x2fad2a164c0
sfi-move,0x2173c775f20,0x2fad2a16548
sfi-move,0x2173c775f70,0x2fad2a16598
sfi-move,0x2173c775fc0,0x2fad2a165e8
sfi-move,0x2173c776010,0x2fad2a16638
sfi-move,0x2173c776060,0x2fad2a16688
sfi-move,0x2173c7760c8,0x2fad2a166f0
sfi-move,0x2173c776118,0x2fad2a16740
code-move,0xa2a2af9f3e,0x164cc3a3416
code-move,0x38242add28e,0x1b0323fab26
code-move,0x38242add656,0x1b0323faeee
code-move,0x2173c77721e,0x2fad2a167c6
sfi-move,0xa2a2afd658,0x164cc3a68f8
sfi-move,0xa2a2afd6a8,0x164cc3a6930
code-move,0x38242add7fe,0x1b0323fb076
sfi-move,0x38242ade2f0,0x1b0323fb860
sfi-move,0x38242ade3a8,0x1b0323fb898
sfi-move,0xa2a2afd6f8,0x164cc3a6980
sfi-move,0xa2a2afd748,0x164cc3a69d0
sfi-move,0x38242ade3f8,0x1b0323fb8e8
sfi-move,0x38242ade448,0x1b0323fb920
sfi-move,0x38242ade498,0x1b0323fb958
sfi-move,0x38242ade4e8,0x1b0323fb990
sfi-move,0x38242ade538,0x1b0323fb9c8
sfi-move,0x38242ade588,0x1b0323fba18
sfi-move,0x38242ade5d8,0x1b0323fba68
sfi-move,0x38242ade628,0x1b0323fbaa0
sfi-move,0x38242ade678,0x1b0323fbad8
sfi-move,0x38242ade6c8,0x1b0323fbb10
sfi-move,0x38242ade718,0x1b0323fbb48
sfi-move,0xa2a2afd798,0x164cc3a6a20
sfi-move,0xa2a2afd7e8,0x164cc3a6a70
sfi-move,0xa2a2afd838,0x164cc3a6aa8
sfi-move,0xa2a2afd888,0x164cc3a6af8
sfi-move,0xa2a2afd8d8,0x164cc3a6b30
sfi-move,0xa2a2afd928,0x164cc3a6b80
sfi-move,0xa2a2afd978,0x164cc3a6bb8
sfi-move,0xa2a2afd9c8,0x164cc3a6c08
sfi-move,0xa2a2afda18,0x164cc3a6c58
sfi-move,0xa2a2afda68,0x164cc3a6ca8
sfi-move,0xa2a2afdab8,0x164cc3a6cf8
sfi-move,0xa2a2afdb08,0x164cc3a6d48
sfi-move,0xa2a2afdb58,0x164cc3a6d98
sfi-move,0xa2a2afdba8,0x164cc3a6de8
sfi-move,0xa2a2afdbf8,0x164cc3a6e38
sfi-move,0xa2a2afdc48,0x164cc3a6e88
sfi-move,0xa2a2afdc98,0x164cc3a6ed8
sfi-move,0xa2a2afdce8,0x164cc3a6f28
sfi-move,0xa2a2afdd38,0x164cc3a6f78
sfi-move,0xa2a2afdd88,0x164cc3a6fc8
sfi-move,0xa2a2afddd8,0x164cc3a7018
sfi-move,0xa2a2afde28,0x164cc3a7050
sfi-move,0xa2a2afde78,0x164cc3a70a0
sfi-move,0xa2a2afdec8,0x164cc3a70f0
sfi-move,0xa2a2afdf18,0x164cc3a7140
sfi-move,0xa2a2afdf68,0x164cc3a7190
sfi-move,0xa2a2afdfb8,0x164cc3a71e0
sfi-move,0xa2a2afe008,0x164cc3a7230
sfi-move,0xa2a2afe058,0x164cc3a7280
sfi-move,0xa2a2afe0a8,0x164cc3a72d0
sfi-move,0xa2a2afe0f8,0x164cc3a7320
sfi-move,0xa2a2afe148,0x164cc3a7370
sfi-move,0xa2a2afe198,0x164cc3a73c0
sfi-move,0xa2a2afe1e8,0x164cc3a7410
sfi-move,0xa2a2afe238,0x164cc3a7460
sfi-move,0xa2a2afe288,0x164cc3a74b0
sfi-move,0xa2a2afe2d8,0x164cc3a7500
sfi-move,0xa2a2afe328,0x164cc3a7550
sfi-move,0xa2a2afe378,0x164cc3a75a0
sfi-move,0xa2a2afe3c8,0x164cc3a75f0
code-move,0x38242adea06,0x1b0323fbe36
sfi-move,0x2ff70782ae8,0x164cc3a8e58
sfi-move,0x38242adf5e8,0x1b0323fca18
sfi-move,0x38242adf8b0,0x1b0323fcbc0
code-move,0x38242adf956,0x1b0323fcc66
sfi-move,0x2ff70782b38,0x164cc3a8e90
sfi-move,0x2ff70782b88,0x164cc3a8ee0
sfi-move,0x2ff70782bd8,0x164cc3a8f30
code-move,0x38242ae08de,0x1b0323fdbee
sfi-move,0x38242ae0a38,0x1b0323fdd48
sfi-move,0x2ff70783898,0x164cc3a9b48
sfi-move,0x2ff707838e8,0x164cc3a9b80
sfi-move,0x2ff70783938,0x164cc3a9bd0
sfi-move,0x2ff70783988,0x164cc3a9c20
sfi-move,0x2ff707839d8,0x164cc3a9c58
code-move,0x2ff70784cde,0x164cc3aaec6
sfi-move,0x38242ae0a88,0x1b0323fdd98
sfi-move,0x38242ae0ad8,0x1b0323fdde8
sfi-move,0x38242ae0b28,0x1b0323fde38
code-move,0x38242ae0c56,0x1b0323fdf4e
sfi-move,0x2ff70786340,0x164cc3ac4d8
code-move,0x38242ae1156,0x1b0323fe31e
sfi-move,0x38242ae1228,0x1b0323fe3f0
code-move,0x38242ae12de,0x1b0323fe48e
code-move,0x38242ae141e,0x1b0323fe5ce
sfi-move,0x2ff70788a68,0x164cc3aeb60
sfi-move,0x2ff70788b18,0x164cc3aec10
sfi-move,0x2ff70788b88,0x164cc3aec68
sfi-move,0x2ff70788bd8,0x164cc3aeca0
sfi-move,0x2ff70788c28,0x164cc3aecd8
sfi-move,0x2ff70788c78,0x164cc3aed28
sfi-move,0x2ff70788cc8,0x164cc3aed60
sfi-move,0x2ff70788d18,0x164cc3aed98
sfi-move,0x2ff70788d68,0x164cc3aede8
sfi-move,0x2ff70788db8,0x164cc3aee38
sfi-move,0x2ff70788e08,0x164cc3aee88
sfi-move,0x2ff70788e58,0x164cc3aeed8
sfi-move,0x2ff70788ea8,0x164cc3aef10
sfi-move,0x2ff70788ef8,0x164cc3aef60
sfi-move,0x2ff70788f48,0x164cc3aef98
sfi-move,0x2ff70788f98,0x164cc3aefe8
sfi-move,0x2ff70788fe8,0x164cc3af020
sfi-move,0x2ff70789038,0x164cc3af058
sfi-move,0x2ff70789088,0x164cc3af0a8
sfi-move,0x2ff707890d8,0x164cc3af0f8
sfi-move,0x2ff70789128,0x164cc3af148
sfi-move,0x2ff70789178,0x164cc3af198
sfi-move,0x2ff707891c8,0x164cc3af1e8
sfi-move,0x2ff70789218,0x164cc3af238
sfi-move,0x2ff70789268,0x164cc3af288
sfi-move,0x2ff707892b8,0x164cc3af2d8
sfi-move,0x2ff70789308,0x164cc3af328
sfi-move,0x2ff70789358,0x164cc3af378
sfi-move,0x2ff707893a8,0x164cc3af3c8
sfi-move,0x2ff707893f8,0x164cc3af418
sfi-move,0x2ff70789448,0x164cc3af468
sfi-move,0x2ff70789498,0x164cc3af4b8
sfi-move,0x2ff707894e8,0x164cc3af508
sfi-move,0x2ff70789538,0x164cc3af558
sfi-move,0x2ff70789588,0x164cc3af5a8
sfi-move,0x2ff707895d8,0x164cc3af5f8
sfi-move,0x2ff70789628,0x164cc3af648
sfi-move,0x2ff70789678,0x164cc3af698
sfi-move,0x2ff707896c8,0x164cc3af6e8
sfi-move,0x2ff70789718,0x164cc3af738
sfi-move,0x2ff70789768,0x164cc3af788
sfi-move,0x2ff707897b8,0x164cc3af7c0
sfi-move,0x2ff70789808,0x164cc3af7f8
sfi-move,0x2ff70789858,0x164cc3af848
sfi-move,0x2ff707898a8,0x164cc3af898
code-move,0x38242ae158e,0x1b0323fe73e
sfi-move,0x38242ae1868,0x1b0323fea18
code-move,0x38242ae1aee,0x1b0323fec86
code-move,0x38242ae1c8e,0x1b0323fee26
code-move,0x38242ae1e1e,0x1b0323fefb6
code-move,0x38242ae1fe6,0x1b0323ff17e
sfi-move,0x2ff70790790,0x164cc3b5eb8
sfi-move,0x2ff707907e0,0x164cc3b5f08
code-move,0x38242ae20fe,0x1b0323ff296
code-move,0x38242ae2246,0x1b0323ff3de
code-move,0x38242ae2446,0x1b0323ff54e
code-move,0x38242ae25b6,0x1b0323ff6be
sfi-move,0x2ff70790830,0x164cc3b5f58
sfi-move,0x2ff707913a0,0x164cc3b6ab0
sfi-move,0x2ff707913f0,0x164cc3b6b00
sfi-move,0x2ff70791440,0x164cc3b6b50
sfi-move,0x2ff70791490,0x164cc3b6ba0
sfi-move,0x2ff707914e0,0x164cc3b6bf0
new,MemoryChunk,0x31468840000,262144
sfi-move,0x38242ae3eb8,0x31468841638
sfi-move,0x38242ae3f08,0x31468841688
sfi-move,0x38242ae3f58,0x314688416d8
sfi-move,0x38242ae3fa8,0x31468841728
sfi-move,0x38242ae3ff8,0x31468841778
sfi-move,0x38242ae4048,0x314688417c8
sfi-move,0x38242ae4098,0x31468841818
sfi-move,0x38242ae40e8,0x31468841868
sfi-move,0x38242ae4138,0x314688418b8
sfi-move,0x38242ae41c0,0x31468841940
sfi-move,0x38242ae4210,0x31468841990
sfi-move,0x38242ae4260,0x314688419e0
sfi-move,0x38242ae42b0,0x31468841a30
sfi-move,0x38242ae4300,0x31468841a80
sfi-move,0x38242ae4350,0x31468841ad0
sfi-move,0x38242ae43a0,0x31468841b20
sfi-move,0x38242ae43f0,0x31468841b70
sfi-move,0x38242ae4440,0x31468841bc0
sfi-move,0x38242ae4490,0x31468841c10
sfi-move,0x38242ae4500,0x31468841c80
sfi-move,0x38242ae4570,0x31468841cf0
sfi-move,0x38242ae45e0,0x31468841d60
sfi-move,0x38242ae4650,0x31468841dd0
sfi-move,0x38242ae46c8,0x31468841e48
sfi-move,0x38242ae4718,0x31468841e98
sfi-move,0x2173c77ca08,0x2fad2a19378
sfi-move,0x2173c77ca58,0x2fad2a193c8
sfi-move,0x2173c77caa8,0x2fad2a19418
sfi-move,0x2173c77caf8,0x2fad2a19450
sfi-move,0x2173c77cb48,0x2fad2a194a0
sfi-move,0x2173c77cb98,0x2fad2a194f0
sfi-move,0x2173c77cbe8,0x2fad2a19540
sfi-move,0x2173c77cc38,0x2fad2a19590
sfi-move,0x2173c77cc88,0x2fad2a195e0
sfi-move,0x2173c77ccd8,0x2fad2a19630
sfi-move,0x2173c77cd28,0x2fad2a19680
sfi-move,0x2173c77cd78,0x2fad2a196d0
sfi-move,0x2173c77cdc8,0x2fad2a19708
sfi-move,0x2173c77ce18,0x2fad2a19758
sfi-move,0x2173c77ce68,0x2fad2a19790
sfi-move,0x2173c77ceb8,0x2fad2a197e0
sfi-move,0x2173c77cf08,0x2fad2a19830
sfi-move,0x2173c77cf58,0x2fad2a19868
sfi-move,0x2173c77cff8,0x2fad2a198b8
sfi-move,0x2173c77d048,0x2fad2a19908
sfi-move,0x2173c77d098,0x2fad2a19958
sfi-move,0x2173c77d0e8,0x2fad2a199a8
sfi-move,0x2173c77d138,0x2fad2a199f8
sfi-move,0x2173c77d1e0,0x2fad2a19aa0
sfi-move,0x2173c77d280,0x2fad2a19b40
sfi-move,0x2173c77d2d0,0x2fad2a19b90
sfi-move,0x2173c77d320,0x2fad2a19be0
sfi-move,0x2173c77d370,0x2fad2a19c30
sfi-move,0x2173c77d3c0,0x2fad2a19c80
sfi-move,0x2173c77d410,0x2fad2a19cd0
sfi-move,0x2ff70791530,0x164cc3b6c40
sfi-move,0x2ff70791580,0x164cc3b6c90
sfi-move,0x2ff707915d0,0x164cc3b6ce0
sfi-move,0x2173c77d460,0x2fad2a19d20
code-move,0x2ff70791b2e,0x164cc3b723e
sfi-move,0x2173c77d4b0,0x2fad2a19d70
sfi-move,0x2173c77d500,0x2fad2a19dc0
sfi-move,0x2173c77d550,0x2fad2a19e10
sfi-move,0x2ff707985b8,0x164cc3bdbc8
sfi-move,0x2ff70798608,0x164cc3bdc18
sfi-move,0x2ff70798658,0x164cc3bdc68
sfi-move,0x2ff707986a8,0x164cc3bdca0
sfi-move,0x2ff707986f8,0x164cc3bdcf0
sfi-move,0x2ff70798748,0x164cc3bdd40
sfi-move,0x2ff70798798,0x164cc3bdd90
sfi-move,0x2ff70798820,0x164cc3bde00
sfi-move,0x2ff707988a8,0x164cc3bde88
sfi-move,0x2ff707988f8,0x164cc3bdec0
sfi-move,0x2ff70798948,0x164cc3bdef8
sfi-move,0x2ff70798998,0x164cc3bdf30
sfi-move,0x2ff707989e8,0x164cc3bdf68
sfi-move,0x2ff70798a78,0x164cc3bdff8
sfi-move,0x2ff70798ac8,0x164cc3be030
sfi-move,0x2ff70798b18,0x164cc3be080
sfi-move,0x2ff70798b68,0x164cc3be0b8
sfi-move,0x2ff70798bb8,0x164cc3be0f0
sfi-move,0x2ff70798c48,0x164cc3be180
sfi-move,0x2ff70798cd0,0x164cc3be1f0
sfi-move,0x2ff70798d58,0x164cc3be260
sfi-move,0x2173c77d5a0,0x2fad2a19e60
sfi-move,0x2173c77d5f0,0x2fad2a19eb0
sfi-move,0x2ff70798de0,0x164cc3be2d0
sfi-move,0x2ff70798e68,0x164cc3be358
sfi-move,0x2173c77d668,0x2fad2a19f28
sfi-move,0x2173c77d6e0,0x2fad2a19fa0
sfi-move,0x2ff70798ef0,0x164cc3be3c8
sfi-move,0x2ff70798fa8,0x164cc3be480
sfi-move,0x2173c77d730,0x2fad2a19ff0
sfi-move,0x2173c77d7d0,0x2fad2a1a040
sfi-move,0x2173c77d820,0x2fad2a1a090
sfi-move,0x2173c77d870,0x2fad2a1a0c8
sfi-move,0x2173c77d8f8,0x2fad2a1a150
sfi-move,0x2173c77d988,0x2fad2a1a1e0
sfi-move,0x2173c77da18,0x2fad2a1a270
sfi-move,0x2173c77daa8,0x2fad2a1a300
sfi-move,0x2173c77db30,0x2fad2a1a388
sfi-move,0x2173c77dbb8,0x2fad2a1a410
sfi-move,0x2173c77dc08,0x2fad2a1a460
sfi-move,0x2173c77dc90,0x2fad2a1a4e8
sfi-move,0x2173c77dd18,0x2fad2a1a570
sfi-move,0x2173c77dda0,0x2fad2a1a5f8
sfi-move,0x2173c77de28,0x2fad2a1a650
sfi-move,0x2173c77deb0,0x2fad2a1a6c0
sfi-move,0x2173c77df40,0x2fad2a1a750
sfi-move,0x2173c77dfc8,0x2fad2a1a7a8
sfi-move,0x2173c77e050,0x2fad2a1a800
sfi-move,0x2173c77e0d8,0x2fad2a1a858
sfi-move,0x2173c77e168,0x2fad2a1a8e8
sfi-move,0x2173c77e1f8,0x2fad2a1a978
sfi-move,0x2173c77e280,0x2fad2a1aa00
sfi-move,0x2173c77e310,0x2fad2a1aa90
sfi-move,0x2173c77e360,0x2fad2a1aae0
sfi-move,0x2173c77e3b0,0x2fad2a1ab30
sfi-move,0x2173c77e400,0x2fad2a1ab80
sfi-move,0x2173c77e450,0x2fad2a1abd0
sfi-move,0x2173c77e4e0,0x2fad2a1ac60
sfi-move,0x2173c77e530,0x2fad2a1acb0
sfi-move,0x2173c77e580,0x2fad2a1ad00
sfi-move,0x2173c77e5d0,0x2fad2a1ad50
sfi-move,0x2173c77e660,0x2fad2a1ade0
sfi-move,0x2173c77e720,0x2fad2a1ae38
sfi-move,0x2173c77e7a8,0x2fad2a1aec0
sfi-move,0x2173c77e830,0x2fad2a1af18
sfi-move,0x2173c77e880,0x2fad2a1af68
sfi-move,0x2173c77e8d0,0x2fad2a1afb8
sfi-move,0x2173c77e958,0x2fad2a1b040
sfi-move,0x2173c77e9a8,0x2fad2a1b090
sfi-move,0x2173c77ea30,0x2fad2a1b100
sfi-move,0x2173c77eab8,0x2fad2a1b170
sfi-move,0x2173c77eb40,0x2fad2a1b1f8
sfi-move,0x2173c77ebc8,0x2fad2a1b280
sfi-move,0x2173c77ec50,0x2fad2a1b308
sfi-move,0x2173c77ed10,0x2fad2a1b3c8
sfi-move,0x2173c77edc0,0x2fad2a1b460
sfi-move,0x2173c77ee50,0x2fad2a1b4f0
sfi-move,0x2173c77eee0,0x2fad2a1b580
sfi-move,0x2173c77ef30,0x2fad2a1b5d0
sfi-move,0x2173c77ef80,0x2fad2a1b620
sfi-move,0x2173c77efd0,0x2fad2a1b658
sfi-move,0x2ff70799058,0x164cc3be510
sfi-move,0x2ff707990e0,0x164cc3be580
sfi-move,0x2173c77f020,0x2fad2a1b690
sfi-move,0x2173c77f0b0,0x2fad2a1b720
sfi-move,0x2173c77f138,0x2fad2a1b790
sfi-move,0x2173c77f1c0,0x2fad2a1b800
sfi-move,0x2173c77f280,0x2fad2a1b870
sfi-move,0x2173c77f2f8,0x2fad2a1b8e8
new,MemoryChunk,0x2ff96f00000,262144
sfi-move,0x38242ae7000,0x314688422d0
sfi-move,0x38242ae7050,0x31468842320
code-move,0x2ff7079b0fe,0x2ff96f01696
sfi-move,0x38242ae8250,0x31468842eb0
code-move,0x2ff7079b426,0x2ff96f0199e
code-move,0x2ff7079b71e,0x2ff96f01c96
sfi-move,0x38242ae82a0,0x31468842f00
sfi-move,0x38242ae82f0,0x31468842f50
sfi-move,0x38242ae8340,0x31468842fa0
sfi-move,0x38242ae8390,0x31468842ff0
sfi-move,0x38242ae8428,0x31468843088
sfi-move,0x38242ae8478,0x314688430d8
sfi-move,0x38242ae84c8,0x31468843128
sfi-move,0x38242ae8518,0x31468843178
sfi-move,0x38242ae8568,0x314688431c8
sfi-move,0x38242ae85f0,0x31468843250
sfi-move,0x38242ae8640,0x314688432a0
sfi-move,0x38242ae8690,0x314688432f0
sfi-move,0x38242ae86e0,0x31468843340
sfi-move,0x38242ae8730,0x31468843390
sfi-move,0x38242ae8780,0x314688433e0
sfi-move,0x38242ae87d0,0x31468843430
sfi-move,0x38242ae8858,0x314688434b8
sfi-move,0x38242ae88a8,0x31468843508
sfi-move,0x38242ae8930,0x31468843590
sfi-move,0x38242ae8980,0x314688435e0
sfi-move,0x38242ae89d0,0x31468843630
sfi-move,0x38242ae8a20,0x31468843680
sfi-move,0x38242ae8a70,0x314688436d0
sfi-move,0x38242ae8ac0,0x31468843720
sfi-move,0x38242ae8b10,0x31468843770
sfi-move,0x38242ae8b60,0x314688437c0
sfi-move,0x38242ae8bb0,0x31468843810
sfi-move,0x38242ae8c18,0x31468843878
sfi-move,0x38242ae8c68,0x314688438c8
sfi-move,0x38242ae8cb8,0x31468843918
sfi-move,0x38242ae8d08,0x31468843968
sfi-move,0x38242ae8d58,0x314688439b8
sfi-move,0x38242aec968,0x314688441e8
sfi-move,0x38242aec9b8,0x31468844238
sfi-move,0x38242aeca08,0x31468844288
sfi-move,0x38242aeca58,0x314688442d8
sfi-move,0x38242aecaa8,0x31468844328
sfi-move,0x38242aecaf8,0x31468844378
sfi-move,0x38242aee370,0x314688449b0
sfi-move,0x38242aee3c0,0x31468844a00
sfi-move,0x38242aee468,0x31468844aa8
sfi-move,0x38242aee4e0,0x31468844b20
sfi-move,0x38242aee530,0x31468844b70
sfi-move,0x38242aee580,0x31468844bc0
sfi-move,0x38242aee5d0,0x31468844c10
sfi-move,0x38242aee648,0x31468844c88
sfi-move,0x38242aee6c0,0x31468844d00
sfi-move,0x38242aee710,0x31468844d50
sfi-move,0x38242aee760,0x31468844da0
sfi-move,0x38242aee7d8,0x31468844e18
code-move,0x2ff7079cc16,0x2ff96f0318e
sfi-move,0x38242aee828,0x31468844e68
sfi-move,0x38242aee8a0,0x31468844ee0
sfi-move,0x38242aee918,0x31468844f58
code-move,0x2ff7079ccfe,0x2ff96f0325e
sfi-move,0x38242af0a88,0x31468845928
sfi-move,0x38242af0ad8,0x31468845978
code-move,0x2ff7079cdf6,0x2ff96f03356
code-move,0x2ff7079d056,0x2ff96f035b6
code-move,0x2ff7079d2de,0x2ff96f0383e
sfi-move,0x38242af0b28,0x314688459c8
sfi-move,0x38242af0b78,0x31468845a18
new,MemoryChunk,0x1795a8c0000,262144
sfi-move,0x38242af0bc8,0x31468845a68
sfi-move,0x38242af0c18,0x31468845ab8
sfi-move,0x38242af0c68,0x31468845b08
sfi-move,0x38242af0cb8,0x31468845b58
sfi-move,0x38242af0d08,0x31468845ba8
sfi-move,0x38242af0d58,0x31468845bf8
sfi-move,0x38242af0da8,0x31468845c48
sfi-move,0x38242af0df8,0x31468845c98
sfi-move,0x38242af0e68,0x31468845d08
sfi-move,0x38242af0ed8,0x31468845d78
sfi-move,0x38242af0f28,0x31468845dc8
sfi-move,0x38242af0f78,0x31468845e18
sfi-move,0x38242af0fc8,0x31468845e68
sfi-move,0x38242af1018,0x31468845eb8
sfi-move,0x38242af1068,0x31468845f08
sfi-move,0x38242af10b8,0x31468845f58
sfi-move,0x38242af1108,0x31468845fa8
sfi-move,0x38242af1158,0x31468845ff8
sfi-move,0x38242af11a8,0x31468846048
sfi-move,0x38242af11f8,0x31468846098
sfi-move,0x38242af1288,0x31468846128
sfi-move,0x38242af12f8,0x31468846198
sfi-move,0x38242af1348,0x314688461e8
sfi-move,0x38242af1398,0x31468846238
sfi-move,0x38242af13e8,0x31468846288
sfi-move,0x38242af1438,0x314688462d8
code-move,0x38242af289e,0x31468846376
code-move,0x38242af3a26,0x3146884670e
sfi-move,0x38242af3eb0,0x31468846a10
sfi-move,0x38242af3f00,0x31468846a60
code-move,0x38242af40ae,0x31468846c0e
sfi-move,0x38242af7188,0x31468849968
sfi-move,0x38242af71d8,0x314688499b8
sfi-move,0x38242af7228,0x31468849a08
sfi-move,0x38242af7278,0x31468849a58
sfi-move,0x38242af72c8,0x31468849aa8
sfi-move,0x38242af8838,0x3146884a110
sfi-move,0x38242af8888,0x3146884a160
sfi-move,0x38242af88d8,0x3146884a1b0
sfi-move,0x38242af8928,0x3146884a200
sfi-move,0x38242af8978,0x3146884a250
sfi-move,0x38242af89c8,0x3146884a2a0
sfi-move,0x38242af8a18,0x3146884a2f0
sfi-move,0x38242af8a68,0x3146884a340
sfi-move,0x38242af8ab8,0x3146884a390
sfi-move,0x38242af8b08,0x3146884a3e0
sfi-move,0x38242af8b58,0x3146884a430
sfi-move,0x38242af8ba8,0x3146884a480
sfi-move,0x38242af8bf8,0x3146884a4d0
sfi-move,0x38242af8c48,0x3146884a520
sfi-move,0x38242af8c98,0x3146884a570
sfi-move,0x38242af8ce8,0x3146884a5c0
sfi-move,0x38242af8d38,0x3146884a610
sfi-move,0x38242af8d88,0x3146884a660
sfi-move,0x38242af8dd8,0x3146884a6b0
sfi-move,0x38242af8e28,0x3146884a700
sfi-move,0x38242af8e78,0x3146884a750
sfi-move,0x38242af8ec8,0x3146884a7a0
sfi-move,0x38242af8f18,0x3146884a7f0
sfi-move,0x38242af8f68,0x3146884a840
sfi-move,0x38242af8fb8,0x3146884a890
sfi-move,0x38242af9008,0x3146884a8e0
sfi-move,0x38242afb398,0x3146884b7f8
sfi-move,0x38242afc700,0x3146884bea0
sfi-move,0x38242afc750,0x3146884bef0
sfi-move,0x38242afc7a0,0x3146884bf40
sfi-move,0x38242afc7f0,0x3146884bf90
sfi-move,0x38242afc840,0x3146884bfe0
sfi-move,0x38242afc890,0x3146884c030
sfi-move,0x38242afc8e0,0x3146884c080
sfi-move,0x38242afc930,0x3146884c0d0
sfi-move,0x38242afc9d8,0x3146884c178
sfi-move,0x38242afe4b0,0x3146884c768
sfi-move,0x38242afe500,0x3146884c7b8
sfi-move,0x38242afe578,0x3146884c830
sfi-move,0x38242afe5f0,0x3146884c8a8
sfi-move,0x38242afe640,0x3146884c8f8
sfi-move,0x38242afe690,0x3146884c948
sfi-move,0x38242afe6e0,0x3146884c998
sfi-move,0x38242afe730,0x3146884c9d0
sfi-move,0x38242afe780,0x3146884ca20
sfi-move,0x38242afe7d0,0x3146884ca58
sfi-move,0x38242afe848,0x3146884cad0
sfi-move,0x38242afe898,0x3146884cb20
sfi-move,0x38242afe8e8,0x3146884cb70
sfi-move,0x38242afe938,0x3146884cbc0
sfi-move,0x38242afe988,0x3146884cc10
sfi-move,0x2ff7079e708,0x2ff96f04b60
sfi-move,0x2ff7079e790,0x2ff96f04be8
sfi-move,0x2ff7079e848,0x2ff96f04c98
sfi-move,0x2ff7079e8f8,0x2ff96f04d38
sfi-move,0x2ff707a0f18,0x2ff96f07308
sfi-move,0x2ff707a0f68,0x2ff96f07358
sfi-move,0x2ff707a1038,0x2ff96f07420
sfi-move,0x2ff707a1088,0x2ff96f07470
sfi-move,0x1ac513c7820,0x1795a8c9190
sfi-move,0x1ac513c99b8,0x1795a8cb328
sfi-move,0x1ac513c9c38,0x1795a8cb520
sfi-move,0x1ac513c9f38,0x1795a8cb790
sfi-move,0x1ac513cab88,0x1795a8cc2b8
sfi-move,0x1ac513cabf8,0x1795a8cc328
sfi-move,0x1ac513cac68,0x1795a8cc398
sfi-move,0x1ac513cacd8,0x1795a8cc408
sfi-move,0x1ac513cad48,0x1795a8cc478
sfi-move,0x1ac513cadb8,0x1795a8cc4e8
sfi-move,0x1ac513cae28,0x1795a8cc558
sfi-move,0x1ac513cae98,0x1795a8cc5c8
sfi-move,0x1ac513caf08,0x1795a8cc638
sfi-move,0x1ac513caf78,0x1795a8cc6a8
sfi-move,0x1ac513cafe8,0x1795a8cc718
sfi-move,0x1ac513cb058,0x1795a8cc788
sfi-move,0x1ac513cb110,0x1795a8cc840
sfi-move,0x1ac513cb380,0x1795a8cca68
sfi-move,0x1ac513cbb98,0x1795a8cd0d8
sfi-move,0x1ac513cbbe8,0x1795a8cd110
sfi-move,0x1ac513cbc38,0x1795a8cd160
sfi-move,0x1ac513cbc88,0x1795a8cd198
sfi-move,0x1ac513cbcd8,0x1795a8cd1e8
sfi-move,0x1ac513cbd28,0x1795a8cd220
sfi-move,0x1ac513cbd78,0x1795a8cd258
sfi-move,0x1ac513cbdc8,0x1795a8cd2a8
sfi-move,0x1ac513cbe18,0x1795a8cd2f8
sfi-move,0x1ac513ce5f0,0x1795a8ce890
sfi-move,0x1ac513ce640,0x1795a8ce8e0
sfi-move,0x1ac513ce690,0x1795a8ce930
sfi-move,0x1ac513ce6e0,0x1795a8ce980
sfi-move,0x1ac513ce730,0x1795a8ce9d0
sfi-move,0x1ac513ce7a8,0x1795a8cea48
sfi-move,0x1ac513ce7f8,0x1795a8cea98
sfi-move,0x1ac513ce848,0x1795a8ceae8
sfi-move,0x1ac513ce898,0x1795a8ceb38
sfi-move,0x1ac513ce8e8,0x1795a8ceb88
sfi-move,0x1ac513ce938,0x1795a8cebd8
sfi-move,0x1ac513ce988,0x1795a8cec28
sfi-move,0x1ac513ce9d8,0x1795a8cec78
sfi-move,0x1ac513cea28,0x1795a8cecc8
sfi-move,0x1ac513cea78,0x1795a8ced18
sfi-move,0x1ac513ceac8,0x1795a8ced68
sfi-move,0x1ac513ceb18,0x1795a8cedb8
sfi-move,0x1ac513ceb68,0x1795a8cee08
sfi-move,0x1ac513cebb8,0x1795a8cee58
sfi-move,0x1ac513cec08,0x1795a8ceea8
sfi-move,0x1ac513cec58,0x1795a8ceef8
sfi-move,0x1ac513ceca8,0x1795a8cef48
sfi-move,0x1ac513cecf8,0x1795a8cef98
sfi-move,0x1ac513ced48,0x1795a8cefe8
sfi-move,0x1ac513ced98,0x1795a8cf038
sfi-move,0x1ac513cee10,0x1795a8cf0b0
sfi-move,0x1ac513cee60,0x1795a8cf100
sfi-move,0x1ac513ceeb0,0x1795a8cf150
sfi-move,0x1ac513cef00,0x1795a8cf1a0
sfi-move,0x1ac513cef50,0x1795a8cf1f0
code-move,0x1ac513d0416,0x1795a8cf2fe
sfi-move,0x1ac513d2100,0x1795a8cfa58
sfi-move,0x1ac513d2150,0x1795a8cfaa8
sfi-move,0x1ac513d21a0,0x1795a8cfaf8
sfi-move,0x1ac513d2218,0x1795a8cfb70
sfi-move,0x1ac513d2290,0x1795a8cfbe8
sfi-move,0x1ac513d22f8,0x1795a8cfc50
sfi-move,0x1ac513d2368,0x1795a8cfcc0
sfi-move,0x1ac513d23d8,0x1795a8cfd30
sfi-move,0x1ac513d2448,0x1795a8cfda0
sfi-move,0x1ac513d2498,0x1795a8cfdf0
sfi-move,0x1ac513d24e8,0x1795a8cfe40
sfi-move,0x1ac513d2538,0x1795a8cfe90
sfi-move,0x1ac513d25a8,0x1795a8cff00
sfi-move,0x1ac513d25f8,0x1795a8cff50
sfi-move,0x1ac513db528,0x1795a8d6f00
sfi-move,0x1ac513db578,0x1795a8d6f50
sfi-move,0x1ac513db5c8,0x1795a8d6fa0
sfi-move,0x1ac513db618,0x1795a8d6ff0
sfi-move,0x1ac513db668,0x1795a8d7040
sfi-move,0x1ac513db6b8,0x1795a8d7090
sfi-move,0x1ac513db708,0x1795a8d70e0
sfi-move,0x1ac513db758,0x1795a8d7130
sfi-move,0x1ac513db7a8,0x1795a8d7180
sfi-move,0x1ac513db7f8,0x1795a8d71d0
sfi-move,0x1ac513db848,0x1795a8d7220
sfi-move,0x1ac513db898,0x1795a8d7270
sfi-move,0x1ac513db8e8,0x1795a8d72c0
sfi-move,0x1ac513db938,0x1795a8d7310
sfi-move,0x1ac513db988,0x1795a8d7360
sfi-move,0x1ac513db9d8,0x1795a8d73b0
sfi-move,0x1ac513dba28,0x1795a8d7400
sfi-move,0x1ac513dba78,0x1795a8d7450
sfi-move,0x1ac513dbac8,0x1795a8d74a0
sfi-move,0x1ac513dbb18,0x1795a8d74f0
sfi-move,0x1ac513dbb68,0x1795a8d7540
sfi-move,0x1ac513dbbb8,0x1795a8d7590
sfi-move,0x1ac513dbc08,0x1795a8d75e0
sfi-move,0x1ac513dbcd0,0x1795a8d7690
sfi-move,0x1ac513dbd58,0x1795a8d7718
sfi-move,0x1ac513dbde8,0x1795a8d77a8
sfi-move,0x1ac513dbe70,0x1795a8d7830
sfi-move,0x1ac513dbef8,0x1795a8d78a0
sfi-move,0x1ac513dbf80,0x1795a8d7910
sfi-move,0x1ac513dc008,0x1795a8d7998
sfi-move,0x1ac513dc098,0x1795a8d7a28
sfi-move,0x1ac513dc128,0x1795a8d7ab8
sfi-move,0x1ac513dc1b0,0x1795a8d7b40
sfi-move,0x1ac513dc240,0x1795a8d7bd0
sfi-move,0x1ac513dc2d0,0x1795a8d7c60
sfi-move,0x1ac513dc360,0x1795a8d7cf0
sfi-move,0x1ac513dc3f0,0x1795a8d7d80
sfi-move,0x1ac513dc480,0x1795a8d7e10
sfi-move,0x1ac513dc510,0x1795a8d7ea0
sfi-move,0x1ac513dc5a0,0x1795a8d7f30
sfi-move,0x1ac513dc628,0x1795a8d7fa0
sfi-move,0x1ac513dc6b0,0x1795a8d8010
sfi-move,0x1ac513dc740,0x1795a8d80a0
sfi-move,0x1ac513dc7d0,0x1795a8d8130
sfi-move,0x1ac513dc860,0x1795a8d81c0
sfi-move,0x1ac513dc8f0,0x1795a8d8250
sfi-move,0x1ac513dc980,0x1795a8d82e0
sfi-move,0x1ac513dca10,0x1795a8d8370
sfi-move,0x1ac513dca60,0x1795a8d83c0
sfi-move,0x1ac513dcab0,0x1795a8d8410
sfi-move,0x1ac513dcb00,0x1795a8d8460
sfi-move,0x1ac513dcb50,0x1795a8d84b0
sfi-move,0x1ac513dcba0,0x1795a8d8500
sfi-move,0x1ac513dcbf0,0x1795a8d8550
sfi-move,0x1ac513dcc40,0x1795a8d85a0
sfi-move,0x1ac513dcc90,0x1795a8d85f0
sfi-move,0x1ac513dcce0,0x1795a8d8640
sfi-move,0x1ac513dcd30,0x1795a8d8690
sfi-move,0x1ac513dcd80,0x1795a8d86e0
sfi-move,0x1ac513dcdd0,0x1795a8d8730
sfi-move,0x1ac513dce20,0x1795a8d8780
sfi-move,0x1ac513e0bc0,0x1795a8d8fd0
sfi-move,0x1ac513e0c10,0x1795a8d9020
sfi-move,0x1ac513e0c60,0x1795a8d9070
sfi-move,0x1ac513e0cb0,0x1795a8d90c0
sfi-move,0x1ac513e23a0,0x1795a8da148
sfi-move,0x1ac513e2410,0x1795a8da1b8
sfi-move,0x1ac513e2480,0x1795a8da228
sfi-move,0x1ac513e24f0,0x1795a8da298
sfi-move,0x1ac513e2560,0x1795a8da308
sfi-move,0x1ac513e25d0,0x1795a8da378
sfi-move,0x1ac513e2640,0x1795a8da3e8
sfi-move,0x1ac513e26b0,0x1795a8da458
sfi-move,0x1ac513e2720,0x1795a8da4c8
sfi-move,0x1ac513e2790,0x1795a8da538
sfi-move,0x1ac513e2800,0x1795a8da5a8
sfi-move,0x1ac513e2870,0x1795a8da618
sfi-move,0x1ac513e28e0,0x1795a8da688
sfi-move,0x1ac513e2950,0x1795a8da6f8
sfi-move,0x1ac513e29c0,0x1795a8da768
sfi-move,0x1ac513e2a30,0x1795a8da7d8
sfi-move,0x1ac513e2aa0,0x1795a8da848
sfi-move,0x1ac513e2b10,0x1795a8da8b8
sfi-move,0x1ac513e2b80,0x1795a8da928
sfi-move,0x1ac513e2bf0,0x1795a8da998
sfi-move,0x1ac513e2c60,0x1795a8daa08
sfi-move,0x1ac513e2cd0,0x1795a8daa78
sfi-move,0x1ac513e2d40,0x1795a8daae8
sfi-move,0x1ac513e2db0,0x1795a8dab58
sfi-move,0x1ac513e2e68,0x1795a8dac10
sfi-move,0x1ac513e30d8,0x1795a8dae38
sfi-move,0x1ac513e5298,0x1795a8dca50
sfi-move,0x1ac513e5308,0x1795a8dcac0
sfi-move,0x1ac513e53c0,0x1795a8dcb78
sfi-move,0x1ac513e5840,0x1795a8dcfd0
sfi-move,0x1ac513e5bb8,0x1795a8dd2b0
sfi-move,0x1ac513e5c28,0x1795a8dd320
sfi-move,0x1ac513e5ce0,0x1795a8dd390
sfi-move,0x1ac513e6110,0x1795a8dd640
sfi-move,0x1ac513e6160,0x1795a8dd690
sfi-move,0x1ac513e61e0,0x1795a8dd710
sfi-move,0x1ac513e6230,0x1795a8dd760
sfi-move,0x1ac513e6280,0x1795a8dd7b0
sfi-move,0x1ac513e62f8,0x1795a8dd828
sfi-move,0x1ac513e6f28,0x1795a8ddb78
sfi-move,0x1ac513e7aa0,0x1795a8de3d8
code-move,0x1ac513ea176,0x1795a8e09ee
code-move,0x1ac513ea3e6,0x1795a8e0c5e
code-move,0x1ac513ea4fe,0x1795a8e0d76
code-move,0x1ac513ead06,0x1795a8e1516
code-move,0x1ac513eaece,0x1795a8e16de
code-move,0x1ac513ec1ae,0x1795a8e18b6
code-move,0x1ac513ec42e,0x1795a8e1b36
code-move,0x1ac513ec886,0x1795a8e1e6e
sfi-move,0x1ac513ecf10,0x1795a8e24b0
code-move,0x1ac513ed366,0x1795a8e28ee
code-move,0x1ac513edc76,0x1795a8e31fe
code-move,0x1ac513edd96,0x1795a8e331e
code-move,0x1ac513edec6,0x1795a8e344e
code-move,0x1ac513edff6,0x1795a8e357e
code-move,0x1ac513ee856,0x1795a8e3806
code-move,0x1ac513ee9c6,0x1795a8e3976
code-move,0x1ac513eeb46,0x1795a8e3af6
sfi-move,0x1ac513eecc0,0x1795a8e3c28
code-move,0x1ac513eedf6,0x1795a8e3d46
code-move,0x1ac513f137e,0x1795a8e62ce
sfi-move,0x1ac513f14b0,0x1795a8e6400
code-move,0x1ac513f17f6,0x1795a8e6746
code-move,0x1ac513f1eae,0x1795a8e6c96
delete,MemoryChunk,0x2173c740000
delete,MemoryChunk,0x3f9aba40000
delete,MemoryChunk,0x3eba5c80000
delete,MemoryChunk,0xa2a2ac0000
delete,MemoryChunk,0x18bc1a80000
delete,MemoryChunk,0x38242ac0000
delete,MemoryChunk,0x2ff70780000
delete,MemoryChunk,0x13de6fc0000
delete,MemoryChunk,0x1ac513c0000
delete,MemoryChunk,0x28387b80000
delete,MemoryChunk,0x3ae4d700000
delete,MemoryChunk,0x34539480000
delete,MemoryChunk,0x537ee40000
tick,0x7ff8e7af1be4,9378964,0,0x0,8
tick,0x7ff8e7af1be4,9394894,0,0x0,8
tick,0x7ff8e7af1be4,9410944,0,0x0,8
tick,0x7ff8e7af1be4,9426292,0,0x0,8
tick,0x7ff8e7af1be4,9442413,0,0x0,8
tick,0x7ff8e7af1be4,9457837,0,0x0,8
tick,0x7ff8e7af1be4,9473873,0,0x0,8
tick,0x7ff8e7af1be4,9490130,0,0x0,8
tick,0x7ff8e7af1be4,9505844,0,0x0,8
tick,0x7ff8e7af1be4,9511715,0,0x0,8
tick,0x7ff8e7af1be4,9527425,0,0x0,8
tick,0x7ff8e7af1be4,9543160,0,0x0,8
tick,0x7ff8e7af1be4,9558905,0,0x0,8
tick,0x7ff8e7af1be4,9574726,0,0x0,8
tick,0x7ff8e7af1be4,9587274,0,0x0,8
tick,0x7ff8e7af1be4,9588881,0,0x0,8
tick,0x7ff8e7af1be4,9607285,0,0x0,8
tick,0x7ff8e7af1be4,9623215,0,0x0,8
tick,0x7ff8e7af1be4,9639397,0,0x0,8
tick,0x7ff8e7af1be4,9655133,0,0x0,8
tick,0x7ff8e7af1be4,9670641,0,0x0,8
tick,0x7ff8e7af1be4,9686719,0,0x0,8
tick,0x7ff8e7af1be4,9702454,0,0x0,8
tick,0x7ff8e7af1be4,9718267,0,0x0,8
tick,0x7ff8e7af1be4,9733941,0,0x0,8
tick,0x7ff8e7af1be4,9749568,0,0x0,8
tick,0x7ff8e7af1be4,9765369,0,0x0,8
tick,0x7ff8e7af1be4,9781422,0,0x0,8
tick,0x7ff8e7af1be4,9797041,0,0x0,8
tick,0x7ff8e7af1be4,9812566,0,0x0,8
tick,0x7ff8e7af1be4,9828585,0,0x0,8
tick,0x7ff8e7af1be4,9843936,0,0x0,8
tick,0x7ff8e7af1be4,9859605,0,0x0,8
tick,0x7ff8e7af1be4,9875534,0,0x0,8
tick,0x7ff8e7af1be4,9891317,0,0x0,8
tick,0x7ff8e7af1be4,9906963,0,0x0,8
tick,0x7ff8e7af1be4,9922783,0,0x0,8
tick,0x7ff8e7af1be4,9925514,0,0x0,8
tick,0x7ff8e7af1be4,9927244,0,0x0,8
tick,0x7ff8e7af1be4,9928473,0,0x0,8
tick,0x7ff8e7af1be4,9944209,0,0x0,8
tick,0x7ff8e7af1be4,9960684,0,0x0,8
tick,0x7ff8e7af1be4,9976761,0,0x0,8
tick,0x7ff8e7af1be4,9992642,0,0x0,8
tick,0x7ff8e7af1be4,10008521,0,0x0,8
tick,0x7ff8e7af1be4,10024463,0,0x0,8
tick,0x7ff8e7af1be4,10040550,0,0x0,8
tick,0x7ff8e7af1be4,10056446,0,0x0,8
tick,0x7ff8e7af1be4,10072505,0,0x0,8
tick,0x7ff8e7af1be4,10088735,0,0x0,8
tick,0x7ff8e7af1be4,10104392,0,0x0,8
tick,0x7ff8e7af1be4,10120012,0,0x0,8
tick,0x7ff8e7af1be4,10136904,0,0x0,8
tick,0x7ff8e7af1be4,10151561,0,0x0,8
tick,0x7ff8e7af1be4,10167385,0,0x0,8
tick,0x7ff8e7af1be4,10182991,0,0x0,8
tick,0x7ff8e7af1be4,10199420,0,0x0,8
tick,0x7ff8e7af1be4,10214595,0,0x0,8
tick,0x7ff8e7af1be4,10230537,0,0x0,8
tick,0x7ff8e7af1be4,10246385,0,0x0,8
tick,0x7ff8e7af1be4,10263025,0,0x0,8
tick,0x7ff8e7af1be4,10277710,0,0x0,8
tick,0x7ff8e7af1be4,10294823,0,0x0,8
tick,0x7ff8e7af1be4,10309649,0,0x0,8
tick,0x7ff8e7af1be4,10325161,0,0x0,8
tick,0x7ff8e7af1be4,10341094,0,0x0,8
tick,0x7ff8e7af1be4,10357200,0,0x0,8
tick,0x7ff8e7af1be4,10373257,0,0x0,8
tick,0x7ff8e7af1be4,10388855,0,0x0,8
tick,0x7ff8e7af1be4,10404619,0,0x0,8
tick,0x7ff8e7af1be4,10420572,0,0x0,8
tick,0x7ff8e7af1be4,10436456,0,0x0,8
tick,0x7ff8e7af1be4,10438033,0,0x0,8
tick,0x7ff8e7af1be4,10442970,0,0x0,8
tick,0x7ff8e7af1be4,10444264,0,0x0,8
tick,0x7ff8e7af1be4,10460443,0,0x0,8
tick,0x7ff8e7af1be4,10476309,0,0x0,8
tick,0x7ff8e7af1be4,10492702,0,0x0,8
tick,0x7ff8e7af1be4,10508305,0,0x0,8
tick,0x7ff8e7af1be4,10524106,0,0x0,8
tick,0x7ff8e7af1be4,10540049,0,0x0,8
tick,0x7ff8e7af1be4,10556063,0,0x0,8
tick,0x7ff8e7af1be4,10572265,0,0x0,8
tick,0x7ff8e7af1be4,10587796,0,0x0,8
tick,0x7ff8e7af1be4,10603763,0,0x0,8
tick,0x7ff8e7af1be4,10612032,0,0x0,8
tick,0x7ff8e7af1be4,10620211,0,0x0,8
tick,0x7ff8e7af1be4,10636307,0,0x0,8
tick,0x7ff8e7af1be4,10652487,0,0x0,8
tick,0x7ff8e7af1be4,10668556,0,0x0,8
tick,0x7ff8e7af1be4,10684515,0,0x0,8
tick,0x7ff8e7af1be4,10700996,0,0x0,8
tick,0x7ff8e7af1be4,10716657,0,0x0,8
tick,0x7ff8e7af1be4,10732713,0,0x0,8
tick,0x7ff8e7af1be4,10748283,0,0x0,8
tick,0x7ff8e7af1be4,10764259,0,0x0,8
tick,0x7ff8e7af1be4,10779912,0,0x0,8
tick,0x7ff8e7af1be4,10796133,0,0x0,8
tick,0x7ff8e7af1be4,10812015,0,0x0,8
tick,0x7ff8e7af1be4,10824112,0,0x0,8
tick,0x7ff8e7af1be4,10839237,0,0x0,8
tick,0x7ff8e7af1be4,10855345,0,0x0,8
tick,0x7ff8e7af1be4,10871297,0,0x0,8
tick,0x7ff8e7af1be4,10879981,0,0x0,8
tick,0x7ff8e7af1be4,10895785,0,0x0,8
tick,0x7ff8e7af1be4,10904339,0,0x0,8
tick,0x7ff8e7af1be4,10912279,0,0x0,8
tick,0x7ff8e7af1be4,10920265,0,0x0,8
tick,0x7ff8e7af1be4,10936468,0,0x0,8
tick,0x7ff8e7af1be4,10945555,0,0x0,8
tick,0x7ff8e7af1be4,10955336,0,0x0,8
tick,0x7ff8e7af1be4,10974838,0,0x0,8
tick,0x7ff8e7af1be4,10990819,0,0x0,8
tick,0x7ff8e7af1be4,11006714,0,0x0,8
tick,0x7ff8e7af1be4,11022298,0,0x0,8
tick,0x7ff8e7af1be4,11038039,0,0x0,8
tick,0x7ff8e7af1be4,11054241,0,0x0,8
tick,0x7ff8e7af1be4,11070199,0,0x0,8
tick,0x7ff8e7af1be4,11086074,0,0x0,8
tick,0x7ff8e7af1be4,11102559,0,0x0,8
tick,0x7ff8e7af1be4,11118313,0,0x0,8
tick,0x7ff8e7af1be4,11135071,0,0x0,8
tick,0x7ff8e7af1be4,11158835,0,0x0,8
tick,0x7ff8e7af1be4,11176102,0,0x0,8
tick,0x7ff8e7af1be4,11188864,0,0x0,8
tick,0x7ff8e7af1be4,11207255,0,0x0,8
tick,0x7ff8e7af1be4,11223619,0,0x0,8
tick,0x7ff8e7af1be4,11239323,0,0x0,8
tick,0x7ff8e7af1be4,11247327,0,0x0,8
tick,0x7ff8e7af1be4,11255508,0,0x0,8
tick,0x7ff8e7af1be4,11271736,0,0x0,8
tick,0x7ff8e7af1be4,11288135,0,0x0,8
tick,0x7ff8e7af1be4,11297279,0,0x0,8
tick,0x7ff8e7af1be4,11312912,0,0x0,8
tick,0x7ff8e7af1be4,11329430,0,0x0,8
tick,0x7ff8e7af1be4,11337843,0,0x0,8
tick,0x7ff8e7af1be4,11346287,0,0x0,8
tick,0x7ff8e7af1be4,11364861,0,0x0,8
tick,0x7ff8e7af1be4,11372763,0,0x0,8
tick,0x7ff8e7af1be4,11382157,0,0x0,8
tick,0x7ff8e7af1be4,11390852,0,0x0,8
tick,0x7ff8e7af1be4,11407290,0,0x0,8
tick,0x7ff8e7af1be4,11416916,0,0x0,8
tick,0x7ff8e7af1be4,11423469,0,0x0,8
tick,0x7ff8e7af1be4,11440131,0,0x0,8
tick,0x7ff8e7af1be4,11456531,0,0x0,8
tick,0x7ff8e7af1be4,11472197,0,0x0,8
tick,0x7ff8e7af1be4,11480693,0,0x0,8
tick,0x7ff8e7af1be4,11498121,0,0x0,8
tick,0x7ff8e7af1be4,11514863,0,0x0,8
tick,0x7ff8e7af1be4,11531384,0,0x0,8
tick,0x7ff8e7af1be4,11547766,0,0x0,8
tick,0x7ff8e7af1be4,11556487,0,0x0,8
tick,0x7ff8e7af1be4,11565459,0,0x0,8
tick,0x7ff8e7af1be4,11575134,0,0x0,8
tick,0x7ff8e7af1be4,11585128,0,0x0,8
tick,0x7ff8e7af1be4,11593439,0,0x0,8
tick,0x7ff8e7af1be4,11609739,0,0x0,8
tick,0x7ff8e7af1be4,11625259,0,0x0,8
tick,0x7ff8e7af1be4,11640692,0,0x0,8
tick,0x7ff8e7af1be4,11656566,0,0x0,8
tick,0x7ff8e7af1be4,11672703,0,0x0,8
tick,0x7ff8e7af1be4,11688400,0,0x0,8
tick,0x7ff8e7af1be4,11704442,0,0x0,8
tick,0x7ff8e7af1be4,11720510,0,0x0,8
tick,0x7ff8e7af1be4,11736330,0,0x0,8
tick,0x7ff8e7af1be4,11751532,0,0x0,8
tick,0x7ff8e7af1be4,11767675,0,0x0,8
tick,0x7ff8e7af1be4,11783237,0,0x0,8
tick,0x7ff8e7af1be4,11799298,0,0x0,8
tick,0x7ff8e7af1be4,11814957,0,0x0,8
tick,0x7ff8e7af1be4,11830629,0,0x0,8
tick,0x7ff8e7af1be4,11846668,0,0x0,8
tick,0x7ff8e7af1be4,11862080,0,0x0,8
tick,0x7ff8e7af1be4,11877810,0,0x0,8
tick,0x7ff8e7af1be4,11889887,0,0x0,8
tick,0x7ff8e7af1be4,11901915,0,0x0,8
tick,0x7ff8e7af1be4,11918164,0,0x0,8
tick,0x7ff8e7af1be4,11926114,0,0x0,8
tick,0x7ff8e7af1be4,11942085,0,0x0,8
tick,0x7ff8e7af1be4,11958847,0,0x0,8
tick,0x7ff8e7af1be4,11974527,0,0x0,8
tick,0x7ff8e7af1be4,11978871,0,0x0,8
tick,0x7ff8e7af1be4,11980421,0,0x0,8
tick,0x7ff8e7af1be4,11990033,0,0x0,8
tick,0x7ff8e7af1be4,11997686,0,0x0,8
tick,0x7ff8e7af1be4,12006437,0,0x0,8
tick,0x7ff8e7af1be4,12022956,0,0x0,8
tick,0x7ff8e7af1be4,12039602,0,0x0,8
tick,0x7ff8e7af1be4,12056546,0,0x0,8
tick,0x7ff8e7af1be4,12072018,0,0x0,8
tick,0x7ff8e7af1be4,12088128,0,0x0,8
tick,0x7ff8e7af1be4,12096077,0,0x0,8
tick,0x7ff8e7af1be4,12112090,0,0x0,8
tick,0x7ff8e7af1be4,12128706,0,0x0,8
tick,0x7ff8e7af1be4,12145672,0,0x0,8
tick,0x7ff8e7af1be4,12157643,0,0x0,8
tick,0x7ff8e7af1be4,12180512,0,0x0,8
tick,0x7ff8e7af1be4,12196199,0,0x0,8
tick,0x7ff8e7af1be4,12212235,0,0x0,8
tick,0x7ff8e7af1be4,12228095,0,0x0,8
tick,0x7ff8e7af1be4,12244266,0,0x0,8
tick,0x7ff8e7af1be4,12259661,0,0x0,8
tick,0x7ff8e7af1be4,12275087,0,0x0,8
tick,0x7ff8e7af1be4,12291124,0,0x0,8
tick,0x7ff8e7af1be4,12307274,0,0x0,8
tick,0x7ff8e7af1be4,12323263,0,0x0,8
tick,0x7ff8e7af1be4,12339171,0,0x0,8
tick,0x7ff8e7af1be4,12347649,0,0x0,8
tick,0x7ff8e7af1be4,12363112,0,0x0,8
tick,0x7ff8e7af1be4,12379344,0,0x0,8
tick,0x7ff8e7af1be4,12395598,0,0x0,8
tick,0x7ff8e7af1be4,12408607,0,0x0,8
tick,0x7ff8e7af1be4,12419875,0,0x0,8
tick,0x7ff8e7af1be4,12435992,0,0x0,8
tick,0x7ff8e7af1be4,12452189,0,0x0,8
tick,0x7ff8e7af1be4,12468126,0,0x0,8
tick,0x7ff8e7af1be4,12484512,0,0x0,8
tick,0x7ff8e7af1be4,12500789,0,0x0,8
tick,0x7ff8e7af1be4,12509758,0,0x0,8
tick,0x7ff8e7af1be4,12526517,0,0x0,8
tick,0x7ff8e7af1be4,12542559,0,0x0,8
tick,0x7ff8e7af1be4,12550680,0,0x0,8
tick,0x7ff8e7af1be4,12558776,0,0x0,8
tick,0x7ff8e7af1be4,12575346,0,0x0,8
tick,0x7ff8e7af1be4,12591303,0,0x0,8
tick,0x7ff8e7af1be4,12607970,0,0x0,8
tick,0x7ff8e7af1be4,12617985,0,0x0,8
tick,0x7ff8e7af1be4,12635679,0,0x0,8
tick,0x7ff8e7af1be4,12642883,0,0x0,8
tick,0x7ff8e7af1be4,12650958,0,0x0,8
tick,0x7ff8e7af1be4,12676049,0,0x0,8
tick,0x7ff8e7af1be4,12691789,0,0x0,8
tick,0x7ff8e7af1be4,12708146,0,0x0,8
tick,0x7ff8e7af1be4,12724335,0,0x0,8
tick,0x7ff8e7af1be4,12739756,0,0x0,8
tick,0x7ff8e7af1be4,12755955,0,0x0,8
tick,0x7ff8e7af1be4,12771668,0,0x0,8
tick,0x7ff8e7af1be4,12787564,0,0x0,8
tick,0x7ff8e7af1be4,12803421,0,0x0,8
tick,0x7ff8e7af1be4,12819016,0,0x0,8
tick,0x7ff8e7af1be4,12834585,0,0x0,8
tick,0x7ff8e7af1be4,12850223,0,0x0,8
tick,0x7ff8e7af1be4,12865955,0,0x0,8
tick,0x7ff8e7af1be4,12881993,0,0x0,8
tick,0x7ff8e7af1be4,12897950,0,0x0,8
tick,0x7ff8e7af1be4,12913682,0,0x0,8
tick,0x7ff8e7af1be4,12930230,0,0x0,8
tick,0x7ff8e7af1be4,12945682,0,0x0,8
tick,0x7ff8e7af1be4,12962097,0,0x0,8
tick,0x7ff8e7af1be4,12978107,0,0x0,8
tick,0x7ff8e7af1be4,12993234,0,0x0,8
tick,0x7ff8e7af1be4,13008927,0,0x0,8
tick,0x7ff8e7af1be4,13016024,0,0x0,8
tick,0x7ff8e7af1be4,13017697,0,0x0,8
tick,0x7ff8e7af1be4,13034773,0,0x0,8
tick,0x7ff8e7af1be4,13050421,0,0x0,8
tick,0x7ff8e7af1be4,13066566,0,0x0,8
tick,0x7ff8e7af1be4,13082349,0,0x0,8
tick,0x7ff8e7af1be4,13097941,0,0x0,8
tick,0x7ff8e7af1be4,13113372,0,0x0,8
tick,0x7ff8e7af1be4,13122284,0,0x0,8
tick,0x7ff8e7af1be4,13138749,0,0x0,8
tick,0x7ff8e7af1be4,13147861,0,0x0,8
tick,0x7ff8e7af1be4,13164082,0,0x0,8
tick,0x7ff8e7af1be4,13180139,0,0x0,8
tick,0x7ff8e7af1be4,13194110,0,0x0,8
tick,0x7ff8e7af1be4,13203514,0,0x0,8
tick,0x7ff8e7af1be4,13213477,0,0x0,8
tick,0x7ff8e7af1be4,13221888,0,0x0,8
tick,0x7ff8e7af1be4,13230521,0,0x0,8
tick,0x7ff8e7af1be4,13246980,0,0x0,8
tick,0x7ff8e7af1be4,13263845,0,0x0,8
tick,0x7ff8e7af1be4,13275048,0,0x0,8
tick,0x7ff8e7af1be4,13284820,0,0x0,8
tick,0x7ff8e7af1be4,13310048,0,0x0,8
tick,0x7ff8e7af1be4,13323958,0,0x0,8
tick,0x7ff8e7af1be4,13340379,0,0x0,8
tick,0x7ff8e7af1be4,13356082,0,0x0,8
tick,0x7ff8e7af1be4,13372566,0,0x0,8
tick,0x7ff8e7af1be4,13388311,0,0x0,8
tick,0x7ff8e7af1be4,13406030,0,0x0,8
tick,0x7ff8e7af1be4,13420812,0,0x0,8
tick,0x7ff8e7af1be4,13436951,0,0x0,8
tick,0x7ff8e7af1be4,13452005,0,0x0,8
tick,0x7ff8e7af1be4,13468222,0,0x0,8
tick,0x7ff8e7af1be4,13479712,0,0x0,8
tick,0x7ff8e7af1be4,13490628,0,0x0,8
tick,0x7ff8e7af1be4,13500890,0,0x0,8
tick,0x7ff8e7af1be4,13512036,0,0x0,8
tick,0x7ff8e7af1be4,13520893,0,0x0,8
tick,0x7ff8e7af1be4,13544890,0,0x0,8
tick,0x7ff8e7af1be4,13560797,0,0x0,8
tick,0x7ff8e7af1be4,13569351,0,0x0,8
tick,0x7ff8e7af1be4,13585993,0,0x0,8
tick,0x7ff8e7af1be4,13594913,0,0x0,8
tick,0x7ff8e7af1be4,13604108,0,0x0,8
tick,0x7ff8e7af1be4,13613826,0,0x0,8
tick,0x7ff8e7af1be4,13621700,0,0x0,8
tick,0x7ff8e7af1be4,13638390,0,0x0,8
tick,0x7ff8e7af1be4,13647690,0,0x0,8
tick,0x7ff8e7af1be4,13657288,0,0x0,8
tick,0x7ff8e7af1be4,13673572,0,0x0,8
tick,0x7ff8e7af1be4,13682901,0,0x0,8
tick,0x7ff8e7af1be4,13696006,0,0x0,8
tick,0x7ff8e7af1be4,13711932,0,0x0,8
tick,0x7ff8e7af1be4,13728128,0,0x0,8
tick,0x7ff8e7af1be4,13744163,0,0x0,8
tick,0x7ff8e7af1be4,13760010,0,0x0,8
tick,0x7ff8e7af1be4,13775866,0,0x0,8
tick,0x7ff8e7af1be4,13792250,0,0x0,8
tick,0x7ff8e7af1be4,13807577,0,0x0,8
tick,0x7ff8e7af1be4,13820674,0,0x0,8
tick,0x7ff8e7af1be4,13836858,0,0x0,8
tick,0x7ff8e7af1be4,13850095,0,0x0,8
tick,0x7ff8e7af1be4,13860733,0,0x0,8
tick,0x7ff8e7af1be4,13868943,0,0x0,8
tick,0x7ff8e7af1be4,13877282,0,0x0,8
tick,0x7ff8e7af1be4,13885189,0,0x0,8
tick,0x7ff8e7af1be4,13901401,0,0x0,8
tick,0x7ff8e7af1be4,13912599,0,0x0,8
tick,0x7ff8e7af1be4,13925610,0,0x0,8
tick,0x7ff8e7af1be4,13941742,0,0x0,8
tick,0x7ff8e7af1be4,13957997,0,0x0,8
tick,0x7ff8e7af1be4,13974486,0,0x0,8
tick,0x7ff8e7af1be4,13990298,0,0x0,8
tick,0x7ff8e7af1be4,13998815,0,0x0,8
tick,0x7ff8e7af1be4,14015078,0,0x0,8
tick,0x7ff8e7af1be4,14041715,0,0x0,8
tick,0x7ff8e7af1be4,14057208,0,0x0,8
tick,0x7ff8e7af1be4,14073118,0,0x0,8
tick,0x7ff8e7af1be4,14089072,0,0x0,8
tick,0x7ff8e7af1be4,14105584,0,0x0,8
tick,0x7ff8e7af1be4,14121649,0,0x0,8
tick,0x7ff8e7af1be4,14138241,0,0x0,8
tick,0x7ff8e7af1be4,14153587,0,0x0,8
tick,0x7ff8e7af1be4,14169882,0,0x0,8
tick,0x7ff8e7af1be4,14186305,0,0x0,8
tick,0x7ff8e7af1be4,14203271,0,0x0,8
tick,0x7ff8e7af1be4,14213258,0,0x0,8
tick,0x7ff8e7af1be4,14226431,0,0x0,8
tick,0x7ff8e7af1be4,14238130,0,0x0,8
tick,0x7ff8e7af1be4,14247638,0,0x0,8
tick,0x7ff8e7af1be4,14256850,0,0x0,8
tick,0x7ff8e7af1be4,14271406,0,0x0,8
tick,0x7ff8e7af1be4,14281447,0,0x0,8
tick,0x7ff8e7af1be4,14296389,0,0x0,8
tick,0x7ff8e7af1be4,14310399,0,0x0,8
tick,0x7ff8e7af1be4,14321098,0,0x0,8
tick,0x7ff8e7af1be4,14329618,0,0x0,8
tick,0x7ff8e7af1be4,14348703,0,0x0,8
tick,0x7ff8e7af1be4,14354070,0,0x0,8
tick,0x7ff8e7af1be4,14370573,0,0x0,8
tick,0x7ff8e7af1be4,14386588,0,0x0,8
tick,0x7ff8e7af1be4,14402885,0,0x0,8
tick,0x7ff8e7af1be4,14419824,0,0x0,8
tick,0x7ff8e7af1be4,14435718,0,0x0,8
tick,0x7ff8e7af1be4,14452063,0,0x0,8
tick,0x7ff8e7af1be4,14468223,0,0x0,8
tick,0x7ff8e7af1be4,14476134,0,0x0,8
tick,0x7ff8e7af1be4,14492419,0,0x0,8
tick,0x7ff8e7af1be4,14508042,0,0x0,8
tick,0x7ff8e7af1be4,14524374,0,0x0,8
tick,0x7ff8e7af1be4,14541744,0,0x0,8
tick,0x7ff8e7af1be4,14546062,0,0x0,8
tick,0x7ff8e7af1be4,14547368,0,0x0,8
tick,0x7ff8e7af1be4,14564856,0,0x0,8
tick,0x7ff8e7af1be4,14580679,0,0x0,8
tick,0x7ff8e7af1be4,14596454,0,0x0,8
tick,0x7ff8e7af1be4,14612332,0,0x0,8
tick,0x7ff8e7af1be4,14628034,0,0x0,8
code-creation,JS,10,14636179,0x1795a8f4cbe,16,refreshStdoutOnSigWinch node:internal/bootstrap/switches/is_main_thread:134:33,0x1c416d914a8,~
code-source-info,0x1795a8f4cbe,46,3673,3706,C0O3681C5O3688C10O3688C15O3705,,
code-creation,JS,10,14636380,0x1795a8f4e66,134,WriteStream._refreshSize node:tty:126:46,0x1b0323cbbe8,~
code-source-info,0x1795a8f4e66,443,3877,4320,C0O3906C5O3939C10O3964C20O3964C26O3998C31O4006C36O4006C42O4033C44O4054C54O4068C57O4075C65O4075C72O4054C78O4119C79O4126C80O4170C82O4146C89O4158C93O4182C95O4194C102O4217C107O4237C109O4250C113O4266C115O4276C119O4297C127O4297C133O4319,,
tick,0x7ff7781a3c1a,14636781,0,0x0,0,0x3b94bd87dc9,0x1795a8f4ee5,0x1795a8f4cc8,0x33cbf864e7a,0x3b94bd9d35e
code-creation,JS,10,14636811,0x1795a8f500e,21,onresize node:internal/readline/interface:281:20,0x3b94bd84178,~
code-source-info,0x1795a8f500e,453,8103,8139,C0O8113C9O8118C11O8117C15O8131C20O8138,,
tick,0x7ff8e7af1be4,14645356,0,0x0,8
tick,0x7ff8e7af1be4,14655331,0,0x0,8
tick,0x7ff8e7af1be4,14668893,0,0x0,8
tick,0x7ff8e7af1be4,14681667,0,0x0,8
tick,0x7ff8e7af1be4,14697609,0,0x0,8
tick,0x7ff8e7af1be4,14705673,0,0x0,8
tick,0x7ff8e7af1be4,14713791,0,0x0,8
tick,0x7ff8e7af1be4,14729910,0,0x0,8
tick,0x7ff8e7af1be4,14745964,0,0x0,8
tick,0x7ff8e7af1be4,14761726,0,0x0,8
tick,0x7ff8e7af1be4,14777479,0,0x0,8
tick,0x7ff8e7af1be4,14793441,0,0x0,8
tick,0x7ff8e7af1be4,14809756,0,0x0,8
tick,0x7ff8e7af1be4,14825826,0,0x0,8
tick,0x7ff8e7af1be4,14842818,0,0x0,8
tick,0x7ff8e7af1be4,14857937,0,0x0,8
tick,0x7ff8e7af1be4,14873990,0,0x0,8
tick,0x7ff8e7af1be4,14889653,0,0x0,8
tick,0x7ff8e7af1be4,14906350,0,0x0,8
tick,0x7ff8e7af1be4,14924503,0,0x0,8
tick,0x7ff8e7af1be4,14939025,0,0x0,8
tick,0x7ff8e7af1be4,14954355,0,0x0,8
tick,0x7ff8e7af1be4,14970029,0,0x0,8
tick,0x7ff8e7af1be4,14988889,0,0x0,8
tick,0x7ff8e7af1be4,15004143,0,0x0,8
tick,0x7ff8e7af1be4,15019231,0,0x0,8
tick,0x7ff8e7af1be4,15034933,0,0x0,8
tick,0x7ff8e7af1be4,15051081,0,0x0,8
tick,0x7ff8e7af1be4,15057124,0,0x0,8
tick,0x7ff8e7af1be4,15058271,0,0x0,8
tick,0x7ff8e7af1be4,15060709,0,0x0,8
tick,0x7ff8e7af1be4,15077473,0,0x0,8
tick,0x7ff8e7af1be4,15093039,0,0x0,8
tick,0x7ff8e7af1be4,15108903,0,0x0,8
tick,0x7ff8e7af1be4,15125633,0,0x0,8
tick,0x7ff8e7af1be4,15141121,0,0x0,8
tick,0x7ff8e7af1be4,15157435,0,0x0,8
tick,0x7ff8e7af1be4,15173036,0,0x0,8
tick,0x7ff8e7af1be4,15188745,0,0x0,8
tick,0x7ff8e7af1be4,15204602,0,0x0,8
tick,0x7ff8e7af1be4,15220966,0,0x0,8
tick,0x7ff8e7af1be4,15238527,0,0x0,8
tick,0x7ff8e7af1be4,15252624,0,0x0,8
tick,0x7ff8e7af1be4,15268763,0,0x0,8
tick,0x7ff8e7af1be4,15285045,0,0x0,8
tick,0x7ff8e7af1be4,15300086,0,0x0,8
tick,0x7ff8e7af1be4,15316245,0,0x0,8
tick,0x7ff8e7af1be4,15332892,0,0x0,8
tick,0x7ff8e7af1be4,15349021,0,0x0,8
tick,0x7ff8e7af1be4,15364266,0,0x0,8
tick,0x7ff8e7af1be4,15379977,0,0x0,8
tick,0x7ff8e7af1be4,15396419,0,0x0,8
tick,0x7ff8e7af1be4,15411518,0,0x0,8
tick,0x7ff8e7af1be4,15427762,0,0x0,8
tick,0x7ff8e7af1be4,15443646,0,0x0,8
tick,0x7ff8e7af1be4,15460141,0,0x0,8
tick,0x7ff8e7af1be4,15474830,0,0x0,8
tick,0x7ff8e7af1be4,15490727,0,0x0,8
tick,0x7ff8e7af1be4,15506893,0,0x0,8
tick,0x7ff8e7af1be4,15522472,0,0x0,8
tick,0x7ff8e7af1be4,15538358,0,0x0,8
tick,0x7ff8e7af1be4,15554574,0,0x0,8
tick,0x7ff8e7af1be4,15572897,0,0x0,8
tick,0x7ff8e7af1be4,15575640,0,0x0,8
tick,0x7ff8e7af1be4,15578061,0,0x0,8
tick,0x7ff8e7af1be4,15594880,0,0x0,8
tick,0x7ff8e7af1be4,15610579,0,0x0,8
tick,0x7ff8e7af1be4,15627460,0,0x0,8
tick,0x7ff8e7af1be4,15643082,0,0x0,8
tick,0x7ff8e7af1be4,15658810,0,0x0,8
tick,0x7ff8e7af1be4,15674516,0,0x0,8
tick,0x7ff8e7af1be4,15690776,0,0x0,8
tick,0x7ff8e7af1be4,15706388,0,0x0,8
tick,0x7ff8e7af1be4,15721830,0,0x0,8
tick,0x7ff8e7af1be4,15737534,0,0x0,8
tick,0x7ff8e7af1be4,15752851,0,0x0,8
tick,0x7ff8e7af1be4,15768514,0,0x0,8
tick,0x7ff8e7af1be4,15784204,0,0x0,8
tick,0x7ff8e7af1be4,15799953,0,0x0,8
tick,0x7ff8e7af1be4,15815891,0,0x0,8
tick,0x7ff8e7af1be4,15831719,0,0x0,8
tick,0x7ff8e7af1be4,15848110,0,0x0,8
tick,0x7ff8e7af1be4,15864449,0,0x0,8
tick,0x7ff8e7af1be4,15880115,0,0x0,8
tick,0x7ff8e7af1be4,15896092,0,0x0,8
tick,0x7ff8e7af1be4,15912905,0,0x0,8
tick,0x7ff8e7af1be4,15928571,0,0x0,8
tick,0x7ff8e7af1be4,15944167,0,0x0,8
tick,0x7ff8e7af1be4,15960214,0,0x0,8
tick,0x7ff8e7af1be4,15975080,0,0x0,8
tick,0x7ff8e7af1be4,15991637,0,0x0,8
tick,0x7ff8e7af1be4,16006723,0,0x0,8
tick,0x7ff8e7af1be4,16022436,0,0x0,8
tick,0x7ff8e7af1be4,16038727,0,0x0,8
tick,0x7ff8e7af1be4,16053328,0,0x0,8
tick,0x7ff8e7af1be4,16069109,0,0x0,8
tick,0x7ff8e7af1be4,16084697,0,0x0,8
tick,0x7ff8e7af1be4,16090377,0,0x0,8
tick,0x7ff8e7af1be4,16091604,0,0x0,8
tick,0x7ff8e7af1be4,16093014,0,0x0,8
tick,0x7ff8e7af1be4,16099418,0,0x0,8
tick,0x7ff8e7af1be4,16109981,0,0x0,8
tick,0x7ff8e7af1be4,16126074,0,0x0,8
tick,0x7ff8e7af1be4,16142110,0,0x0,8
tick,0x7ff8e7af1be4,16158229,0,0x0,8
tick,0x7ff8e7af1be4,16173822,0,0x0,8
tick,0x7ff8e7af1be4,16189613,0,0x0,8
tick,0x7ff8e7af1be4,16205287,0,0x0,8
tick,0x7ff8e7af1be4,16221245,0,0x0,8
tick,0x7ff8e7af1be4,16236897,0,0x0,8
tick,0x7ff8e7af1be4,16252599,0,0x0,8
tick,0x7ff8e7af1be4,16268988,0,0x0,8
tick,0x7ff8e7af1be4,16284661,0,0x0,8
tick,0x7ff8e7af1be4,16300296,0,0x0,8
tick,0x7ff8e7af1be4,16316507,0,0x0,8
tick,0x7ff8e7af1be4,16332523,0,0x0,8
tick,0x7ff8e7af1be4,16348286,0,0x0,8
tick,0x7ff8e7af1be4,16364337,0,0x0,8
tick,0x7ff8e7af1be4,16379561,0,0x0,8
tick,0x7ff8e7af1be4,16395057,0,0x0,8
tick,0x7ff8e7af1be4,16411387,0,0x0,8
tick,0x7ff8e7af1be4,16427391,0,0x0,8
tick,0x7ff8e7af1be4,16442859,0,0x0,8
tick,0x7ff8e7af1be4,16458396,0,0x0,8
tick,0x7ff8e7af1be4,16473757,0,0x0,8
tick,0x7ff8e7af1be4,16489614,0,0x0,8
tick,0x7ff8e7af1be4,16505473,0,0x0,8
tick,0x7ff8e7af1be4,16521455,0,0x0,8
tick,0x7ff8e7af1be4,16537355,0,0x0,8
tick,0x7ff8e7af1be4,16553302,0,0x0,8
tick,0x7ff8e7af1be4,16569114,0,0x0,8
tick,0x7ff8e7af1be4,16585035,0,0x0,8
tick,0x7ff8e7af1be4,16592150,0,0x0,8
tick,0x7ff8e7af1be4,16593409,0,0x0,8
tick,0x7ff8e7af1be4,16600431,0,0x0,8
tick,0x7ff8e7af1be4,16610601,0,0x0,8
tick,0x7ff8e7af1be4,16626701,0,0x0,8
tick,0x7ff8e7af1be4,16642758,0,0x0,8
tick,0x7ff8e7af1be4,16658050,0,0x0,8
tick,0x7ff8e7af1be4,16673609,0,0x0,8
tick,0x7ff8e7af1be4,16689899,0,0x0,8
tick,0x7ff8e7af1be4,16705518,0,0x0,8
tick,0x7ff8e7af1be4,16721992,0,0x0,8
tick,0x7ff8e7af1be4,16736798,0,0x0,8
tick,0x7ff8e7af1be4,16753670,0,0x0,8
tick,0x7ff8e7af1be4,16769171,0,0x0,8
tick,0x7ff8e7af1be4,16783544,0,0x0,8
tick,0x7ff8e7af1be4,16799620,0,0x0,8
tick,0x7ff8e7af1be4,16815483,0,0x0,8
tick,0x7ff8e7af1be4,16831230,0,0x0,8
tick,0x7ff8e7af1be4,16846677,0,0x0,8
tick,0x7ff8e7af1be4,16862820,0,0x0,8
tick,0x7ff8e7af1be4,16878380,0,0x0,8
tick,0x7ff8e7af1be4,16893525,0,0x0,8
tick,0x7ff8e7af1be4,16909615,0,0x0,8
tick,0x7ff8e7af1be4,16925632,0,0x0,8
tick,0x7ff8e7af1be4,16941314,0,0x0,8
tick,0x7ff8e7af1be4,16957220,0,0x0,8
tick,0x7ff8e7af1be4,16973145,0,0x0,8
tick,0x7ff8e7af1be4,16990123,0,0x0,8
tick,0x7ff8e7af1be4,17006202,0,0x0,8
code-creation,JS,10,17011273,0x1795a8f610e,357,onStreamRead node:internal/stream_base_commons:167:22,0x1795a8cd258,~
code-source-info,0x1795a8f610e
code-creation,JS,10,17011632,0x1795a8f6436,5,get node:net:680:16,0x2fad2a1a570,~
code-source-info,0x1795a8f6436,428,18730,18769,C0O18752C4O18764,,
code-creation,JS,10,17011742,0x1795a8f64f6,20,Readable.push node:internal/streams/readable:233:35,0x209d2955fe8,~
code-source-info,0x1795a8f64f6,406,7954,8034,C0O7977C14O7984C19O8031,,
code-creation,JS,10,17012108,0x1795a8f6726,524,readableAddChunk node:internal/streams/readable:242:26,0x209d297bd40,~
code-source-info,0x1795a8f
code-creation,JS,10,17012515,0x1795a8f6b7e,179,addChunk node:internal/streams/readable:312:18,0x209d297bd90,~
code-source-info,0x1795a8f6b7e,406,10655,11394,C0O10705C6O10722C12O10729C17O10745C23O10767C31O10767C38O10789C43O10907C49O10939C54O10957C59O10957C65O10987C66O11011C70O11033C71O11051C75O11071C83O11071C91O11141C96O11163C109O11186C116O11154C120O11199C124O11228C129O11235C134O11235C141O11274C146O11281C151O11281C156O11311C162O11332C165O11332C169O11362C172O11362C178O11393,,
code-creation,JS,10,17012893,0x1795a8f6ece,498,onData node:internal/readline/emitKeypressEvents:46:18,0x3b94bd8bac0,~
code-source-info,0x1795a8f6ece
code-creation,JS,10,17013196,0x1795a8f72ce,88,write node:string_decoder:98:47,0x209d295ce68,~
code-source-info,0x1795a8f72ce,411,3347,3729,C0O3358C6O3392C8O3403C9O3407C14O3412C20O3441C38O3447C43O3441C44O3598C46O3608C48O3607C53O3632C63O3638C68O3632C69O3685C76O3704C78O3703C82O3692C87O3726,,
code-creation,JS,10,17013370,0x1795a8f744e,63,clearTimeout node:timers:184:22,0x320a78cc5b8,~
script-source,31,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathTrunc\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n} = binding;\x0d\nconst L = require('internal/linkedlist');\x0d\nconst {\x0d\n  async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  decRefCount\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n  }\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  getTimerDuration\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  immediateQueue\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n} = require('internal/timers');\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nlet timersPromises;\x0d\n\x0d\nconst {\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// This stores all the known timer async ids to allow users to clearTimeout and\x0d\n// clearInterval using those ids\x2C to match the spec and the rest of the web\x0d\n// platform.\x0d\nconst knownTimersById = { __proto__: null };\x0d\n\x0d\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\x0d\nfunction unenroll(item) {\x0d\n  if (item._destroyed)\x0d\n    return;\x0d\n\x0d\n  item._destroyed = true;\x0d\n\x0d\n  if (item[kHasPrimitive])\x0d\n    delete knownTimersById[item[async_id_symbol]];\x0d\n\x0d\n  // Fewer checks may be possible\x2C but these cover everything.\x0d\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\x0d\n    emitDestroy(item[async_id_symbol]);\x0d\n\x0d\n  L.remove(item);\x0d\n\x0d\n  // We only delete refed lists because unrefed ones are incredibly likely\x0d\n  // to come from http and be recreated shortly after.\x0d\n  // TODO: Long-term this could instead be handled by creating an internal\x0d\n  // clearTimeout that makes it clear that the list should not be deleted.\x0d\n  // That function could then be used by http and other similar modules.\x0d\n  if (item[kRefed]) {\x0d\n    // Compliment truncation during insert().\x0d\n    const msecs = MathTrunc(item._idleTimeout);\x0d\n    const list = timerListMap[msecs];\x0d\n    if (list !== undefined && L.isEmpty(list)) {\x0d\n      debug('unenroll: list empty');\x0d\n      timerListQueue.removeAt(list.priorityQueuePosition);\x0d\n      delete timerListMap[list.msecs];\x0d\n    }\x0d\n\x0d\n    decRefCount();\x0d\n  }\x0d\n\x0d\n  // If active is called later\x2C then we want to make sure not to insert again\x0d\n  item._idleTimeout = -1;\x0d\n}\x0d\n\x0d\n// Make a regular object able to act as a timer by setting some properties.\x0d\n// This function does not start the timer\x2C see `active()`.\x0d\n// Using existing objects as timers slightly reduces object overhead.\x0d\nfunction enroll(item\x2C msecs) {\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // If this item was already in a list somewhere\x0d\n  // then we should unenroll it from that\x0d\n  if (item._idleNext) unenroll(item);\x0d\n\x0d\n  L.init(item);\x0d\n  item._idleTimeout = msecs;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Schedules the execution of a one-time `callback`\x0d\n * after `after` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [after]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setTimeout;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels a timeout.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearTimeout(timer) {\x0d\n  if (timer && timer._onTimeout) {\x0d\n    timer._onTimeout = null;\x0d\n    unenroll(timer);\x0d\n    return;\x0d\n  }\x0d\n  if (typeof timer === 'number' || typeof timer === 'string') {\x0d\n    const timerInstance = knownTimersById[timer];\x0d\n    if (timerInstance !== undefined) {\x0d\n      timerInstance._onTimeout = null;\x0d\n      unenroll(timerInstance);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Schedules repeated execution of `callback`\x0d\n * every `repeat` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [repeat]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cancels an interval.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearInterval(timer) {\x0d\n  // clearTimeout and clearInterval can be used to clear timers created from\x0d\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\x0d\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\x0d\n  clearTimeout(timer);\x0d\n}\x0d\n\x0d\nTimeout.prototype.close = function() {\x0d\n  clearTimeout(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Coerces a `Timeout` to a primitive.\x0d\n * @returns {number}\x0d\n */\x0d\nTimeout.prototype[SymbolToPrimitive] = function() {\x0d\n  const id = this[async_id_symbol];\x0d\n  if (!this[kHasPrimitive]) {\x0d\n    this[kHasPrimitive] = true;\x0d\n    knownTimersById[id] = this;\x0d\n  }\x0d\n  return id;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Schedules the immediate execution of `callback`\x0d\n * after I/O events' callbacks.\x0d\n * @param {Function} callback\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Immediate}\x0d\n */\x0d\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n      break;\x0d\n    case 2:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 4; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 1] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  return new Immediate(callback\x2C args);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setImmediate;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels an immediate.\x0d\n * @param {Immediate} immediate\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearImmediate(immediate) {\x0d\n  if (!immediate || immediate._destroyed)\x0d\n    return;\x0d\n\x0d\n  immediateInfo[kCount]--;\x0d\n  immediate._destroyed = true;\x0d\n\x0d\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleImmediateRef(false);\x0d\n  }\x0d\n  immediate[kRefed] = null;\x0d\n\x0d\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\x0d\n    emitDestroy(immediate[async_id_symbol]);\x0d\n  }\x0d\n\x0d\n  immediate._onImmediate = null;\x0d\n\x0d\n  immediateQueue.remove(immediate);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setTimeout\x2C\x0d\n  clearTimeout\x2C\x0d\n  setImmediate\x2C\x0d\n  clearImmediate\x2C\x0d\n  setInterval\x2C\x0d\n  clearInterval\x2C\x0d\n  _unrefActive: deprecate(\x0d\n    unrefActive\x2C\x0d\n    'timers._unrefActive() is deprecated.' +\x0d\n    ' Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0127')\x2C\x0d\n  active: deprecate(\x0d\n    active\x2C\x0d\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0126')\x2C\x0d\n  unenroll: deprecate(\x0d\n    unenroll\x2C\x0d\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\x0d\n    'DEP0096')\x2C\x0d\n  enroll: deprecate(\x0d\n    enroll\x2C\x0d\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\x0d\n    'DEP0095')\x2C\x0d\n};\x0d\n
code-source-info,0x1795a8f744e,31,5393,5751,C0O5406C4O5425C10O5444C11O5461C15O5474C18O5474C22O5496C23O5503C24O5512C36O5601C43O5616C47O5630C49O5672C50O5697C54O5712C57O5712C62O5750,,
code-creation,JS,10,17014694,0x1795a8f7596,42,charLengthAt node:internal/readline/utils:50:22,0x164cc3a9bd0,~
code-source-info,0x1795a8f7596,451,1292,1540,C0O1314C7O1321C12O1441C14O1450C15O1459C20O1466C28O1504C30O1501C41O1537,,
code-creation,JS,10,17015115,0x1795a8f796e,94,onkeypress node:internal/readline/interface:270:22,0x3b94bd84128,~
code-source-info,0x1795a8f796e,453,7703,8080,C0O7719C9O7724C11O7723C15O7734C21O7749C25O7764C31O7961C38O7992C45O7961C51O8013C57O8020C68O8036C73O8047C82O8052C84O8051C88O8065C93O8079,,
code-creation,JS,10,17015264,0x1795a8f7ac6,5,get node:readline:345:8,0x164cc3a70a0,~
code-source-info,0x1795a8f7ac6,449,8400,8441,C0O8424C4O8434,,
code-creation,JS,10,17015529,0x1795a8f7d36,416,REPLServer.self._ttyWrite node:repl:980:20,0x13674f3c428,~
code-source-info,0x1795a8f7d
code-creation,JS,10,17016026,0x1795a8f81be,598,clearPreview node:internal/repl/utils:174:24,0x3b94bd948a0,~
code-source-info,0x1795a8f81be
code-creation,JS,10,17016517,0x1795a8f86ce,397,reverseSearch node:internal/repl/utils:703:25,0x3b94bd928b8,~
code-source-info,0x1795a8f86ce
code-creation,JS,10,17017369,0x1795a8f8f16,2318, node:internal/readline/interface:1063:14,0x164cc3af848,~
code-source-info,0x1795a8f8f
code-creation,JS,10,17018510,0x1795a8f9e4e,5,get node:readline:255:8,0x164cc3a6c08,~
code-source-info,0x1795a8f9e4e,449,6853,6898,C0O6877C4O6891,,
code-creation,JS,10,17018727,0x1795a8f9f96,235, node:internal/readline/interface:629:18,0x164cc3af0f8,~
code-source-info,0x1795a8f9f
code-creation,JS,10,17018985,0x1795a8fa22e,16, node:internal/readline/interface:427:16,0x164cc3aee38,~
code-source-info,0x1795a8fa22e,453,11805,11881,C0O11833C2O11838C4O11837C8O11855C15O11880,,
code-creation,JS,10,17019095,0x1795a8fa37e,64, node:internal/readline/interface:897:21,0x164cc3af5f8,~
code-source-info,0x1795a8fa37e,453,25936,26110,C0O25958C7O25986C9O25985C20O26001C26O26007C30O25962C38O26028C40O26017C45O26060C52O26085C54O26084C58O26060C63O26109,,
code-creation,JS,10,17019973,0x1795a8fa866,64,showCompletionPreview node:internal/repl/utils:225:33,0x3b94bd94710,~
code-source-info,0x1795a8fa866,458,7255,9112,C0O7255C12O7284C25O7308C33O7333C39O7333C41O7366C46O7371C51O7381C56O7371C63O9111,,
code-creation,JS,10,17020075,0x1795a8faa16,74,completer node:repl:759:21,0x13674f11e88,~
code-source-info,0x1795a8faa16,447,26049,26181,C0O26067C14O26090C26O26115C35O26121C38O26126C46O26139C49O26144C54O26144C63O26171C67O26067C73O26180,,
tick,0x7ff778140160,17020973,0,0x0,2,0x7ff777ca8e40,0x1795a8faa59,0x1795a8fa89e,0x3b94bd97685,0x1795a8f7e32,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x3b94bd9d35e
code-creation,JS,10,17021225,0x1795a8fb526,1425,complete node:repl:1295:18,0x1b0323df208,~
code-source-info,0x1795a8fb
code-creation,JS,10,17022304,0x1795a8fc2fe,32,getGlobalLexicalScopeNames node:repl:1239:36,0x1b0323df118,~
code-source-info,0x1795a8fc2fe,447,40592,40883,C0O40592C9O40609C26O40616C31O40880,,
code-creation,JS,10,17022461,0x1795a8fc4a6,129,sendInspectorCommand node:internal/util/inspector:47:30,0x320a78e73f8,~
script-source,39,node:internal/util/inspector,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validatePort } = require('internal/validators');\x0d\n\x0d\nconst kMinPort = 1024;\x0d\nconst kMaxPort = 65535;\x0d\nconst kInspectArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\nconst kInspectMsgRegex = /Debugger listening on ws:\\/\\/\\[?(.+?)\\]?:(\\d+)\\/|For help\x2C see: https:\\/\\/nodejs\\.org\\/en\\/docs\\/inspector|Debugger attached|Waiting for the debugger to disconnect\\.\\.\\./;\x0d\n\x0d\nconst _isUsingInspector = new SafeWeakMap();\x0d\nfunction isUsingInspector(execArgv = process.execArgv) {\x0d\n  if (!_isUsingInspector.has(execArgv)) {\x0d\n    _isUsingInspector.set(execArgv\x2C\x0d\n                          ArrayPrototypeSome(execArgv\x2C (arg) => RegExpPrototypeExec(kInspectArgRegex\x2C arg) !== null) ||\x0d\n      RegExpPrototypeExec(kInspectArgRegex\x2C process.env.NODE_OPTIONS) !== null);\x0d\n  }\x0d\n  return _isUsingInspector.get(execArgv);\x0d\n}\x0d\n\x0d\nlet debugPortOffset = 1;\x0d\nfunction getInspectPort(inspectPort) {\x0d\n  if (typeof inspectPort === 'function') {\x0d\n    inspectPort = inspectPort();\x0d\n  } else if (inspectPort == null) {\x0d\n    inspectPort = process.debugPort + debugPortOffset;\x0d\n    if (inspectPort > kMaxPort)\x0d\n      inspectPort = inspectPort - kMaxPort + kMinPort - 1;\x0d\n    debugPortOffset++;\x0d\n  }\x0d\n  validatePort(inspectPort);\x0d\n\x0d\n  return inspectPort;\x0d\n}\x0d\n\x0d\nlet session;\x0d\nfunction sendInspectorCommand(cb\x2C onError) {\x0d\n  const { hasInspector } = internalBinding('config');\x0d\n  if (!hasInspector) return onError();\x0d\n  const inspector = require('inspector');\x0d\n  if (session === undefined) session = new inspector.Session();\x0d\n  session.connect();\x0d\n  try {\x0d\n    return cb(session);\x0d\n  } finally {\x0d\n    session.disconnect();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isInspectorMessage(string) {\x0d\n  return isUsingInspector() && RegExpPrototypeExec(kInspectMsgRegex\x2C string) !== null;\x0d\n}\x0d\n\x0d\n// Create a special require function for the inspector command line API\x0d\nfunction installConsoleExtensions(commandLineApi) {\x0d\n  if (commandLineApi.require) { return; }\x0d\n  const { tryGetCwd } = require('internal/process/execution');\x0d\n  const CJSModule = require('internal/modules/cjs/loader').Module;\x0d\n  const { makeRequireFunction } = require('internal/modules/helpers');\x0d\n  const consoleAPIModule = new CJSModule('<inspector console>');\x0d\n  const cwd = tryGetCwd();\x0d\n  consoleAPIModule.paths = [];\x0d\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule._nodeModulePaths(cwd));\x0d\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule.globalPaths);\x0d\n  commandLineApi.require = makeRequireFunction(consoleAPIModule);\x0d\n}\x0d\n\x0d\n// Wrap a console implemented by Node.js with features from the VM inspector\x0d\nfunction wrapConsole(consoleFromNode) {\x0d\n  const { consoleCall\x2C console: consoleFromVM } = internalBinding('inspector');\x0d\n  for (const key of ObjectKeys(consoleFromVM)) {\x0d\n    // If global console has the same method as inspector console\x2C\x0d\n    // then wrap these two methods into one. Native wrapper will preserve\x0d\n    // the original stack.\x0d\n    if (ObjectPrototypeHasOwnProperty(consoleFromNode\x2C key)) {\x0d\n      consoleFromNode[key] = FunctionPrototypeBind(\x0d\n        consoleCall\x2C\x0d\n        consoleFromNode\x2C\x0d\n        consoleFromVM[key]\x2C\x0d\n        consoleFromNode[key]\x2C\x0d\n      );\x0d\n      ObjectDefineProperty(consoleFromNode[key]\x2C 'name'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: key\x2C\x0d\n      });\x0d\n    } else {\x0d\n      // Add additional console APIs from the inspector\x0d\n      consoleFromNode[key] = consoleFromVM[key];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getInspectPort\x2C\x0d\n  installConsoleExtensions\x2C\x0d\n  isInspectorMessage\x2C\x0d\n  isUsingInspector\x2C\x0d\n  sendInspectorCommand\x2C\x0d\n  wrapConsole\x2C\x0d\n};\x0d\n
code-source-info,0x1795a8fc4a6,39,1516,1840,C0O1560C6O1560C11O1543C16O1590C18O1616C21O1626C22O1648C28O1648C33O1673C39O1724C44O1710C52O1708C58O1738C63O1746C68O1746C75O1771C77O1781C80O1778C96O1811C101O1819C106O1819C128O1839,,
code-creation,JS,10,17023339,0x1795a8fc646,76,Session node:inspector:53:14,0x2fad2a0a0b0,~
code-source-info,0x1795a8fc646,419,1279,1418,C3O1289C5O1289C11O1289C23O1303C28O1308C32O1326C36O1339C41O1344C46O1358C50O1368C55O1373C60O1403C63O1399C68O1397C75O1417,,
code-creation,JS,10,17023709,0x1795a8fcb4e,76,connect node:inspector:64:10,0x2fad2a0a100,~
code-source-info,0x1795a8fcb4e,419,1521,1736,C0O1521C9O1531C16O1540C18O1539C23O1566C35O1572C40O1566C41O1639C48O1644C55O1675C65O1671C70O1662C75O1735,,
code-creation,JS,10,17024012,0x1795a8fce16,49, node:repl:1240:31,0x1795a8fc1f8,~
code-source-info,0x1795a8fce16,447,40637,40868,C0O40637C8O40669C10O40669C12O40686C29O40755C41O40686C46O40850C48O40863,,
code-creation,JS,10,17024166,0x1795a8fd14e,187,post node:inspector:116:7,0x2fad2a0a1f0,~
code-source-info,0x1795a8fd14e,419,3107,3801,C0O3141C8O3141C13O3180C23O3236C26O3262C29O3289C33O3310C41O3310C46O3356C50O3379C58O3379C63O3433C65O3443C67O3442C72O3471C77O3477C82O3471C83O3535C85O3540C97O3553C104O3578C111O3580C117O3584C124O3599C128O3620C130O3635C134O3657C138O3680C140O3685C142O3684C146O3709C151O3709C157O3740C159O3745C161O3744C165O3763C172O3772C175O3772C180O3763C186O3800,,
code-creation,JS,10,17024457,0x1795a8fd41e,19, node:inspector:68:22,0x1795a8fca88,~
code-source-info,0x1795a8fd41e,419,1686,1729,C0O1720C7O1704C9O1703C13O1720C18O1729,,
code-creation,JS,10,17024572,0x1795a8fd616,193, node:inspector:86:20,0x2fad2a0a1a0,~
code-source-info,0x1795a8fd616,419,2217,2899,C0O2249C5O2249C13O2298C19O2330C21O2335C23O2334C27O2359C32O2370C37O2359C43O2384C45O2389C47O2388C51O2413C56O2427C61O2419C66O2441C70O2479C76O2501C78O2521C81O2550C86O2556C91O2624C96O2630C103O2517C109O2508C113O2640C114O2667C116O2689C121O2667C128O2739C133O2751C138O2739C144O2782C152O2782C171O2860C176O2868C184O2868C192O2898,,
code-creation,JS,10,17024699,0x1795a8fd8e6,19, node:repl:1244:8,0x1795a8fcd28,~
code-source-info,0x1795a8fd8e6,447,40774,40842,C0O40802C4O40829C11O40820C18O40841,,
code-creation,JS,11,17024920,0x7ff6f8393fc0,1368,callbackTrampoline node:internal/async_hooks:118:28,0xf2fdb68b00,^
code-source-info,0x7ff6f8393fc0,13,5308,5850,,,
code-creation,JS,11,17024963,0x7ff6f83945c0,156,destroy node:domain:117:10,0x164cc3bdf30,^
code-source-info,0x7ff6f83945c0,457,4251,4312,,,
code-creation,JS,11,17024993,0x7ff6f8394700,116,get node:domain:65:16,0x164cc3bdd90,^
code-source-info,0x7ff6f8394700,457,2341,2374,,,
code-creation,JS,11,17025025,0x7ff6f8394800,352,destroy node:internal/inspector_async_hook:40:12,0x2dcd6649920,^
code-source-info,0x7ff6f8394800,65,1102,1255,,,
code-creation,JS,11,17025055,0x7ff6f8394a00,284,before node:internal/inspector_async_hook:28:11,0x2dcd6649430,^
code-source-info,0x7ff6f8394a00,65,831,951,,,
code-creation,JS,11,17025099,0x7ff6f8394bc0,284,after node:internal/inspector_async_hook:34:10,0x2dcd66498e8,^
code-source-info,0x7ff6f8394bc0,65,965,1086,,,
code-creation,JS,11,17025138,0x7ff6f8394d80,552,CSI node:internal/readline/utils:19:13,0x164cc3a9b48,^
code-source-info,0x7ff6f8394d80,451,415,605,,,
code-creation,JS,11,17025173,0x7ff6f8395040,356,emitInitScript node:internal/async_hooks:496:24,0xf2fdb69550,^
code-source-info,0x7ff6f8395040,13,17000,17396,,,
code-creation,JS,11,17025204,0x7ff6f8395240,316,createWriteWrap node:internal/stream_base_commons:109:25,0x1795a8cd160,^
code-source-info,0x7ff6f8395240,429,2830,3055,,,
code-creation,JS,11,17025235,0x7ff6f8395400,312,writeGeneric node:internal/stream_base_commons:147:22,0x1795a8cd1e8,^
code-source-info,0x7ff6f8395400,429,3746,3936,,,
code-creation,JS,11,17025266,0x7ff6f83955c0,148,Socket._write node:net:954:35,0x2fad2a1aec0,^
code-source-info,0x7ff6f83955c0,428,25750,25825,,,
code-creation,JS,11,17025294,0x7ff6f8395700,156,Writable.write node:internal/streams/writable:336:36,0x2fad2a02a40,^
code-source-info,0x7ff6f8395700,413,11106,11186,,,
code-creation,JS,11,17025323,0x7ff6f8395840,112,isEmpty node:internal/fixed_queue:95:10,0x320a78c5f50,^
code-source-info,0x7ff6f8395840,29,3731,3773,,,
code-creation,JS,11,17025352,0x7ff6f8395940,40, node:internal/per_context/primordials:333:21,0x2f9728b7938,^
code-source-info,0x7ff6f8395940,6,9629,9660,,,
code-creation,JS,11,17025385,0x7ff6f8395a00,372,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0xf2fdb69280,^
code-source-info,0x7ff6f8395a00,13,15459,15722,,,
code-creation,JS,11,17025416,0x7ff6f8395c00,144,initHooksExist node:internal/async_hooks:479:24,0xf2fdb69410,^
code-source-info,0x7ff6f8395c00,13,16726,16760,,,
code-creation,JS,10,17025547,0x1795a8fe006,223,disconnect node:inspector:149:13,0x2fad2a0a240,~
code-source-info,0x1795a8fe006,419,3963,4362,C0O3973C2O3983C4O3982C9O4009C10O4016C11O4022C13O4027C15O4026C19O4045C24O4045C28O4064C30O4069C34O4087C38O4127C40O4132C42O4131C46O4156C51O4156C56O4194C73O4182C101O4182C104O4223C107O4231C114O4254C117O4250C123O4231C129O4171C193O4291C195O4296C197O4295C201O4320C206O4320C210O4334C212O4339C217O4353C222O4361,,
code-creation,JS,10,17025800,0x1795a8fe3de,121,filteredOwnPropertyNames node:repl:1220:34,0x1b0323df0c8,~
code-source-info,0x1795a8fe3de,447,39756,40553,C0O39767C4O39777C6O39787C7O40006C9O40016C14O40020C20O40086C28O40086C34O40143C36O40180C42O40214C47O40250C52O40214C57O40265C61O40298C64O40298C71O40330C75O40369C82O40386C84O40384C88O40403C95O40437C98O40437C106O40481C115O40410C120O40550,,
code-creation,JS,10,17025947,0x1795a8fe5a6,116,isIdentifier node:repl:1191:22,0x1b0323df028,~
code-source-info,0x1795a8fe5a6,447,39050,39495,C0O39061C2O39069C7O39084C8O39097C9O39120C16O39120C22O39159C27O39164C33O39197C34O39210C35O39236C41O39242C53O39276C54O39294C58O39288C63O39328C68O39328C74O39369C79O39374C85O39405C86O39418C87O39431C93O39438C98O39457C104O39304C110O39263C114O39480C115O39492,,
code-creation,JS,10,17026064,0x1795a8fe75e,112,isIdentifierStart node:internal/deps/acorn/acorn/dist/acorn:64:29,0x164cc385538,~
code-source-info,0x1795a8fe75e,448,12479,12871,C0O12501C2O12510C7O12518C9O12530C12O12536C13O12544C15O12553C20O12561C21O12572C22O12580C24O12589C29O12597C31O12609C34O12615C35O12623C37O12632C42O12641C43O12652C44O12660C50O12669C55O12682C59O12694C67O12729C72O12734C76O12741C81O12741C87O12729C92O12760C93O12768C98O12792C99O12804C100O12812C106O12819C111O12866,,
code-creation,JS,10,17026153,0x1795a8fe8fe,143,isIdentifierChar node:internal/deps/acorn/acorn/dist/acorn:76:28,0x164cc385588,~
code-source-info,0x1795a8fe8fe,448,12967,13473,C0O12989C2O12998C7O13006C9O13018C12O13024C13O13032C15O13041C20O13049C21O13060C22O13068C24O13077C29O13085C30O13097C31O13105C33O13114C38O13122C39O13133C40O13141C42O13150C47O13158C49O13170C52O13176C53O13184C55O13193C60O13202C61O13213C62O13221C68O13230C73O13243C77O13255C85O13285C90O13290C94O13297C99O13297C105O13285C110O13316C111O13324C116O13348C117O13360C118O13368C124O13375C137O13426C142O13468,,
code-creation,JS,10,17026243,0x1795a8fead6,40,isNotLegacyObjectPrototypeMethod node:repl:1212:42,0x1b0323df078,~
code-source-info,0x1795a8fead6,447,39540,39719,C0O39551C3O39558C11O39588C19O39623C27O39658C35O39693C39O39716,,
code-creation,JS,11,17026603,0x7ff6f8395d40,988,isIdentifierChar node:internal/deps/acorn/acorn/dist/acorn:76:28,0x164cc385588,^
code-source-info,0x7ff6f8395d40,448,12967,13473,,,
code-creation,JS,11,17026640,0x7ff6f83961c0,988,isIdentifier node:repl:1191:22,0x1b0323df028,^
code-source-info,0x7ff6f83961c0,447,39050,39495,,,
code-creation,JS,11,17026663,0x7ff6f8396640,384,isNotLegacyObjectPrototypeMethod node:repl:1212:42,0x1b0323df078,^
code-source-info,0x7ff6f8396640,447,39540,39719,,,
code-creation,JS,11,17026690,0x7ff6f8396840,760,isIdentifierStart node:internal/deps/acorn/acorn/dist/acorn:64:29,0x164cc385538,^
code-source-info,0x7ff6f8396840,448,12479,12871,,,
code-creation,JS,10,17026769,0x1795a8ff18e,17,addCommonWords node:repl:1686:24,0x1b0323df2f8,~
code-source-info,0x1795a8ff18e,447,56253,56767,C0O56372C5O56391C10O56372C16O56766,,
code-creation,JS,10,17026875,0x1795a8ff4de,234,completionGroupsLoaded node:repl:1542:34,0x1795a8faf58,~
code-source-info,0x1795a8ff4de,447,51543,53333,C0O51543C11O51633C18O51654C28O51664C42O51709C44O51709C46O51744C57O51777C60O51744C64O51744C66O51793C77O51815C85O51793C90O52307C97O52324C107O52381C109O52381C111O52454C118O52454C123O52454C125O52474C128O52484C136O52484C141O52646C152O52668C160O52646C165O53202C169O53217C175O53221C180O53238C190O53238C194O53286C210O53302C221O53315C227O53286C233O53332,,
code-creation,JS,10,17026984,0x1795a8ff7be,43, node:repl:1547:47,0x1795a8ff348,~
code-source-info,0x1795a8ff7be,447,51833,52297,C0O51877C7O51898C12O51877C18O52201C24O52222C33O52241C36O52222C42O52296,,
code-creation,JS,10,17027025,0x1795a8ff90e,30, node:repl:1548:59,0x1795a8ff700,~
code-source-info,0x1795a8ff90e,447,51905,52171,C0O52031C11O52078C14O52078C21O52130C24O52038C29O52160,,
code-creation,JS,10,17027139,0x1795a8ffb3e,83, node:repl:1569:45,0x1795a8ff398,~
code-source-info,0x1795a8ffb3e,447,52686,53143,C0O52706C7O52725C12O52706C17O52784C22O52794C27O52807C34O52829C39O52807C44O53045C49O53059C56O53064C61O53088C70O53110C76O53088C82O53142,,
code-creation,JS,10,17027188,0x1795a8ffcbe,14, node:repl:1570:33,0x1795a8ffa10,~
code-source-info,0x1795a8ffcbe,447,52732,52758,C0O52743C2O52745C13O52758,,
code-creation,JS,10,17027225,0x1795a8ffdc6,51, node:repl:1572:36,0x1795a8ffa60,~
code-source-info,0x1795a8ffdc6,447,52836,52993,C0O52858C5O52873C10O52873C17O52898C26O52920C29O52898C34O52952C39O52962C44O52962C50O52992,,
code-creation,JS,10,17027375,0x2ff96f1c22e,496, node:internal/repl/utils:230:26,0x1795a8fa7b0,~
code-source-info,0x2ff96f1c22e
code-creation,JS,10,17027542,0x2ff96f1c616,125,commonPrefix node:internal/readline/utils:367:22,0x164cc3a9c58,~
code-source-info,0x2ff96f1c616,451,11764,12172,C0O11791C6O11798C11O11812C13O11822C14O11843C21O11850C26O11864C27O11878C30O11882C31O11906C38O11925C41O11925C46O11906C51O11971C52O11977C56O12011C60O12018C63O12003C67O12040C69O12051C73O12045C78O12071C80O12078C86O12089C89O12082C94O12103C107O12110C112O12142C113O12060C118O12027C122O12158C124O12169,,
code-creation,JS,10,17027690,0x2ff96f1caa6,116,getInputPreview node:internal/repl/utils:298:27,0x3b94bd947b0,~
code-source-info,0x2ff96f1caa6,458,9595,12339,C0O9595C13O9737C26O9741C37O9792C46O9792C57O9832C61O9850C66O9862C76O9856C78O9879C84O9887C92O9907C109O9907C115O12338,,
code-creation,JS,10,17027913,0x2ff96f1cd46,61, node:internal/repl/utils:306:26,0x2ff96f1c968,~
code-source-info,0x2ff96f1cd46,458,9928,12281,C0O9928C9O9950C12O9958C29O10006C42O10094C54O9958C60O12280,,
code-creation,Script,10,17028082,0x2ff96f1d086,5, :1:1,0x2ff96f1cfc0,~
script-source,463,,n
code-source-info,0x2ff96f1d086,463,0,1,C0O0C4O1,,
code-creation,JS,10,17028933,0x2ff96f1e596,315, node:internal/repl/utils:312:10,0x2ff96f1cc20,~
code-source-info,0x2ff96f1e596,458,10121,12272,C0O10152C4O10176C9O10176C13O10204C14O10211C15O10240C20O10280C26O10314C37O10329C40O10344C49O10351C52O10329C58O10314C65O10590C71O10638C78O10648C83O10695C90O10705C95O10894C102O10904C111O10951C125O10970C131O11008C140O11008C147O11057C153O11382C165O11413C170O11420C181O11450C187O11477C192O11502C196O11534C207O11558C210O11382C216O11586C219O11594C237O11821C251O11870C259O11904C268O11905C283O11594C290O12194C297O12216C303O12246C308O12194C314O12271,,
code-creation,JS,10,17029115,0x2ff96f1ea76,606,inputPreviewCallback node:internal/repl/utils:390:34,0x3b94bd97538,~
code-source-info,0x2ff96f1ea
code-creation,JS,10,17029288,0x2ff96f1ef76,41,maybeReadMore node:internal/streams/readable:614:23,0x209d296cb28,~
code-source-info,0x2ff96f1ef76,406,20323,20483,C0O20355C6O20376C12O20396C13O20414C17O20427C20O20435C34O20435C40O20482,,
code-creation,JS,11,17029445,0x7ff6f8396bc0,388,shift node:internal/fixed_queue:80:8,0x320a78c5d90,^
code-source-info,0x7ff6f8396bc0,29,3379,3596,,,
code-creation,JS,11,17029470,0x7ff6f8396e00,308, node:repl:1548:59,0x1795a8ff700,^
code-source-info,0x7ff6f8396e00,447,51905,52171,,,
code-creation,JS,11,17029492,0x7ff6f8396fc0,328,before node:domain:98:9,0x164cc3bdec0,^
code-source-info,0x7ff6f8396fc0,457,3532,4018,,,
code-creation,JS,11,17029511,0x7ff6f83971c0,328,after node:domain:109:8,0x164cc3bdef8,^
code-source-info,0x7ff6f83971c0,457,4028,4239,,,
code-creation,JS,11,17029540,0x7ff6f83973c0,1540,pushAsyncContext node:internal/async_hooks:540:26,0xf2fdb696e0,^
code-source-info,0x7ff6f83973c0,13,18101,18656,,,
code-creation,JS,11,17029560,0x7ff6f8397a80,336,emitBeforeScript node:internal/async_hooks:510:26,0xf2fdb695a0,^
code-source-info,0x7ff6f8397a80,13,17427,17583,,,
code-creation,JS,11,17029577,0x7ff6f8397c80,44,nop node:internal/streams/writable:73:13,0x2fad2a02380,^
code-source-info,0x7ff6f8397c80,413,2473,2478,,,
code-creation,JS,11,17029595,0x7ff6f8397d40,144,destroyHooksExist node:internal/async_hooks:487:27,0xf2fdb694b0,^
code-source-info,0x7ff6f8397d40,13,16853,16890,,,
code-creation,JS,11,17029612,0x7ff6f8397e80,144,enabledHooksExist node:internal/async_hooks:475:27,0xf2fdb693c0,^
code-source-info,0x7ff6f8397e80,13,16664,16699,,,
code-creation,JS,11,17029641,0x7ff6f8397fc0,1424,popAsyncContext node:internal/async_hooks:554:25,0xf2fdb69730,^
code-source-info,0x7ff6f8397fc0,13,18749,19351,,,
code-creation,JS,10,17029729,0x2ff96f1f8ae,94,maybeReadMore_ node:internal/streams/readable:621:24,0x209d296cb78,~
code-source-info,0x2ff96f1f8ae,406,20510,22314,C0O21969C6O21987C12O22013C17O22028C21O22020C26O22063C32O22080C38O22087C43O22121C48O22134C56O22134C60O22177C67O22177C72O22209C76O22199C81O22270C83O21955C87O22285C88O22303C93O22313,,
tick,0x7ff8e7af1be4,17036969,0,0x0,8
tick,0x7ff8e7af1be4,17052363,0,0x0,8
tick,0x7ff8e7af1be4,17067999,0,0x0,8
tick,0x7ff8e7af1be4,17083455,0,0x0,8
tick,0x7ff8e7af1be4,17099278,0,0x0,8
tick,0x7ff8e7af1be4,17103088,0,0x0,8
tick,0x7ff8e7af1be4,17104745,0,0x0,8
tick,0x7ff8e7af1be4,17120146,0,0x0,8
tick,0x7ff8e7af1be4,17135918,0,0x0,8
tick,0x7ff8e7af1be4,17151550,0,0x0,8
tick,0x7ff8e7af1be4,17167346,0,0x0,8
tick,0x7ff8e7af1be4,17182801,0,0x0,8
tick,0x7ff8e7af1be4,17198576,0,0x0,8
code-creation,RegExp,3,17209186,0x7ff6f8398600,944,^[0-9A-Za-z]$
code-creation,RegExp,3,17209341,0x7ff6f8398a40,920,^[A-Z]$
code-creation,RegExp,3,17209503,0x7ff6f8398e80,1352,\\r?\\n|\\r(?!\\n)
code-creation,JS,11,17210036,0x7ff6f8399480,248,setHasTickScheduled node:internal/process/task_queues:51:29,0xf2fdb7f930,^
code-source-info,0x7ff6f8399480,27,1137,1197,,,
code-creation,JS,11,17210119,0x7ff6f8399600,324,shift node:internal/fixed_queue:108:8,0x320a78c5ff0,^
code-source-info,0x7ff6f8399600,29,4061,4320,,,
code-creation,JS,11,17210166,0x7ff6f8399800,468,_unrefTimer node:net:496:52,0x2fad2a1a090,^
code-source-info,0x7ff6f8399800,428,14165,14280,,,
code-creation,JS,11,17210224,0x7ff6f8399a80,1004,getStringWidth node:internal/util/inspect:2317:43,0x33cbf859a20,^
code-source-info,0x7ff6f8399a80,19,80387,80972,,,
code-creation,JS,11,17210313,0x7ff6f8399f00,2288, node:internal/readline/interface:988:19,0x164cc3af788,^
code-source-info,0x7ff6f8399f00,453,28692,29647,,,
code-creation,JS,11,17210353,0x7ff6f839a880,144,get node:internal/bootstrap/node:90:8,0xf2fdb44968,^
code-source-info,0x7ff6f839a880,10,3711,3772,,,
code-creation,RegExp,3,17210721,0x7ff6f839a9c0,1256,^\\s*\\.(\\w*)$
code-creation,RegExp,3,17210876,0x7ff6f839af40,2376,\\brequire\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$
code-creation,RegExp,3,17211012,0x7ff6f839b940,2316,\\bimport\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$
code-creation,RegExp,3,17211141,0x7ff6f839c300,1972,fs(?:\\.promises)?\\.\\s*[a-z][a-zA-Z]+\\(\\s*["'](.*)
code-creation,RegExp,3,17211245,0x7ff6f839cb40,980,\\w|\\.|\\$
code-creation,RegExp,3,17211379,0x7ff6f839cfc0,2112,(?:[\\w$'"`[{(](?:\\w|\\$|['"`\\]})])*\\??\\.)*[a-zA-Z_$](?:\\w|\\$)*\\??\\.?$
code-creation,Script,10,17212563,0x2ff96f207ee,5, :1:1,0x2ff96f20728,~
script-source,464,,np
code-source-info,0x2ff96f207ee,464,0,2,C0O0C4O2,,
code-creation,JS,10,17213412,0x2ff96f20a4e,60,isInStrictMode node:internal/repl/utils:286:26,0x3b94bd94760,~
code-source-info,0x2ff96f20a4e,458,9141,9505,C0O9167C9O9180C11O9176C20O9200C27O9231C35O9257C45O9231C54O9200C59O9500,,
code-creation,JS,10,17213486,0x2ff96f20bb6,31, node:internal/repl/utils:289:25,0x2ff96f20980,~
code-source-info,0x2ff96f20bb6,458,9292,9474,C0O9299C11O9353C14O9353C25O9299C30O9474,,
tick,0x7ff8e7af1be4,17214639,0,0x0,8
tick,0x7ff8e7af1be4,17230692,0,0x0,8
tick,0x7ff8e7af1be4,17246718,0,0x0,8
tick,0x7ff8e7af1be4,17262019,0,0x0,8
tick,0x7ff8e7af1be4,17277997,0,0x0,8
tick,0x7ff8e7af1be4,17293875,0,0x0,8
tick,0x7ff8e7af1be4,17310746,0,0x0,8
tick,0x7ff8e7af1be4,17327134,0,0x0,8
tick,0x7ff8e7af1be4,17342029,0,0x0,8
tick,0x7ff8e7af1be4,17357637,0,0x0,8
tick,0x7ff8e7af1be4,17373305,0,0x0,8
tick,0x7ff8e7af1be4,17389192,0,0x0,8
code-creation,Script,10,17403036,0x2ff96f21206,5, :1:1,0x2ff96f21140,~
script-source,465,,npm
code-source-info,0x2ff96f21206,465,0,3,C0O0C4O3,,
tick,0x7ff8e7af2844,17405415,0,0x0,0,0x7ff777ca6c50,0x7ff777509b80,0x1795a8fd202,0x2ff96f1cd7c,0x1795a8fc4f6,0x2ff96f1cb13,0x3b94bd976db,0x1795a8f7e32,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x7ff6f8394394
tick,0x7ff8e7af1be4,17420827,0,0x0,8
tick,0x7ff8e7af1be4,17436973,0,0x0,8
tick,0x7ff8e7af1be4,17453005,0,0x0,8
tick,0x7ff8e7af1be4,17468870,0,0x0,8
tick,0x7ff8e7af1be4,17484926,0,0x0,8
tick,0x7ff8e7af1be4,17501075,0,0x0,8
tick,0x7ff8e7af1be4,17517146,0,0x0,8
code-creation,Script,10,17520449,0x2ff96f215ce,5, :1:1,0x2ff96f21508,~
script-source,466,,npm
code-source-info,0x2ff96f215ce,466,0,3,C0O0C4O3,,
code-creation,JS,11,17521233,0x7ff6f839d880,2568,nextTick node:internal/process/task_queues:103:18,0xf2fdb7fa20,^
code-source-info,0x7ff6f839d880,27,2687,3575,,,
code-creation,JS,11,17521272,0x7ff6f839e340,200,isFull node:internal/fixed_queue:71:9,0x320a78c5cf0,^
code-source-info,0x7ff6f839e340,29,3209,3272,,,
code-creation,JS,11,17521291,0x7ff6f839e4c0,268,push node:internal/fixed_queue:75:7,0x320a78c5d40,^
code-source-info,0x7ff6f839e4c0,29,3282,3368,,,
code-creation,JS,11,17521312,0x7ff6f839e680,352,emitDestroyScript node:internal/async_hooks:526:27,0xf2fdb69640,^
code-source-info,0x7ff6f839e680,13,17746,17935,,,
code-creation,JS,11,17521331,0x7ff6f839e880,304,emitAfterScript node:internal/async_hooks:518:25,0xf2fdb695f0,^
code-source-info,0x7ff6f839e880,13,17613,17714,,,
code-creation,JS,11,17521350,0x7ff6f839ea40,56,get node:readline:333:8,0x164cc3a7018,^
code-source-info,0x7ff6f839ea40,449,8197,8243,,,
code-creation,JS,11,17521371,0x7ff6f839eb00,324,stripVTControlCharacters node:internal/util/inspect:2404:34,0x33cbf859aa8,^
code-source-info,0x7ff6f839eb00,19,83526,83624,,,
code-creation,JS,11,17521390,0x7ff6f839ed00,256,get columns node:internal/readline/interface:355:14,0x164cc3aec68,^
code-source-info,0x7ff6f839ed00,453,10173,10277,,,
code-creation,JS,11,17521417,0x7ff6f839ee80,816,afterWriteDispatched node:internal/stream_base_commons:155:30,0x1795a8cd220,^
code-source-info,0x7ff6f839ee80,429,3969,4253,,,
code-creation,JS,11,17521439,0x7ff6f839f240,396, node:repl:1547:47,0x1795a8ff348,^
code-source-info,0x7ff6f839f240,447,51833,52297,,,
code-creation,JS,11,17521457,0x7ff6f839f480,136,desc.value node:internal/per_context/primordials:382:32,0x2f9728b8148,^
code-source-info,0x7ff6f839f480,6,11280,11341,,,
code-creation,JS,11,17521484,0x7ff6f839f5c0,268,FastBuffer node:internal/buffer:960:14,0x33cbf87fb58,^
code-source-info,0x7ff6f839f5c0,24,27335,27426,,,
code-creation,JS,11,17521512,0x7ff6f839f780,388,getCursorPos node:internal/readline/interface:1029:15,0x164cc3af7c0,^
code-source-info,0x7ff6f839f780,453,29846,30007,,,
code-creation,JS,11,17521533,0x7ff6f839f9c0,264, node:internal/repl/utils:289:25,0x2ff96f20980,^
code-source-info,0x7ff6f839f9c0,458,9292,9474,,,
tick,0x7ff8e7af1be4,17533303,0,0x0,8
tick,0x7ff8e7af1be4,17549209,0,0x0,8
tick,0x7ff8e7af1be4,17565076,0,0x0,8
tick,0x7ff8e7af1be4,17580415,0,0x0,8
tick,0x7ff8e7af1be4,17596519,0,0x0,8
tick,0x7ff8e7af1be4,17612639,0,0x0,8
tick,0x7ff8e7af1be4,17619450,0,0x0,8
tick,0x7ff8e7af1be4,17635430,0,0x0,8
tick,0x7ff8e7af1be4,17651179,0,0x0,8
tick,0x7ff8e7af1be4,17667261,0,0x0,8
tick,0x7ff8e7af1be4,17683132,0,0x0,8
tick,0x7ff8e7af1be4,17698805,0,0x0,8
tick,0x7ff8e7af1be4,17715271,0,0x0,8
code-creation,JS,11,17730019,0x7ff6f839fb80,1460,writeOrBuffer node:internal/streams/writable:368:23,0x2fad2a02498,^
code-source-info,0x7ff6f839fb80,413,12057,13079,,,
code-creation,JS,11,17730147,0x7ff6f83a01c0,852,afterWrite node:internal/streams/writable:490:20,0x2fad2a025e0,^
code-source-info,0x7ff6f83a01c0,413,15740,16118,,,
code-creation,JS,11,17730251,0x7ff6f83a05c0,2424,processTicksAndRejections node:internal/process/task_queues:67:35,0xf2fdb7f9d0,^
code-source-info,0x7ff6f83a05c0,27,1545,2522,,,
code-creation,JS,11,17730308,0x7ff6f83a0fc0,296,get node:internal/streams/duplex:103:8,0x1301b5a5c50,^
code-source-info,0x7ff6f83a0fc0,405,3916,4131,,,
code-creation,JS,11,17730380,0x7ff6f83a1180,396,push node:internal/fixed_queue:99:7,0x320a78c5fa0,^
code-source-info,0x7ff6f83a1180,29,3783,4050,,,
tick,0x7ff8e7a8ab11,17731761,1,0x7ff777509700,6,0x7ff77812e530,0x7ff6f839373f,0x7ff6f8392e6c,0x7ff77750a1a0,0x1795a8fcb8f,0x1795a8fc4ea,0x1795a8fc318,0x1795a8fb9a7,0x1795a8faa59,0x1795a8fa89e,0x3b94bd97685,0x1795a8f7e32,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x7ff6f8394394
tick,0x7ff8e7af1be4,17746727,0,0x0,8
tick,0x7ff8e7af1be4,17762545,0,0x0,8
tick,0x7ff8e7af1be4,17778374,0,0x0,8
tick,0x7ff8e7af1be4,17794527,0,0x0,8
tick,0x7ff8e7af1be4,17810709,0,0x0,8
tick,0x7ff8e7af1be4,17812119,0,0x0,8
tick,0x7ff8e7af1be4,17828200,0,0x0,8
tick,0x7ff8e7af1be4,17844050,0,0x0,8
tick,0x7ff8e7af1be4,17859705,0,0x0,8
tick,0x7ff8e7af1be4,17875982,0,0x0,8
tick,0x7ff8e7af1be4,17891290,0,0x0,8
tick,0x7ff8e7af1be4,17906715,0,0x0,8
tick,0x7ff8e7af1be4,17923527,0,0x0,8
tick,0x7ff8e7af1be4,17938381,0,0x0,8
tick,0x7ff8e7af1be4,17954394,0,0x0,8
tick,0x7ff8e7af1be4,17969423,0,0x0,8
code-creation,JS,11,17981073,0x7ff6f83a13c0,1056,sendInspectorCommand node:internal/util/inspector:47:30,0x320a78e73f8,^
code-source-info,0x7ff6f83a13c0,39,1516,1840,,,
code-creation,JS,11,17981261,0x7ff6f83a1880,116, node:repl:1570:33,0x1795a8ffa10,^
code-source-info,0x7ff6f83a1880,447,52732,52758,,,
code-creation,JS,11,17981353,0x7ff6f83a1980,444, node:repl:1572:36,0x1795a8ffa60,^
code-source-info,0x7ff6f83a1980,447,52836,52993,,,
code-creation,JS,11,17981426,0x7ff6f83a1bc0,152, node:inspector:68:22,0x1795a8fca88,^
code-source-info,0x7ff6f83a1bc0,419,1686,1729,,,
code-creation,JS,11,17981561,0x7ff6f83a1d00,1424,post node:inspector:116:7,0x2fad2a0a1f0,^
code-source-info,0x7ff6f83a1d00,419,3107,3801,,,
code-creation,JS,11,17981696,0x7ff6f83a2340,1076,filteredOwnPropertyNames node:repl:1220:34,0x1b0323df0c8,^
code-source-info,0x7ff6f83a2340,447,39756,40553,,,
code-creation,JS,11,17981795,0x7ff6f83a2800,616,connect node:inspector:64:10,0x2fad2a0a100,^
code-source-info,0x7ff6f83a2800,419,1521,1736,,,
tick,0x7ff8e7af1be4,17984951,0,0x0,8
tick,0x7ff8e7af1be4,18001076,0,0x0,8
tick,0x7ff8e7af1be4,18017210,0,0x0,8
tick,0x7ff8e7af1be4,18032936,0,0x0,8
tick,0x7ff8e7af1be4,18048568,0,0x0,8
tick,0x7ff8e7af1be4,18064019,0,0x0,8
tick,0x7ff8e7af1be4,18079784,0,0x0,8
tick,0x7ff8e7af1be4,18095430,0,0x0,8
tick,0x7ff8e7af1be4,18111037,0,0x0,8
tick,0x7ff8e7af1be4,18127175,0,0x0,8
tick,0x7ff8e7af1be4,18131184,0,0x0,8
tick,0x7ff8e7af1be4,18134855,0,0x0,8
tick,0x7ff8e7af1be4,18136408,0,0x0,8
tick,0x7ff8e7af1be4,18153143,0,0x0,8
tick,0x7ff8e7af1be4,18168763,0,0x0,8
code-creation,JS,13,18180216,0x7ff6f83a2b00,1840,isIdentifier node:repl:1191:22,0x1b0323df028,*
code-source-info,0x7ff6f83a2b00,447,39050,39495,C0O39050C40O39069C57O39120C359O12510I1C368O12553I1C377O12589I1C386O12632I1C395O12669I1C405O39164C414O39210C447O39242C512O39288C576O39328C813O12998I0C823O13041I0C833O13077I0C843O13114I0C853O13150I0C863O13193I0C878O39374C888O39438C901O39304C904O39263C919O39492C931O13230I0C936O39418C948O39457C953O13018I0C958O12530I1C963O39097C975O39050C1021O39120C1373O39328C1747O39263,F0O39374F1O39164,S0x164cc385588S0x164cc385538
tick,0x7ff777c1f245,18184378,1,0x7ff777509b80,6,0x7ff778120250,0x7ff6f83a2277,0x2ff96f1cd7c,0x7ff6f83a1681,0x2ff96f1cb13,0x3b94bd976db,0x1795a8f7e32,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x7ff6f8394394
tick,0x7ff8e7af1be4,18199543,0,0x0,8
tick,0x7ff8e7af1be4,18215615,0,0x0,8
tick,0x7ff8e7af1be4,18231454,0,0x0,8
tick,0x7ff8e7af1be4,18247132,0,0x0,8
tick,0x7ff8e7af1be4,18262960,0,0x0,8
tick,0x7ff8e7af1be4,18278731,0,0x0,8
tick,0x7ff8e7af1be4,18294371,0,0x0,8
tick,0x7ff8e7af1be4,18310141,0,0x0,8
tick,0x7ff7780a3e90,18325667,1,0x7ff777509700,6,0x7ff77812e530,0x7ff6f839373f,0x7ff6f8392e6c,0x7ff6f839518c,0x7ff6f839e201,0x1b0323db6fb,0x7ff6f839f196,0x7ff6f8395522,0x1b0323daa82,0x7ff6f839563b,0x7ff6f83a0064,0x1b0323da281,0x7ff6f8395769,0x3b94bd97449,0x1795a8fa07a,0x1795a8f977d,0x1795a8f7e1c,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x7ff6f8394394
tick,0x7ff8e7af1be4,18342431,0,0x0,8
tick,0x7ff8e7af1be4,18360326,0,0x0,8
tick,0x7ff8e7af1be4,18372320,0,0x0,8
tick,0x7ff8e7af1be4,18388121,0,0x0,8
tick,0x7ff8e7af1be4,18403659,0,0x0,8
tick,0x7ff8e7af1be4,18419580,0,0x0,8
tick,0x7ff8e7af1be4,18435815,0,0x0,8
tick,0x7ff8e7af1be4,18451191,0,0x0,8
tick,0x7ff8e7af1be4,18467756,0,0x0,8
tick,0x7ff8e7af1be4,18482766,0,0x0,8
tick,0x7ff8e7af1be4,18498806,0,0x0,8
tick,0x7ff8e7af1be4,18514365,0,0x0,8
tick,0x7ff8e7af1be4,18530301,0,0x0,8
tick,0x7ff8e7af1be4,18546324,0,0x0,8
tick,0x7ff8e7af1be4,18561617,0,0x0,8
tick,0x7ff8e7af1be4,18576845,0,0x0,8
tick,0x7ff8e7af1be4,18593462,0,0x0,8
tick,0x7ff8e7af1be4,18608935,0,0x0,8
tick,0x7ff8e7af1be4,18624839,0,0x0,8
tick,0x7ff8e7af1be4,18640736,0,0x0,8
tick,0x7ff8e7af1be4,18642829,0,0x0,8
tick,0x7ff8e7af1be4,18648651,0,0x0,8
tick,0x7ff8e7af1be4,18649843,0,0x0,8
tick,0x7ff8e7af1be4,18651233,0,0x0,8
tick,0x7ff8e7af1be4,18652581,0,0x0,8
tick,0x7ff8e7af1be4,18667648,0,0x0,8
tick,0x7ff8e7af1be4,18683461,0,0x0,8
code-creation,JS,10,18691472,0x2ff96f240ce,5,get node:readline:279:8,0x164cc3a6d48,~
code-source-info,0x2ff96f240ce,449,7255,7298,C0O7279C4O7291,,
code-creation,JS,10,18691608,0x2ff96f241ee,166, node:internal/readline/interface:762:16,0x164cc3af288,~
code-source-info,0x2ff96f241ee,453,21673,22154,C0O21692C6O21699C11O21711C16O21716C22O21723C27O21737C29O21742C31O21741C35O21760C40O21771C45O21754C51O21878C56O21898C61O21909C66O21878C72O21925C74O21946C77O21972C84O21986C91O21993C95O21946C103O22016C106O22042C111O22053C116O22066C121O22071C126O22016C131O22005C134O21935C138O22089C145O22104C148O22101C152O22121C154O22126C156O22125C160O22139C165O22153,,
code-creation,JS,10,18691708,0x2ff96f2442e,73,charLengthLeft node:internal/readline/utils:39:24,0x164cc3a9b80,~
code-source-info,0x2ff96f2442e,451,1019,1267,C0O1033C1O1039C6O1050C7O1059C8O1063C10O1070C17O1084C22O1118C26O1084C34O1126C36O1123C43O1162C48O1196C52O1162C60O1204C62O1201C67O1237C69O1246C70O1255C72O1264,,
code-creation,JS,11,18692582,0x7ff6f83a3300,1996,onwrite node:internal/streams/writable:428:17,0x2fad2a02570,^
code-source-info,0x7ff6f83a3300,413,13893,15571,,,
code-creation,JS,11,18692620,0x7ff6f83a3b80,268,afterWriteTick node:internal/streams/writable:485:24,0x2fad2a025a8,^
code-source-info,0x7ff6f83a3b80,413,15598,15717,,,
code-creation,JS,11,18692645,0x7ff6f83a3d40,56,get node:readline:231:8,0x164cc3a6af8,^
code-source-info,0x7ff6f83a3d40,449,6440,6486,,,
code-creation,JS,11,18692665,0x7ff6f83a3e00,332, node:internal/readline/interface:439:19,0x164cc3aeed8,^
code-source-info,0x7ff6f83a3e00,453,12083,12270,,,
code-creation,JS,11,18692690,0x7ff6f83a4000,248,setHasRejectionToWarn node:internal/process/promises:78:31,0x320a78c3f70,^
code-source-info,0x7ff6f83a4000,28,2262,2324,,,
code-creation,JS,11,18692750,0x7ff6f83a4180,1792,disconnect node:inspector:149:13,0x2fad2a0a240,^
code-source-info,0x7ff6f83a4180,419,3963,4362,,,
code-creation,JS,11,18692768,0x7ff6f83a4900,56,get node:net:680:16,0x2fad2a1a570,^
code-source-info,0x7ff6f83a4900,428,18730,18769,,,
code-creation,JS,11,18692784,0x7ff6f83a49c0,56,get node:readline:345:8,0x164cc3a70a0,^
code-source-info,0x7ff6f83a49c0,449,8400,8441,,,
code-creation,JS,11,18692801,0x7ff6f83a4a80,144, node:internal/readline/interface:427:16,0x164cc3aee38,^
code-source-info,0x7ff6f83a4a80,453,11805,11881,,,
code-creation,JS,11,18692836,0x7ff6f83a4bc0,1592,Socket._writeGeneric node:net:912:42,0x2fad2a1ade0,^
code-source-info,0x7ff6f83a4bc0,428,24667,25605,,,
code-creation,JS,11,18694228,0x7ff6f83a5280,408, node:repl:1240:31,0x1795a8fc1f8,^
code-source-info,0x7ff6f83a5280,447,40637,40868,,,
code-creation,JS,11,18694278,0x7ff6f83a54c0,2096,completionGroupsLoaded node:repl:1542:34,0x1795a8faf58,^
code-source-info,0x7ff6f83a54c0,447,51543,53333,,,
code-creation,JS,11,18694300,0x7ff6f83a5d80,608,showCompletionPreview node:internal/repl/utils:225:33,0x3b94bd94710,^
code-source-info,0x7ff6f83a5d80,458,7255,9112,,,
code-creation,JS,11,18694330,0x7ff6f83a6080,1264, node:inspector:86:20,0x2fad2a0a1a0,^
code-source-info,0x7ff6f83a6080,419,2217,2899,,,
code-creation,JS,11,18694354,0x7ff6f83a6600,404, node:internal/repl/utils:306:26,0x2ff96f1c968,^
code-source-info,0x7ff6f83a6600,458,9928,12281,,,
code-creation,JS,11,18694372,0x7ff6f83a6840,224, node:repl:1244:8,0x1795a8fcd28,^
code-source-info,0x7ff6f83a6840,447,40774,40842,,,
tick,0x7ff8e7af1be4,18699061,0,0x0,8
tick,0x7ff8e7af1be4,18714745,0,0x0,8
tick,0x7ff8e7af1be4,18730801,0,0x0,8
tick,0x7ff8e7af1be4,18746136,0,0x0,8
tick,0x7ff8e7af1be4,18762910,0,0x0,8
tick,0x7ff8e7af1be4,18778580,0,0x0,8
tick,0x7ff8e7af1be4,18793804,0,0x0,8
tick,0x7ff8e7af1be4,18809977,0,0x0,8
tick,0x7ff8e7af1be4,18825997,0,0x0,8
tick,0x7ff8e7af1be4,18841749,0,0x0,8
tick,0x7ff8e7af1be4,18857259,0,0x0,8
tick,0x7ff8e7af1be4,18872353,0,0x0,8
tick,0x7ff8e7af1be4,18888261,0,0x0,8
tick,0x7ff8e7af1be4,18903729,0,0x0,8
tick,0x7ff8e7af1be4,18920414,0,0x0,8
tick,0x7ff8e7af1be4,18936049,0,0x0,8
tick,0x7ff8e7af1be4,18951644,0,0x0,8
tick,0x7ff8e7af1be4,18967660,0,0x0,8
tick,0x7ff8e7af1be4,18982905,0,0x0,8
tick,0x7ff8e7af1be4,18998848,0,0x0,8
tick,0x7ff8e7af1be4,19001739,0,0x0,8
tick,0x7ff8e7af1be4,19017523,0,0x0,8
tick,0x7ff8e7af1be4,19032645,0,0x0,8
tick,0x7ff8e7af1be4,19048220,0,0x0,8
tick,0x7ff8e7af1be4,19064022,0,0x0,8
tick,0x7ff8e7af1be4,19079307,0,0x0,8
tick,0x7ff8e7af1be4,19095043,0,0x0,8
tick,0x7ff8e7af1be4,19111028,0,0x0,8
tick,0x7ff8e7af1be4,19127191,0,0x0,8
tick,0x7ff8e7af1be4,19143088,0,0x0,8
tick,0x7ff8e7af1be4,19148415,0,0x0,8
tick,0x7ff8e7af1be4,19151413,0,0x0,8
tick,0x7ff8e7af1be4,19153829,0,0x0,8
tick,0x7ff8e7af1be4,19156726,0,0x0,8
tick,0x7ff8e7af1be4,19169792,0,0x0,8
tick,0x7ff8e7af1be4,19185285,0,0x0,8
tick,0x7ff8e7af1be4,19201303,0,0x0,8
tick,0x7ff8e7af1be4,19216838,0,0x0,8
tick,0x7ff8e7af1be4,19233050,0,0x0,8
tick,0x7ff8e7af1be4,19248676,0,0x0,8
tick,0x7ff8e7af1be4,19264411,0,0x0,8
tick,0x7ff8e7af1be4,19280505,0,0x0,8
code-creation,JS,11,19294913,0x7ff6f83a69c0,568,completer node:repl:759:21,0x13674f11e88,^
code-source-info,0x7ff6f83a69c0,447,26049,26181,,,
code-creation,JS,11,19295022,0x7ff6f83a6c80,296,getGlobalLexicalScopeNames node:repl:1239:36,0x1b0323df118,^
code-source-info,0x7ff6f83a6c80,447,40592,40883,,,
code-creation,JS,11,19295067,0x7ff6f83a6e40,176,addCommonWords node:repl:1686:24,0x1b0323df2f8,^
code-source-info,0x7ff6f83a6e40,447,56253,56767,,,
code-creation,JS,11,19295128,0x7ff6f83a6f80,280,maybeReadMore node:internal/streams/readable:614:23,0x209d296cb28,^
code-source-info,0x7ff6f83a6f80,406,20323,20483,,,
code-creation,JS,11,19295179,0x7ff6f83a7140,128,Readable.push node:internal/streams/readable:233:35,0x209d2955fe8,^
code-source-info,0x7ff6f83a7140,406,7954,8034,,,
code-creation,JS,11,19295237,0x7ff6f83a7240,796,maybeReadMore_ node:internal/streams/readable:621:24,0x209d296cb78,^
code-source-info,0x7ff6f83a7240,406,20510,22314,,,
code-creation,JS,11,19295289,0x7ff6f83a7600,360,charLengthAt node:internal/readline/utils:50:22,0x164cc3a9bd0,^
code-source-info,0x7ff6f83a7600,451,1292,1540,,,
code-creation,JS,11,19295389,0x7ff6f83a7800,2476,_write node:internal/streams/writable:286:16,0x2fad2a02460,^
code-source-info,0x7ff6f83a7800,413,9690,11067,,,
tick,0x7ff777bc42b6,19296158,1,0x7ff777509b80,3,0x7ff77812e530,0x7ff6f83a2277,0x7ff6f83a677c,0x7ff6f83a1681,0x2ff96f1cb13,0x3b94bd976db,0x3b94bd95745,0x2ff96f2428e,0x1795a8f95b6,0x1795a8f7e1c,0x1795a8f797d,0x33cbf864e7a,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x1795a8f6fc5,0x33cbf864e7a,0x3b94bd87e0b,0x1795a8f6bd1,0x1795a8f68fb,0x1795a8f6504,0x1795a8f61b1,0x7ff6f8394394
tick,0x7ff8e7af1be4,19312035,0,0x0,8
tick,0x7ff8e7af1be4,19328028,0,0x0,8
tick,0x7ff8e7af1be4,19343550,0,0x0,8
code-creation,Script,10,19350237,0x2ff96f26f86,5, :1:1,0x2ff96f26ec0,~
script-source,477,,npm
code-source-info,0x2ff96f26f86,477,0,3,C0O0C4O3,,
code-creation,Script,10,19351560,0x2ff96f27216,5, :1:1,0x2ff96f27150,~
script-source,478,,npm
code-source-info,0x2ff96f27216,478,0,3,C0O0C4O3,,
code-creation,JS,11,19351925,0x7ff6f83a8240,648,maybeOverridePrepareStackTrace node:internal/errors:134:40,0xf2fdb561b0,^
code-source-info,0x7ff6f83a8240,11,3797,4520,,,
code-creation,JS,11,19351990,0x7ff6f83a8580,1604,showPreview node:internal/repl/utils:366:23,0x3b94bd948f0,^
code-source-info,0x7ff6f83a8580,458,12365,15409,,,
code-creation,JS,11,19352035,0x7ff6f83a8c80,572, node:internal/readline/interface:897:21,0x164cc3af5f8,^
code-source-info,0x7ff6f83a8c80,453,25936,26110,,,
code-creation,JS,11,19352077,0x7ff6f83a8f40,696, node:repl:1569:45,0x1795a8ff398,^
code-source-info,0x7ff6f83a8f40,447,52686,53143,,,
code-creation,JS,11,19352120,0x7ff6f83a9280,1048,Socket._read node:net:696:34,0x2fad2a1a5f8,^
code-source-info,0x7ff6f83a9280,428,19137,19461,,,
code-creation,JS,11,19352154,0x7ff6f83a9740,560,Socket.read node:net:757:33,0x2fad2a1a800,^
code-source-info,0x7ff6f83a9740,428,20692,20876,,,
tick,0x7ff8e7af1be4,19359853,0,0x0,8
tick,0x7ff8e7af1be4,19374963,0,0x0,8
code-creation,Script,10,19380507,0x2ff96f27b3e,5, :1:1,0x2ff96f27a78,~
script-source,479,,npm
code-source-info,0x2ff96f27b3e,479,0,3,C0O0C4O3,,
code-creation,Script,10,19381414,0x2ff96f27eae,5, :1:1,0x2ff96f27de8,~
script-source,480,,npm
code-source-info,0x2ff96f27eae,480,0,3,C0O0C4O3,,
code-creation,JS,11,19381892,0x7ff6f83a9a00,4016,onData node:internal/readline/emitKeypressEvents:46:18,0x3b94bd8bac0,^
code-source-info,0x7ff6f83a9a00,452,1075,2397,,,
code-creation,JS,11,19381927,0x7ff6f83aaa40,684,onkeypress node:internal/readline/interface:270:22,0x3b94bd84128,^
code-source-info,0x7ff6f83aaa40,453,7703,8080,,,
code-creation,JS,11,19381957,0x7ff6f83aad80,1496,handleWriteReq node:internal/stream_base_commons:45:24,0x1795a8cd0d8,^
code-source-info,0x7ff6f83aad80,429,1221,2086,,,
code-creation,JS,11,19381989,0x7ff6f83ab400,1012,getInputPreview node:internal/repl/utils:298:27,0x3b94bd947b0,^
code-source-info,0x7ff6f83ab400,458,9595,12339,,,
code-creation,JS,11,19382139,0x7ff6f83ab880,4324,Readable.read node:internal/streams/readable:402:35,0x209d296ae18,^
code-source-info,0x7ff6f83ab880,406,13252,17873,,,
delete,MemoryChunk,0x3a9de280000
delete,MemoryChunk,0x61ccb00000
delete,MemoryChunk,0x30bdac80000
delete,MemoryChunk,0x1eb15b80000
tick,0x7ff8e7af1be4,19391347,0,0x0,8
tick,0x7ff8e7af1be4,19407200,0,0x0,8
code-creation,Script,10,19411414,0x2ff96f28cd6,5, :1:1,0x2ff96f28c10,~
script-source,481,,np
code-source-info,0x2ff96f28cd6,481,0,2,C0O0C4O2,,
code-creation,Script,10,19412366,0x2ff96f29176,5, :1:1,0x2ff96f290b0,~
script-source,482,,np
code-source-info,0x2ff96f29176,482,0,2,C0O0C4O2,,
tick,0x7ff8e7af1be4,19423349,0,0x0,8
tick,0x7ff8e7af1be4,19439355,0,0x0,8
code-creation,Script,10,19441819,0x2ff96f295ee,5, :1:1,0x2ff96f29528,~
script-source,483,,n
code-source-info,0x2ff96f295ee,483,0,1,C0O0C4O1,,
code-creation,Script,10,19442727,0x2ff96f298ce,5, :1:1,0x2ff96f29808,~
script-source,484,,n
code-source-info,0x2ff96f298ce,484,0,1,C0O0C4O1,,
code-creation,JS,11,19443237,0x7ff6f83aca00,2892,emit node:events:459:44,0x33cbf864d00,^
code-source-info,0x7ff6f83aca00,22,13776,16145,,,
code-creation,JS,11,19443289,0x7ff6f83ad600,2732,prepareStackTrace node:internal/errors:89:27,0xf2fdb55668,^
code-source-info,0x7ff6f83ad600,11,2222,3753,,,
code-creation,JS,11,19443311,0x7ff6f83ae140,448,isInStrictMode node:internal/repl/utils:286:26,0x3b94bd94760,^
code-source-info,0x7ff6f83ae140,458,9141,9505,,,
code-creation,JS,11,19443330,0x7ff6f83ae380,56,get node:readline:243:8,0x164cc3a6b80,^
code-source-info,0x7ff6f83ae380,449,6646,6690,,,
code-creation,JS,11,19443349,0x7ff6f83ae440,344,repl._refreshLine node:internal/repl/utils:478:23,0x3b94bd94928,^
code-source-info,0x7ff6f83ae440,458,16064,16146,,,
tick,0x7ff8e7af1be4,19455879,0,0x0,8
tick,0x7ff8e7af1be4,19471518,0,0x0,8
tick,0x7ff8e7af1be4,19487463,0,0x0,8
tick,0x7ff8e7af1be4,19503627,0,0x0,8
tick,0x7ff8e7af1be4,19519895,0,0x0,8
tick,0x7ff8e7af1be4,19535842,0,0x0,8
tick,0x7ff8e7af1be4,19552139,0,0x0,8
tick,0x7ff8e7af1be4,19568389,0,0x0,8
tick,0x7ff8e7af1be4,19584030,0,0x0,8
tick,0x7ff8e7af1be4,19601005,0,0x0,8
tick,0x7ff8e7af1be4,19616535,0,0x0,8
tick,0x7ff8e7af1be4,19632076,0,0x0,8
tick,0x7ff8e7af1be4,19647997,0,0x0,8
tick,0x7ff8e7af1be4,19653533,0,0x0,8
tick,0x7ff8e7af1be4,19657110,0,0x0,8
tick,0x7ff8e7af1be4,19658532,0,0x0,8
tick,0x7ff8e7af1be4,19674585,0,0x0,8
tick,0x7ff8e7af1be4,19690041,0,0x0,8
tick,0x7ff8e7af1be4,19706013,0,0x0,8
tick,0x7ff8e7af1be4,19721668,0,0x0,8
code-creation,JS,11,19727251,0x7ff6f83ae640,11928,complete node:repl:1295:18,0x1b0323df208,^
code-source-info,0x7ff6f83ae640,447,42113,53336,,,
code-creation,JS,11,19727372,0x7ff6f83b1580,828,write node:string_decoder:98:47,0x209d295ce68,^
code-source-info,0x7ff6f83b1580,411,3347,3729,,,
code-creation,JS,11,19727464,0x7ff6f83b1940,1776,cursorTo node:internal/readline/callbacks:33:18,0x164cc3a8e58,^
code-source-info,0x7ff6f83b1940,450,509,1200,,,
code-creation,JS,11,19727512,0x7ff6f83b20c0,56,get node:readline:255:8,0x164cc3a6c08,^
code-source-info,0x7ff6f83b20c0,449,6853,6898,,,
code-creation,JS,11,19727577,0x7ff6f83b2180,936,commonPrefix node:internal/readline/utils:367:22,0x164cc3a9c58,^
code-source-info,0x7ff6f83b2180,451,11764,12172,,,
code-creation,Script,10,19728079,0x2ff96f2ae06,5, :1:1,0x2ff96f2ad40,~
script-source,485,,n
code-source-info,0x2ff96f2ae06,485,0,1,C0O0C4O1,,
tick,0x7ff8e7af1be4,19737525,0,0x0,8
tick,0x7ff8e7af1be4,19753509,0,0x0,8
tick,0x7ff8e7af1be4,19769253,0,0x0,8
tick,0x7ff8e7af1be4,19785246,0,0x0,8
tick,0x7ff8e7af1be4,19786735,0,0x0,8
tick,0x7ff8e7af1be4,19802512,0,0x0,8
tick,0x7ff8e7af1be4,19818664,0,0x0,8
tick,0x7ff8e7af1be4,19834335,0,0x0,8
tick,0x7ff8e7af1be4,19849916,0,0x0,8
tick,0x7ff8e7af1be4,19865642,0,0x0,8
tick,0x7ff8e7af1be4,19881488,0,0x0,8
tick,0x7ff8e7af1be4,19897508,0,0x0,8
tick,0x7ff8e7af1be4,19914187,0,0x0,8
tick,0x7ff8e7af1be4,19929411,0,0x0,8
code-creation,Script,10,19939110,0x2ff96f2b3ce,5, :1:1,0x2ff96f2b308,~
script-source,486,,ng
code-source-info,0x2ff96f2b3ce,486,0,2,C0O0C4O2,,
tick,0x7ff8e7af1be4,19945459,0,0x0,8
tick,0x7ff8e7af1be4,19961567,0,0x0,8
tick,0x7ff8e7af1be4,19977618,0,0x0,8
tick,0x7ff8e7af1be4,19993474,0,0x0,8
tick,0x7ff8e7af1be4,20009390,0,0x0,8
tick,0x7ff8e7af1be4,20025145,0,0x0,8
tick,0x7ff8e7af1be4,20041237,0,0x0,8
tick,0x7ff8e7af1be4,20057319,0,0x0,8
tick,0x7ff8e7af1be4,20073196,0,0x0,8
tick,0x7ff8e7af1be4,20089880,0,0x0,8
code-creation,Script,10,20098101,0x2ff96f2b69e,5, :1:1,0x2ff96f2b5d8,~
script-source,487,,ng
code-source-info,0x2ff96f2b69e,487,0,2,C0O0C4O2,,
tick,0x7ff8e7af1be4,20104848,0,0x0,8
tick,0x7ff8e7af1be4,20121273,0,0x0,8
tick,0x7ff8e7af1be4,20136211,0,0x0,8
tick,0x7ff8e7af1be4,20152722,0,0x0,8
tick,0x7ff8e7af1be4,20154161,0,0x0,8
tick,0x7ff8e7af1be4,20170277,0,0x0,8
tick,0x7ff8e7af1be4,20186759,0,0x0,8
tick,0x7ff8e7af1be4,20201796,0,0x0,8
tick,0x7ff8e7af1be4,20217991,0,0x0,8
tick,0x7ff8e7af1be4,20233382,0,0x0,8
tick,0x7ff8e7af1be4,20249101,0,0x0,8
tick,0x7ff8e7af1be4,20265167,0,0x0,8
tick,0x7ff8e7af1be4,20281624,0,0x0,8
tick,0x7ff8e7af1be4,20297559,0,0x0,8
tick,0x7ff8e7af1be4,20313493,0,0x0,8
tick,0x7ff8e7af1be4,20329177,0,0x0,8
tick,0x7ff8e7af1be4,20345604,0,0x0,8
tick,0x7ff8e7af1be4,20360001,0,0x0,8
tick,0x7ff8e7af1be4,20375866,0,0x0,8
tick,0x7ff8e7af1be4,20391349,0,0x0,8
tick,0x7ff8e7af1be4,20407309,0,0x0,8
tick,0x7ff8e7af1be4,20424915,0,0x0,8
tick,0x7ff8e7af1be4,20440561,0,0x0,8
tick,0x7ff8e7af1be4,20456207,0,0x0,8
tick,0x7ff8e7af1be4,20471945,0,0x0,8
tick,0x7ff8e7af1be4,20487425,0,0x0,8
tick,0x7ff8e7af1be4,20503062,0,0x0,8
tick,0x7ff8e7af1be4,20519448,0,0x0,8
tick,0x7ff8e7af1be4,20534730,0,0x0,8
tick,0x7ff8e7af1be4,20550461,0,0x0,8
tick,0x7ff8e7af1be4,20565969,0,0x0,8
tick,0x7ff8e7af1be4,20581631,0,0x0,8
tick,0x7ff8e7af1be4,20597332,0,0x0,8
tick,0x7ff8e7af1be4,20613160,0,0x0,8
tick,0x7ff8e7af1be4,20629307,0,0x0,8
tick,0x7ff8e7af1be4,20645313,0,0x0,8
tick,0x7ff8e7af1be4,20661379,0,0x0,8
tick,0x7ff8e7af1be4,20677098,0,0x0,8
tick,0x7ff8e7af1be4,20683522,0,0x0,8
tick,0x7ff8e7af1be4,20685039,0,0x0,8
tick,0x7ff8e7af1be4,20701834,0,0x0,8
tick,0x7ff8e7af1be4,20717925,0,0x0,8
tick,0x7ff8e7af1be4,20733943,0,0x0,8
tick,0x7ff8e7af1be4,20749544,0,0x0,8
tick,0x7ff8e7af1be4,20765540,0,0x0,8
tick,0x7ff8e7af1be4,20781009,0,0x0,8
tick,0x7ff8e7af1be4,20797060,0,0x0,8
tick,0x7ff8e7af1be4,20813010,0,0x0,8
tick,0x7ff8e7af1be4,20829337,0,0x0,8
tick,0x7ff8e7af1be4,20845119,0,0x0,8
tick,0x7ff8e7af1be4,20860720,0,0x0,8
tick,0x7ff8e7af1be4,20876745,0,0x0,8
tick,0x7ff8e7af1be4,20892844,0,0x0,8
tick,0x7ff8e7af1be4,20908796,0,0x0,8
tick,0x7ff8e7af1be4,20924506,0,0x0,8
tick,0x7ff8e7af1be4,20940448,0,0x0,8
tick,0x7ff8e7af1be4,20955548,0,0x0,8
tick,0x7ff8e7af1be4,20971181,0,0x0,8
tick,0x7ff8e7af1be4,20987188,0,0x0,8
tick,0x7ff8e7af1be4,21002413,0,0x0,8
tick,0x7ff8e7af1be4,21018360,0,0x0,8
tick,0x7ff8e7af1be4,21034253,0,0x0,8
tick,0x7ff8e7af1be4,21049665,0,0x0,8
tick,0x7ff8e7af1be4,21066006,0,0x0,8
tick,0x7ff8e7af1be4,21081929,0,0x0,8
tick,0x7ff8e7af1be4,21097345,0,0x0,8
code-creation,JS,11,21100955,0x7ff6f83b25c0,1520, node:internal/readline/interface:629:18,0x164cc3af0f8,^
code-source-info,0x7ff6f83b25c0,453,17527,18205,,,
code-creation,JS,11,21101123,0x7ff6f83b2c40,924,init node:domain:76:7,0x164cc3bde88,^
code-source-info,0x7ff6f83b2c40,457,2553,3521,,,
code-creation,JS,11,21101199,0x7ff6f83b3080,1132,addChunk node:internal/streams/readable:312:18,0x209d297bd90,^
code-source-info,0x7ff6f83b3080,406,10655,11394,,,
code-creation,JS,11,21101267,0x7ff6f83b3580,932,listenerCount node:events:840:23,0x33cbf865b00,^
code-source-info,0x7ff6f83b3580,22,25001,25678,,,
tick,0x7ff8e7af1be4,21113595,0,0x0,8
tick,0x7ff8e7af1be4,21128626,0,0x0,8
tick,0x7ff8e7af1be4,21144449,0,0x0,8
tick,0x7ff8e7af1be4,21160182,0,0x0,8
tick,0x7ff8e7af1be4,21176030,0,0x0,8
tick,0x7ff8e7af1be4,21191953,0,0x0,8
tick,0x7ff8e7af1be4,21193088,0,0x0,8
tick,0x7ff8e7af1be4,21197688,0,0x0,8
tick,0x7ff8e7af1be4,21198901,0,0x0,8
tick,0x7ff8e7af1be4,21211237,0,0x0,8
code-creation,JS,10,21215203,0x2ff96f2cd7e,5,get node:readline:315:8,0x164cc3a6f28,~
code-source-info,0x2ff96f2cd7e,449,7893,7930,C0O7917C4O7923,,
code-creation,JS,10,21215421,0x2ff96f2ce76,59, node:internal/readline/interface:889:10,0x164cc3af5a8,~
tick,0x7ff8e7aeed54,21215519,0,0x0,3,0x7ff777ca8e40,0x1795a8f9536,0x1795a8f7e1c,0x7ff6f83aaafa,0x7ff6f83ad25b,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x7ff6f83aa123,0x7ff6f83ad25b,0x3b94bd87e0b,0x7ff6f83b32be,0x1795a8f68fb,0x7ff6f83a71ac,0x1795a8f61b1,0x7ff6f8394394
code-source-info,0x2ff96f2ce76,453,25759,25912,C0O25782C2O25787C4O25786C8O25799C13O25808C15O25813C20O25825C24O25836C26O25841C31O25853C35O25869C40O25869C44O25887C46O25892C48O25891C52O25900C58O25911,,
code-creation,JS,10,21215745,0x2ff96f2cfae,5,get node:readline:237:8,0x164cc3a6b30,~
code-source-info,0x2ff96f2cfae,449,6544,6587,C0O6568C4O6580,,
code-creation,JS,10,21215883,0x2ff96f2d0fe,247, node:internal/readline/interface:447:16,0x164cc3aef10,~
code-source-info,0x2ff96f2d0fe
code-creation,JS,10,21216020,0x2ff96f2d376,30,repl.clearLine node:internal/repl/utils:502:20,0x3b94bd94a10,~
code-source-info,0x2ff96f2d376,458,17009,17122,C0O17022C4O17046C10O17060C15O17060C18O17086C22O17110C29O17121,,
code-creation,JS,10,21216082,0x2ff96f2d4ae,53,clearLine node:internal/readline/interface:881:12,0x164cc3af558,~
code-source-info,0x2ff96f2d4ae,453,25600,25746,C0O25610C2O25615C4O25614C8O25629C11O25628C14O25627C19O25645C21O25650C23O25649C30O25665C35O25680C37O25690C41O25701C42O25713C46O25723C47O25737C52O25745,,
code-creation,JS,10,21216127,0x2ff96f2d5de,5,get node:readline:339:8,0x164cc3a7050,~
code-source-info,0x2ff96f2d5de,449,8301,8344,C0O8325C4O8337,,
code-creation,JS,10,21216180,0x2ff96f2d716,77,repl._moveCursor node:internal/repl/utils:488:22,0x3b94bd94980,~
code-source-info,0x2ff96f2d716,458,16436,16752,C0O16473C3O16478C8O16491C13O16491C17O16520C19O16538C26O16550C31O16555C35O16543C43O16586C53O16623C57O16679C59O16692C65O16719C70O16692C76O16751,,
code-creation,JS,10,21216258,0x2ff96f2d8c6,155, node:internal/readline/interface:1037:16,0x164cc3af7f8,~
code-source-info,0x2ff96f2d8c6,453,30143,30710,C0O30155C1O30162C6O30178C7O30185C8O30218C13O30218C18O30239C25O30254C28O30251C32O30295C38O30302C43O30316C44O30328C50O30354C55O30368C60O30373C64O30361C69O30409C74O30414C78O30402C82O30456C87O30456C92O30534C97O30550C101O30539C106O30590C111O30604C115O30595C119O30617C124O30633C134O30617C141O30677C143O30682C145O30681C149O30695C154O30709,,
code-creation,JS,10,21216473,0x2ff96f2e0de,191,moveCursor node:internal/readline/callbacks:61:20,0x164cc3a8e90,~
code-source-info,0x2ff96f2e0de,450,1289,1807,C0O1321C4O1356C12O1356C17O1406C24O1430C28O1436C30O1448C36O1484C39O1492C46O1492C52O1523C53O1535C54O1557C57O1566C58O1573C63O1585C65O1593C68O1596C74O1599C77O1596C91O1617C92O1624C97O1636C99O1644C102O1647C106O1647C118O1667C119O1674C124O1686C126O1694C129O1697C135O1700C138O1697C152O1718C153O1725C158O1737C160O1745C163O1748C167O1748C179O1782C184O1782C190O1804,,
code-creation,JS,10,21216907,0x2ff96f2e316,5,get node:readline:225:8,0x164cc3a6aa8,~
code-source-info,0x2ff96f2e316,449,6340,6379,C0O6364C4O6372,,
code-creation,JS,10,21217008,0x2ff96f2e40e,67, node:internal/readline/interface:416:12,0x164cc3aede8,~
code-source-info,0x2ff96f2e40e,453,11544,11786,C0O11558C2O11567C4O11566C9O11607C11O11612C13O11611C17O11639C19O11644C23O11663C27O11683C34O11698C36O11697C40O11683C45O11719C51O11755C59O11755C66O11785,,
code-creation,JS,10,21217218,0x2ff96f2e846,548,onLine node:repl:853:34,0x13674f3c380,~
code-source-info,0x2ff96f2e
code-creation,JS,10,21217354,0x2ff96f2ec5e,10, node:repl:136:64,0x1b0323df470,~
code-source-info,0x2ff96f2ec5e,447,4328,4355,C0O4341C2O4347C9O4354,,
code-creation,JS,10,21217397,0x2ff96f2ed2e,28,getREPLResourceName node:repl:187:29,0x1b0323deef0,~
code-source-info,0x2ff96f2ed2e,447,5681,5733,C0O5689C15O5725C27O5730,,
code-creation,JS,10,21217433,0x2ff96f2ee26,27,runBound node:domain:443:20,0x3b94bd87830,~
code-source-info,0x2ff96f2ee26,457,13974,14029,C0O13974C2O13984C9O14003C21O13991C26O14024,,
code-creation,JS,10,21217474,0x2ff96f2ef46,41,bound node:domain:431:15,0x164cc3bdd40,~
code-source-info,0x2ff96f2ef46,457,13757,13885,C0O13793C5O13793C9O13817C23O13817C29O13858C34O13858C38O13871C40O13882,,
code-creation,JS,10,21217522,0x2ff96f2f066,41,Domain.enter node:domain:320:34,0x164cc3be180,~
code-source-info,0x2ff96f2f066,457,11112,11345,C0O11238C8O11270C14O11253C18O11281C25O11300C28O11281C33O11317C36O11317C40O11344,,
code-creation,JS,10,21217562,0x2ff96f2f18e,16,set node:domain:68:16,0x164cc3bde00,~
code-source-info,0x2ff96f2f18e,457,2392,2434,C0O2405C9O2423C15O2429,,
code-creation,JS,10,21217616,0x2ff96f2f27e,19, node:domain:176:27,0x3b94bd88118,~
code-source-info,0x2ff96f2f27e,457,6179,6226,C0O6198C8O6198C15O6221C18O6226,,
code-creation,JS,10,21217669,0x2ff96f2f3a6,15,get reportOnUncaughtException node:internal/process/report:88:32,0x3b94bd89110,~
code-source-info,0x2ff96f2f3a6,461,2009,2068,C0O2019C5O2029C10O2029C14O2063,,
code-creation,JS,10,21218038,0x2ff96f3010e,1382,defaultEval node:repl:408:23,0x13674f10a50,~
code-source-info,0x2ff96f3010e,447,13583,21833,C0O13583C21O13633C31O13633C35O13633C37O13684C39O13692C41O13700C43O13727C45O13755C47O13786C49O13812C52O14160C67O14164C78O14220C89O14220C96O14274C104O14285C108O14285C125O14324C127O14492C139O14521C147O14521C154O14570C162O14621C172O14649C178O14624C199O14744C207O14744C212O14781C214O14829C217O14869C219O14899C225O14912C236O14984C238O15000C242O15006C250O15011C262O15047C263O15047C268O15114C278O15114C284O15096C289O15271C293O15297C297O15302C309O15315C315O15315C325O15302C333O15283C339O15330C343O15281C351O15583C373O15583C382O15681C390O15684C396O15697C404O15738C408O15820C416O15684C437O16084C449O16088C456O16154C458O16194C472O16200C482O16268C486O16304C498O16304C502O16338C507O16441C509O16450C514O16467C521O16474C525O16483C526O16491C530O16499C537O16522C538O16522C543O16581C553O16581C559O16563C564O16726C568O16752C572O16757C584O16770C590O16770C600O16757C608O16738C614O16785C618O16736C629O16908C637O16917C649O16937C655O16945C659O16926C668O16980C679O16980C686O17203C692O17236C698O17268C706O17280C712O17293C720O17324C724O17402C732O17280C743O17275C754O17642C773O17642C778O17687C782O17755C784O17788C786O17823C789O17850C792O17879C796O17985C803O18013C811O18017C818O18063C826O18069C834O18122C841O18155C843O16867C849O18338C861O18358C869O18397C877O18416C885O18435C889O18397C896O18338C901O18464C902O18464C904O18879C908O18977C910O19005C918O19014C924O19196C932O19201C937O19235C945O19241C950O19235C951O19281C959O19308C968O19308C980O19400C990O19465C994O19470C1005O19516C1013O19525C1019O19567C1025O19567C1033O19649C1039O19649C1060O19640C1063O19732C1071O19741C1077O19834C1085O19839C1091O19839C1096O20031C1104O20035C1109O20074C1117O20079C1127O20079C1158O20164C1161O20184C1167O20196C1173O20217C1185O20217C1189O20270C1195O20278C1201O20285C1211O20285C1217O20316C1223O20324C1229O20331C1235O20331C1239O20350C1240O20357C1243O20387C1249O20408C1261O20428C1262O20428C1264O20453C1270O20453C1273O20485C1275O20485C1277O20502C1285O20511C1291O20561C1307O20561C1313O21040C1332O21067C1342O21076C1346O21050C1350O21048C1352O21111C1358O21730C1363O21757C1369O21778C1371O21792C1375O21792C1381O21832,,
code-creation,JS,10,21218274,0x2ff96f309ee,293, node:repl:615:10,0x2ff96f2fc80,~
code-source-info,0x2ff96f309ee,447,21112,21729,C10O21112C24O21171C36O21172C63O21186C71O21208C78O21208C96O21279C105O21298C111O21323C121O21323C125O21380C130O21388C135O21395C146O21395C152O21430C157O21438C162O21445C167O21445C171O21468C180O21504C188O21504C206O21635C213O21658C220O21665C223O21664C228O21695C233O21695C270O21728,,
code-creation,JS,10,21218885,0x2ff96f313e6,104,isRecoverableError node:internal/repl/utils:66:28,0x2ff96f04b60,~
code-source-info,0x2ff96f313e6,458,1508,4499,C0O1508C8O1769C21O1773C38O1854C43O1828C50O1868C51O1880C52O1904C53O1904C55O2841C62O2859C72O2859C81O4216C86O4222C91O4216C97O4440C98O4453C101O4472C103O4491,,
code-creation,JS,10,21219018,0x2ff96f315ae,73,extend node:internal/deps/acorn/acorn/dist/acorn:630:35,0x164cc3867a0,~
code-source-info,0x2ff96f315ae,448,35941,36169,C0O35941C2O35967C5O35987C10O36013C20O36013C22O36018C24O36044C27O36033C31O36002C35O36070C38O36094C40O36109C44O36099C49O36124C51O36137C55O36140C61O36118C66O36081C70O36154C72O36164,,
code-creation,JS,10,21219135,0x2ff96f31aae,42, node:internal/repl/utils:95:7,0x2ff96f312c0,~
code-source-info,0x2ff96f31aae,458,2874,4047,C0O2897C4O2918C41O4038,,
code-creation,JS,10,21219185,0x2ff96f31db6,24,parse node:internal/deps/acorn/acorn/dist/acorn:639:33,0x164cc3867f0,~
code-source-info,0x2ff96f31db6,448,36206,36274,C0O36230C8O36237C14O36262C19O36262C23O36269,,
code-creation,JS,10,21219225,0x2ff96f31e8e,36, node:internal/repl/utils:98:22,0x2ff96f317e8,~
code-source-info,0x2ff96f31e8e,458,3011,3098,C3O3053C5O3053C20O3053C35O3097,,
code-creation,JS,10,21219384,0x2ff96f32456,635,Parser node:internal/deps/acorn/acorn/dist/acorn:500:31,0x164cc386048,~
code-source-info,0x2ff96f
code-creation,JS,10,21219633,0x2ff96f32bde,312,getOptions node:internal/deps/acorn/acorn/dist/acorn:424:22,0x164cc385750,~
code-source-info,0x2ff96f32bde
code-creation,JS,10,21219900,0x2ff96f33946,42,pp$4.curPosition node:internal/deps/acorn/acorn/dist/acorn:3467:30,0x164cc38b6c0,~
code-source-info,0x2ff96f33946,448,147664,147783,C0O147683C5O147691C11O147711C14O147736C19O147750C24O147761C28O147754C34O147718C39O147771C41O147782,,
code-creation,JS,10,21219970,0x2ff96f33c46,21,pp$6.initialContext node:internal/deps/acorn/acorn/dist/acorn:2237:33,0x164cc3893a0,~
code-source-info,0x2ff96f33c46,448,96428,96464,C0O96438C10O96452C20O96459,,
code-creation,JS,10,21220082,0x2ff96f33eee,372,pp$9.strictDirective node:internal/deps/acorn/acorn/dist/acorn:660:34,0x164cc3868e0,~
code-source-info,0x2ff96f33eee
code-creation,JS,10,21220290,0x2ff96f3452e,28,pp$3.enterScope node:internal/deps/acorn/acorn/dist/acorn:3489:29,0x164cc38b7a0,~
code-source-info,0x2ff96f3452e,448,148460,148519,C0O148480C5O148491C15O148496C21O148491C27O148518,,
code-creation,JS,10,21220330,0x2ff96f3469e,31,Scope node:internal/deps/acorn/acorn/dist/acorn:3475:29,0x164cc38b750,~
code-source-info,0x2ff96f3469e,448,147850,148291,C0O147865C2O147876C6O147956C8O147965C12O148048C14O148061C18O148164C20O148179C24O148256C25O148278C30O148290,,
code-creation,JS,10,21220397,0x2ff96f34b2e,41,parse node:internal/deps/acorn/acorn/dist/acorn:587:43,0x164cc386098,~
code-source-info,0x2ff96f34b2e,448,33933,34060,C0O33959C5O33967C11O33983C16O33983C21O34006C26O34006C30O34036C35O34036C40O34055,,
code-creation,JS,10,21220434,0x2ff96f34c46,24,pp$2.startNode node:internal/deps/acorn/acorn/dist/acorn:3582:28,0x164cc38bc70,~
code-source-info,0x2ff96f34c46,448,151962,152025,C0O151972C3O151999C8O152011C18O151979C23O152020,,
code-creation,JS,10,21220480,0x2ff96f34e0e,104,Node node:internal/deps/acorn/acorn/dist/acorn:3566:27,0x164cc38bc20,~
code-source-info,0x2ff96f34e0e,448,151495,151843,C0O151521C2O151531C6O151542C8O151553C12O151565C13O151574C17O151595C22O151603C28O151623C39O151634C44O151632C48O151685C53O151693C59O151745C64O151753C68O151736C72O151789C77O151797C83O151814C92O151828C98O151825C103O151842,,
code-creation,JS,10,21220541,0x2ff96f3519e,49,nextToken node:internal/repl/utils:101:20,0x2ff96f31838,~
code-source-info,0x2ff96f3519e,458,3119,3242,C0O3137C2O3143C7O3143C12O3178C21O3187C24O3190C28O3183C33O3210C39O3222C48O3241,,
code-creation,JS,10,21220596,0x2ff96f35326,136,pp.nextToken node:internal/deps/acorn/acorn/dist/acorn:4797:26,0x164cc38e1c0,~
code-source-info,0x2ff96f35326,448,194276,194708,C0O194308C5O194308C10O194327C12O194358C18O194380C23O194380C27O194420C31O194413C35O194439C40O194447C46O194481C51O194481C55O194474C59O194512C64O194524C69O194530C73O194516C78O194552C86O194572C91O194552C96O194576C97O194601C103O194631C108O194631C113O194645C114O194665C119O194680C124O194680C129O194665C135O194707,,
code-creation,JS,10,21220648,0x2ff96f354e6,21,pp$6.curContext node:internal/deps/acorn/acorn/dist/acorn:2241:29,0x164cc389430,~
code-source-info,0x2ff96f354e6,448,96497,96556,C0O96519C5O96532C10O96540C14O96547C17O96526C20O96551,,
code-creation,JS,10,21220720,0x2ff96f3563e,341,pp.skipSpace node:internal/deps/acorn/acorn/dist/acorn:4856:26,0x164cc38e450,~
code-source-info,0x2ff96f3563e
code-creation,JS,10,21220820,0x2ff96f3592e,118,pp.fullCharCodeAtPos node:internal/deps/acorn/acorn/dist/acorn:4818:34,0x164cc38e2a0,~
code-source-info,0x2ff96f3592e,448,195073,195329,C0O195099C5O195105C10O195121C15O195105C21O195132C27O195141C38O195159C43O195172C45O195183C46O195207C51O195213C56O195229C60O195233C64O195213C70O195244C76O195256C87O195274C98O195299C104O195306C107O195313C117O195324,,
code-creation,JS,10,21220927,0x2ff96f35abe,54,pp.readToken node:internal/deps/acorn/acorn/dist/acorn:4809:26,0x164cc38e230,~
code-source-info,0x2ff96f35abe,448,194738,195035,C0O194870C3O194903C8O194911C15O194923C19O194874C28O194937C33O194976C38O194976C42O194986C43O195008C48O195008C53O195030,,
code-creation,JS,10,21220977,0x2ff96f35c0e,56,pp.readWord node:internal/deps/acorn/acorn/dist/acorn:5524:25,0x164cc38f300,~
code-source-info,0x2ff96f35c0e,448,221023,221211,C0O221049C5O221049C10O221078C13O221086C18O221106C23O221115C28O221115C35O221136C40O221151C44O221183C49O221183C55O221206,,
code-creation,JS,10,21221063,0x2ff96f35e4e,308,pp.readWord1 node:internal/deps/acorn/acorn/dist/acorn:5493:26,0x164cc38f290,~
code-source-info,0x2ff96f35e4e
code-creation,JS,10,21221289,0x2ff96f36166,61,pp.finishToken node:internal/deps/acorn/acorn/dist/acorn:4901:28,0x164cc38e4c0,~
code-source-info,0x2ff96f36166,448,197944,198173,C0O197979C4O197972C8O197998C13O198006C19O198038C24O198038C28O198031C32O198080C37O198091C39O198101C43O198114C45O198125C49O198144C54O198144C60O198172,,
code-creation,JS,10,21221348,0x2ff96f362ce,60,pp$6.updateContext node:internal/deps/acorn/acorn/dist/acorn:2275:32,0x164cc3895e0,~
code-source-info,0x2ff96f362ce,448,97879,98159,C0O97921C5O97941C14O97973C18O97961C23O97987C24O98004C30O98043C35O98036C37O98074C42O98074C50O98141C54O98134C59O98158,,
code-creation,JS,10,21221397,0x2ff96f36456,82,types$1.name.updateContext node:internal/deps/acorn/acorn/dist/acorn:2357:40,0x164cc389f00,~
code-source-info,0x2ff96f36456,448,100742,101043,C0O100774C2O100795C7O100803C14O100815C22O100844C26O100832C31O100867C38O100873C43O100891C49O100922C56O100928C61O100948C66O100948C72O100981C74O101011C76O101028C81O101042,,
code-creation,JS,10,21221479,0x2ff96f366c6,233,pp$8.parseTopLevel node:internal/deps/acorn/acorn/dist/acorn:814:32,0x164cc387158,~
code-source-info,0x2ff96f366c6,448,42363,43035,C0O42391C4O42398C11O42398C17O42427C23O42435C25O42445C29O42470C37O42487C41O42475C46O42517C61O42517C67O42566C72O42571C77O42571C82O42458C86O42604C92O42636C94O42646C98O42653C103O42663C108O42653C114O42691C118O42684C123O42740C125O42744C129O42767C134O42789C141O42805C145O42812C155O42831C161O42838C165O42767C171O42701C177O42623C181O42885C186O42913C191O42885C196O42930C201O42930C205O42966C210O42974C214O42959C218O43003C226O43003C232O43030,,
code-creation,JS,10,21221687,0x2ff96f36d2e,953,pp$8.parseStatement node:internal/deps/acorn/acorn/dist/acorn:882:33,0x164cc3872e8,~
code-source-info,0x2ff96f36d2e
code-creation,JS,10,21221900,0x2ff96f3745e,273,pp$8.isLet node:internal/deps/acorn/acorn/dist/acorn:836:24,0x164cc3871e8,~
code-source-info,0x2ff96f3745e
code-creation,JS,10,21221981,0x2ff96f37706,35,pp$9.isContextual node:internal/deps/acorn/acorn/dist/acorn:700:31,0x164cc3869d8,~
code-source-info,0x2ff96f37706,448,38207,38303,C0O38233C8O38250C12O38238C17O38263C24O38269C29O38287C34O38298,,
code-creation,JS,10,21222048,0x2ff96f3786e,223,pp$8.isAsyncFunction node:internal/deps/acorn/acorn/dist/acorn:862:34,0x164cc387258,~
code-source-info,0x2ff96f3786e,448,44444,44961,C0O44463C5O44471C12O44483C17O44496C25O44496C32O44528C33O44540C34O44550C37O44582C41O44575C45O44603C48O44618C53O44628C58O44618C64O44657C70O44667C74O44671C78O44661C82O44691C85O44709C90O44719C95O44725C100O44736C105O44725C112O44709C120O44763C125O44769C132O44786C136O44769C145O44791C152O44822C156O44835C161O44841C165O44826C173O44891C178O44897C185O44913C189O44897C195O44861C207O44928C218O44946C222O44956,,
code-creation,JS,10,21222130,0x2ff96f37bae,139,pp$5.parseExpression node:internal/deps/acorn/acorn/dist/acorn:2440:34,0x164cc38a060,~
code-source-info,0x2ff96f37bae,448,103756,104260,C0O103817C5O103840C10O103871C15O103871C22O103936C30O103953C34O103941C39O103985C44O103985C51O104025C60O104045C66O104042C70O104071C78O104083C83O104071C90O104098C95O104110C100O104120C105O104120C112O104110C117O104059C121O104193C129O104193C135O104231C136O104244C138O104255,,
code-creation,JS,10,21222260,0x2ff96f37fd6,452,pp$5.parseMaybeAssign node:internal/deps/acorn/acorn/dist/acorn:2455:35,0x164cc38a0f0,~
code-source-info,0x2ff96f37fd
code-creation,JS,10,21222371,0x2ff96f383e6,33,DestructuringErrors node:internal/deps/acorn/acorn/dist/acorn:764:57,0x164cc386ec8,~
code-source-info,0x2ff96f383e6,448,40143,40303,C0O40153C3O40286C9O40262C15O40232C21O40200C27O40174C32O40302,,
code-creation,JS,10,21222446,0x2ff96f38846,138,pp$5.parseMaybeConditional node:internal/deps/acorn/acorn/dist/acorn:2510:40,0x164cc38a180,~
code-source-info,0x2ff96f38846,448,107069,107658,C0O107130C5O107153C10O107184C15O107184C22O107245C27O107245C34O107294C36O107305C37O107322C45O107334C50O107322C57O107370C62O107370C69O107410C71O107420C75O107458C80O107458C84O107451C88O107490C96O107505C101O107490C106O107542C111O107542C116O107535C120O107588C128O107588C134O107629C135O107642C137O107653,,
code-creation,JS,10,21222509,0x2ff96f38a4e,106,pp$5.parseExprOps node:internal/deps/acorn/acorn/dist/acorn:2527:31,0x164cc38a210,~
code-source-info,0x2ff96f38a4e,448,107730,108134,C0O107791C5O107814C10O107845C28O107845C34O107923C39O107923C46O107972C48O107983C49O108003C56O108009C61O108030C68O108035C77O108079C100O108079C105O108129,,
code-creation,JS,10,21222633,0x2ff96f38dee,613,pp$5.parseMaybeUnary node:internal/deps/acorn/acorn/dist/acorn:2576:34,0x164cc38a3c0,~
code-source-info,0x2ff96f38dee
code-creation,JS,10,21222787,0x2ff96f39316,178,pp$5.parseExprSubscripts node:internal/deps/acorn/acorn/dist/acorn:2634:38,0x164cc38a450,~
code-source-info,0x2ff96f39316,448,113039,113880,C0O113100C5O113123C10O113154C15O113154C22O113216C29O113221C34O113259C39O113265C44O113276C49O113295C54O113265C63O113307C68O113325C70O113336C71O113362C93O113362C99O113426C103O113463C110O113468C115O113528C120O113558C124O113548C129O113567C131O113610C135O113652C140O113680C144O113670C149O113689C151O113730C155O113772C160O113796C164O113786C169O113805C171O113842C175O113862C177O113875,,
code-creation,JS,10,21223009,0x2ff96f399b6,1516,pp$5.parseExprAtom node:internal/deps/acorn/acorn/dist/acorn:2737:32,0x164cc38a600,~
code-source-info,0x2ff96f399b
code-creation,JS,10,21223273,0x2ff96f3a41e,227,pp$5.parseIdent node:internal/deps/acorn/acorn/dist/acorn:3375:29,0x164cc38b410,~
code-source-info,0x2ff96f3a41e,448,144464,145557,C0O144497C5O144497C10O144524C18O144541C22O144529C27O144573C31O144566C37O144601C42O144606C48O144641C53O144646C57O144634C61O145058C68O145063C73O145083C80O145088C85O145124C90O145144C94O145157C97O145135C102O145169C107O145175C112O145191C117O145175C125O145205C130O145230C135O145238C140O145238C146O145280C151O145280C155O145311C162O145318C165O145311C170O145338C178O145338C184O145375C188O145403C193O145403C198O145442C205O145447C210O145468C216O145520C220O145513C224O145541C226O145552,,
code-creation,JS,10,21223366,0x2ff96f3a7c6,133,pp.next node:internal/deps/acorn/acorn/dist/acorn:4757:21,0x164cc38e030,~
code-source-info,0x2ff96f3a7c6,448,193070,193545,C0O193109C4O193152C9O193157C15O193173C21O193200C26O193222C34O193266C39O193271C43O193259C47O193200C53O193297C58O193305C64O193328C69O193336C79O193344C85O193336C90O193394C94O193387C98O193429C102O193422C106O193467C110O193460C114O193508C118O193501C122O193528C127O193528C132O193544,,
code-creation,RegExp,3,21223597,0x7ff6f83b39c0,6036,^(?:break|case|catch|continue|debugger|default|do|else|finally|for|function|if|return|switch|throw|try|var|while|with|null|true|false|instanceof|typeof|void|delete|new|in|this|const|class|extends|export|import|super)$
code-creation,JS,10,21223656,0x2ff96f3a9c6,33,pp$2.finishNode node:internal/deps/acorn/acorn/dist/acorn:3602:29,0x164cc38bd90,~
code-source-info,0x2ff96f3a9c6,448,152453,152557,C0O152473C3O152493C8O152521C13O152538C27O152493C32O152552,,
code-creation,JS,10,21223700,0x2ff96f3aaf6,62,finishNodeAt node:internal/deps/acorn/acorn/dist/acorn:3592:24,0x164cc385980,~
code-source-info,0x2ff96f3aaf6,448,152205,152421,C0O152235C2O152245C6O152258C8O152267C12O152288C17O152296C23O152321C30O152329C34O152352C39O152360C45O152382C55O152391C59O152405C61O152416,,
code-creation,JS,10,21223796,0x2ff96f3af2e,336,pp$5.checkUnreserved node:internal/deps/acorn/acorn/dist/acorn:3346:34,0x164cc38b380,~
code-source-info,0x2ff96f3af2e
code-creation,JS,10,21223893,0x2ff96f3b20e,43,prototypeAccessors.inGenerator.get node:internal/deps/acorn/acorn/dist/acorn:595:49,0x164cc3861b0,~
code-source-info,0x2ff96f3b20e,448,34230,34340,C0O34248C5O34248C10O34265C17O34272C22O34291C27O34304C32O34304C37O34321C42O34338,,
code-creation,JS,10,21223935,0x2ff96f3b34e,48,pp$3.currentVarScope node:internal/deps/acorn/acorn/dist/acorn:3551:34,0x164cc38bb00,~
code-source-info,0x2ff96f3b34e,448,150969,151131,C0O150997C5O151008C9O151015C13O151052C20O151062C24O151084C31O151090C36O151105C38O151117C39O151022C44O150979,,
code-creation,JS,10,21223982,0x2ff96f3b47e,43,prototypeAccessors.inAsync.get node:internal/deps/acorn/acorn/dist/acorn:597:45,0x164cc386278,~
code-source-info,0x2ff96f3b47e,448,34389,34495,C0O34407C5O34407C10O34424C17O34431C22O34446C27O34459C32O34459C37O34476C42O34493,,
code-creation,JS,10,21224023,0x2ff96f3b5a6,60,pp$3.currentThisScope node:internal/deps/acorn/acorn/dist/acorn:3559:35,0x164cc38bb90,~
code-source-info,0x2ff96f3b5a6,448,151270,151464,C0O151298C5O151309C9O151316C13O151353C20O151363C24O151385C31O151391C36O151414C43O151420C48O151438C50O151450C51O151323C56O151280,,
code-creation,JS,10,21224060,0x2ff96f3b6e6,26,prototypeAccessors.inClassStaticBlock.get node:internal/deps/acorn/acorn/dist/acorn:626:56,0x164cc3866d8,~
code-source-info,0x2ff96f3b6e6,448,35819,35902,C0O35842C5O35842C10O35859C17O35866C22O35894C25O35897,,
code-creation,JS,10,21224118,0x2ff96f3b80e,75,pp$9.canInsertSemicolon node:internal/deps/acorn/acorn/dist/acorn:720:37,0x164cc386b88,~
code-source-info,0x2ff96f3b80e,448,38780,38938,C0O38802C8O38819C12O38807C17O38838C25O38855C29O38843C37O38882C42O38892C47O38898C52O38909C57O38926C62O38898C69O38882C74O38933,,
code-creation,JS,10,21224186,0x2ff96f3b9ee,25,pp$9.eat node:internal/deps/acorn/acorn/dist/acorn:689:22,0x164cc386970,~
code-source-info,0x2ff96f3b9ee,448,37988,38112,C0O38011C7O38016C12O38040C17O38040C21O38055C22O38066C23O38088C24O38100,,
code-creation,JS,10,21224257,0x2ff96f3bc1e,213,pp$5.parseSubscripts node:internal/deps/acorn/acorn/dist/acorn:2648:34,0x164cc38a4e0,~
code-source-info,0x2ff96f3bc1e,448,113918,114829,C0O113997C5O114005C12O114017C17O114030C24O114035C29O114060C36O114065C41O114094C46O114114C50O114105C55O114127C60O114127C67O114156C72O114167C76O114160C82O114173C87O114196C92O114222C96O114213C100O114256C102O114311C131O114311C137O114426C143O114438C145O114471C147O114483C152O114503C159O114508C164O114550C168O114605C173O114605C180O114649C182O114670C186O114707C194O114707C201O114769C203O114783C204O114802C209O114270,,
code-creation,JS,10,21224436,0x2ff96f3c226,768,pp$5.parseSubscript node:internal/deps/acorn/acorn/dist/acorn:2671:33,0x164cc38a570,~
code-source-info,0x2ff96f3c
code-creation,JS,10,21224610,0x2ff96f3c8a6,73,pp$9.checkExpressionErrors node:internal/deps/acorn/acorn/dist/acorn:781:40,0x164cc386fa8,~
code-source-info,0x2ff96f3c8a6,448,40880,41428,C0O40922C4O40953C5O40965C6O41018C11O41081C16O41099C20O41116C21O41139C27O41159C30O41163C31O41171C32O41191C37O41211C45O41211C51O41317C52O41333C57O41353C65O41353C72O41427,,
code-creation,JS,10,21224700,0x2ff96f3cb4e,324,pp$5.parseExprOp node:internal/deps/acorn/acorn/dist/acorn:2540:30,0x164cc38a2a0,~
code-source-info,0x2ff96f3cb4e
code-creation,JS,10,21224785,0x2ff96f3ce46,30,pp$8.parseExpressionStatement node:internal/deps/acorn/acorn/dist/acorn:1219:43,0x164cc387be8,~
code-source-info,0x2ff96f3ce46,448,59222,59350,C0O59242C2O59258C6O59276C11O59276C15O59306C23O59306C29O59345,,
code-creation,JS,10,21224827,0x2ff96f3d006,42,pp$9.semicolon node:internal/deps/acorn/acorn/dist/acorn:737:28,0x164cc386ca8,~
code-source-info,0x2ff96f3d006,448,39340,39433,C0O39360C8O39372C13O39360C20O39387C25O39387C31O39413C36O39413C41O39432,,
code-creation,JS,10,21224863,0x2ff96f3d136,52,pp$9.insertSemicolon node:internal/deps/acorn/acorn/dist/acorn:726:34,0x164cc386c18,~
code-source-info,0x2ff96f3d136,448,38976,39178,C0O38995C5O38995C11O39035C16O39043C22O39080C27O39088C32O39113C37O39130C42O39088C48O39155C49O39166C51O39177,,
code-creation,RegExp,3,21224950,0x7ff6f83b5200,1088,\\r\\n?|\\n|\\u2028|\\u2029
code-creation,JS,10,21224983,0x2ff96f3d356,33,pp$9.unexpected node:internal/deps/acorn/acorn/dist/acorn:760:29,0x164cc386e38,~
code-source-info,0x2ff96f3d356,448,40001,40082,C0O40019C17O40050C25O40019C32O40081,,
code-creation,JS,10,21225039,0x2ff96f3d49e,127,raise node:internal/repl/utils:106:16,0x2ff96f31888,~
code-source-info,0x2ff96f3d49e,458,3259,4026,C0O3289C26O3414C32O3426C40O3451C42O3545C49O3571C54O3635C59O3654C64O3545C70O3767C83O3771C90O3903C96O3915C104O3987C106O3993C120O3993C126O4025,,
code-creation,JS,10,21225094,0x2ff96f3d696,87,pp$4.raise node:internal/deps/acorn/acorn/dist/acorn:3457:24,0x164cc38b650,~
code-source-info,0x2ff96f3d696,448,147349,147589,C0O147381C3O147398C8O147381C14O147416C17O147438C21O147432C27O147443C31O147455C35O147449C41O147462C52O147484C58O147484C64O147515C66O147523C70O147530C72O147538C76O147565C80O147558C84O147575C86O147575,,
code-creation,JS,10,21225150,0x2ff96f3d816,63,getLineInfo node:internal/deps/acorn/acorn/dist/acorn:316:23,0x164cc385700,~
code-source-info,0x2ff96f3d816,448,21929,22162,C0O21968C3O21977C5O22007C17O22007C23O22049C24O22063C29O22070C34O22103C43O22077C48O22109C49O22119C54O22134C59O21952,,
code-creation,JS,10,21225213,0x2ff96f3d94e,108,nextLineBreak node:internal/deps/acorn/acorn/dist/acorn:252:25,0x164cc385628,~
code-source-info,0x2ff96f3d94e,448,19896,20192,C0O19921C4O19954C10O19982C15O19990C17O19990C22O20027C27O20027C33O20049C36O20053C42O20081C44O20096C47O20090C54O20108C59O20123C66O20136C70O20123C78O20141C85O20152C92O20160C95O20163C96O19998C101O19969C105O20178C107O20187,,
code-creation,JS,10,21225262,0x2ff96f3daae,31,isNewLine node:internal/deps/acorn/acorn/dist/acorn:248:21,0x164cc3855d8,~
code-source-info,0x2ff96f3daae,448,19778,19868,C0O19792C2O19804C9O19819C18O19834C27O19853C30O19863,,
code-creation,JS,10,21225295,0x2ff96f3dbc6,14,Position node:internal/deps/acorn/acorn/dist/acorn:295:35,0x164cc385f58,~
code-source-info,0x2ff96f3dbc6,448,21264,21329,C0O21283C2O21293C6O21306C8O21318C13O21328,,
code-creation,JS,10,21225516,0x2ff96f3df66,87,finishExecution node:repl:538:29,0x2ff96f2fa40,~
code-source-info,0x2ff96f3df66,447,18500,18871,C0O18523C6O18537C7O18544C8O18552C12O18561C18O18730C21O18737C25O18739C28O18757C32O18737C37O18786C48O18811C56O18822C60O18817C63O18809C67O18769C73O18715C77O18848C80O18848C86O18870,,
code-creation,JS,10,21225648,0x2ff96f3e26e,433,finish node:repl:902:20,0x2ff96f2e650,~
code-source-info,0x2ff96f3e26e
code-creation,JS,10,21225813,0x2ff96f3e7b6,249,_memory node:repl:1618:17,0x1b0323df2a8,~
code-source-info,0x2ff96f3e7b6,447,54138,56226,C0O54138C11O54162C13O54162C15O54171C18O54189C26O54182C30O54205C33O54210C41O54229C46O54235C54O54222C58O54297C62O54325C65O54330C70O54336C75O54342C84O54356C89O54362C94O54368C98O54375C105O54389C115O54413C124O54420C130O54420C138O54453C142O54389C149O54536C159O54560C167O54536C172O54582C176O54599C179O54604C186O54616C190O54627C191O54634C192O54819C197O55035C203O55035C209O55077C215O55077C221O55123C226O55135C230O55130C233O55120C235O55148C239O55166C244O56214C248O56225,,
code-creation,JS,10,21225869,0x2ff96f3ea26,213,workIt node:repl:1653:21,0x2ff96f3e6d8,~
code-source-info,0x2ff96f3ea26,447,55182,56214,C3O55194C9O55204C14O55599C23O55618C26O55623C31O55629C43O55655C46O55660C51O55666C55O55673C64O55696C70O55599C77O55730C83O55740C88O55794C97O55812C100O55817C105O55823C110O55794C115O55840C117O55880C124O55888C126O55886C130O55906C131O55914C136O55970C141O55984C151O55976C157O56004C162O56032C163O56040C168O56097C175O56111C180O56108C184O56131C193O56150C196O56155C201O56161C206O56131C212O56213,,
code-creation,JS,10,21225956,0x2ff96f3ecce,28,countMatches node:repl:1640:24,0x2ff96f3e688,~
code-source-info,0x2ff96f3ecce,447,54819,54943,C0O54854C2O54901C9O54869C16O54911C21O54862C25O54925C27O54938,,
code-creation,JS,10,21226189,0x2ff96f3f5ae,808,debugDomainError node:repl:643:53,0x13674f2f480,~
code-source-info,0x2ff96f3f5ae
code-creation,JS,10,21226349,0x2ff96f3fba6,59,decorateErrorStack node:internal/util:157:28,0xf2fdb74770,~
code-source-info,0x2ff96f3fba6,15,4268,4517,C0O4279C3O4285C9O4305C17O4319C19O4318C24O4351C25O4358C26O4378C28O4382C30O4381C34O4418C36O4460C40O4454C43O4446C47O4472C49O4476C53O4502C58O4516,,
code-creation,JS,10,21226395,0x2ff96f3fcee,19,isError node:internal/util:95:17,0xf2fdb74450,~
code-source-info,0x2ff96f3fcee,15,2291,2530,C0O2481C5O2488C13O2521C15O2510C18O2527,,
code-creation,JS,10,21226437,0x2ff96f3fdde,23,SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:682:52,0xf2fdb75ea0,~
code-source-info,0x2ff96f3fdde,15,19431,19536,C0O19465C3O19472C10O19497C12O19496C16O19511C22O19533,,
code-creation,JS,10,21226502,0x3146884d2e6,216,getCrossRelmRegex node:internal/util:663:27,0xf2fdb75e50,~
code-source-info,0x3146884d2e6,15,18594,19376,C0O18622C5O18639C10O18639C16O18654C18O18666C20O18680C21O18703C24O18710C29O18714C35O18751C44O18773C49O18777C55O18810C64O18832C69O18836C75O18873C84O18895C89O18899C95O18935C104O18957C109O18961C115O18994C124O19016C129O19020C135O19054C144O19076C149O19080C155O19113C164O19180C167O19180C171O19153C176O19227C178O19254C181O19254C191O19227C197O19303C202O19320C207O19320C213O19351C215O19373,,
code-creation,RegExp,3,21226697,0x7ff6f83b56c0,1680,^\\s+at\\s.*\\n?
code-creation,JS,10,21226744,0x3146884d666,21,writer node:repl:222:16,0x1b0323df4c0,~
code-source-info,0x3146884d666,447,6862,6899,C0O6871C7O6884C10O6891C15O6871C20O6899,,
code-creation,JS,10,21226853,0x3146884da1e,396,inspect node:internal/util/inspect:309:17,0x33cbf8584d0,~
code-source-info,0x3146884da1e,19,9309,11375,C0O9309C2O9362C9O9456C15O9489C18O9511C28O9535C31O9557C41O9577C44O9599C54O9627C57O9649C67O9680C70O9702C80O9734C83O9756C93O9794C96O9816C106O9851C109O9873C119O9900C122O9922C132O9944C135O9966C145O9988C148O10010C158O10042C161O10064C172O10105C179O10112C184O10156C191O10163C196O10177C198O10190C203O10220C205O10241C208O10230C212O10276C219O10283C226O10299C231O10329C233O10351C236O10340C240O10412C246O10452C248O10467C254O10487C258O10522C263O10522C268O10560C270O10575C274O10565C279O10611C281O10618C285O10816C292O10862C295O10832C304O10908C309O10936C311O10951C314O10945C320O10982C326O11092C328O11108C332O10585C337O10547C341O11159C347O11167C349O11179C353O11210C359O11256C362O11254C366O11277C372O11325C375O11323C379O11338C390O11345C395O11372,,
code-creation,JS,10,21227079,0x3146884e446,491,formatValue node:internal/util/inspect:765:21,0x33cbf858ad0,~
code-source-info,0x3146884e446,19,23840,26653,C0O23930C14O24009C17O24009C23O24045C26O24072C37O24052C42O24093C43O24102C47O24140C58O24140C64O24164C65O24252C68O24383C73O24412C80O24383C86O24427C88O24459C93O24486C98O24520C109O24520C115O24558C116O24579C122O24599C134O24606C139O24644C140O24657C145O24817C151O24859C153O24865C155O24864C159O24892C165O25027C170O25135C176O25156C181O25168C188O25178C193O25327C202O25355C209O25361C213O25416C216O25422C221O25460C223O25449C228O25488C236O25576C254O25488C260O25751C262O25759C267O25783C273O25825C285O25832C290O25868C291O25889C304O25938C310O25969C315O25938C328O25896C333O25988C334O26181C339O26186C344O26186C351O26222C354O26238C360O26271C362O26290C365O26286C370O26284C374O26312C379O26321C384O26321C392O26373C397O26382C402O26382C408O26401C410O26449C415O26458C419O26463C423O26481C428O26490C433O26490C439O26541C449O26563C463O26541C469O26584C470O26595C485O26602C490O26650,,
code-creation,JS,10,21227593,0x3146884ef36,3301,formatRaw node:internal/util/inspect:843:19,0x33cbf858b20,~
code-source-info,0x3146884ef
code-creation,JS,10,21228052,0x314688502ce,322,getConstructorName node:internal/util/inspect:587:28,0x33cbf8588f0,~
code-source-info,0x314688502ce
code-creation,JS,10,21228137,0x3146885061e,13,isInstanceof node:internal/util/inspect:579:22,0x33cbf8588a0,~
code-source-info,0x3146885061e,19,17930,18033,C3O17962C5O17976C8O17993C11O18012C12O18025,,
code-creation,JS,10,21228204,0x31468850826,223,getKeys node:internal/util/inspect:708:17,0x33cbf8589e0,~
code-source-info,0x31468850826,19,21889,22890,C0O21889C9O21918C11O21943C21O21943C26O21982C30O22005C40O22012C45O22063C51O22070C56O22084C63O22084C73O22452C83O22459C91O22457C101O22506C112O22513C118O22513C127O22539C134O22544C143O22582C151O22582C156O22506C160O22622C172O22629C179O22687C185O22694C190O22725C195O22790C206O22820C209O22820C215O22790C220O22875C222O22887,,
code-creation,JS,10,21228385,0x31468850c9e,757,formatError node:internal/util/inspect:1360:21,0x33cbf858f30,~
code-source-info,0x31468850c9e
code-creation,JS,10,21228495,0x3146885119e,32,getStackString node:internal/util/inspect:1239:24,0x33cbf858d00,~
code-source-info,0x3146885119e,19,41737,41826,C0O41763C8O41771C11O41784C16O41771C24O41793C27O41793C31O41823,,
code-creation,JS,10,21228549,0x31468851356,191,removeDuplicateErrorKeys node:internal/util/inspect:1296:34,0x33cbf858df0,~
code-source-info,0x31468851356,19,43905,44305,C0O43943C6O43962C12O43969C17O44002C39O43994C67O43994C70O44055C75O44055C81O44170C83O44180C90O44190C95O44224C99O44190C106O44244C120O44244C125O43983C190O44304,,
code-creation,JS,10,21228647,0x314688515fe,283,improveStack node:internal/util/inspect:1263:22,0x33cbf858da0,~
code-source-info,0x314688515fe,19,42653,43868,C0O42844C5O42857C11O42893C17O42893C26O42942C29O42942C36O42998C43O43005C50O43021C56O43027C63O43043C69O43049C74O43083C77O43097C81O43146C92O43146C101O43229C110O43229C116O43291C120O43317C128O43351C133O43366C140O43425C157O43446C168O43425C174O43498C176O43507C181O43528C186O43532C193O43582C194O43590C199O43610C211O43632C219O43670C225O43690C228O43690C241O43762C253O43784C266O43792C269O43792C280O43852C282O43865,,
code-creation,JS,10,21228740,0x3146885187e,39,SideEffectFreeRegExpPrototypeSymbolSplit node:internal/util:686:50,0xf2fdb75ef0,~
code-source-info,0x3146885187e,15,19589,19692,C16O19629C19O19636C26O19661C28O19660C32O19673C38O19689,,
code-creation,RegExp,3,21228845,0x7ff6f83b5e00,968,(?<=\\n)
code-creation,JS,10,21228901,0x31468851a06,134, node:repl:733:36,0x2ff96f3f318,~
code-source-info,0x31468851a06,447,25256,25604,C0O25277C10O25306C19O25306C26O25386C37O25398C40O25405C45O25413C50O25433C54O25425C64O25467C75O25503C87O25395C95O25522C99O25530C107O25567C116O25579C124O25576C133O25603,,
code-creation,RegExp,3,21229012,0x7ff6f83b6280,1488,^\\[?([A-Z][a-z0-9_]*)*Error
code-creation,JS,10,21230018,0x31468851c0e,108,Domain.exit node:domain:329:33,0x164cc3be1f0,~
code-source-info,0x31468851c0e,457,11384,11762,C0O11466C7O11492C10O11466C16O11509C18O11519C23O11527C24O11534C25O11579C32O11600C35O11579C40O11620C45O11637C48O11643C54O11650C64O11670C69O11676C72O11682C76O11689C79O11675C82O11635C86O11698C92O11723C96O11713C100O11734C103O11734C107O11761,,
code-creation,JS,10,21230122,0x31468851dae,63,online node:internal/repl/history:120:18,0x3b94bd97b98,~
code-source-info,0x31468851dae,459,3086,3243,C0O3100C4O3115C8O3130C14O3150C23O3163C26O3150C30O3185C44O3218C47O3193C55O3191C62O3242,,
code-creation,JS,10,21230216,0x31468852026,221,setTimeout node:timers:139:20,0x320a78cc518,~
code-source-info,0x31468852026,31,4369,5035,C0O4369C2O4410C10O4410C15O4459C17O4462C19O4489C54O4551C56O4578C65O4586C74O4600C76O4627C85O4635C94O4641C103O4655C105O4683C114O4691C123O4697C132O4703C139O4722C142O4743C146O4731C151O4844C153O4851C159O4867C162O4856C166O4752C171O4717C175O4888C177O4921C197O4921C203O4973C208O4997C213O4973C218O5017C220O5032,,
code-creation,JS,10,21230315,0x3146885244e,180,Timeout node:internal/timers:165:14,0xf2fdb62638,~
script-source,12,node:internal/timers,'use strict';\x0d\n\x0d\n// HOW and WHY the timers implementation works the way it does.\x0d\n//\x0d\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\x0d\n// timer so that we can time out of connections. Additionally\x2C many user\x0d\n// libraries and applications also use timers. As such there may be a\x0d\n// significantly large amount of timeouts scheduled at any given time.\x0d\n// Therefore\x2C it is very important that the timers implementation is performant\x0d\n// and efficient.\x0d\n//\x0d\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\x0d\n// linked list implementation\x2C since timers depend on it extensively. It can be\x0d\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\x0d\n// it is a set of helpers that operate on an existing object.\x0d\n//\x0d\n// In order to be as performant as possible\x2C the architecture and data\x0d\n// structures are designed so that they are optimized to handle the following\x0d\n// use cases as efficiently as possible:\x0d\n\x0d\n// - Adding a new timer. (insert)\x0d\n// - Removing an existing timer. (remove)\x0d\n// - Handling a timer timing out. (timeout)\x0d\n//\x0d\n// Whenever possible\x2C the implementation tries to make the complexity of these\x0d\n// operations as close to constant-time as possible.\x0d\n// (So that performance is not impacted by the number of scheduled timers.)\x0d\n//\x0d\n// Object maps are kept which contain linked lists keyed by their duration in\x0d\n// milliseconds.\x0d\n//\x0d\n/* eslint-disable node-core/non-ascii-character */\x0d\n//\x0d\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\x0d\n// \u2551\x0d\n// \u2560\u2550\u2550\x0d\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\x0d\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\x0d\n//              \u2502\x0d\n// \u2554\u2550\u2550          \u2502\x0d\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\x0d\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\x0d\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2551      \u2502                                  ^\x0d\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2560\u2550\u2550  \u2560\u2550\u2550\x0d\n// \u2551    \u2551\x0d\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\x0d\n// \u2551\x0d\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\x0d\n//\x0d\n/* eslint-enable node-core/non-ascii-character */\x0d\n//\x0d\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\x0d\n// is possible in the JavaScript layer. Any one list of timers is able to be\x0d\n// sorted by just appending to it because all timers within share the same\x0d\n// duration. Therefore\x2C any timer added later will always have been scheduled to\x0d\n// timeout later\x2C thus only needing to be appended.\x0d\n// Removal from an object-property linked list is also virtually constant-time\x0d\n// as can be seen in the lib/internal/linkedlist.js implementation.\x0d\n// Timeouts only need to process any timers currently due to expire\x2C which will\x0d\n// always be at the beginning of the list for reasons stated above. Any timers\x0d\n// after the first one encountered that does not yet need to timeout will also\x0d\n// always be due to timeout at a later time.\x0d\n//\x0d\n// Less-than constant time operations are thus contained in two places:\x0d\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\x0d\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\x0d\n// Timeout lists and the object map lookup of a specific list by the duration of\x0d\n// timers within (or creation of a new list). However\x2C these operations combined\x0d\n// have shown to be trivial in comparison to other timers architectures.\x0d\n\x0d\nconst {\x0d\n  MathMax\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n  timeoutInfo\x2C\x0d\n} = binding;\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// Symbols for storing async id state.\x0d\nconst async_id_symbol = Symbol('asyncId');\x0d\nconst trigger_async_id_symbol = Symbol('triggerId');\x0d\n\x0d\nconst kHasPrimitive = Symbol('kHasPrimitive');\x0d\n\x0d\nconst {\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst L = require('internal/linkedlist');\x0d\nconst PriorityQueue = require('internal/priority_queue');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\x0d\nconst kCount = 0;\x0d\nconst kRefCount = 1;\x0d\nconst kHasOutstanding = 2;\x0d\n\x0d\n// Timeout values > TIMEOUT_MAX are set to 1.\x0d\nconst TIMEOUT_MAX = 2 ** 31 - 1;\x0d\n\x0d\nlet timerListId = NumberMIN_SAFE_INTEGER;\x0d\n\x0d\nconst kRefed = Symbol('refed');\x0d\n\x0d\nlet nextExpiry = Infinity;\x0d\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\x0d\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\x0d\n// `src/node_process_methods.cc` is able to access this value without crossing\x0d\n// the JS-C++ boundary\x2C which is slow at the time of writing.\x0d\ntimeoutInfo[0] = 0;\x0d\n\x0d\n// This is a priority queue with a custom sorting function that first compares\x0d\n// the expiry times of two lists and if they're the same then compares their\x0d\n// individual IDs to determine which list was created first.\x0d\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\x0d\n\x0d\n// Object map containing linked lists of timers\x2C keyed and sorted by their\x0d\n// duration in milliseconds.\x0d\n//\x0d\n// - key = time in milliseconds\x0d\n// - value = linked list\x0d\nconst timerListMap = { __proto__: null };\x0d\n\x0d\nfunction initAsyncResource(resource\x2C type) {\x0d\n  const asyncId = resource[async_id_symbol] = newAsyncId();\x0d\n  const triggerAsyncId =\x0d\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\nclass Timeout {\x0d\n  // Timer constructor function.\x0d\n  // The entire prototype is defined in lib/timers.js\x0d\n  constructor(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\x0d\n    after *= 1; // Coalesce to number or NaN\x0d\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\x0d\n      if (after > TIMEOUT_MAX) {\x0d\n        process.emitWarning(`${after} does not fit into` +\x0d\n                            ' a 32-bit signed integer.' +\x0d\n                            '\\nTimeout duration was set to 1.'\x2C\x0d\n                            'TimeoutOverflowWarning');\x0d\n      }\x0d\n      after = 1; // Schedule on next tick\x2C follows browser behavior\x0d\n    }\x0d\n\x0d\n    this._idleTimeout = after;\x0d\n    this._idlePrev = this;\x0d\n    this._idleNext = this;\x0d\n    this._idleStart = null;\x0d\n    // This must be set to null first to avoid function tracking\x0d\n    // on the hidden class\x2C revisit in V8 versions after 6.2\x0d\n    this._onTimeout = null;\x0d\n    this._onTimeout = callback;\x0d\n    this._timerArgs = args;\x0d\n    this._repeat = isRepeat ? after : null;\x0d\n    this._destroyed = false;\x0d\n\x0d\n    if (isRefed)\x0d\n      incRefCount();\x0d\n    this[kRefed] = isRefed;\x0d\n    this[kHasPrimitive] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  refresh() {\x0d\n    if (this[kRefed])\x0d\n      active(this);\x0d\n    else\x0d\n      unrefActive(this);\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed]) {\x0d\n      this[kRefed] = false;\x0d\n      if (!this._destroyed)\x0d\n        decRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (!this[kRefed]) {\x0d\n      this[kRefed] = true;\x0d\n      if (!this._destroyed)\x0d\n        incRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TimersList {\x0d\n  constructor(expiry\x2C msecs) {\x0d\n    this._idleNext = this; // Create the list with the linkedlist properties to\x0d\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\x0d\n    this.expiry = expiry;\x0d\n    this.id = timerListId++;\x0d\n    this.msecs = msecs;\x0d\n    this.priorityQueuePosition = null;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A linked list for storing `setImmediate()` requests\x0d\nclass ImmediateList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n  }\x0d\n\x0d\n  // Appends an item to the end of the linked list\x2C adjusting the current tail's\x0d\n  // next pointer and the item's previous pointer where applicable\x0d\n  append(item) {\x0d\n    if (this.tail !== null) {\x0d\n      this.tail._idleNext = item;\x0d\n      item._idlePrev = this.tail;\x0d\n    } else {\x0d\n      this.head = item;\x0d\n    }\x0d\n    this.tail = item;\x0d\n  }\x0d\n\x0d\n  // Removes an item from the linked list\x2C adjusting the pointers of adjacent\x0d\n  // items and the linked list's head or tail pointers as necessary\x0d\n  remove(item) {\x0d\n    if (item._idleNext) {\x0d\n      item._idleNext._idlePrev = item._idlePrev;\x0d\n    }\x0d\n\x0d\n    if (item._idlePrev) {\x0d\n      item._idlePrev._idleNext = item._idleNext;\x0d\n    }\x0d\n\x0d\n    if (item === this.head)\x0d\n      this.head = item._idleNext;\x0d\n    if (item === this.tail)\x0d\n      this.tail = item._idlePrev;\x0d\n\x0d\n    item._idleNext = null;\x0d\n    item._idlePrev = null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create a single linked list instance only once at startup\x0d\nconst immediateQueue = new ImmediateList();\x0d\n\x0d\nfunction incRefCount() {\x0d\n  if (timeoutInfo[0]++ === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction decRefCount() {\x0d\n  if (--timeoutInfo[0] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(false);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Schedule or re-schedule a timer.\x0d\n// The item must have been enroll()'d first.\x0d\nfunction active(item) {\x0d\n  insertGuarded(item\x2C true);\x0d\n}\x0d\n\x0d\n// Internal APIs that need timeouts should use `unrefActive()` instead of\x0d\n// `active()` so that they do not unnecessarily keep the process open.\x0d\nfunction unrefActive(item) {\x0d\n  insertGuarded(item\x2C false);\x0d\n}\x0d\n\x0d\n// The underlying logic for scheduling or re-scheduling a timer.\x0d\n//\x0d\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\x0d\n// list if one does not already exist for the specified timeout duration.\x0d\nfunction insertGuarded(item\x2C refed\x2C start) {\x0d\n  const msecs = item._idleTimeout;\x0d\n  if (msecs < 0 || msecs === undefined)\x0d\n    return;\x0d\n\x0d\n  insert(item\x2C msecs\x2C start);\x0d\n\x0d\n  const isDestroyed = item._destroyed;\x0d\n  if (isDestroyed || !item[async_id_symbol]) {\x0d\n    item._destroyed = false;\x0d\n    initAsyncResource(item\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  if (isDestroyed) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n  } else if (refed === !item[kRefed]) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n    else\x0d\n      decRefCount();\x0d\n  }\x0d\n  item[kRefed] = refed;\x0d\n}\x0d\n\x0d\n// We need to use the binding as the receiver for fast API calls.\x0d\nfunction insert(item\x2C msecs\x2C start = binding.getLibuvNow()) {\x0d\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\x0d\n  msecs = MathTrunc(msecs);\x0d\n  item._idleStart = start;\x0d\n\x0d\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\x0d\n  let list = timerListMap[msecs];\x0d\n  if (list === undefined) {\x0d\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\x0d\n    const expiry = start + msecs;\x0d\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\x0d\n    timerListQueue.insert(list);\x0d\n\x0d\n    if (nextExpiry > expiry) {\x0d\n      // We need to use the binding as the receiver for fast API calls.\x0d\n      binding.scheduleTimer(msecs);\x0d\n      nextExpiry = expiry;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  L.append(list\x2C item);\x0d\n}\x0d\n\x0d\nfunction setUnrefTimeout(callback\x2C after) {\x0d\n  // Type checking identical to setTimeout()\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\x0d\n  insert(timer\x2C timer._idleTimeout);\x0d\n\x0d\n  return timer;\x0d\n}\x0d\n\x0d\n// Type checking used by timers.enroll() and Socket#setTimeout()\x0d\nfunction getTimerDuration(msecs\x2C name) {\x0d\n  validateNumber(msecs\x2C name);\x0d\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\x0d\n  }\x0d\n\x0d\n  // Ensure that msecs fits into signed int32\x0d\n  if (msecs > TIMEOUT_MAX) {\x0d\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\x0d\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\x0d\n                        'TimeoutOverflowWarning');\x0d\n    return TIMEOUT_MAX;\x0d\n  }\x0d\n\x0d\n  return msecs;\x0d\n}\x0d\n\x0d\nfunction compareTimersLists(a\x2C b) {\x0d\n  const expiryDiff = a.expiry - b.expiry;\x0d\n  if (expiryDiff === 0) {\x0d\n    if (a.id < b.id)\x0d\n      return -1;\x0d\n    if (a.id > b.id)\x0d\n      return 1;\x0d\n  }\x0d\n  return expiryDiff;\x0d\n}\x0d\n\x0d\nfunction setPosition(node\x2C pos) {\x0d\n  node.priorityQueuePosition = pos;\x0d\n}\x0d\n\x0d\nfunction getTimerCallbacks(runNextTicks) {\x0d\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\x0d\n  // this queue will store all remaining Immediates that need to run upon\x0d\n  // resolution of all error handling (if process is still alive).\x0d\n  const outstandingQueue = new ImmediateList();\x0d\n\x0d\n  function processImmediate() {\x0d\n    const queue = outstandingQueue.head !== null ?\x0d\n      outstandingQueue : immediateQueue;\x0d\n    let immediate = queue.head;\x0d\n\x0d\n    // Clear the linked list early in case new `setImmediate()`\x0d\n    // calls occur while immediate callbacks are executed\x0d\n    if (queue !== outstandingQueue) {\x0d\n      queue.head = queue.tail = null;\x0d\n      immediateInfo[kHasOutstanding] = 1;\x0d\n    }\x0d\n\x0d\n    let prevImmediate;\x0d\n    let ranAtLeastOneImmediate = false;\x0d\n    while (immediate !== null) {\x0d\n      if (ranAtLeastOneImmediate)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneImmediate = true;\x0d\n\x0d\n      // It's possible for this current Immediate to be cleared while executing\x0d\n      // the next tick queue above\x2C which means we need to use the previous\x0d\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\x0d\n      if (immediate._destroyed) {\x0d\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\x0d\n      // gets executed\x2C just like how Timeouts work.\x0d\n      immediate._destroyed = true;\x0d\n\x0d\n      immediateInfo[kCount]--;\x0d\n      if (immediate[kRefed])\x0d\n        immediateInfo[kRefCount]--;\x0d\n      immediate[kRefed] = null;\x0d\n\x0d\n      prevImmediate = immediate;\x0d\n\x0d\n      const asyncId = immediate[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\x0d\n\x0d\n      try {\x0d\n        const argv = immediate._argv;\x0d\n        if (!argv)\x0d\n          immediate._onImmediate();\x0d\n        else\x0d\n          immediate._onImmediate(...argv);\x0d\n      } finally {\x0d\n        immediate._onImmediate = null;\x0d\n\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n\x0d\n        outstandingQueue.head = immediate = immediate._idleNext;\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    if (queue === outstandingQueue)\x0d\n      outstandingQueue.head = null;\x0d\n    immediateInfo[kHasOutstanding] = 0;\x0d\n  }\x0d\n\x0d\n\x0d\n  function processTimers(now) {\x0d\n    debug('process timer lists %d'\x2C now);\x0d\n    nextExpiry = Infinity;\x0d\n\x0d\n    let list;\x0d\n    let ranAtLeastOneList = false;\x0d\n    while ((list = timerListQueue.peek()) != null) {\x0d\n      if (list.expiry > now) {\x0d\n        nextExpiry = list.expiry;\x0d\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\x0d\n      }\x0d\n      if (ranAtLeastOneList)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneList = true;\x0d\n      listOnTimeout(list\x2C now);\x0d\n    }\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  function listOnTimeout(list\x2C now) {\x0d\n    const msecs = list.msecs;\x0d\n\x0d\n    debug('timeout callback %d'\x2C msecs);\x0d\n\x0d\n    let ranAtLeastOneTimer = false;\x0d\n    let timer;\x0d\n    while ((timer = L.peek(list)) != null) {\x0d\n      const diff = now - timer._idleStart;\x0d\n\x0d\n      // Check if this loop iteration is too early for the next timer.\x0d\n      // This happens if there are more timers scheduled for later in the list.\x0d\n      if (diff < msecs) {\x0d\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\x0d\n        list.id = timerListId++;\x0d\n        timerListQueue.percolateDown(1);\x0d\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (ranAtLeastOneTimer)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneTimer = true;\x0d\n\x0d\n      // The actual logic for when a timeout happens.\x0d\n      L.remove(timer);\x0d\n\x0d\n      const asyncId = timer[async_id_symbol];\x0d\n\x0d\n      if (!timer._onTimeout) {\x0d\n        if (!timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\x0d\n\x0d\n      let start;\x0d\n      if (timer._repeat) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        start = binding.getLibuvNow();\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        const args = timer._timerArgs;\x0d\n        if (args === undefined)\x0d\n          timer._onTimeout();\x0d\n        else\x0d\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\x0d\n      } finally {\x0d\n        if (timer._repeat && timer._idleTimeout !== -1) {\x0d\n          timer._idleTimeout = timer._repeat;\x0d\n          insert(timer\x2C timer._idleTimeout\x2C start);\x0d\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\x0d\n    // called all of the timer timeouts.\x0d\n    // As such\x2C we can remove the list from the object map and\x0d\n    // the PriorityQueue.\x0d\n    debug('%d list empty'\x2C msecs);\x0d\n\x0d\n    // The current list may have been removed and recreated since the reference\x0d\n    // to `list` was created. Make sure they're the same instance of the list\x0d\n    // before destroying.\x0d\n    if (list === timerListMap[msecs]) {\x0d\n      delete timerListMap[msecs];\x0d\n      timerListQueue.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nclass Immediate {\x0d\n  constructor(callback\x2C args) {\x0d\n    this._idleNext = null;\x0d\n    this._idlePrev = null;\x0d\n    this._onImmediate = callback;\x0d\n    this._argv = args;\x0d\n    this._destroyed = false;\x0d\n    this[kRefed] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Immediate');\x0d\n\x0d\n    this.ref();\x0d\n    immediateInfo[kCount]++;\x0d\n\x0d\n    immediateQueue.append(this);\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kRefed] === false) {\x0d\n      this[kRefed] = true;\x0d\n\x0d\n      if (immediateInfo[kRefCount]++ === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(true);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed] === true) {\x0d\n      this[kRefed] = false;\x0d\n      if (--immediateInfo[kRefCount] === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(false);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return !!this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  TIMEOUT_MAX\x2C\x0d\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\x0d\n  async_id_symbol\x2C\x0d\n  trigger_async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  initAsyncResource\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n  immediateQueue\x2C\x0d\n  getTimerCallbacks\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n    kHasOutstanding\x2C\x0d\n  }\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  decRefCount\x2C\x0d\n  incRefCount\x2C\x0d\n};\x0d\n
code-source-info,0x3146885244e,12,6107,7172,C0O6157C7O6203C9O6215C16O6232C18O6229C23O6255C25O6267C27O6265C32O6291C35O6299C42O6314C52O6340C58O6399C65O6299C71O6538C75O6614C77O6632C81O6646C83O6661C87O6674C89O6689C93O6702C94O6718C98O6859C99O6875C103O6888C105O6904C109O6921C111O6937C115O6950C120O6965C127O6963C131O6995C132O7011C136O7027C140O7047C143O7047C146O7067C148O7072C153O7080C157O7096C159O7101C163O7116C167O7132C173O7132C179O7171,,
tick,0x7ff8e7aeed54,21231566,0,0x0,3,0x7ff777c986d0,0x314688520eb,0x31468851ddd,0x7ff6f83ad3f1,0x3b94bd87e0b,0x2ff96f2e449,0x2ff96f2ceaa,0x1795a8f9536,0x1795a8f7e1c,0x7ff6f83aaafa,0x7ff6f83ad25b,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x7ff6f83aa123,0x7ff6f83ad25b,0x3b94bd87e0b,0x7ff6f83b32be,0x1795a8f68fb,0x7ff6f83a71ac,0x1795a8f61b1,0x7ff6f8394394
code-creation,JS,10,21231712,0x3146885297e,45,incRefCount node:internal/timers:305:21,0xf2fdb62a80,~
code-source-info,0x3146885297e,12,9727,9878,C0O9735C16O9753C21O9756C26O9841C31O9849C38O9849C44O9877,,
code-creation,JS,10,21231799,0x31468852b46,76,initAsyncResource node:internal/timers:155:27,0xf2fdb625e8,~
code-source-info,0x31468852b46,12,5728,5986,C0O5766C2O5775C7O5794C10O5794C14O5792C21O5839C23O5848C28O5875C31O5875C35O5873C42O5906C47O5910C52O5933C69O5933C75O5985,,
code-creation,JS,10,21232001,0x31468852e2e,173,insert node:internal/timers:361:16,0xf2fdb62c10,~
code-source-info,0x31468852e2e,12,11262,12007,C12O11284C15O11292C20O11292C29O11386C34O11394C39O11415C41O11431C45O11537C52O11549C56O11561C58O11592C66O11592C71O11680C73O11686C77O11700C84O11733C95O11729C101O11720C105O11765C110O11780C115O11780C120O11801C127O11816C132O11908C137O11916C142O11916C147O11945C149O11956C155O11983C160O11985C165O11985C172O12006,,
code-creation,JS,10,21232080,0x3146885301e,10, node:internal/timers:120:65,0xf2fdb62280,~
code-source-info,0x3146885301e,12,4504,4531,C0O4517C2O4523C9O4530,,
code-creation,JS,10,21232118,0x3146885313e,55,TimersList node:internal/timers:241:14,0xf2fdb62818,~
code-source-info,0x3146885313e,12,7971,8273,C0O7994C2O8009C6O8075C8O8090C12O8152C14O8164C18O8179C30O8200C38O8187C42O8209C44O8220C48O8234C49O8261C54O8272,,
code-creation,JS,10,21232185,0x31468853516,63,insert node:internal/priority_queue:26:9,0xf2fdb78b00,~
script-source,18,node:internal/priority_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// The PriorityQueue is a basic implementation of a binary heap that accepts\x0d\n// a custom sorting function via its constructor. This function is passed\x0d\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\x0d\n// this enables priority queues that are based on a comparison of more than\x0d\n// just a single criteria.\x0d\n\x0d\nmodule.exports = class PriorityQueue {\x0d\n  #compare = (a\x2C b) => a - b;\x0d\n  #heap = new Array(64);\x0d\n  #setPosition;\x0d\n  #size = 0;\x0d\n\x0d\n  constructor(comparator\x2C setPosition) {\x0d\n    if (comparator !== undefined)\x0d\n      this.#compare = comparator;\x0d\n    if (setPosition !== undefined)\x0d\n      this.#setPosition = setPosition;\x0d\n  }\x0d\n\x0d\n  insert(value) {\x0d\n    const heap = this.#heap;\x0d\n    const pos = ++this.#size;\x0d\n    heap[pos] = value;\x0d\n\x0d\n    if (heap.length === pos)\x0d\n      heap.length *= 2;\x0d\n\x0d\n    this.percolateUp(pos);\x0d\n  }\x0d\n\x0d\n  peek() {\x0d\n    return this.#heap[1];\x0d\n  }\x0d\n\x0d\n  percolateDown(pos) {\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const heap = this.#heap;\x0d\n    const size = this.#size;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos * 2 <= size) {\x0d\n      let childIndex = pos * 2 + 1;\x0d\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\x0d\n        childIndex = pos * 2;\x0d\n      const child = heap[childIndex];\x0d\n      if (compare(item\x2C child) <= 0)\x0d\n        break;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(child\x2C pos);\x0d\n      heap[pos] = child;\x0d\n      pos = childIndex;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  percolateUp(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos > 1) {\x0d\n      const parent = heap[pos / 2 | 0];\x0d\n      if (compare(parent\x2C item) <= 0)\x0d\n        break;\x0d\n      heap[pos] = parent;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(parent\x2C pos);\x0d\n      pos = pos / 2 | 0;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  removeAt(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const size = --this.#size;\x0d\n    heap[pos] = heap[size + 1];\x0d\n    heap[size + 1] = undefined;\x0d\n\x0d\n    if (size > 0 && pos <= size) {\x0d\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0]\x2C heap[pos]) > 0)\x0d\n        this.percolateUp(pos);\x0d\n      else\x0d\n        this.percolateDown(pos);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const heap = this.#heap;\x0d\n    const value = heap[1];\x0d\n    if (value === undefined)\x0d\n      return;\x0d\n\x0d\n    this.removeAt(1);\x0d\n\x0d\n    return value;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x31468853516,18,723,909,C0O751C2O756C6O780C9O786C15O787C22O799C24O809C28O834C35O841C40O857C47O869C51O887C56O887C62O908,,
code-creation,JS,10,21232394,0x3146885362e,103,percolateUp node:internal/priority_queue:65:14,0xf2fdb78bf0,~
code-source-info,0x3146885362e,18,1664,2159,C0O1690C2O1695C6O1723C8O1728C12O1763C14O1768C18O1800C20O1804C24O1829C26O1829C31O1858C33O1867C36O1871C39O1862C43O1888C50O1910C55O1925C57O1939C59O1949C63O1966C67O2006C72O2039C74O2049C77O2053C82O1818C86O2070C88O2080C92O2093C96O2131C102O2158,,
code-creation,JS,10,21232446,0x314688537b6,8,setPosition node:internal/timers:423:21,0xf2fdb62d50,~
code-source-info,0x314688537b6,12,13132,13185,C0O13149C2O13176C7O13184,,
code-creation,JS,10,21232486,0x3146885389e,52,append node:internal/linkedlist:30:16,0xf2fdb77ab0,~
script-source,17,node:internal/linkedlist,'use strict';\x0d\n\x0d\nfunction init(list) {\x0d\n  list._idleNext = list;\x0d\n  list._idlePrev = list;\x0d\n  return list;\x0d\n}\x0d\n\x0d\n// Show the most idle item.\x0d\nfunction peek(list) {\x0d\n  if (list._idlePrev === list) return null;\x0d\n  return list._idlePrev;\x0d\n}\x0d\n\x0d\n// Remove an item from its list.\x0d\nfunction remove(item) {\x0d\n  if (item._idleNext) {\x0d\n    item._idleNext._idlePrev = item._idlePrev;\x0d\n  }\x0d\n\x0d\n  if (item._idlePrev) {\x0d\n    item._idlePrev._idleNext = item._idleNext;\x0d\n  }\x0d\n\x0d\n  item._idleNext = null;\x0d\n  item._idlePrev = null;\x0d\n}\x0d\n\x0d\n// Remove an item from its list and place at the end.\x0d\nfunction append(list\x2C item) {\x0d\n  if (item._idleNext || item._idlePrev) {\x0d\n    remove(item);\x0d\n  }\x0d\n\x0d\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\x0d\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\x0d\n  item._idleNext = list._idleNext;\x0d\n  item._idlePrev = list;\x0d\n\x0d\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\x0d\n  list._idleNext._idlePrev = item;\x0d\n  list._idleNext = item;\x0d\n}\x0d\n\x0d\nfunction isEmpty(list) {\x0d\n  return list._idleNext === list;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  init\x2C\x0d\n  peek\x2C\x0d\n  remove\x2C\x0d\n  append\x2C\x0d\n  isEmpty\x2C\x0d\n};\x0d\n
code-source-info,0x3146885389e,17,587,1037,C0O614C6O632C12O650C15O650C19O853C23O846C27O867C29O882C33O981C40O1001C44O1012C46O1027C51O1036,,
code-creation,JS,10,21232585,0x314688539ce,50,remove node:internal/linkedlist:16:16,0xf2fdb77a60,~
code-source-info,0x314688539ce,17,290,513,C0O311C6O334C11O361C15O354C19O391C25O414C30O441C34O434C38O462C39O477C43O488C44O503C49O512,,
tick,0x7ff8e7af1be4,21246778,0,0x0,8
tick,0x7ff7787e23c2,21262519,0,0x0,6
code-creation,JS,10,21262719,0x31468853df6,147,processTimers node:internal/timers:499:25,0xf2fdb62f70,~
code-source-info,0x31468853df6,12,15533,16019,C0O15546C10O15546C15O15589C23O15600C31O15623C33O15658C35O15708C42O15700C47O15700C55O15735C62O15742C67O15778C76O15771C84O15795C92O15813C97O15817C106O15823C114O15837C116O15836C118O15848C119O15865C123O15897C126O15897C131O15934C133O15967C136O15967C141O15670C145O16005C146O16014,,
code-creation,JS,10,21262851,0x31468853f8e,12,peek node:internal/priority_queue:37:7,0xf2fdb78b50,~
code-source-info,0x31468853f8e,18,919,955,C0O929C2O941C8O946C11O950,,
code-creation,JS,10,21263103,0x3146885426e,602,listOnTimeout node:internal/timers:519:25,0xf2fdb62fc0,~
code-source-info,0x3146885426e
code-creation,JS,10,21263288,0x314688546c6,19,peek node:internal/linkedlist:10:14,0xf2fdb77a10,~
code-source-info,0x314688546c6,17,155,237,C0O176C7O186C12O196C13O208C14O224C18O234,,
code-creation,JS,10,21263549,0x3146885483e,32,shift node:internal/priority_queue:99:8,0xf2fdb78c90,~
code-source-info,0x3146885483e,18,2518,2676,C0O2541C2O2546C6O2572C8O2576C12O2586C14O2618C15O2625C16O2638C24O2638C29O2658C31O2671,,
code-creation,JS,10,21263637,0x3146885494e,128,removeAt node:internal/priority_queue:85:11,0xf2fdb78c40,~
code-source-info,0x3146885494e,18,2173,2507,C0O2199C2O2204C6O2229C9O2235C15O2236C22O2248C24O2270C27O2264C30O2258C34O2281C36O2291C41O2296C45O2316C46O2325C53O2336C58O2354C60O2362C67O2374C73O2392C76O2396C79O2387C85O2406C92O2382C99O2413C104O2432C109O2432C116O2476C121O2476C127O2506,,
tick,0x7ff8e7af1be4,21278222,0,0x0,8
tick,0x7ff8e7af1be4,21293883,0,0x0,8
tick,0x7ff8e7af1be4,21309850,0,0x0,8
tick,0x7ff8e7af1be4,21326296,0,0x0,8
tick,0x7ff8e7af1be4,21341772,0,0x0,8
tick,0x7ff8e7af1be4,21359311,0,0x0,8
tick,0x7ff8e7af1be4,21372781,0,0x0,8
tick,0x7ff8e7af1be4,21388300,0,0x0,8
tick,0x7ff8e7af1be4,21404025,0,0x0,8
tick,0x7ff8e7af1be4,21419840,0,0x0,8
tick,0x7ff8e7af1be4,21435972,0,0x0,8
tick,0x7ff8e7af1be4,21452195,0,0x0,8
tick,0x7ff8e7af1be4,21467911,0,0x0,8
tick,0x7ff8e7af1be4,21483555,0,0x0,8
tick,0x7ff8e7af1be4,21499909,0,0x0,8
tick,0x7ff8e7af1be4,21515638,0,0x0,8
tick,0x7ff8e7af1be4,21518782,0,0x0,8
tick,0x7ff8e7af1be4,21533520,0,0x0,8
tick,0x7ff8e7af1be4,21549730,0,0x0,8
tick,0x7ff8e7af1be4,21565351,0,0x0,8
tick,0x7ff8e7af1be4,21581433,0,0x0,8
tick,0x7ff8e7af1be4,21597038,0,0x0,8
tick,0x7ff8e7af1be4,21613619,0,0x0,8
tick,0x7ff8e7af1be4,21629800,0,0x0,8
tick,0x7ff8e7af1be4,21645164,0,0x0,8
tick,0x7ff8e7af1be4,21660460,0,0x0,8
tick,0x7ff8e7af1be4,21676419,0,0x0,8
tick,0x7ff8e7af1be4,21692664,0,0x0,8
tick,0x7ff8e7af1be4,21702364,0,0x0,8
tick,0x7ff8e7af1be4,21703923,0,0x0,8
tick,0x7ff8e7af1be4,21712124,0,0x0,8
tick,0x7ff8e7af1be4,21720194,0,0x0,8
tick,0x7ff8e7af1be4,21736316,0,0x0,8
tick,0x7ff8e7af1be4,21751707,0,0x0,8
tick,0x7ff8e7af1be4,21767743,0,0x0,8
tick,0x7ff8e7af1be4,21783552,0,0x0,8
tick,0x7ff8e7af1be4,21799759,0,0x0,8
tick,0x7ff8e7af1be4,21815327,0,0x0,8
tick,0x7ff8e7af1be4,21831292,0,0x0,8
tick,0x7ff8e7af1be4,21846724,0,0x0,8
tick,0x7ff8e7af1be4,21862503,0,0x0,8
tick,0x7ff8e7af1be4,21878422,0,0x0,8
tick,0x7ff8e7af1be4,21894298,0,0x0,8
tick,0x7ff8e7af1be4,21910153,0,0x0,8
tick,0x7ff8e7af1be4,21926162,0,0x0,8
tick,0x7ff8e7af1be4,21942015,0,0x0,8
tick,0x7ff8e7af1be4,21957706,0,0x0,8
tick,0x7ff8e7af1be4,21972900,0,0x0,8
tick,0x7ff8e7af1be4,21988506,0,0x0,8
tick,0x7ff8e7af1be4,22004443,0,0x0,8
tick,0x7ff8e7af1be4,22019997,0,0x0,8
tick,0x7ff8e7af1be4,22036265,0,0x0,8
tick,0x7ff8e7af1be4,22051830,0,0x0,8
tick,0x7ff8e7af1be4,22067539,0,0x0,8
tick,0x7ff8e7af1be4,22083025,0,0x0,8
tick,0x7ff8e7af1be4,22098391,0,0x0,8
tick,0x7ff8e7af1be4,22113821,0,0x0,8
tick,0x7ff8e7af1be4,22129691,0,0x0,8
tick,0x7ff8e7af1be4,22145437,0,0x0,8
tick,0x7ff8e7af1be4,22161356,0,0x0,8
tick,0x7ff8e7af1be4,22177123,0,0x0,8
tick,0x7ff8e7af1be4,22192807,0,0x0,8
tick,0x7ff8e7af1be4,22199913,0,0x0,8
tick,0x7ff8e7af1be4,22202749,0,0x0,8
tick,0x7ff8e7af1be4,22204508,0,0x0,8
tick,0x7ff8e7af1be4,22219581,0,0x0,8
tick,0x7ff8e7af1be4,22235565,0,0x0,8
tick,0x7ff8e7af1be4,22251439,0,0x0,8
tick,0x7ff8e7af1be4,22267057,0,0x0,8
tick,0x7ff8e7af1be4,22282616,0,0x0,8
tick,0x7ff8e7af1be4,22298051,0,0x0,8
tick,0x7ff8e7af1be4,22314092,0,0x0,8
tick,0x7ff8e7af1be4,22330075,0,0x0,8
tick,0x7ff8e7af1be4,22345955,0,0x0,8
tick,0x7ff8e7af1be4,22362349,0,0x0,8
tick,0x7ff8e7af1be4,22377648,0,0x0,8
tick,0x7ff8e7af1be4,22393312,0,0x0,8
tick,0x7ff8e7af1be4,22409386,0,0x0,8
tick,0x7ff8e7af1be4,22425768,0,0x0,8
tick,0x7ff8e7af1be4,22441464,0,0x0,8
tick,0x7ff8e7af1be4,22457954,0,0x0,8
tick,0x7ff8e7af1be4,22473439,0,0x0,8
tick,0x7ff8e7af1be4,22489092,0,0x0,8
tick,0x7ff8e7af1be4,22505207,0,0x0,8
tick,0x7ff8e7af1be4,22520608,0,0x0,8
tick,0x7ff8e7af1be4,22536404,0,0x0,8
tick,0x7ff8e7af1be4,22552024,0,0x0,8
tick,0x7ff8e7af1be4,22567767,0,0x0,8
tick,0x7ff8e7af1be4,22583562,0,0x0,8
tick,0x7ff8e7af1be4,22599151,0,0x0,8
tick,0x7ff8e7af1be4,22615288,0,0x0,8
tick,0x7ff8e7af1be4,22631441,0,0x0,8
tick,0x7ff8e7af1be4,22647099,0,0x0,8
tick,0x7ff8e7af1be4,22663038,0,0x0,8
tick,0x7ff8e7af1be4,22678980,0,0x0,8
tick,0x7ff8e7af1be4,22694808,0,0x0,8
tick,0x7ff8e7af1be4,22702456,0,0x0,8
tick,0x7ff8e7af1be4,22704441,0,0x0,8
tick,0x7ff8e7af1be4,22705773,0,0x0,8
tick,0x7ff8e7af1be4,22707682,0,0x0,8
tick,0x7ff8e7af1be4,22715641,0,0x0,8
tick,0x7ff8e7af1be4,22724363,0,0x0,8
tick,0x7ff8e7af1be4,22740075,0,0x0,8
tick,0x7ff8e7af1be4,22756378,0,0x0,8
tick,0x7ff8e7af1be4,22772238,0,0x0,8
tick,0x7ff8e7af1be4,22787693,0,0x0,8
tick,0x7ff8e7af1be4,22803612,0,0x0,8
tick,0x7ff8e7af1be4,22819525,0,0x0,8
tick,0x7ff8e7af1be4,22835766,0,0x0,8
tick,0x7ff8e7af1be4,22851445,0,0x0,8
tick,0x7ff8e7af1be4,22867411,0,0x0,8
tick,0x7ff8e7af1be4,22883009,0,0x0,8
tick,0x7ff8e7af1be4,22898461,0,0x0,8
tick,0x7ff8e7af1be4,22914857,0,0x0,8
tick,0x7ff8e7af1be4,22929981,0,0x0,8
tick,0x7ff8e7af1be4,22946217,0,0x0,8
tick,0x7ff8e7af1be4,22961517,0,0x0,8
tick,0x7ff8e7af1be4,22977018,0,0x0,8
tick,0x7ff8e7af1be4,22992623,0,0x0,8
tick,0x7ff8e7af1be4,23008293,0,0x0,8
tick,0x7ff8e7af1be4,23024635,0,0x0,8
tick,0x7ff8e7af1be4,23039563,0,0x0,8
tick,0x7ff8e7af1be4,23055168,0,0x0,8
tick,0x7ff8e7af1be4,23070838,0,0x0,8
tick,0x7ff8e7af1be4,23086151,0,0x0,8
tick,0x7ff8e7af1be4,23101803,0,0x0,8
tick,0x7ff8e7af1be4,23117983,0,0x0,8
tick,0x7ff8e7af1be4,23133827,0,0x0,8
tick,0x7ff8e7af1be4,23149503,0,0x0,8
tick,0x7ff8e7af1be4,23165174,0,0x0,8
tick,0x7ff8e7af1be4,23181128,0,0x0,8
tick,0x7ff8e7af1be4,23197185,0,0x0,8
tick,0x7ff8e7af1be4,23213368,0,0x0,8
tick,0x7ff8e7af1be4,23217633,0,0x0,8
tick,0x7ff8e7af1be4,23218973,0,0x0,8
tick,0x7ff8e7af1be4,23220887,0,0x0,8
tick,0x7ff8e7af1be4,23235244,0,0x0,8
tick,0x7ff8e7af1be4,23250769,0,0x0,8
tick,0x7ff8e7af1be4,23267044,0,0x0,8
tick,0x7ff8e7af1be4,23282607,0,0x0,8
tick,0x7ff8e7af1be4,23298049,0,0x0,8
tick,0x7ff8e7af1be4,23314132,0,0x0,8
tick,0x7ff8e7af1be4,23329084,0,0x0,8
tick,0x7ff8e7af1be4,23344858,0,0x0,8
tick,0x7ff8e7af1be4,23361087,0,0x0,8
tick,0x7ff8e7af1be4,23376811,0,0x0,8
tick,0x7ff8e7af1be4,23392383,0,0x0,8
tick,0x7ff8e7af1be4,23408667,0,0x0,8
tick,0x7ff8e7af1be4,23424691,0,0x0,8
tick,0x7ff8e7af1be4,23440525,0,0x0,8
tick,0x7ff8e7af1be4,23456239,0,0x0,8
tick,0x7ff8e7af1be4,23472280,0,0x0,8
tick,0x7ff8e7af1be4,23487818,0,0x0,8
tick,0x7ff8e7a8cfe5,23503221,1,0x7ff77750a1a0,6,0x7ff77812e530,0x7ff6f83a2a3d,0x7ff6f83a1623,0x7ff6f83ab7db,0x7ff6f83a8aad,0x1795a8f7e32,0x7ff6f83aaafa,0x7ff6f83ad25b,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x7ff6f83aa123,0x7ff6f83ad25b,0x3b94bd87e0b,0x7ff6f83b32be,0x1795a8f68fb,0x7ff6f83a71ac,0x1795a8f61b1,0x7ff6f8394394
code-creation,Script,10,23503622,0x31468854d46,5, :1:1,0x31468854c80,~
script-source,494,,n
code-source-info,0x31468854d46,494,0,1,C0O0C4O1,,
tick,0x7ff8e7af1be4,23519179,0,0x0,8
tick,0x7ff8e7af1be4,23535316,0,0x0,8
tick,0x7ff8e7af1be4,23550882,0,0x0,8
tick,0x7ff8e7af1be4,23567008,0,0x0,8
tick,0x7ff8e7af1be4,23582911,0,0x0,8
tick,0x7ff8e7af1be4,23599249,0,0x0,8
tick,0x7ff8e7af1be4,23615035,0,0x0,8
tick,0x7ff8e7af1be4,23631135,0,0x0,8
tick,0x7ff8e7af1be4,23647184,0,0x0,8
code-creation,Script,10,23654441,0x31468854fd6,5, :1:1,0x31468854f10,~
script-source,495,,np
code-source-info,0x31468854fd6,495,0,2,C0O0C4O2,,
code-creation,JS,11,23655295,0x7ff6f83b6900,2104, node:internal/repl/utils:312:10,0x2ff96f1cc20,^
code-source-info,0x7ff6f83b6900,458,10121,12272,,,
code-creation,JS,11,23655396,0x7ff6f83b71c0,2956,onStreamRead node:internal/stream_base_commons:167:22,0x1795a8cd258,^
code-source-info,0x7ff6f83b71c0,429,4278,6256,,,
tick,0x7ff8e7af1be4,23663389,0,0x0,8
tick,0x7ff8e7af1be4,23678666,0,0x0,8
tick,0x7ff8e7af1be4,23694088,0,0x0,8
tick,0x7ff8e7af1be4,23709861,0,0x0,8
tick,0x7ff8e7af1be4,23725933,0,0x0,8
tick,0x7ff8e7af1be4,23729020,0,0x0,8
tick,0x7ff8e7af1be4,23730913,0,0x0,8
tick,0x7ff8e7af1be4,23747352,0,0x0,8
tick,0x7ff8e7af1be4,23763111,0,0x0,8
tick,0x7ff8e7af1be4,23779009,0,0x0,8
tick,0x7ff8e7af1be4,23794813,0,0x0,8
tick,0x7ff8e7af1be4,23810885,0,0x0,8
tick,0x7ff8e7af1be4,23826739,0,0x0,8
code-creation,Script,10,23833382,0x3146885591e,5, :1:1,0x31468855858,~
script-source,496,,npm
code-source-info,0x3146885591e,496,0,3,C0O0C4O3,,
new,MemoryChunk,0x29098100000,262144
delete,MemoryChunk,0x28387b80000
delete,MemoryChunk,0x3ae4d700000
delete,MemoryChunk,0x34539480000
delete,MemoryChunk,0x537ee40000
tick,0x7ff8e7af1be4,23844019,0,0x0,8
tick,0x7ff8e7af1be4,23858508,0,0x0,8
tick,0x7ff8e7af1be4,23874187,0,0x0,8
tick,0x7ff8e7af1be4,23890068,0,0x0,8
tick,0x7ff8e7af1be4,23905683,0,0x0,8
tick,0x7ff8e7af1be4,23921799,0,0x0,8
tick,0x7ff8e7af1be4,23937976,0,0x0,8
code-creation,JS,11,23945941,0x7ff6f83b7e00,536,clearTimeout node:timers:184:22,0x320a78cc5b8,^
code-source-info,0x7ff6f83b7e00,31,5393,5751,,,
code-creation,JS,11,23946126,0x7ff6f83b80c0,3752,readableAddChunk node:internal/streams/readable:242:26,0x209d297bd40,^
code-source-info,0x7ff6f83b80c0,406,8250,10634,,,
code-creation,Script,10,23947175,0x31468855db6,5, :1:1,0x31468855cf0,~
script-source,497,,npm
code-source-info,0x31468855db6,497,0,3,C0O0C4O3,,
tick,0x7ff8e7af1be4,23954009,0,0x0,8
tick,0x7ff8e7af1be4,23970258,0,0x0,8
tick,0x7ff8e7af1be4,23986412,0,0x0,8
tick,0x7ff8e7af1be4,24002557,0,0x0,8
tick,0x7ff8e7af1be4,24018152,0,0x0,8
tick,0x7ff8e7af1be4,24034183,0,0x0,8
tick,0x7ff8e7af1be4,24050152,0,0x0,8
tick,0x7ff8e7af1be4,24066016,0,0x0,8
tick,0x7ff8e7af1be4,24082238,0,0x0,8
tick,0x7ff8e7af1be4,24097845,0,0x0,8
tick,0x7ff8e7af1be4,24114164,0,0x0,8
tick,0x7ff8e7af1be4,24129709,0,0x0,8
tick,0x7ff8e7af1be4,24145675,0,0x0,8
tick,0x7ff8e7af1be4,24161792,0,0x0,8
tick,0x7ff8e7af1be4,24177865,0,0x0,8
tick,0x7ff8e7af1be4,24193915,0,0x0,8
tick,0x7ff8e7af1be4,24209980,0,0x0,8
tick,0x7ff8e7af1be4,24225979,0,0x0,8
tick,0x7ff8e7af1be4,24241747,0,0x0,8
tick,0x7ff8e7af1be4,24246663,0,0x0,8
tick,0x7ff8e7af1be4,24248928,0,0x0,8
tick,0x7ff8e7af1be4,24265146,0,0x0,8
tick,0x7ff8e7af1be4,24281130,0,0x0,8
tick,0x7ff8e7af1be4,24297004,0,0x0,8
tick,0x7ff8e7af1be4,24313087,0,0x0,8
tick,0x7ff8e7af1be4,24328895,0,0x0,8
tick,0x7ff8e7af1be4,24344680,0,0x0,8
tick,0x7ff8e7af1be4,24361178,0,0x0,8
tick,0x7ff8e7af1be4,24377194,0,0x0,8
tick,0x7ff8e7af1be4,24392663,0,0x0,8
tick,0x7ff8e7af1be4,24408792,0,0x0,8
tick,0x7ff8e7af1be4,24424449,0,0x0,8
tick,0x7ff8e7af1be4,24440085,0,0x0,8
tick,0x7ff8e7af1be4,24455785,0,0x0,8
tick,0x7ff8e7af1be4,24471378,0,0x0,8
tick,0x7ff8e7af1be4,24487166,0,0x0,8
tick,0x7ff8e7af1be4,24502764,0,0x0,8
tick,0x7ff8e7af1be4,24518579,0,0x0,8
tick,0x7ff8e7af1be4,24534636,0,0x0,8
tick,0x7ff8e7af1be4,24550459,0,0x0,8
tick,0x7ff8e7af1be4,24566321,0,0x0,8
tick,0x7ff8e7af1be4,24581970,0,0x0,8
tick,0x7ff8e7af1be4,24597770,0,0x0,8
tick,0x7ff8e7af1be4,24613809,0,0x0,8
tick,0x7ff8e7af1be4,24629937,0,0x0,8
tick,0x7ff8e7af1be4,24645799,0,0x0,8
tick,0x7ff8e7af1be4,24661460,0,0x0,8
tick,0x7ff8e7af1be4,24677491,0,0x0,8
tick,0x7ff8e7af1be4,24693262,0,0x0,8
tick,0x7ff8e7af1be4,24709070,0,0x0,8
tick,0x7ff8e7af1be4,24725004,0,0x0,8
tick,0x7ff8e7af1be4,24740747,0,0x0,8
tick,0x7ff8e7af1be4,24756790,0,0x0,8
tick,0x7ff8e7af1be4,24758101,0,0x0,8
tick,0x7ff8e7af1be4,24762886,0,0x0,8
tick,0x7ff8e7af1be4,24764994,0,0x0,8
tick,0x7ff8e7af1be4,24781115,0,0x0,8
tick,0x7ff8e7af1be4,24796835,0,0x0,8
tick,0x7ff8e7af1be4,24812977,0,0x0,8
tick,0x7ff8e7af1be4,24828797,0,0x0,8
tick,0x7ff8e7af1be4,24844858,0,0x0,8
tick,0x7ff8e7af1be4,24861110,0,0x0,8
tick,0x7ff8e7af1be4,24876699,0,0x0,8
tick,0x7ff8e7af1be4,24892374,0,0x0,8
tick,0x7ff8e7af1be4,24908116,0,0x0,8
tick,0x7ff8e7af1be4,24924399,0,0x0,8
tick,0x7ff8e7af1be4,24940223,0,0x0,8
tick,0x7ff8e7a8be81,24955964,1,0x7ff777509b00,6,0x7ff77812e530,0x7ff6f83a4297,0x7ff6f83a1738,0x7ff6f83ab7db,0x7ff6f83a8aad,0x1795a8f7e32,0x7ff6f83aaafa,0x7ff6f83ad25b,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x7ff6f83aa123,0x7ff6f83ad25b,0x3b94bd87e0b,0x7ff6f83b32be,0x7ff6f83b8e04,0x7ff6f83a71ac,0x7ff6f83b777d,0x7ff6f8394394
tick,0x7ff8e7af1be4,24971583,0,0x0,8
tick,0x7ff8e7af1be4,24987974,0,0x0,8
tick,0x7ff8e7af1be4,25003940,0,0x0,8
tick,0x7ff8e7af1be4,25019976,0,0x0,8
tick,0x7ff8e7af1be4,25036092,0,0x0,8
tick,0x7ff8e7af1be4,25051763,0,0x0,8
tick,0x7ff8e7af1be4,25067484,0,0x0,8
tick,0x7ff8e7af1be4,25083082,0,0x0,8
tick,0x7ff8e7af1be4,25099016,0,0x0,8
tick,0x7ff8e7af1be4,25114741,0,0x0,8
tick,0x7ff8e7af1be4,25130434,0,0x0,8
tick,0x7ff8e7af1be4,25146988,0,0x0,8
tick,0x7ff8e7af1be4,25162625,0,0x0,8
tick,0x7ff8e7af1be4,25178535,0,0x0,8
tick,0x7ff8e7af1be4,25194498,0,0x0,8
tick,0x7ff8e7af1be4,25210413,0,0x0,8
tick,0x7ff8e7af1be4,25226271,0,0x0,8
tick,0x7ff8e7af1be4,25242157,0,0x0,8
tick,0x7ff8e7af1be4,25258210,0,0x0,8
tick,0x7ff8e7af1be4,25274107,0,0x0,8
tick,0x7ff8e7af1be4,25275383,0,0x0,8
tick,0x7ff8e7af1be4,25278836,0,0x0,8
tick,0x7ff8e7af1be4,25280252,0,0x0,8
tick,0x7ff8e7af1be4,25281603,0,0x0,8
tick,0x7ff8e7af1be4,25283473,0,0x0,8
tick,0x7ff8e7af1be4,25299386,0,0x0,8
tick,0x7ff8e7af1be4,25314887,0,0x0,8
tick,0x7ff8e7af1be4,25331142,0,0x0,8
tick,0x7ff8e7af1be4,25346767,0,0x0,8
tick,0x7ff8e7af1be4,25363449,0,0x0,8
tick,0x7ff8e7af1be4,25379411,0,0x0,8
tick,0x7ff8e7af1be4,25394350,0,0x0,8
tick,0x7ff8e7af1be4,25410062,0,0x0,8
tick,0x7ff8e7af1be4,25426716,0,0x0,8
tick,0x7ff8e7af1be4,25442237,0,0x0,8
tick,0x7ff8e7af1be4,25457965,0,0x0,8
tick,0x7ff8e7af1be4,25473868,0,0x0,8
tick,0x7ff8e7af1be4,25489891,0,0x0,8
tick,0x7ff8e7af1be4,25505641,0,0x0,8
tick,0x7ff8e7af1be4,25522484,0,0x0,8
tick,0x7ff8e7af1be4,25537933,0,0x0,8
tick,0x7ff8e7af1be4,25553765,0,0x0,8
tick,0x7ff8e7af1be4,25570007,0,0x0,8
tick,0x7ff8e7af1be4,25585561,0,0x0,8
tick,0x7ff8e7af1be4,25601430,0,0x0,8
tick,0x7ff8e7af1be4,25617148,0,0x0,8
tick,0x7ff8e7af1be4,25633216,0,0x0,8
tick,0x7ff8e7af1be4,25635393,0,0x0,8
tick,0x7ff8e7af1be4,25651439,0,0x0,8
tick,0x7ff8e7af1be4,25667273,0,0x0,8
tick,0x7ff8e7af1be4,25682861,0,0x0,8
tick,0x7ff8e7af1be4,25699987,0,0x0,8
tick,0x7ff8e7af1be4,25716086,0,0x0,8
tick,0x7ff8e7af1be4,25730877,0,0x0,8
tick,0x7ff8e7af1be4,25747050,0,0x0,8
tick,0x7ff8e7af1be4,25762722,0,0x0,8
tick,0x7ff8e7af1be4,25778720,0,0x0,8
tick,0x7ff8e7af1be4,25794816,0,0x0,8
tick,0x7ff8e7af1be4,25798721,0,0x0,8
tick,0x7ff8e7af1be4,25800624,0,0x0,8
tick,0x7ff8e7af1be4,25801870,0,0x0,8
tick,0x7ff8e7af1be4,25803499,0,0x0,8
tick,0x7ff8e7af1be4,25820879,0,0x0,8
tick,0x7ff8e7af1be4,25836288,0,0x0,8
tick,0x7ff8e7af1be4,25852511,0,0x0,8
tick,0x7ff8e7af1be4,25868680,0,0x0,8
tick,0x7ff8e7af1be4,25883580,0,0x0,8
tick,0x7ff8e7af1be4,25899671,0,0x0,8
tick,0x7ff8e7af1be4,25915290,0,0x0,8
tick,0x7ff8e7af1be4,25931385,0,0x0,8
tick,0x7ff8e7aeed34,25946483,0,0x0,8
code-creation,JS,13,25946726,0x7ff6f83b9000,1944, node:repl:1548:59,0x1795a8ff700,*
code-source-info,0x7ff6f83b9000,447,51905,52171,C0O51905C44O52031C91O52078C198O52130C211O52038C1376O52160C1409O51905C1455O52038C1745O52160C1769O52130C1818O52078C1861O52031,,
tick,0x7ff8e7af1be4,25962300,0,0x0,8
tick,0x7ff8e7af1be4,25977997,0,0x0,8
tick,0x7ff8e7af1be4,25993709,0,0x0,8
tick,0x7ff8e7af1be4,26009207,0,0x0,8
tick,0x7ff8e7af1be4,26025218,0,0x0,8
tick,0x7ff8e7af1be4,26041300,0,0x0,8
tick,0x7ff8e7af1be4,26056839,0,0x0,8
tick,0x7ff8e7af1be4,26072856,0,0x0,8
tick,0x7ff8e7af1be4,26088566,0,0x0,8
tick,0x7ff8e7af1be4,26104353,0,0x0,8
tick,0x7ff8e7af1be4,26120154,0,0x0,8
tick,0x7ff8e7af1be4,26136469,0,0x0,8
tick,0x7ff8e7af1be4,26151940,0,0x0,8
tick,0x7ff8e7af1be4,26167874,0,0x0,8
tick,0x7ff8e7af1be4,26183831,0,0x0,8
tick,0x7ff8e7af1be4,26199904,0,0x0,8
tick,0x7ff8e7af1be4,26215424,0,0x0,8
tick,0x7ff8e7af1be4,26231736,0,0x0,8
tick,0x7ff8e7af1be4,26247546,0,0x0,8
tick,0x7ff8e7af1be4,26263360,0,0x0,8
tick,0x7ff8e7af1be4,26279101,0,0x0,8
tick,0x7ff8e7af1be4,26294936,0,0x0,8
tick,0x7ff8e7af1be4,26298377,0,0x0,8
tick,0x7ff8e7af1be4,26315125,0,0x0,8
tick,0x7ff8e7af1be4,26331443,0,0x0,8
tick,0x7ff8e7af1be4,26347142,0,0x0,8
tick,0x7ff8e7af1be4,26362969,0,0x0,8
tick,0x7ff8e7af1be4,26378371,0,0x0,8
tick,0x7ff8e7af1be4,26395245,0,0x0,8
tick,0x7ff8e7af1be4,26410650,0,0x0,8
tick,0x7ff8e7af1be4,26426005,0,0x0,8
tick,0x7ff8e7af1be4,26442020,0,0x0,8
tick,0x7ff8e7af1be4,26457996,0,0x0,8
tick,0x7ff8e7af1be4,26473808,0,0x0,8
tick,0x7ff8e7af1be4,26490035,0,0x0,8
tick,0x7ff8e7af1be4,26505576,0,0x0,8
tick,0x7ff8e7af1be4,26521751,0,0x0,8
tick,0x7ff8e7af1be4,26537657,0,0x0,8
tick,0x7ff8e7af1be4,26553829,0,0x0,8
tick,0x7ff8e7af1be4,26569834,0,0x0,8
tick,0x7ff8e7af1be4,26585586,0,0x0,8
tick,0x7ff8e7af1be4,26601524,0,0x0,8
tick,0x7ff8e7af1be4,26617363,0,0x0,8
code-creation,RegExp,3,26630598,0x7ff6f83b9880,1040,^\\s*{
code-creation,RegExp,3,26631330,0x7ff6f83b9d40,1040,^\\s*\\{
code-creation,RegExp,3,26631634,0x7ff6f83ba200,1580,(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*
code-creation,RegExp,3,26631753,0x7ff6f83ba8c0,1520,^(?:'((?:\\\\.|[^'\\\\])*?)'|"((?:\\\\.|[^"\\\\])*?)")
code-creation,RegExp,3,26631994,0x7ff6f83baf40,960,^(?:enum)$
code-creation,RegExp,3,26632303,0x7ff6f83bb380,3044,^\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)\x00\x00\x00(.*)$
code-creation,RegExp,3,26632469,0x7ff6f83bc000,972,[{(]
code-creation,RegExp,3,26632549,0x7ff6f83bc480,972,[})]
tick,0x7ff8e7aeed34,26632935,1,0x7ff777530920,6,0x7ff77812e530,0x7ff6f83ab149,0x7ff6f83954d9,0x7ff6f83a513e,0x7ff6f839563b,0x7ff6f83a0064,0x7ff6f83a819a,0x7ff6f8395769,0x2ff96f3e300,0x2ff96f3dfb6,0x2ff96f3066d,0x2ff96f2ef5d,0x2ff96f2ee3b,0x2ff96f2ea63,0x7ff6f83ad3f1,0x3b94bd87e0b,0x2ff96f2e449,0x2ff96f2ceaa,0x1795a8f9536,0x1795a8f7e1c,0x7ff6f83aaafa,0x7ff6f83ad25b,0x3b94bd87e0b,0x3b94bd8e3c9,0x7ff7781d1dbb,0x7ff6f83aa123,0x7ff6f83ad25b,0x3b94bd87e0b,0x7ff6f83b32be,0x7ff6f83b8e04,0x7ff6f83a71ac,0x7ff6f83b777d,0x7ff6f8394394
code-creation,JS,11,26633593,0x7ff6f83bc900,1532, node:internal/readline/interface:483:17,0x164cc3aef60,^
code-source-info,0x7ff6f83bc900,453,13508,14537,,,
code-creation,JS,11,26633678,0x7ff6f83bcf80,3476,emit node:domain:478:44,0x164cc3be580,^
code-source-info,0x7ff6f83bcf80,457,14812,17322,,,
code-creation,JS,11,26633701,0x7ff6f83bddc0,184,pp$9.eat node:internal/deps/acorn/acorn/dist/acorn:689:22,0x164cc386970,^
code-source-info,0x7ff6f83bddc0,448,37988,38112,,,
code-creation,JS,11,26633732,0x7ff6f83bdf00,824,finishExecution node:repl:538:29,0x2ff96f2fa40,^
code-source-info,0x7ff6f83bdf00,447,18500,18871,,,
tick,0x7ff8e7af1be4,26649542,0,0x0,8
tick,0x7ff777515388,26665022,1,0x7ff7775092e0,6,0x7ff77812e530,0x7ff6f8394b01,0x7ff6f8393aa9,0x7ff6f8397bb7,0x3146885439b,0x31468853e7e
tick,0x7ff8e7af1be4,26680792,0,0x0,8
tick,0x7ff8e7af1be4,26696639,0,0x0,8
tick,0x7ff8e7af1be4,26712865,0,0x0,8
tick,0x7ff8e7af1be4,26729025,0,0x0,8
tick,0x7ff8e7af1be4,26744766,0,0x0,8
tick,0x7ff8e7af1be4,26762558,0,0x0,8
tick,0x7ff8e7af1be4,26776891,0,0x0,8
tick,0x7ff8e7af1be4,26794880,0,0x0,8
tick,0x7ff8e7af1be4,26808247,0,0x0,8
tick,0x7ff8e7af1be4,26813819,0,0x0,8
tick,0x7ff8e7af1be4,26815729,0,0x0,8
tick,0x7ff8e7af1be4,26817037,0,0x0,8
tick,0x7ff8e7af1be4,26833524,0,0x0,8
tick,0x7ff8e7af1be4,26849382,0,0x0,8
tick,0x7ff8e7af1be4,26864958,0,0x0,8
tick,0x7ff8e7af1be4,26880527,0,0x0,8
tick,0x7ff8e7af1be4,26896381,0,0x0,8
tick,0x7ff8e7af1be4,26912543,0,0x0,8
tick,0x7ff8e7af1be4,26929445,0,0x0,8
tick,0x7ff8e7af1be4,26933304,0,0x0,8
tick,0x7ff8e7af1be4,26947108,0,0x0,8
tick,0x7ff8e7af1be4,26962533,0,0x0,8
tick,0x7ff8e7af1be4,26978302,0,0x0,8
tick,0x7ff8e7af1be4,26993935,0,0x0,8
tick,0x7ff8e7af1be4,27009785,0,0x0,8
tick,0x7ff8e7af1be4,27025191,0,0x0,8
tick,0x7ff8e7af1be4,27040937,0,0x0,8
tick,0x7ff8e7af1be4,27057170,0,0x0,8
tick,0x7ff8e7af1be4,27072759,0,0x0,8
tick,0x7ff8e7af1be4,27088589,0,0x0,8
tick,0x7ff8e7af1be4,27104075,0,0x0,8
tick,0x7ff8e7af1be4,27119805,0,0x0,8
tick,0x7ff8e7af1be4,27135558,0,0x0,8
tick,0x7ff8e7af1be4,27152014,0,0x0,8
tick,0x7ff8e7af1be4,27167564,0,0x0,8
tick,0x7ff8e7af1be4,27183477,0,0x0,8
tick,0x7ff8e7af1be4,27199165,0,0x0,8
tick,0x7ff8e7af1be4,27214618,0,0x0,8
tick,0x7ff8e7af1be4,27230804,0,0x0,8
tick,0x7ff8e7af1be4,27246368,0,0x0,8
tick,0x7ff8e7af1be4,27262251,0,0x0,8
tick,0x7ff8e7af1be4,27277964,0,0x0,8
tick,0x7ff8e7af1be4,27294244,0,0x0,8
tick,0x7ff8e7af1be4,27309036,0,0x0,8
tick,0x7ff8e7af1be4,27315219,0,0x0,8
tick,0x7ff8e7af1be4,27317377,0,0x0,8
tick,0x7ff8e7af1be4,27318816,0,0x0,8
tick,0x7ff8e7af1be4,27335325,0,0x0,8
tick,0x7ff8e7af1be4,27351005,0,0x0,8
tick,0x7ff8e7af1be4,27366891,0,0x0,8
tick,0x7ff8e7af1be4,27382409,0,0x0,8
tick,0x7ff8e7af1be4,27398679,0,0x0,8
tick,0x7ff8e7af1be4,27414178,0,0x0,8
tick,0x7ff8e7af1be4,27429815,0,0x0,8
tick,0x7ff8e7af1be4,27445968,0,0x0,8
tick,0x7ff8e7af1be4,27462202,0,0x0,8
tick,0x7ff8e7af1be4,27478362,0,0x0,8
tick,0x7ff8e7af1be4,27494514,0,0x0,8
tick,0x7ff8e7af1be4,27510889,0,0x0,8
tick,0x7ff8e7af1be4,27527181,0,0x0,8
tick,0x7ff8e7af1be4,27542600,0,0x0,8
tick,0x7ff8e7af1be4,27558307,0,0x0,8
tick,0x7ff8e7af1be4,27574231,0,0x0,8
tick,0x7ff8e7af1be4,27590589,0,0x0,8
tick,0x7ff8e7af1be4,27606403,0,0x0,8
tick,0x7ff8e7af1be4,27622602,0,0x0,8
tick,0x7ff8e7af1be4,27639233,0,0x0,8
tick,0x7ff8e7af1be4,27655176,0,0x0,8
tick,0x7ff8e7af1be4,27670327,0,0x0,8
tick,0x7ff8e7af1be4,27686122,0,0x0,8
tick,0x7ff8e7af1be4,27702274,0,0x0,8
tick,0x7ff8e7af1be4,27718158,0,0x0,8
tick,0x7ff8e7af1be4,27734300,0,0x0,8
tick,0x7ff8e7af1be4,27749949,0,0x0,8
tick,0x7ff8e7af1be4,27765898,0,0x0,8
tick,0x7ff8e7af1be4,27781487,0,0x0,8
tick,0x7ff8e7af1be4,27797925,0,0x0,8
tick,0x7ff8e7af1be4,27814311,0,0x0,8
tick,0x7ff8e7af1be4,27820410,0,0x0,8
tick,0x7ff8e7af1be4,27822442,0,0x0,8
tick,0x7ff8e7af1be4,27823516,0,0x0,8
tick,0x7ff8e7af1be4,27824795,0,0x0,8
tick,0x7ff8e7af1be4,27841307,0,0x0,8
tick,0x7ff8e7af1be4,27856744,0,0x0,8
tick,0x7ff8e7af1be4,27872492,0,0x0,8
tick,0x7ff8e7af1be4,27888093,0,0x0,8
tick,0x7ff8e7af1be4,27903684,0,0x0,8
tick,0x7ff8e7af1be4,27920034,0,0x0,8
tick,0x7ff8e7af1be4,27935649,0,0x0,8
tick,0x7ff8e7af1be4,27951774,0,0x0,8
tick,0x7ff8e7af1be4,27967344,0,0x0,8
tick,0x7ff8e7af1be4,27982610,0,0x0,8
tick,0x7ff8e7af1be4,27998734,0,0x0,8
tick,0x7ff8e7af1be4,28014749,0,0x0,8
tick,0x7ff8e7af1be4,28031029,0,0x0,8
tick,0x7ff8e7af1be4,28046586,0,0x0,8
tick,0x7ff8e7af1be4,28062585,0,0x0,8
tick,0x7ff8e7af1be4,28078076,0,0x0,8
tick,0x7ff8e7af1be4,28093758,0,0x0,8
tick,0x7ff8e7af1be4,28109690,0,0x0,8
tick,0x7ff8e7af1be4,28125667,0,0x0,8
tick,0x7ff8e7af1be4,28141492,0,0x0,8
tick,0x7ff8e7af1be4,28157918,0,0x0,8
tick,0x7ff8e7af1be4,28172954,0,0x0,8
tick,0x7ff8e7af1be4,28188754,0,0x0,8
tick,0x7ff8e7af1be4,28204442,0,0x0,8
tick,0x7ff8e7af1be4,28220293,0,0x0,8
tick,0x7ff8e7af1be4,28236793,0,0x0,8
tick,0x7ff8e7af1be4,28252643,0,0x0,8
tick,0x7ff8e7af1be4,28268535,0,0x0,8
tick,0x7ff8e7af1be4,28284658,0,0x0,8
tick,0x7ff8e7af1be4,28300640,0,0x0,8
tick,0x7ff8e7af1be4,28316483,0,0x0,8
tick,0x7ff8e7af1be4,28332271,0,0x0,8
tick,0x7ff8e7af1be4,28336280,0,0x0,8
tick,0x7ff8e7af1be4,28353330,0,0x0,8
tick,0x7ff8e7af1be4,28369510,0,0x0,8
tick,0x7ff8e7af1be4,28385511,0,0x0,8
tick,0x7ff8e7af1be4,28401879,0,0x0,8
tick,0x7ff8e7af1be4,28416845,0,0x0,8
tick,0x7ff8e7af1be4,28433148,0,0x0,8
tick,0x7ff8e7af1be4,28448878,0,0x0,8
tick,0x7ff8e7af1be4,28464962,0,0x0,8
tick,0x7ff8e7af1be4,28480788,0,0x0,8
tick,0x7ff8e7af1be4,28496576,0,0x0,8
tick,0x7ff8e7af1be4,28512697,0,0x0,8
tick,0x7ff8e7af1be4,28528842,0,0x0,8
tick,0x7ff8e7af1be4,28544517,0,0x0,8
tick,0x7ff8e7af1be4,28560307,0,0x0,8
tick,0x7ff8e7af1be4,28576132,0,0x0,8
tick,0x7ff8e7af1be4,28591690,0,0x0,8
tick,0x7ff8e7af1be4,28607677,0,0x0,8
tick,0x7ff8e7af1be4,28623829,0,0x0,8
tick,0x7ff8e7af1be4,28640354,0,0x0,8
tick,0x7ff8e7af1be4,28656683,0,0x0,8
tick,0x7ff8e7af1be4,28672013,0,0x0,8
tick,0x7ff8e7af1be4,28688335,0,0x0,8
tick,0x7ff8e7af1be4,28703774,0,0x0,8
tick,0x7ff8e7af1be4,28720182,0,0x0,8
tick,0x7ff8e7af1be4,28735674,0,0x0,8
tick,0x7ff8e7af1be4,28752035,0,0x0,8
tick,0x7ff8e7af1be4,28767960,0,0x0,8
tick,0x7ff8e7af1be4,28783953,0,0x0,8
tick,0x7ff8e7af1be4,28800492,0,0x0,8
tick,0x7ff8e7af1be4,28816093,0,0x0,8
tick,0x7ff8e7af1be4,28832886,0,0x0,8
tick,0x7ff8e7af1be4,28834118,0,0x0,8
tick,0x7ff8e7af1be4,28837528,0,0x0,8
tick,0x7ff8e7af1be4,28839477,0,0x0,8
tick,0x7ff8e7af1be4,28841455,0,0x0,8
tick,0x7ff8e7af1be4,28843743,0,0x0,8
tick,0x7ff8e7af1be4,28861229,0,0x0,8
tick,0x7ff8e7af1be4,28877067,0,0x0,8
tick,0x7ff8e7af1be4,28893027,0,0x0,8
tick,0x7ff8e7af1be4,28909094,0,0x0,8
tick,0x7ff8e7af1be4,28925251,0,0x0,8
tick,0x7ff8e7af1be4,28941075,0,0x0,8
tick,0x7ff8e7af1be4,28956935,0,0x0,8
tick,0x7ff8e7af1be4,28972888,0,0x0,8
tick,0x7ff8e7af1be4,28989037,0,0x0,8
tick,0x7ff8e7af1be4,29004540,0,0x0,8
tick,0x7ff8e7af1be4,29020972,0,0x0,8
tick,0x7ff8e7af1be4,29036457,0,0x0,8
tick,0x7ff8e7af1be4,29052192,0,0x0,8
tick,0x7ff8e7af1be4,29067655,0,0x0,8
tick,0x7ff8e7af1be4,29083812,0,0x0,8
tick,0x7ff8e7af1be4,29099534,0,0x0,8
tick,0x7ff8e7af1be4,29114877,0,0x0,8
tick,0x7ff8e7af1be4,29130222,0,0x0,8
tick,0x7ff8e7af1be4,29147209,0,0x0,8
tick,0x7ff8e7af1be4,29162256,0,0x0,8
tick,0x7ff8e7af1be4,29178133,0,0x0,8
tick,0x7ff8e7af1be4,29193907,0,0x0,8
tick,0x7ff8e7af1be4,29210257,0,0x0,8
tick,0x7ff8e7af1be4,29225371,0,0x0,8
tick,0x7ff8e7af1be4,29241456,0,0x0,8
tick,0x7ff8e7af1be4,29257279,0,0x0,8
tick,0x7ff8e7af1be4,29273227,0,0x0,8
tick,0x7ff8e7af1be4,29288547,0,0x0,8
tick,0x7ff8e7af1be4,29304528,0,0x0,8
tick,0x7ff8e7af1be4,29319760,0,0x0,8
tick,0x7ff8e7af1be4,29336301,0,0x0,8
tick,0x7ff8e7af1be4,29337784,0,0x0,8
tick,0x7ff8e7af1be4,29341527,0,0x0,8
tick,0x7ff8e7af1be4,29343741,0,0x0,8
tick,0x7ff8e7af1be4,29344953,0,0x0,8
tick,0x7ff8e7af1be4,29346507,0,0x0,8
tick,0x7ff8e7af1be4,29363366,0,0x0,8
tick,0x7ff8e7af1be4,29378936,0,0x0,8
tick,0x7ff8e7af1be4,29394439,0,0x0,8
tick,0x7ff8e7af1be4,29410617,0,0x0,8
tick,0x7ff8e7af1be4,29426138,0,0x0,8
tick,0x7ff8e7af1be4,29442009,0,0x0,8
tick,0x7ff8e7af1be4,29457485,0,0x0,8
tick,0x7ff8e7af1be4,29473535,0,0x0,8
tick,0x7ff8e7af1be4,29489571,0,0x0,8
tick,0x7ff8e7af1be4,29505245,0,0x0,8
tick,0x7ff8e7af1be4,29521076,0,0x0,8
tick,0x7ff8e7af1be4,29536611,0,0x0,8
tick,0x7ff8e7af1be4,29552964,0,0x0,8
tick,0x7ff8e7af1be4,29568904,0,0x0,8
tick,0x7ff8e7af1be4,29584564,0,0x0,8
tick,0x7ff8e7af1be4,29600311,0,0x0,8
tick,0x7ff8e7af1be4,29615820,0,0x0,8
tick,0x7ff8e7af1be4,29631617,0,0x0,8
tick,0x7ff8e7af1be4,29648268,0,0x0,8
tick,0x7ff8e7af1be4,29664005,0,0x0,8
tick,0x7ff8e7af1be4,29680048,0,0x0,8
tick,0x7ff8e7af1be4,29696398,0,0x0,8
tick,0x7ff8e7af1be4,29712322,0,0x0,8
tick,0x7ff8e7af1be4,29727916,0,0x0,8
tick,0x7ff8e7af1be4,29743762,0,0x0,8
tick,0x7ff8e7af1be4,29760488,0,0x0,8
tick,0x7ff8e7af1be4,29776164,0,0x0,8
tick,0x7ff8e7af1be4,29791859,0,0x0,8
tick,0x7ff8e7af1be4,29807506,0,0x0,8
tick,0x7ff8e7af1be4,29823390,0,0x0,8
tick,0x7ff8e7af1be4,29839150,0,0x0,8
tick,0x7ff8e7af1be4,29840956,0,0x0,8
tick,0x7ff8e7af1be4,29844519,0,0x0,8
tick,0x7ff8e7af1be4,29847782,0,0x0,8
tick,0x7ff8e7af1be4,29849079,0,0x0,8
tick,0x7ff8e7af1be4,29850887,0,0x0,8
tick,0x7ff8e7af1be4,29866965,0,0x0,8
tick,0x7ff8e7af1be4,29882784,0,0x0,8
tick,0x7ff8e7af1be4,29900090,0,0x0,8
tick,0x7ff8e7af1be4,29914958,0,0x0,8
tick,0x7ff8e7af1be4,29930677,0,0x0,8
tick,0x7ff8e7af1be4,29946629,0,0x0,8
tick,0x7ff8e7af1be4,29962857,0,0x0,8
tick,0x7ff8e7af1be4,29977972,0,0x0,8
tick,0x7ff8e7af1be4,29994034,0,0x0,8
tick,0x7ff8e7af1be4,30009620,0,0x0,8
tick,0x7ff8e7af1be4,30025373,0,0x0,8
tick,0x7ff8e7af1be4,30040865,0,0x0,8
tick,0x7ff8e7af1be4,30056798,0,0x0,8
tick,0x7ff8e7af1be4,30072709,0,0x0,8
tick,0x7ff8e7af1be4,30087821,0,0x0,8
tick,0x7ff8e7af1be4,30103368,0,0x0,8
tick,0x7ff8e7af1be4,30119471,0,0x0,8
tick,0x7ff8e7af1be4,30134750,0,0x0,8
tick,0x7ff8e7af1be4,30151006,0,0x0,8
tick,0x7ff8e7af1be4,30166376,0,0x0,8
tick,0x7ff8e7af1be4,30182245,0,0x0,8
tick,0x7ff8e7af1be4,30197286,0,0x0,8
tick,0x7ff8e7af1be4,30213291,0,0x0,8
tick,0x7ff8e7af1be4,30228465,0,0x0,8
tick,0x7ff8e7af1be4,30245159,0,0x0,8
tick,0x7ff8e7af1be4,30260638,0,0x0,8
tick,0x7ff8e7af1be4,30276312,0,0x0,8
tick,0x7ff8e7af1be4,30292622,0,0x0,8
tick,0x7ff8e7af1be4,30307842,0,0x0,8
tick,0x7ff8e7af1be4,30322953,0,0x0,8
tick,0x7ff8e7af1be4,30338786,0,0x0,8
tick,0x7ff8e7af1be4,30354514,0,0x0,8
tick,0x7ff8e7af1be4,30358614,0,0x0,8
tick,0x7ff8e7af1be4,30360077,0,0x0,8
tick,0x7ff8e7af1be4,30361539,0,0x0,8
tick,0x7ff8e7af1be4,30378847,0,0x0,8
tick,0x7ff8e7af1be4,30394965,0,0x0,8
tick,0x7ff8e7af1be4,30411335,0,0x0,8
tick,0x7ff8e7af1be4,30426709,0,0x0,8
tick,0x7ff8e7af1be4,30442908,0,0x0,8
tick,0x7ff8e7af1be4,30459199,0,0x0,8
tick,0x7ff8e7af1be4,30474593,0,0x0,8
tick,0x7ff8e7af1be4,30489918,0,0x0,8
tick,0x7ff8e7af1be4,30505883,0,0x0,8
tick,0x7ff8e7af1be4,30522134,0,0x0,8
tick,0x7ff8e7af1be4,30536847,0,0x0,8
tick,0x7ff8e7af1be4,30553152,0,0x0,8
tick,0x7ff8e7af1be4,30568866,0,0x0,8
tick,0x7ff8e7af1be4,30584423,0,0x0,8
tick,0x7ff8e7af1be4,30600330,0,0x0,8
tick,0x7ff8e7af1be4,30615444,0,0x0,8
tick,0x7ff8e7af1be4,30630715,0,0x0,8
tick,0x7ff8e7af1be4,30646796,0,0x0,8
tick,0x7ff8e7af1be4,30663115,0,0x0,8
tick,0x7ff8e7af1be4,30678598,0,0x0,8
tick,0x7ff8e7af1be4,30694087,0,0x0,8
tick,0x7ff8e7af1be4,30709883,0,0x0,8
tick,0x7ff8e7af1be4,30725332,0,0x0,8
tick,0x7ff8e7af1be4,30741439,0,0x0,8
tick,0x7ff8e7af1be4,30758068,0,0x0,8
tick,0x7ff8e7af1be4,30772420,0,0x0,8
tick,0x7ff8e7af1be4,30787879,0,0x0,8
tick,0x7ff8e7af1be4,30804123,0,0x0,8
tick,0x7ff8e7af1be4,30819272,0,0x0,8
tick,0x7ff8e7af1be4,30835008,0,0x0,8
tick,0x7ff8e7af1be4,30850603,0,0x0,8
tick,0x7ff8e7af1be4,30867862,0,0x0,8
tick,0x7ff8e7af1be4,30874106,0,0x0,8
tick,0x7ff8e7af1be4,30876684,0,0x0,8
tick,0x7ff8e7af1be4,30878389,0,0x0,8
tick,0x7ff8e7af1be4,30880000,0,0x0,8
tick,0x7ff8e7af1be4,30895097,0,0x0,8
tick,0x7ff8e7af1be4,30910786,0,0x0,8
tick,0x7ff8e7af1be4,30926238,0,0x0,8
tick,0x7ff8e7af1be4,30942322,0,0x0,8
tick,0x7ff8e7af1be4,30957930,0,0x0,8
tick,0x7ff8e7af1be4,30974373,0,0x0,8
tick,0x7ff8e7af1be4,30989690,0,0x0,8
tick,0x7ff8e7af1be4,31005157,0,0x0,8
tick,0x7ff8e7af1be4,31020524,0,0x0,8
tick,0x7ff8e7af1be4,31036489,0,0x0,8
tick,0x7ff8e7af1be4,31052596,0,0x0,8
tick,0x7ff8e7af1be4,31069130,0,0x0,8
tick,0x7ff8e7af1be4,31085139,0,0x0,8
tick,0x7ff8e7af1be4,31101150,0,0x0,8
tick,0x7ff8e7af1be4,31117061,0,0x0,8
tick,0x7ff8e7af1be4,31132793,0,0x0,8
tick,0x7ff8e7af1be4,31149711,0,0x0,8
tick,0x7ff8e7af1be4,31165525,0,0x0,8
tick,0x7ff8e7af1be4,31180391,0,0x0,8
tick,0x7ff8e7af1be4,31196230,0,0x0,8
tick,0x7ff8e7af1be4,31211521,0,0x0,8
tick,0x7ff8e7af1be4,31227200,0,0x0,8
tick,0x7ff8e7af1be4,31243451,0,0x0,8
tick,0x7ff8e7af1be4,31259750,0,0x0,8
tick,0x7ff8e7af1be4,31274917,0,0x0,8
tick,0x7ff8e7af1be4,31290489,0,0x0,8
tick,0x7ff8e7af1be4,31306383,0,0x0,8
tick,0x7ff8e7af1be4,31322093,0,0x0,8
tick,0x7ff8e7af1be4,31338059,0,0x0,8
tick,0x7ff8e7af1be4,31354029,0,0x0,8
tick,0x7ff8e7af1be4,31369856,0,0x0,8
tick,0x7ff8e7af1be4,31377699,0,0x0,8
tick,0x7ff8e7af1be4,31379453,0,0x0,8
tick,0x7ff8e7af1be4,31381456,0,0x0,8
tick,0x7ff8e7af1be4,31397447,0,0x0,8
tick,0x7ff8e7af1be4,31413455,0,0x0,8
tick,0x7ff8e7af1be4,31429153,0,0x0,8
tick,0x7ff8e7af1be4,31445107,0,0x0,8
tick,0x7ff8e7af1be4,31461210,0,0x0,8
tick,0x7ff8e7af1be4,31477454,0,0x0,8
tick,0x7ff8e7af1be4,31493077,0,0x0,8
tick,0x7ff8e7af1be4,31508588,0,0x0,8
tick,0x7ff8e7af1be4,31524710,0,0x0,8
tick,0x7ff8e7af1be4,31540555,0,0x0,8
tick,0x7ff8e7af1be4,31557713,0,0x0,8
tick,0x7ff8e7af1be4,31571578,0,0x0,8
tick,0x7ff8e7af1be4,31583779,0,0x0,8
tick,0x7ff8e7af1be4,31592295,0,0x0,8
tick,0x7ff8e7af1be4,31608268,0,0x0,8
tick,0x7ff8e7af1be4,31624161,0,0x0,8
tick,0x7ff8e7af1be4,31640013,0,0x0,8
tick,0x7ff8e7af1be4,31655838,0,0x0,8
tick,0x7ff8e7af1be4,31672006,0,0x0,8
tick,0x7ff8e7af1be4,31687663,0,0x0,8
tick,0x7ff8e7af1be4,31703898,0,0x0,8
tick,0x7ff8e7af1be4,31720119,0,0x0,8
tick,0x7ff8e7af1be4,31735698,0,0x0,8
tick,0x7ff8e7af1be4,31751825,0,0x0,8
tick,0x7ff8e7af1be4,31768004,0,0x0,8
tick,0x7ff8e7af1be4,31783966,0,0x0,8
tick,0x7ff8e7af1be4,31800014,0,0x0,8
tick,0x7ff8e7af1be4,31815711,0,0x0,8
tick,0x7ff8e7af1be4,31831921,0,0x0,8
tick,0x7ff8e7af1be4,31847517,0,0x0,8
tick,0x7ff8e7af1be4,31863683,0,0x0,8
tick,0x7ff8e7af1be4,31879380,0,0x0,8
tick,0x7ff8e7af1be4,31885555,0,0x0,8
tick,0x7ff8e7af1be4,31891958,0,0x0,8
tick,0x7ff8e7af1be4,31895709,0,0x0,8
tick,0x7ff8e7af1be4,31908664,0,0x0,8
tick,0x7ff8e7af1be4,31924687,0,0x0,8
tick,0x7ff8e7af1be4,31940534,0,0x0,8
tick,0x7ff8e7af1be4,31956529,0,0x0,8
tick,0x7ff8e7af1be4,31972217,0,0x0,8
tick,0x7ff8e7af1be4,31987933,0,0x0,8
tick,0x7ff8e7af1be4,32004048,0,0x0,8
tick,0x7ff8e7af1be4,32019760,0,0x0,8
tick,0x7ff8e7af1be4,32035693,0,0x0,8
tick,0x7ff8e7af1be4,32051727,0,0x0,8
tick,0x7ff8e7af1be4,32067358,0,0x0,8
tick,0x7ff8e7af1be4,32082967,0,0x0,8
tick,0x7ff8e7af1be4,32099208,0,0x0,8
tick,0x7ff8e7af1be4,32115013,0,0x0,8
tick,0x7ff8e7af1be4,32131202,0,0x0,8
tick,0x7ff8e7af1be4,32146744,0,0x0,8
tick,0x7ff8e7af1be4,32162655,0,0x0,8
tick,0x7ff8e7af1be4,32178522,0,0x0,8
tick,0x7ff8e7af1be4,32194502,0,0x0,8
tick,0x7ff8e7af1be4,32210680,0,0x0,8
tick,0x7ff8e7af1be4,32226592,0,0x0,8
tick,0x7ff8e7af1be4,32242310,0,0x0,8
tick,0x7ff8e7af1be4,32258227,0,0x0,8
tick,0x7ff8e7af1be4,32274104,0,0x0,8
tick,0x7ff8e7af1be4,32289836,0,0x0,8
tick,0x7ff8e7af1be4,32305807,0,0x0,8
tick,0x7ff8e7af1be4,32321599,0,0x0,8
tick,0x7ff8e7af1be4,32337078,0,0x0,8
tick,0x7ff8e7af1be4,32352887,0,0x0,8
tick,0x7ff8e7af1be4,32368816,0,0x0,8
tick,0x7ff8e7af1be4,32384862,0,0x0,8
tick,0x7ff8e7af1be4,32388559,0,0x0,8
tick,0x7ff8e7af1be4,32390211,0,0x0,8
tick,0x7ff8e7af1be4,32406200,0,0x0,8
tick,0x7ff8e7af1be4,32422170,0,0x0,8
tick,0x7ff8e7af1be4,32437427,0,0x0,8
tick,0x7ff8e7af1be4,32453514,0,0x0,8
tick,0x7ff8e7af1be4,32469668,0,0x0,8
tick,0x7ff8e7af1be4,32485444,0,0x0,8
tick,0x7ff8e7af1be4,32501283,0,0x0,8
tick,0x7ff8e7af1be4,32516834,0,0x0,8
tick,0x7ff8e7af1be4,32532898,0,0x0,8
tick,0x7ff8e7af1be4,32548789,0,0x0,8
tick,0x7ff8e7af1be4,32564299,0,0x0,8
tick,0x7ff8e7af1be4,32580003,0,0x0,8
tick,0x7ff8e7af1be4,32596083,0,0x0,8
tick,0x7ff8e7af1be4,32612118,0,0x0,8
tick,0x7ff8e7af1be4,32627772,0,0x0,8
tick,0x7ff8e7af1be4,32642907,0,0x0,8
tick,0x7ff8e7af1be4,32658882,0,0x0,8
tick,0x7ff8e7af1be4,32674666,0,0x0,8
tick,0x7ff8e7af1be4,32690320,0,0x0,8
tick,0x7ff8e7af1be4,32705964,0,0x0,8
tick,0x7ff8e7af1be4,32721695,0,0x0,8
tick,0x7ff8e7af1be4,32737320,0,0x0,8
tick,0x7ff8e7af1be4,32753266,0,0x0,8
tick,0x7ff8e7af1be4,32769340,0,0x0,8
tick,0x7ff8e7af1be4,32785427,0,0x0,8
tick,0x7ff8e7af1be4,32801682,0,0x0,8
tick,0x7ff8e7af1be4,32817854,0,0x0,8
tick,0x7ff8e7af1be4,32833714,0,0x0,8
tick,0x7ff8e7af1be4,32849620,0,0x0,8
tick,0x7ff8e7af1be4,32865640,0,0x0,8
tick,0x7ff8e7af1be4,32881240,0,0x0,8
tick,0x7ff8e7af1be4,32897015,0,0x0,8
tick,0x7ff8e7af1be4,32900117,0,0x0,8
tick,0x7ff8e7af1be4,32901451,0,0x0,8
tick,0x7ff8e7af1be4,32918355,0,0x0,8
tick,0x7ff8e7af1be4,32933921,0,0x0,8
tick,0x7ff8e7af1be4,32950141,0,0x0,8
tick,0x7ff8e7af1be4,32965685,0,0x0,8
tick,0x7ff8e7af1be4,32981569,0,0x0,8
tick,0x7ff8e7af1be4,32997257,0,0x0,8
tick,0x7ff8e7af1be4,33012963,0,0x0,8
tick,0x7ff8e7af1be4,33028537,0,0x0,8
tick,0x7ff8e7af1be4,33044642,0,0x0,8
tick,0x7ff8e7af1be4,33060339,0,0x0,8
tick,0x7ff8e7af1be4,33075991,0,0x0,8
tick,0x7ff8e7af1be4,33091966,0,0x0,8
tick,0x7ff8e7af1be4,33107948,0,0x0,8
tick,0x7ff8e7af1be4,33123951,0,0x0,8
tick,0x7ff8e7af1be4,33139741,0,0x0,8
tick,0x7ff8e7af1be4,33155761,0,0x0,8
tick,0x7ff8e7af1be4,33171579,0,0x0,8
tick,0x7ff8e7af1be4,33187613,0,0x0,8
tick,0x7ff8e7af1be4,33203334,0,0x0,8
tick,0x7ff8e7af1be4,33219499,0,0x0,8
tick,0x7ff8e7af1be4,33235513,0,0x0,8
tick,0x7ff8e7af1be4,33251519,0,0x0,8
tick,0x7ff8e7af1be4,33267536,0,0x0,8
tick,0x7ff8e7af1be4,33283023,0,0x0,8
tick,0x7ff8e7af1be4,33298773,0,0x0,8
tick,0x7ff8e7af1be4,33314301,0,0x0,8
tick,0x7ff8e7af1be4,33330121,0,0x0,8
tick,0x7ff8e7af1be4,33346497,0,0x0,8
tick,0x7ff8e7af1be4,33362186,0,0x0,8
tick,0x7ff8e7af1be4,33377931,0,0x0,8
tick,0x7ff8e7af1be4,33393662,0,0x0,8
tick,0x7ff8e7af1be4,33409396,0,0x0,8
tick,0x7ff8e7af1be4,33415412,0,0x0,8
tick,0x7ff8e7af1be4,33416825,0,0x0,8
tick,0x7ff8e7af1be4,33419462,0,0x0,8
tick,0x7ff8e7af1be4,33435874,0,0x0,8
tick,0x7ff8e7af1be4,33451663,0,0x0,8
tick,0x7ff8e7af1be4,33467672,0,0x0,8
tick,0x7ff8e7af1be4,33483515,0,0x0,8
tick,0x7ff8e7af1be4,33499385,0,0x0,8
tick,0x7ff8e7af1be4,33515081,0,0x0,8
tick,0x7ff8e7af1be4,33531053,0,0x0,8
tick,0x7ff8e7af1be4,33547051,0,0x0,8
tick,0x7ff8e7af1be4,33562756,0,0x0,8
tick,0x7ff8e7af1be4,33578460,0,0x0,8
tick,0x7ff8e7af1be4,33594547,0,0x0,8
tick,0x7ff8e7af1be4,33610456,0,0x0,8
tick,0x7ff8e7af1be4,33626636,0,0x0,8
tick,0x7ff8e7af1be4,33642631,0,0x0,8
tick,0x7ff8e7af1be4,33658358,0,0x0,8
tick,0x7ff8e7af1be4,33674225,0,0x0,8
tick,0x7ff8e7af1be4,33690068,0,0x0,8
tick,0x7ff8e7af1be4,33705963,0,0x0,8
tick,0x7ff8e7af1be4,33721637,0,0x0,8
tick,0x7ff8e7af1be4,33737569,0,0x0,8
tick,0x7ff8e7af1be4,33753337,0,0x0,8
tick,0x7ff8e7af1be4,33769473,0,0x0,8
tick,0x7ff8e7af1be4,33785383,0,0x0,8
tick,0x7ff8e7af1be4,33801035,0,0x0,8
tick,0x7ff8e7af1be4,33816561,0,0x0,8
tick,0x7ff8e7af1be4,33832310,0,0x0,8
tick,0x7ff8e7af1be4,33848359,0,0x0,8
tick,0x7ff8e7af1be4,33864135,0,0x0,8
tick,0x7ff8e7af1be4,33879874,0,0x0,8
tick,0x7ff8e7af1be4,33881679,0,0x0,8
tick,0x7ff8e7af1be4,33897104,0,0x0,8
tick,0x7ff8e7af1be4,33918025,0,0x0,8
tick,0x7ff8e7af1be4,33933914,0,0x0,8
tick,0x7ff8e7af1be4,33938502,0,0x0,8
tick,0x7ff8e7af1be4,33940044,0,0x0,8
tick,0x7ff8e7af1be4,33955954,0,0x0,8
tick,0x7ff8e7af1be4,33971560,0,0x0,8
tick,0x7ff8e7af1be4,33987265,0,0x0,8
tick,0x7ff8e7af1be4,34003476,0,0x0,8
tick,0x7ff8e7af1be4,34019403,0,0x0,8
tick,0x7ff8e7af1be4,34035273,0,0x0,8
tick,0x7ff8e7af1be4,34051242,0,0x0,8
tick,0x7ff8e7af1be4,34066895,0,0x0,8
tick,0x7ff8e7af1be4,34082597,0,0x0,8
tick,0x7ff8e7af1be4,34098908,0,0x0,8
tick,0x7ff8e7af1be4,34115203,0,0x0,8
tick,0x7ff8e7af1be4,34130955,0,0x0,8
tick,0x7ff8e7af1be4,34147497,0,0x0,8
tick,0x7ff8e7af1be4,34163539,0,0x0,8
tick,0x7ff8e7af1be4,34179268,0,0x0,8
tick,0x7ff8e7af1be4,34195985,0,0x0,8
tick,0x7ff8e7af1be4,34211587,0,0x0,8
tick,0x7ff8e7af1be4,34219157,0,0x0,8
tick,0x7ff8e7af1be4,34223591,0,0x0,8
tick,0x7ff8e7af1be4,34239343,0,0x0,8
tick,0x7ff8e7af1be4,34254762,0,0x0,8
tick,0x7ff8e7af1be4,34270728,0,0x0,8
tick,0x7ff8e7af1be4,34286563,0,0x0,8
tick,0x7ff8e7af1be4,34302158,0,0x0,8
tick,0x7ff8e7af1be4,34317681,0,0x0,8
tick,0x7ff8e7af1be4,34333220,0,0x0,8
tick,0x7ff8e7af1be4,34349282,0,0x0,8
tick,0x7ff8e7af1be4,34365104,0,0x0,8
tick,0x7ff8e7af1be4,34380599,0,0x0,8
tick,0x7ff8e7af1be4,34396736,0,0x0,8
tick,0x7ff8e7af1be4,34412302,0,0x0,8
tick,0x7ff8e7af1be4,34428348,0,0x0,8
tick,0x7ff8e7af1be4,34444352,0,0x0,8
tick,0x7ff8e7af1be4,34459967,0,0x0,8
tick,0x7ff8e7af1be4,34475677,0,0x0,8
tick,0x7ff8e7af1be4,34477343,0,0x0,8
tick,0x7ff8e7af1be4,34480523,0,0x0,8
tick,0x7ff8e7af1be4,34481662,0,0x0,8
tick,0x7ff8e7af1be4,34483959,0,0x0,8
tick,0x7ff8e7af1be4,34500739,0,0x0,8
tick,0x7ff8e7af1be4,34516572,0,0x0,8
tick,0x7ff8e7af1be4,34533042,0,0x0,8
tick,0x7ff8e7af1be4,34548941,0,0x0,8
tick,0x7ff8e7af1be4,34564675,0,0x0,8
tick,0x7ff8e7af1be4,34580871,0,0x0,8
tick,0x7ff8e7af1be4,34596390,0,0x0,8
tick,0x7ff8e7af1be4,34612250,0,0x0,8
tick,0x7ff8e7af1be4,34627919,0,0x0,8
tick,0x7ff8e7af1be4,34643634,0,0x0,8
tick,0x7ff8e7af1be4,34659767,0,0x0,8
tick,0x7ff8e7af1be4,34675843,0,0x0,8
tick,0x7ff8e7af1be4,34692160,0,0x0,8
tick,0x7ff8e7af1be4,34708213,0,0x0,8
tick,0x7ff8e7af1be4,34723928,0,0x0,8
tick,0x7ff8e7af1be4,34740051,0,0x0,8
tick,0x7ff8e7af1be4,34755307,0,0x0,8
tick,0x7ff8e7af1be4,34771675,0,0x0,8
tick,0x7ff8e7af1be4,34788198,0,0x0,8
tick,0x7ff8e7af1be4,34803351,0,0x0,8
tick,0x7ff8e7af1be4,34818899,0,0x0,8
tick,0x7ff8e7af1be4,34834220,0,0x0,8
tick,0x7ff8e7af1be4,34849981,0,0x0,8
tick,0x7ff8e7af1be4,34866169,0,0x0,8
tick,0x7ff8e7af1be4,34881776,0,0x0,8
tick,0x7ff8e7af1be4,34897961,0,0x0,8
tick,0x7ff8e7af1be4,34913646,0,0x0,8
tick,0x7ff8e7af1be4,34929638,0,0x0,8
tick,0x7ff8e7af1be4,34945368,0,0x0,8
tick,0x7ff8e7af1be4,34960949,0,0x0,8
tick,0x7ff8e7af1be4,34976573,0,0x0,8
tick,0x7ff8e7af1be4,34980900,0,0x0,8
tick,0x7ff8e7af1be4,34982335,0,0x0,8
tick,0x7ff8e7af1be4,34999038,0,0x0,8
tick,0x7ff8e7af1be4,35014570,0,0x0,8
tick,0x7ff8e7af1be4,35030281,0,0x0,8
tick,0x7ff8e7af1be4,35046420,0,0x0,8
tick,0x7ff8e7af1be4,35062004,0,0x0,8
tick,0x7ff8e7af1be4,35077702,0,0x0,8
tick,0x7ff8e7af1be4,35093701,0,0x0,8
tick,0x7ff8e7af1be4,35109683,0,0x0,8
tick,0x7ff8e7af1be4,35125181,0,0x0,8
tick,0x7ff8e7af1be4,35140879,0,0x0,8
tick,0x7ff8e7af1be4,35157182,0,0x0,8
tick,0x7ff8e7af1be4,35173252,0,0x0,8
tick,0x7ff8e7af1be4,35189009,0,0x0,8
tick,0x7ff8e7af1be4,35205146,0,0x0,8
tick,0x7ff8e7af1be4,35220748,0,0x0,8
tick,0x7ff8e7af1be4,35236998,0,0x0,8
tick,0x7ff8e7af1be4,35252799,0,0x0,8
tick,0x7ff8e7af1be4,35269426,0,0x0,8
tick,0x7ff8e7af1be4,35284809,0,0x0,8
tick,0x7ff8e7af1be4,35301087,0,0x0,8
tick,0x7ff8e7af1be4,35316982,0,0x0,8
tick,0x7ff8e7af1be4,35333065,0,0x0,8
tick,0x7ff8e7af1be4,35349448,0,0x0,8
tick,0x7ff8e7af1be4,35365166,0,0x0,8
tick,0x7ff8e7af1be4,35380755,0,0x0,8
tick,0x7ff8e7af1be4,35397156,0,0x0,8
tick,0x7ff8e7af1be4,35412660,0,0x0,8
tick,0x7ff8e7af1be4,35428211,0,0x0,8
tick,0x7ff8e7af1be4,35444076,0,0x0,8
tick,0x7ff8e7af1be4,35459949,0,0x0,8
tick,0x7ff8e7af1be4,35476040,0,0x0,8
tick,0x7ff8e7af1be4,35491539,0,0x0,8
tick,0x7ff8e7af1be4,35507546,0,0x0,8
tick,0x7ff8e7af1be4,35509226,0,0x0,8
tick,0x7ff8e7af1be4,35513059,0,0x0,8
tick,0x7ff8e7af1be4,35516562,0,0x0,8
tick,0x7ff8e7af1be4,35532778,0,0x0,8
tick,0x7ff8e7af1be4,35548898,0,0x0,8
tick,0x7ff8e7af1be4,35564377,0,0x0,8
tick,0x7ff8e7af1be4,35580111,0,0x0,8
tick,0x7ff8e7af1be4,35596452,0,0x0,8
tick,0x7ff8e7af1be4,35611979,0,0x0,8
tick,0x7ff8e7af1be4,35627573,0,0x0,8
tick,0x7ff8e7af1be4,35644296,0,0x0,8
tick,0x7ff8e7af1be4,35660004,0,0x0,8
tick,0x7ff8e7af1be4,35675937,0,0x0,8
tick,0x7ff8e7af1be4,35691920,0,0x0,8
tick,0x7ff8e7af1be4,35708251,0,0x0,8
tick,0x7ff8e7af1be4,35723591,0,0x0,8
tick,0x7ff8e7af1be4,35740107,0,0x0,8
tick,0x7ff8e7af1be4,35755976,0,0x0,8
tick,0x7ff8e7af1be4,35771375,0,0x0,8
tick,0x7ff8e7af1be4,35787186,0,0x0,8
tick,0x7ff8e7af1be4,35803740,0,0x0,8
tick,0x7ff8e7af1be4,35819143,0,0x0,8
tick,0x7ff8e7af1be4,35834439,0,0x0,8
tick,0x7ff8e7af1be4,35850423,0,0x0,8
tick,0x7ff8e7af1be4,35866559,0,0x0,8
tick,0x7ff8e7af1be4,35882336,0,0x0,8
tick,0x7ff8e7af1be4,35898262,0,0x0,8
tick,0x7ff8e7af1be4,35914133,0,0x0,8
tick,0x7ff8e7af1be4,35930129,0,0x0,8
tick,0x7ff8e7af1be4,35946580,0,0x0,8
tick,0x7ff8e7af1be4,35961919,0,0x0,8
tick,0x7ff8e7af1be4,35977884,0,0x0,8
tick,0x7ff8e7af1be4,35993647,0,0x0,8
tick,0x7ff8e7af1be4,36009118,0,0x0,8
tick,0x7ff8e7af1be4,36024751,0,0x0,8
tick,0x7ff8e7af1be4,36029362,0,0x0,8
tick,0x7ff8e7af1be4,36030590,0,0x0,8
tick,0x7ff8e7af1be4,36046629,0,0x0,8
tick,0x7ff8e7af1be4,36062267,0,0x0,8
tick,0x7ff8e7af1be4,36078122,0,0x0,8
tick,0x7ff8e7af1be4,36093629,0,0x0,8
tick,0x7ff8e7af1be4,36109409,0,0x0,8
tick,0x7ff8e7af1be4,36125213,0,0x0,8
tick,0x7ff8e7af1be4,36141394,0,0x0,8
tick,0x7ff8e7af1be4,36157336,0,0x0,8
tick,0x7ff8e7af1be4,36173306,0,0x0,8
tick,0x7ff8e7af1be4,36189378,0,0x0,8
tick,0x7ff8e7af1be4,36205252,0,0x0,8
tick,0x7ff8e7af1be4,36221442,0,0x0,8
tick,0x7ff8e7af1be4,36237295,0,0x0,8
tick,0x7ff8e7af1be4,36254033,0,0x0,8
tick,0x7ff8e7af1be4,36269484,0,0x0,8
tick,0x7ff8e7af1be4,36284713,0,0x0,8
tick,0x7ff8e7af1be4,36300422,0,0x0,8
tick,0x7ff8e7af1be4,36317382,0,0x0,8
tick,0x7ff8e7af1be4,36333636,0,0x0,8
tick,0x7ff8e7af1be4,36349087,0,0x0,8
tick,0x7ff8e7af1be4,36364931,0,0x0,8
tick,0x7ff8e7af1be4,36380812,0,0x0,8
tick,0x7ff8e7af1be4,36396562,0,0x0,8
tick,0x7ff8e7af1be4,36412846,0,0x0,8
tick,0x7ff8e7af1be4,36428291,0,0x0,8
tick,0x7ff8e7af1be4,36444570,0,0x0,8
tick,0x7ff8e7af1be4,36461197,0,0x0,8
tick,0x7ff8e7af1be4,36476239,0,0x0,8
tick,0x7ff8e7af1be4,36492344,0,0x0,8
tick,0x7ff8e7af1be4,36508307,0,0x0,8
tick,0x7ff8e7af1be4,36528450,0,0x0,8
tick,0x7ff8e7af1be4,36532290,0,0x0,8
tick,0x7ff8e7af1be4,36534990,0,0x0,8
tick,0x7ff8e7af1be4,36537214,0,0x0,8
tick,0x7ff8e7af1be4,36538976,0,0x0,8
tick,0x7ff8e7af1be4,36555357,0,0x0,8
tick,0x7ff8e7af1be4,36571369,0,0x0,8
tick,0x7ff8e7af1be4,36587405,0,0x0,8
tick,0x7ff8e7af1be4,36603162,0,0x0,8
tick,0x7ff8e7af1be4,36618959,0,0x0,8
tick,0x7ff8e7af1be4,36634566,0,0x0,8
tick,0x7ff8e7af1be4,36650398,0,0x0,8
tick,0x7ff8e7af1be4,36666279,0,0x0,8
tick,0x7ff8e7af1be4,36681891,0,0x0,8
tick,0x7ff8e7af1be4,36698102,0,0x0,8
tick,0x7ff8e7af1be4,36714308,0,0x0,8
tick,0x7ff8e7af1be4,36729875,0,0x0,8
tick,0x7ff8e7af1be4,36746261,0,0x0,8
tick,0x7ff8e7af1be4,36762237,0,0x0,8
tick,0x7ff8e7af1be4,36778169,0,0x0,8
tick,0x7ff8e7af1be4,36793930,0,0x0,8
tick,0x7ff8e7af1be4,36809563,0,0x0,8
tick,0x7ff8e7af1be4,36825409,0,0x0,8
tick,0x7ff8e7af1be4,36841278,0,0x0,8
tick,0x7ff8e7af1be4,36857506,0,0x0,8
tick,0x7ff8e7af1be4,36873010,0,0x0,8
tick,0x7ff8e7af1be4,36888967,0,0x0,8
tick,0x7ff8e7af1be4,36904765,0,0x0,8
tick,0x7ff8e7af1be4,36920522,0,0x0,8
tick,0x7ff8e7af1be4,36936329,0,0x0,8
tick,0x7ff8e7af1be4,36952533,0,0x0,8
tick,0x7ff8e7af1be4,36968008,0,0x0,8
tick,0x7ff8e7af1be4,36983980,0,0x0,8
tick,0x7ff8e7af1be4,36999874,0,0x0,8
tick,0x7ff8e7af1be4,37016189,0,0x0,8
tick,0x7ff8e7af1be4,37032487,0,0x0,8
tick,0x7ff8e7af1be4,37038123,0,0x0,8
tick,0x7ff8e7af1be4,37040064,0,0x0,8
tick,0x7ff8e7af1be4,37041384,0,0x0,8
tick,0x7ff8e7af1be4,37042527,0,0x0,8
tick,0x7ff8e7af1be4,37059494,0,0x0,8
tick,0x7ff8e7af1be4,37074835,0,0x0,8
tick,0x7ff8e7af1be4,37090947,0,0x0,8
tick,0x7ff8e7af1be4,37106660,0,0x0,8
tick,0x7ff8e7af1be4,37122344,0,0x0,8
tick,0x7ff8e7af1be4,37138285,0,0x0,8
tick,0x7ff8e7af1be4,37154088,0,0x0,8
tick,0x7ff8e7af1be4,37169607,0,0x0,8
tick,0x7ff8e7af1be4,37185517,0,0x0,8
tick,0x7ff8e7af1be4,37201069,0,0x0,8
tick,0x7ff8e7af1be4,37216720,0,0x0,8
tick,0x7ff8e7af1be4,37232893,0,0x0,8
tick,0x7ff8e7af1be4,37249232,0,0x0,8
tick,0x7ff8e7af1be4,37265352,0,0x0,8
tick,0x7ff8e7af1be4,37281980,0,0x0,8
tick,0x7ff8e7af1be4,37297545,0,0x0,8
tick,0x7ff8e7af1be4,37313441,0,0x0,8
tick,0x7ff8e7af1be4,37329177,0,0x0,8
tick,0x7ff8e7af1be4,37346055,0,0x0,8
tick,0x7ff8e7af1be4,37361234,0,0x0,8
tick,0x7ff8e7af1be4,37376556,0,0x0,8
tick,0x7ff8e7af1be4,37392685,0,0x0,8
tick,0x7ff8e7af1be4,37408224,0,0x0,8
tick,0x7ff8e7af1be4,37424195,0,0x0,8
tick,0x7ff8e7af1be4,37440087,0,0x0,8
tick,0x7ff8e7af1be4,37456327,0,0x0,8
tick,0x7ff8e7af1be4,37472881,0,0x0,8
tick,0x7ff8e7af1be4,37488072,0,0x0,8
tick,0x7ff8e7af1be4,37503719,0,0x0,8
tick,0x7ff8e7af1be4,37520275,0,0x0,8
tick,0x7ff8e7af1be4,37535340,0,0x0,8
tick,0x7ff8e7af1be4,37551536,0,0x0,8
tick,0x7ff8e7af1be4,37567477,0,0x0,8
tick,0x7ff8e7af1be4,37572213,0,0x0,8
tick,0x7ff8e7af1be4,37573391,0,0x0,8
tick,0x7ff8e7af1be4,37574583,0,0x0,8
tick,0x7ff8e7af1be4,37591613,0,0x0,8
tick,0x7ff8e7af1be4,37607315,0,0x0,8
tick,0x7ff8e7af1be4,37623300,0,0x0,8
tick,0x7ff8e7af1be4,37639377,0,0x0,8
tick,0x7ff8e7af1be4,37655697,0,0x0,8
tick,0x7ff8e7af1be4,37671676,0,0x0,8
tick,0x7ff8e7af1be4,37687334,0,0x0,8
tick,0x7ff8e7af1be4,37702774,0,0x0,8
tick,0x7ff8e7af1be4,37718807,0,0x0,8
tick,0x7ff8e7af1be4,37734284,0,0x0,8
tick,0x7ff8e7af1be4,37750160,0,0x0,8
tick,0x7ff8e7af1be4,37765847,0,0x0,8
tick,0x7ff8e7af1be4,37781833,0,0x0,8
tick,0x7ff8e7af1be4,37797394,0,0x0,8
tick,0x7ff8e7af1be4,37812361,0,0x0,8
tick,0x7ff8e7af1be4,37827885,0,0x0,8
tick,0x7ff8e7af1be4,37843727,0,0x0,8
tick,0x7ff8e7af1be4,37859824,0,0x0,8
tick,0x7ff8e7af1be4,37875627,0,0x0,8
tick,0x7ff8e7af1be4,37891685,0,0x0,8
tick,0x7ff8e7af1be4,37907254,0,0x0,8
tick,0x7ff8e7af1be4,37923387,0,0x0,8
tick,0x7ff8e7af1be4,37939408,0,0x0,8
tick,0x7ff8e7af1be4,37956071,0,0x0,8
tick,0x7ff8e7af1be4,37970885,0,0x0,8
tick,0x7ff8e7af1be4,37986451,0,0x0,8
tick,0x7ff8e7af1be4,38002305,0,0x0,8
tick,0x7ff8e7af1be4,38018666,0,0x0,8
tick,0x7ff8e7af1be4,38033528,0,0x0,8
tick,0x7ff8e7af1be4,38049616,0,0x0,8
tick,0x7ff8e7af1be4,38064989,0,0x0,8
tick,0x7ff8e7af1be4,38081538,0,0x0,8
tick,0x7ff8e7af1be4,38087117,0,0x0,8
tick,0x7ff8e7af1be4,38088542,0,0x0,8
tick,0x7ff8e7af1be4,38090229,0,0x0,8
tick,0x7ff8e7af1be4,38092626,0,0x0,8
tick,0x7ff8e7af1be4,38094152,0,0x0,8
tick,0x7ff8e7af1be4,38095586,0,0x0,8
tick,0x7ff8e7af1be4,38111947,0,0x0,8
tick,0x7ff8e7af1be4,38127779,0,0x0,8
tick,0x7ff8e7af1be4,38143683,0,0x0,8
tick,0x7ff8e7af1be4,38159463,0,0x0,8
tick,0x7ff8e7af1be4,38175473,0,0x0,8
tick,0x7ff8e7af1be4,38191441,0,0x0,8
tick,0x7ff8e7af1be4,38207878,0,0x0,8
tick,0x7ff8e7af1be4,38223412,0,0x0,8
tick,0x7ff8e7af1be4,38239086,0,0x0,8
tick,0x7ff8e7af1be4,38254821,0,0x0,8
tick,0x7ff8e7af1be4,38271170,0,0x0,8
tick,0x7ff8e7af1be4,38286373,0,0x0,8
tick,0x7ff8e7af1be4,38302505,0,0x0,8
tick,0x7ff8e7af1be4,38317559,0,0x0,8
tick,0x7ff8e7af1be4,38333537,0,0x0,8
tick,0x7ff8e7af1be4,38348624,0,0x0,8
tick,0x7ff8e7af1be4,38364581,0,0x0,8
tick,0x7ff8e7af1be4,38380564,0,0x0,8
tick,0x7ff8e7af1be4,38395488,0,0x0,8
tick,0x7ff8e7af1be4,38410627,0,0x0,8
tick,0x7ff8e7af1be4,38426583,0,0x0,8
tick,0x7ff8e7af1be4,38442317,0,0x0,8
tick,0x7ff8e7af1be4,38458223,0,0x0,8
tick,0x7ff8e7af1be4,38474271,0,0x0,8
tick,0x7ff8e7af1be4,38489660,0,0x0,8
tick,0x7ff8e7af1be4,38505950,0,0x0,8
tick,0x7ff8e7af1be4,38521538,0,0x0,8
tick,0x7ff8e7af1be4,38537576,0,0x0,8
tick,0x7ff8e7af1be4,38553859,0,0x0,8
tick,0x7ff8e7af1be4,38568879,0,0x0,8
tick,0x7ff8e7af1be4,38584664,0,0x0,8
tick,0x7ff8e7af1be4,38586007,0,0x0,8
tick,0x7ff8e7af1be4,38590550,0,0x0,8
tick,0x7ff8e7af1be4,38592165,0,0x0,8
tick,0x7ff8e7af1be4,38593413,0,0x0,8
tick,0x7ff8e7af1be4,38595164,0,0x0,8
tick,0x7ff8e7af1be4,38611169,0,0x0,8
tick,0x7ff8e7af1be4,38626709,0,0x0,8
tick,0x7ff8e7af1be4,38642308,0,0x0,8
tick,0x7ff8e7af1be4,38658178,0,0x0,8
tick,0x7ff8e7af1be4,38674185,0,0x0,8
tick,0x7ff8e7af1be4,38690263,0,0x0,8
tick,0x7ff8e7af1be4,38705600,0,0x0,8
tick,0x7ff8e7af1be4,38721139,0,0x0,8
tick,0x7ff8e7af1be4,38736777,0,0x0,8
tick,0x7ff8e7af1be4,38752213,0,0x0,8
tick,0x7ff8e7af1be4,38767785,0,0x0,8
tick,0x7ff8e7af1be4,38783904,0,0x0,8
tick,0x7ff8e7af1be4,38799095,0,0x0,8
tick,0x7ff8e7af1be4,38814837,0,0x0,8
tick,0x7ff8e7af1be4,38830601,0,0x0,8
tick,0x7ff8e7af1be4,38846180,0,0x0,8
tick,0x7ff8e7af1be4,38861622,0,0x0,8
tick,0x7ff8e7af1be4,38877670,0,0x0,8
tick,0x7ff8e7af1be4,38893874,0,0x0,8
tick,0x7ff8e7af1be4,38908989,0,0x0,8
tick,0x7ff8e7af1be4,38924575,0,0x0,8
tick,0x7ff8e7af1be4,38940156,0,0x0,8
tick,0x7ff8e7af1be4,38956582,0,0x0,8
tick,0x7ff8e7af1be4,38971857,0,0x0,8
tick,0x7ff8e7af1be4,38987768,0,0x0,8
tick,0x7ff8e7af1be4,39003274,0,0x0,8
tick,0x7ff8e7af1be4,39018870,0,0x0,8
tick,0x7ff8e7af1be4,39034458,0,0x0,8
tick,0x7ff8e7af1be4,39049867,0,0x0,8
tick,0x7ff8e7af1be4,39065582,0,0x0,8
tick,0x7ff8e7af1be4,39081111,0,0x0,8
tick,0x7ff8e7af1be4,39097336,0,0x0,8
tick,0x7ff8e7af1be4,39100930,0,0x0,8
tick,0x7ff8e7af1be4,39102230,0,0x0,8
tick,0x7ff8e7af1be4,39103568,0,0x0,8
tick,0x7ff8e7af1be4,39120093,0,0x0,8
tick,0x7ff8e7af1be4,39135866,0,0x0,8
tick,0x7ff8e7af1be4,39151541,0,0x0,8
tick,0x7ff8e7af1be4,39168085,0,0x0,8
tick,0x7ff8e7af1be4,39183980,0,0x0,8
tick,0x7ff8e7af1be4,39198728,0,0x0,8
tick,0x7ff8e7af1be4,39214551,0,0x0,8
tick,0x7ff8e7af1be4,39230387,0,0x0,8
tick,0x7ff8e7af1be4,39245912,0,0x0,8
tick,0x7ff8e7af1be4,39261977,0,0x0,8
tick,0x7ff8e7af1be4,39278428,0,0x0,8
tick,0x7ff8e7af1be4,39293922,0,0x0,8
tick,0x7ff8e7af1be4,39309408,0,0x0,8
tick,0x7ff8e7af1be4,39325496,0,0x0,8
tick,0x7ff8e7af1be4,39340711,0,0x0,8
tick,0x7ff8e7af1be4,39356610,0,0x0,8
tick,0x7ff8e7af1be4,39372106,0,0x0,8
tick,0x7ff8e7af1be4,39389215,0,0x0,8
tick,0x7ff8e7af1be4,39403331,0,0x0,8
tick,0x7ff8e7af1be4,39419031,0,0x0,8
tick,0x7ff8e7af1be4,39434439,0,0x0,8
tick,0x7ff8e7af1be4,39450330,0,0x0,8
tick,0x7ff8e7af1be4,39466239,0,0x0,8
tick,0x7ff8e7af1be4,39482839,0,0x0,8
tick,0x7ff8e7af1be4,39498270,0,0x0,8
tick,0x7ff8e7af1be4,39513941,0,0x0,8
tick,0x7ff8e7af1be4,39529420,0,0x0,8
tick,0x7ff8e7af1be4,39545200,0,0x0,8
tick,0x7ff8e7af1be4,39561201,0,0x0,8
tick,0x7ff8e7af1be4,39576882,0,0x0,8
tick,0x7ff8e7af1be4,39592936,0,0x0,8
tick,0x7ff8e7af1be4,39609114,0,0x0,8
tick,0x7ff8e7af1be4,39615032,0,0x0,8
tick,0x7ff8e7af1be4,39617187,0,0x0,8
tick,0x7ff8e7af1be4,39618519,0,0x0,8
tick,0x7ff8e7af1be4,39620825,0,0x0,8
tick,0x7ff8e7af1be4,39622250,0,0x0,8
tick,0x7ff8e7af1be4,39638867,0,0x0,8
tick,0x7ff8e7af1be4,39654636,0,0x0,8
tick,0x7ff8e7af1be4,39670602,0,0x0,8
tick,0x7ff8e7af1be4,39686436,0,0x0,8
tick,0x7ff8e7af1be4,39702331,0,0x0,8
tick,0x7ff8e7af1be4,39718293,0,0x0,8
tick,0x7ff8e7af1be4,39734162,0,0x0,8
tick,0x7ff8e7af1be4,39749990,0,0x0,8
tick,0x7ff8e7af1be4,39766478,0,0x0,8
tick,0x7ff8e7af1be4,39781685,0,0x0,8
tick,0x7ff8e7af1be4,39797640,0,0x0,8
tick,0x7ff8e7af1be4,39813005,0,0x0,8
tick,0x7ff8e7af1be4,39829037,0,0x0,8
tick,0x7ff8e7af1be4,39844993,0,0x0,8
tick,0x7ff8e7af1be4,39861352,0,0x0,8
tick,0x7ff8e7af1be4,39877069,0,0x0,8
tick,0x7ff8e7af1be4,39893269,0,0x0,8
tick,0x7ff8e7af1be4,39908503,0,0x0,8
tick,0x7ff8e7af1be4,39924179,0,0x0,8
tick,0x7ff8e7af1be4,39939934,0,0x0,8
tick,0x7ff8e7af1be4,39955901,0,0x0,8
tick,0x7ff8e7af1be4,39972234,0,0x0,8
tick,0x7ff8e7af1be4,39987580,0,0x0,8
tick,0x7ff8e7af1be4,40003724,0,0x0,8
tick,0x7ff8e7af1be4,40019419,0,0x0,8
tick,0x7ff8e7af1be4,40034982,0,0x0,8
tick,0x7ff8e7af1be4,40050509,0,0x0,8
tick,0x7ff8e7af1be4,40066503,0,0x0,8
tick,0x7ff8e7af1be4,40082421,0,0x0,8
tick,0x7ff8e7af1be4,40098991,0,0x0,8
tick,0x7ff8e7af1be4,40115117,0,0x0,8
tick,0x7ff8e7af1be4,40130647,0,0x0,8
tick,0x7ff8e7af1be4,40138862,0,0x0,8
tick,0x7ff8e7af1be4,40140496,0,0x0,8
tick,0x7ff8e7af1be4,40142245,0,0x0,8
tick,0x7ff8e7af1be4,40143999,0,0x0,8
tick,0x7ff8e7af1be4,40146879,0,0x0,8
tick,0x7ff8e7af1be4,40162650,0,0x0,8
tick,0x7ff8e7af1be4,40178628,0,0x0,8
tick,0x7ff8e7af1be4,40194431,0,0x0,8
tick,0x7ff8e7af1be4,40210036,0,0x0,8
tick,0x7ff8e7af1be4,40225529,0,0x0,8
tick,0x7ff8e7af1be4,40241519,0,0x0,8
tick,0x7ff8e7af1be4,40257325,0,0x0,8
tick,0x7ff8e7af1be4,40272942,0,0x0,8
tick,0x7ff8e7af1be4,40289153,0,0x0,8
tick,0x7ff8e7af1be4,40304703,0,0x0,8
tick,0x7ff8e7af1be4,40319449,0,0x0,8
tick,0x7ff8e7af1be4,40335299,0,0x0,8
tick,0x7ff8e7af1be4,40351134,0,0x0,8
tick,0x7ff8e7af1be4,40367191,0,0x0,8
tick,0x7ff8e7af1be4,40383306,0,0x0,8
tick,0x7ff8e7af1be4,40398473,0,0x0,8
tick,0x7ff8e7af1be4,40414313,0,0x0,8
tick,0x7ff8e7af1be4,40429867,0,0x0,8
tick,0x7ff8e7af1be4,40445646,0,0x0,8
tick,0x7ff8e7af1be4,40461410,0,0x0,8
tick,0x7ff8e7af1be4,40477036,0,0x0,8
tick,0x7ff8e7af1be4,40493462,0,0x0,8
tick,0x7ff8e7af1be4,40508148,0,0x0,8
tick,0x7ff8e7af1be4,40523510,0,0x0,8
tick,0x7ff8e7af1be4,40539256,0,0x0,8
tick,0x7ff8e7af1be4,40555401,0,0x0,8
tick,0x7ff8e7af1be4,40571112,0,0x0,8
tick,0x7ff8e7af1be4,40587200,0,0x0,8
tick,0x7ff8e7af1be4,40603297,0,0x0,8
tick,0x7ff8e7af1be4,40619002,0,0x0,8
tick,0x7ff8e7af1be4,40634749,0,0x0,8
tick,0x7ff8e7af1be4,40636617,0,0x0,8
tick,0x7ff8e7af1be4,40642373,0,0x0,8
tick,0x7ff8e7af1be4,40643794,0,0x0,8
tick,0x7ff8e7af1be4,40645495,0,0x0,8
tick,0x7ff8e7af1be4,40661609,0,0x0,8
tick,0x7ff8e7af1be4,40677196,0,0x0,8
tick,0x7ff8e7af1be4,40693092,0,0x0,8
tick,0x7ff8e7af1be4,40708582,0,0x0,8
tick,0x7ff8e7af1be4,40723983,0,0x0,8
tick,0x7ff8e7af1be4,40740008,0,0x0,8
tick,0x7ff8e7af1be4,40755667,0,0x0,8
tick,0x7ff8e7af1be4,40771488,0,0x0,8
tick,0x7ff8e7af1be4,40787225,0,0x0,8
tick,0x7ff8e7af1be4,40803737,0,0x0,8
tick,0x7ff8e7af1be4,40819387,0,0x0,8
tick,0x7ff8e7af1be4,40835202,0,0x0,8
tick,0x7ff8e7af1be4,40851146,0,0x0,8
tick,0x7ff8e7af1be4,40867432,0,0x0,8
tick,0x7ff8e7af1be4,40883208,0,0x0,8
tick,0x7ff8e7af1be4,40899514,0,0x0,8
tick,0x7ff8e7af1be4,40915208,0,0x0,8
tick,0x7ff8e7af1be4,40931282,0,0x0,8
tick,0x7ff8e7af1be4,40946967,0,0x0,8
tick,0x7ff8e7af1be4,40963189,0,0x0,8
tick,0x7ff8e7af1be4,40978864,0,0x0,8
tick,0x7ff8e7af1be4,40994654,0,0x0,8
tick,0x7ff8e7af1be4,41010232,0,0x0,8
tick,0x7ff8e7af1be4,41026002,0,0x0,8
tick,0x7ff8e7af1be4,41042311,0,0x0,8
tick,0x7ff8e7af1be4,41059002,0,0x0,8
tick,0x7ff8e7af1be4,41074719,0,0x0,8
tick,0x7ff8e7af1be4,41092191,0,0x0,8
tick,0x7ff8e7af1be4,41105616,0,0x0,8
tick,0x7ff8e7af1be4,41121562,0,0x0,8
tick,0x7ff8e7af1be4,41137559,0,0x0,8
tick,0x7ff8e7af1be4,41143150,0,0x0,8
tick,0x7ff8e7af1be4,41144466,0,0x0,8
tick,0x7ff8e7af1be4,41145684,0,0x0,8
tick,0x7ff8e7af1be4,41147416,0,0x0,8
tick,0x7ff8e7af1be4,41148907,0,0x0,8
tick,0x7ff8e7af1be4,41166022,0,0x0,8
tick,0x7ff8e7af1be4,41180785,0,0x0,8
tick,0x7ff8e7af1be4,41196408,0,0x0,8
tick,0x7ff8e7af1be4,41212226,0,0x0,8
tick,0x7ff8e7af1be4,41228313,0,0x0,8
tick,0x7ff8e7af1be4,41244515,0,0x0,8
tick,0x7ff8e7af1be4,41260250,0,0x0,8
tick,0x7ff8e7af1be4,41275864,0,0x0,8
tick,0x7ff8e7af1be4,41291833,0,0x0,8
tick,0x7ff8e7af1be4,41307898,0,0x0,8
tick,0x7ff8e7af1be4,41323401,0,0x0,8
tick,0x7ff8e7af1be4,41338311,0,0x0,8
tick,0x7ff8e7af1be4,41353980,0,0x0,8
tick,0x7ff8e7af1be4,41370562,0,0x0,8
tick,0x7ff8e7af1be4,41386607,0,0x0,8
tick,0x7ff8e7af1be4,41402023,0,0x0,8
tick,0x7ff8e7af1be4,41418104,0,0x0,8
tick,0x7ff8e7af1be4,41432885,0,0x0,8
tick,0x7ff8e7af1be4,41448982,0,0x0,8
tick,0x7ff8e7af1be4,41464688,0,0x0,8
tick,0x7ff8e7af1be4,41480133,0,0x0,8
tick,0x7ff8e7af1be4,41495591,0,0x0,8
tick,0x7ff8e7af1be4,41511043,0,0x0,8
tick,0x7ff8e7af1be4,41526684,0,0x0,8
tick,0x7ff8e7af1be4,41542644,0,0x0,8
tick,0x7ff8e7af1be4,41558931,0,0x0,8
tick,0x7ff8e7af1be4,41574438,0,0x0,8
tick,0x7ff8e7af1be4,41590696,0,0x0,8
tick,0x7ff8e7af1be4,41606850,0,0x0,8
tick,0x7ff8e7af1be4,41623210,0,0x0,8
tick,0x7ff8e7af1be4,41638573,0,0x0,8
tick,0x7ff8e7af1be4,41643478,0,0x0,8
tick,0x7ff8e7af1be4,41644691,0,0x0,8
tick,0x7ff8e7af1be4,41646529,0,0x0,8
tick,0x7ff8e7af1be4,41655312,0,0x0,8
tick,0x7ff8e7af1be4,41662904,0,0x0,8
tick,0x7ff8e7af1be4,41678915,0,0x0,8
tick,0x7ff8e7af1be4,41694579,0,0x0,8
tick,0x7ff8e7af1be4,41710515,0,0x0,8
tick,0x7ff8e7af1be4,41726477,0,0x0,8
tick,0x7ff8e7af1be4,41743234,0,0x0,8
tick,0x7ff8e7af1be4,41759727,0,0x0,8
tick,0x7ff8e7af1be4,41774273,0,0x0,8
tick,0x7ff8e7af1be4,41790399,0,0x0,8
tick,0x7ff8e7af1be4,41805432,0,0x0,8
tick,0x7ff8e7af1be4,41821295,0,0x0,8
tick,0x7ff8e7af1be4,41837249,0,0x0,8
tick,0x7ff8e7af1be4,41853903,0,0x0,8
tick,0x7ff8e7af1be4,41869487,0,0x0,8
tick,0x7ff8e7af1be4,41885557,0,0x0,8
tick,0x7ff8e7af1be4,41900755,0,0x0,8
tick,0x7ff8e7af1be4,41916282,0,0x0,8
tick,0x7ff8e7af1be4,41932851,0,0x0,8
tick,0x7ff8e7af1be4,41949004,0,0x0,8
tick,0x7ff8e7af1be4,41963729,0,0x0,8
tick,0x7ff8e7af1be4,41980143,0,0x0,8
tick,0x7ff8e7af1be4,41994961,0,0x0,8
tick,0x7ff8e7af1be4,42010939,0,0x0,8
tick,0x7ff8e7af1be4,42026375,0,0x0,8
tick,0x7ff8e7af1be4,42041902,0,0x0,8
tick,0x7ff8e7af1be4,42057801,0,0x0,8
tick,0x7ff8e7af1be4,42074181,0,0x0,8
tick,0x7ff8e7af1be4,42089238,0,0x0,8
tick,0x7ff8e7af1be4,42104465,0,0x0,8
tick,0x7ff8e7af1be4,42120909,0,0x0,8
tick,0x7ff8e7af1be4,42136041,0,0x0,8
tick,0x7ff8e7af1be4,42152070,0,0x0,8
tick,0x7ff8e7af1be4,42157285,0,0x0,8
tick,0x7ff8e7af1be4,42158751,0,0x0,8
tick,0x7ff8e7af1be4,42160152,0,0x0,8
tick,0x7ff8e7af1be4,42162063,0,0x0,8
tick,0x7ff8e7af1be4,42179008,0,0x0,8
tick,0x7ff8e7af1be4,42194021,0,0x0,8
tick,0x7ff8e7af1be4,42210153,0,0x0,8
tick,0x7ff8e7af1be4,42226114,0,0x0,8
tick,0x7ff8e7af1be4,42241840,0,0x0,8
tick,0x7ff8e7af1be4,42257795,0,0x0,8
tick,0x7ff8e7af1be4,42273819,0,0x0,8
tick,0x7ff8e7af1be4,42276732,0,0x0,8
tick,0x7ff8e7af1be4,42291858,0,0x0,8
tick,0x7ff8e7af1be4,42307741,0,0x0,8
tick,0x7ff8e7af1be4,42323430,0,0x0,8
tick,0x7ff8e7af1be4,42339358,0,0x0,8
tick,0x7ff8e7af1be4,42355270,0,0x0,8
tick,0x7ff8e7af1be4,42371694,0,0x0,8
tick,0x7ff8e7af1be4,42387289,0,0x0,8
tick,0x7ff8e7af1be4,42403341,0,0x0,8
tick,0x7ff8e7af1be4,42419308,0,0x0,8
tick,0x7ff8e7af1be4,42434517,0,0x0,8
tick,0x7ff8e7af1be4,42450535,0,0x0,8
tick,0x7ff8e7af1be4,42466029,0,0x0,8
tick,0x7ff8e7af1be4,42481539,0,0x0,8
tick,0x7ff8e7af1be4,42497778,0,0x0,8
tick,0x7ff8e7af1be4,42513511,0,0x0,8
tick,0x7ff8e7af1be4,42529152,0,0x0,8
tick,0x7ff8e7af1be4,42544836,0,0x0,8
tick,0x7ff8e7af1be4,42560986,0,0x0,8
tick,0x7ff8e7af1be4,42577062,0,0x0,8
tick,0x7ff8e7af1be4,42593019,0,0x0,8
tick,0x7ff8e7af1be4,42608619,0,0x0,8
tick,0x7ff8e7af1be4,42624757,0,0x0,8
tick,0x7ff8e7af1be4,42640224,0,0x0,8
tick,0x7ff8e7af1be4,42655921,0,0x0,8
tick,0x7ff8e7af1be4,42662488,0,0x0,8
tick,0x7ff8e7af1be4,42673157,0,0x0,8
tick,0x7ff8e7af1be4,42674723,0,0x0,8
tick,0x7ff8e7af1be4,42690943,0,0x0,8
tick,0x7ff8e7af1be4,42706543,0,0x0,8
tick,0x7ff8e7af1be4,42722372,0,0x0,8
tick,0x7ff8e7af1be4,42738001,0,0x0,8
tick,0x7ff8e7af1be4,42754761,0,0x0,8
tick,0x7ff8e7af1be4,42770399,0,0x0,8
tick,0x7ff8e7af1be4,42786001,0,0x0,8
tick,0x7ff8e7af1be4,42801190,0,0x0,8
tick,0x7ff8e7af1be4,42817101,0,0x0,8
tick,0x7ff8e7af1be4,42832721,0,0x0,8
tick,0x7ff8e7af1be4,42848705,0,0x0,8
tick,0x7ff8e7af1be4,42865229,0,0x0,8
tick,0x7ff8e7af1be4,42881095,0,0x0,8
tick,0x7ff8e7af1be4,42896003,0,0x0,8
tick,0x7ff8e7af1be4,42912621,0,0x0,8
tick,0x7ff8e7af1be4,42928475,0,0x0,8
tick,0x7ff8e7af1be4,42944097,0,0x0,8
tick,0x7ff8e7af1be4,42959980,0,0x0,8
tick,0x7ff8e7af1be4,42975858,0,0x0,8
tick,0x7ff8e7af1be4,42991991,0,0x0,8
tick,0x7ff8e7af1be4,43007676,0,0x0,8
tick,0x7ff8e7af1be4,43023267,0,0x0,8
tick,0x7ff8e7af1be4,43039684,0,0x0,8
tick,0x7ff8e7af1be4,43055003,0,0x0,8
tick,0x7ff8e7af1be4,43070945,0,0x0,8
tick,0x7ff8e7af1be4,43087201,0,0x0,8
tick,0x7ff8e7af1be4,43102873,0,0x0,8
tick,0x7ff8e7af1be4,43119174,0,0x0,8
tick,0x7ff8e7af1be4,43135157,0,0x0,8
tick,0x7ff8e7af1be4,43151266,0,0x0,8
tick,0x7ff8e7af1be4,43166969,0,0x0,8
tick,0x7ff8e7af1be4,43174360,0,0x0,8
tick,0x7ff8e7af1be4,43175618,0,0x0,8
tick,0x7ff8e7af1be4,43177250,0,0x0,8
tick,0x7ff8e7af1be4,43178941,0,0x0,8
tick,0x7ff8e7af1be4,43195016,0,0x0,8
tick,0x7ff8e7af1be4,43211107,0,0x0,8
tick,0x7ff8e7af1be4,43226960,0,0x0,8
tick,0x7ff8e7af1be4,43242861,0,0x0,8
tick,0x7ff8e7af1be4,43258571,0,0x0,8
tick,0x7ff8e7af1be4,43275791,0,0x0,8
tick,0x7ff8e7af1be4,43290958,0,0x0,8
tick,0x7ff8e7af1be4,43306529,0,0x0,8
tick,0x7ff8e7af1be4,43321822,0,0x0,8
tick,0x7ff8e7af1be4,43337145,0,0x0,8
tick,0x7ff8e7af1be4,43353417,0,0x0,8
tick,0x7ff8e7af1be4,43369238,0,0x0,8
tick,0x7ff8e7af1be4,43388626,0,0x0,8
tick,0x7ff8e7af1be4,43404385,0,0x0,8
tick,0x7ff8e7af1be4,43419750,0,0x0,8
tick,0x7ff8e7af1be4,43435020,0,0x0,8
tick,0x7ff8e7af1be4,43451163,0,0x0,8
tick,0x7ff8e7af1be4,43467098,0,0x0,8
tick,0x7ff8e7af1be4,43482954,0,0x0,8
tick,0x7ff8e7af1be4,43498963,0,0x0,8
tick,0x7ff8e7af1be4,43515287,0,0x0,8
tick,0x7ff8e7af1be4,43530780,0,0x0,8
tick,0x7ff8e7af1be4,43546656,0,0x0,8
tick,0x7ff8e7af1be4,43561934,0,0x0,8
tick,0x7ff8e7af1be4,43577878,0,0x0,8
tick,0x7ff8e7af1be4,43593603,0,0x0,8
tick,0x7ff8e7af1be4,43609778,0,0x0,8
tick,0x7ff8e7af1be4,43625588,0,0x0,8
tick,0x7ff8e7af1be4,43641316,0,0x0,8
tick,0x7ff8e7af1be4,43657919,0,0x0,8
tick,0x7ff8e7af1be4,43673525,0,0x0,8
tick,0x7ff8e7af1be4,43679327,0,0x0,8
tick,0x7ff8e7af1be4,43681435,0,0x0,8
tick,0x7ff8e7af1be4,43682808,0,0x0,8
tick,0x7ff8e7af1be4,43684831,0,0x0,8
tick,0x7ff8e7af1be4,43702155,0,0x0,8
tick,0x7ff8e7af1be4,43717123,0,0x0,8
tick,0x7ff8e7af1be4,43733097,0,0x0,8
tick,0x7ff8e7af1be4,43749251,0,0x0,8
tick,0x7ff8e7af1be4,43765509,0,0x0,8
tick,0x7ff8e7af1be4,43781328,0,0x0,8
tick,0x7ff8e7af1be4,43797172,0,0x0,8
tick,0x7ff8e7af1be4,43812868,0,0x0,8
tick,0x7ff8e7af1be4,43828377,0,0x0,8
tick,0x7ff8e7af1be4,43844052,0,0x0,8
tick,0x7ff8e7af1be4,43859667,0,0x0,8
tick,0x7ff8e7af1be4,43875611,0,0x0,8
tick,0x7ff8e7af1be4,43891744,0,0x0,8
tick,0x7ff8e7af1be4,43907525,0,0x0,8
tick,0x7ff8e7af1be4,43923664,0,0x0,8
tick,0x7ff8e7af1be4,43939741,0,0x0,8
tick,0x7ff8e7af1be4,43955459,0,0x0,8
tick,0x7ff8e7af1be4,43971498,0,0x0,8
tick,0x7ff8e7af1be4,43987973,0,0x0,8
tick,0x7ff8e7af1be4,44004121,0,0x0,8
tick,0x7ff8e7af1be4,44022821,0,0x0,8
tick,0x7ff8e7af1be4,44027835,0,0x0,8
tick,0x7ff8e7af1be4,44044003,0,0x0,8
tick,0x7ff8e7af1be4,44059322,0,0x0,8
tick,0x7ff8e7af1be4,44075426,0,0x0,8
tick,0x7ff8e7af1be4,44091286,0,0x0,8
tick,0x7ff8e7af1be4,44107025,0,0x0,8
tick,0x7ff8e7af1be4,44122740,0,0x0,8
tick,0x7ff8e7af1be4,44139639,0,0x0,8
tick,0x7ff8e7af1be4,44155311,0,0x0,8
tick,0x7ff8e7af1be4,44170521,0,0x0,8
tick,0x7ff8e7af1be4,44188007,0,0x0,8
tick,0x7ff8e7af1be4,44193771,0,0x0,8
tick,0x7ff8e7af1be4,44195324,0,0x0,8
tick,0x7ff8e7af1be4,44196967,0,0x0,8
tick,0x7ff8e7af1be4,44213729,0,0x0,8
tick,0x7ff8e7af1be4,44229013,0,0x0,8
tick,0x7ff8e7af1be4,44244991,0,0x0,8
tick,0x7ff8e7af1be4,44261538,0,0x0,8
tick,0x7ff8e7af1be4,44277158,0,0x0,8
tick,0x7ff8e7af1be4,44292672,0,0x0,8
tick,0x7ff8e7af1be4,44308821,0,0x0,8
tick,0x7ff8e7af1be4,44325067,0,0x0,8
tick,0x7ff8e7af1be4,44339943,0,0x0,8
tick,0x7ff8e7af1be4,44356229,0,0x0,8
tick,0x7ff8e7af1be4,44372681,0,0x0,8
tick,0x7ff8e7af1be4,44388899,0,0x0,8
tick,0x7ff8e7af1be4,44404301,0,0x0,8
tick,0x7ff8e7af1be4,44420217,0,0x0,8
tick,0x7ff8e7af1be4,44442835,0,0x0,8
tick,0x7ff8e7af1be4,44453186,0,0x0,8
tick,0x7ff8e7af1be4,44470766,0,0x0,8
tick,0x7ff8e7af1be4,44484857,0,0x0,8
tick,0x7ff8e7af1be4,44501973,0,0x0,8
tick,0x7ff8e7af1be4,44517565,0,0x0,8
tick,0x7ff8e7af1be4,44533906,0,0x0,8
tick,0x7ff8e7af1be4,44549294,0,0x0,8
tick,0x7ff8e7af1be4,44564480,0,0x0,8
tick,0x7ff8e7af1be4,44579984,0,0x0,8
tick,0x7ff8e7af1be4,44595627,0,0x0,8
tick,0x7ff8e7af1be4,44611521,0,0x0,8
tick,0x7ff8e7af1be4,44627822,0,0x0,8
tick,0x7ff8e7af1be4,44643687,0,0x0,8
tick,0x7ff8e7af1be4,44659553,0,0x0,8
tick,0x7ff8e7af1be4,44676013,0,0x0,8
tick,0x7ff8e7af1be4,44692461,0,0x0,8
tick,0x7ff8e7af1be4,44697281,0,0x0,8
tick,0x7ff8e7af1be4,44699438,0,0x0,8
tick,0x7ff8e7af1be4,44701919,0,0x0,8
tick,0x7ff8e7af1be4,44706902,0,0x0,8
tick,0x7ff8e7af1be4,44722227,0,0x0,8
tick,0x7ff8e7af1be4,44737997,0,0x0,8
tick,0x7ff8e7af1be4,44753728,0,0x0,8
tick,0x7ff8e7af1be4,44769418,0,0x0,8
tick,0x7ff8e7af1be4,44785304,0,0x0,8
tick,0x7ff8e7af1be4,44801172,0,0x0,8
tick,0x7ff8e7af1be4,44816628,0,0x0,8
tick,0x7ff8e7af1be4,44832539,0,0x0,8
tick,0x7ff8e7af1be4,44848610,0,0x0,8
tick,0x7ff8e7af1be4,44864610,0,0x0,8
tick,0x7ff8e7af1be4,44880541,0,0x0,8
tick,0x7ff8e7af1be4,44895975,0,0x0,8
tick,0x7ff8e7af1be4,44911859,0,0x0,8
tick,0x7ff8e7af1be4,44928404,0,0x0,8
tick,0x7ff8e7af1be4,44944162,0,0x0,8
tick,0x7ff8e7af1be4,44960202,0,0x0,8
tick,0x7ff8e7af1be4,44975528,0,0x0,8
tick,0x7ff8e7af1be4,44991333,0,0x0,8
tick,0x7ff8e7af1be4,45007380,0,0x0,8
tick,0x7ff8e7af1be4,45023148,0,0x0,8
tick,0x7ff8e7af1be4,45038715,0,0x0,8
tick,0x7ff8e7af1be4,45054436,0,0x0,8
tick,0x7ff8e7af1be4,45062641,0,0x0,8
tick,0x7ff8e7af1be4,45078817,0,0x0,8
tick,0x7ff8e7af1be4,45094652,0,0x0,8
tick,0x7ff8e7af1be4,45111827,0,0x0,8
tick,0x7ff8e7af1be4,45126955,0,0x0,8
tick,0x7ff8e7af1be4,45143322,0,0x0,8
tick,0x7ff8e7af1be4,45158556,0,0x0,8
tick,0x7ff8e7af1be4,45174312,0,0x0,8
tick,0x7ff8e7af1be4,45190476,0,0x0,8
tick,0x7ff8e7af1be4,45206634,0,0x0,8
tick,0x7ff8e7af1be4,45211648,0,0x0,8
tick,0x7ff8e7af1be4,45213383,0,0x0,8
tick,0x7ff8e7af1be4,45215336,0,0x0,8
tick,0x7ff8e7af1be4,45231367,0,0x0,8
tick,0x7ff8e7af1be4,45247180,0,0x0,8
tick,0x7ff8e7af1be4,45262778,0,0x0,8
tick,0x7ff8e7af1be4,45266294,0,0x0,8
tick,0x7ff8e7af1be4,45281036,0,0x0,8
tick,0x7ff8e7af1be4,45296904,0,0x0,8
tick,0x7ff8e7af1be4,45312891,0,0x0,8
tick,0x7ff8e7af1be4,45328506,0,0x0,8
tick,0x7ff8e7af1be4,45344185,0,0x0,8
tick,0x7ff8e7af1be4,45359853,0,0x0,8
tick,0x7ff8e7af1be4,45377118,0,0x0,8
tick,0x7ff8e7af1be4,45392533,0,0x0,8
tick,0x7ff8e7af1be4,45408187,0,0x0,8
tick,0x7ff8e7af1be4,45424274,0,0x0,8
tick,0x7ff8e7af1be4,45442079,0,0x0,8
tick,0x7ff8e7af1be4,45456078,0,0x0,8
tick,0x7ff8e7af1be4,45471388,0,0x0,8
tick,0x7ff8e7af1be4,45487319,0,0x0,8
tick,0x7ff8e7af1be4,45503593,0,0x0,8
tick,0x7ff8e7af1be4,45518762,0,0x0,8
tick,0x7ff8e7af1be4,45534254,0,0x0,8
tick,0x7ff8e7af1be4,45549983,0,0x0,8
tick,0x7ff8e7af1be4,45566095,0,0x0,8
tick,0x7ff8e7af1be4,45581770,0,0x0,8
tick,0x7ff8e7af1be4,45597867,0,0x0,8
tick,0x7ff8e7af1be4,45613683,0,0x0,8
tick,0x7ff8e7af1be4,45629822,0,0x0,8
tick,0x7ff8e7af1be4,45645918,0,0x0,8
tick,0x7ff8e7af1be4,45661257,0,0x0,8
tick,0x7ff8e7af1be4,45677190,0,0x0,8
tick,0x7ff8e7af1be4,45693153,0,0x0,8
tick,0x7ff8e7af1be4,45708766,0,0x0,8
tick,0x7ff8e7af1be4,45710336,0,0x0,8
tick,0x7ff8e7af1be4,45714680,0,0x0,8
tick,0x7ff8e7af1be4,45716199,0,0x0,8
tick,0x7ff8e7af1be4,45717403,0,0x0,8
tick,0x7ff8e7af1be4,45718966,0,0x0,8
tick,0x7ff8e7af1be4,45736213,0,0x0,8
tick,0x7ff8e7af1be4,45751542,0,0x0,8
tick,0x7ff8e7af1be4,45766812,0,0x0,8
tick,0x7ff8e7af1be4,45783230,0,0x0,8
tick,0x7ff8e7af1be4,45799073,0,0x0,8
tick,0x7ff8e7af1be4,45815059,0,0x0,8
tick,0x7ff8e7af1be4,45831256,0,0x0,8
tick,0x7ff8e7af1be4,45847372,0,0x0,8
tick,0x7ff8e7af1be4,45862878,0,0x0,8
tick,0x7ff8e7af1be4,45879421,0,0x0,8
tick,0x7ff8e7af1be4,45895270,0,0x0,8
tick,0x7ff8e7af1be4,45911080,0,0x0,8
tick,0x7ff8e7af1be4,45927016,0,0x0,8
tick,0x7ff8e7af1be4,45942857,0,0x0,8
tick,0x7ff8e7af1be4,45959134,0,0x0,8
tick,0x7ff8e7af1be4,45974753,0,0x0,8
tick,0x7ff8e7af1be4,45991053,0,0x0,8
tick,0x7ff8e7af1be4,46007313,0,0x0,8
tick,0x7ff8e7af1be4,46022752,0,0x0,8
tick,0x7ff8e7af1be4,46038773,0,0x0,8
tick,0x7ff8e7af1be4,46055314,0,0x0,8
tick,0x7ff8e7af1be4,46071348,0,0x0,8
tick,0x7ff8e7af1be4,46087957,0,0x0,8
tick,0x7ff8e7af1be4,46105207,0,0x0,8
tick,0x7ff8e7af1be4,46119080,0,0x0,8
tick,0x7ff8e7af1be4,46135070,0,0x0,8
tick,0x7ff8e7af1be4,46151016,0,0x0,8
tick,0x7ff8e7af1be4,46167516,0,0x0,8
tick,0x7ff8e7af1be4,46183228,0,0x0,8
tick,0x7ff8e7af1be4,46198979,0,0x0,8
tick,0x7ff8e7af1be4,46215754,0,0x0,8
tick,0x7ff8e7af1be4,46221779,0,0x0,8
tick,0x7ff8e7af1be4,46225204,0,0x0,8
tick,0x7ff8e7af1be4,46226313,0,0x0,8
tick,0x7ff8e7af1be4,46243250,0,0x0,8
tick,0x7ff8e7af1be4,46258887,0,0x0,8
tick,0x7ff8e7af1be4,46274764,0,0x0,8
tick,0x7ff8e7af1be4,46290902,0,0x0,8
tick,0x7ff8e7af1be4,46307000,0,0x0,8
tick,0x7ff8e7af1be4,46322998,0,0x0,8
tick,0x7ff8e7af1be4,46339034,0,0x0,8
tick,0x7ff8e7af1be4,46355169,0,0x0,8
tick,0x7ff8e7af1be4,46371559,0,0x0,8
tick,0x7ff8e7af1be4,46389725,0,0x0,8
tick,0x7ff8e7af1be4,46403288,0,0x0,8
tick,0x7ff8e7af1be4,46419634,0,0x0,8
tick,0x7ff8e7af1be4,46437121,0,0x0,8
tick,0x7ff8e7af1be4,46451618,0,0x0,8
tick,0x7ff8e7af1be4,46467149,0,0x0,8
tick,0x7ff8e7af1be4,46483342,0,0x0,8
tick,0x7ff8e7af1be4,46498932,0,0x0,8
tick,0x7ff8e7af1be4,46515270,0,0x0,8
tick,0x7ff8e7af1be4,46530596,0,0x0,8
tick,0x7ff8e7af1be4,46546813,0,0x0,8
tick,0x7ff8e7af1be4,46562406,0,0x0,8
tick,0x7ff8e7af1be4,46578200,0,0x0,8
tick,0x7ff8e7af1be4,46594147,0,0x0,8
tick,0x7ff8e7af1be4,46609773,0,0x0,8
tick,0x7ff8e7af1be4,46625890,0,0x0,8
tick,0x7ff8e7af1be4,46641941,0,0x0,8
tick,0x7ff8e7af1be4,46657529,0,0x0,8
tick,0x7ff8e7af1be4,46673414,0,0x0,8
tick,0x7ff8e7af1be4,46689241,0,0x0,8
tick,0x7ff8e7af1be4,46704885,0,0x0,8
tick,0x7ff8e7af1be4,46720757,0,0x0,8
tick,0x7ff8e7af1be4,46736502,0,0x0,8
tick,0x7ff8e7af1be4,46740151,0,0x0,8
tick,0x7ff8e7af1be4,46743229,0,0x0,8
tick,0x7ff8e7af1be4,46759770,0,0x0,8
tick,0x7ff8e7af1be4,46775828,0,0x0,8
tick,0x7ff8e7af1be4,46791573,0,0x0,8
tick,0x7ff8e7af1be4,46807121,0,0x0,8
tick,0x7ff8e7af1be4,46822791,0,0x0,8
tick,0x7ff8e7af1be4,46838641,0,0x0,8
tick,0x7ff8e7af1be4,46854661,0,0x0,8
tick,0x7ff8e7af1be4,46871060,0,0x0,8
tick,0x7ff8e7af1be4,46886636,0,0x0,8
tick,0x7ff8e7af1be4,46903334,0,0x0,8
tick,0x7ff8e7af1be4,46919012,0,0x0,8
tick,0x7ff8e7af1be4,46934526,0,0x0,8
tick,0x7ff8e7af1be4,46950487,0,0x0,8
tick,0x7ff8e7af1be4,46967065,0,0x0,8
tick,0x7ff8e7af1be4,46982515,0,0x0,8
tick,0x7ff8e7af1be4,46998944,0,0x0,8
tick,0x7ff8e7af1be4,47014914,0,0x0,8
tick,0x7ff8e7af1be4,47031214,0,0x0,8
tick,0x7ff8e7af1be4,47046632,0,0x0,8
tick,0x7ff8e7af1be4,47064259,0,0x0,8
tick,0x7ff8e7af1be4,47078969,0,0x0,8
tick,0x7ff8e7af1be4,47095699,0,0x0,8
tick,0x7ff8e7af1be4,47111185,0,0x0,8
tick,0x7ff8e7af1be4,47127548,0,0x0,8
tick,0x7ff8e7af1be4,47143252,0,0x0,8
tick,0x7ff8e7af1be4,47158195,0,0x0,8
tick,0x7ff8e7af1be4,47173910,0,0x0,8
tick,0x7ff8e7af1be4,47189883,0,0x0,8
tick,0x7ff8e7af1be4,47206049,0,0x0,8
tick,0x7ff8e7af1be4,47222044,0,0x0,8
tick,0x7ff8e7af1be4,47238615,0,0x0,8
tick,0x7ff8e7af1be4,47243162,0,0x0,8
tick,0x7ff8e7af1be4,47245737,0,0x0,8
tick,0x7ff8e7af1be4,47247244,0,0x0,8
tick,0x7ff8e7af1be4,47248478,0,0x0,8
tick,0x7ff8e7af1be4,47265633,0,0x0,8
tick,0x7ff8e7af1be4,47282097,0,0x0,8
tick,0x7ff8e7af1be4,47297800,0,0x0,8
tick,0x7ff8e7af1be4,47314391,0,0x0,8
tick,0x7ff8e7af1be4,47329698,0,0x0,8
tick,0x7ff8e7af1be4,47345649,0,0x0,8
tick,0x7ff8e7af1be4,47361386,0,0x0,8
tick,0x7ff8e7af1be4,47377218,0,0x0,8
tick,0x7ff8e7af1be4,47393342,0,0x0,8
tick,0x7ff8e7af1be4,47409497,0,0x0,8
tick,0x7ff8e7af1be4,47425167,0,0x0,8
tick,0x7ff8e7af1be4,47440782,0,0x0,8
tick,0x7ff8e7af1be4,47457015,0,0x0,8
tick,0x7ff8e7af1be4,47472262,0,0x0,8
tick,0x7ff8e7af1be4,47488058,0,0x0,8
tick,0x7ff8e7af1be4,47503656,0,0x0,8
tick,0x7ff8e7af1be4,47520468,0,0x0,8
tick,0x7ff8e7af1be4,47535664,0,0x0,8
tick,0x7ff8e7af1be4,47551125,0,0x0,8
tick,0x7ff8e7af1be4,47566888,0,0x0,8
tick,0x7ff8e7af1be4,47582712,0,0x0,8
tick,0x7ff8e7af1be4,47599030,0,0x0,8
tick,0x7ff8e7af1be4,47615140,0,0x0,8
tick,0x7ff8e7af1be4,47631098,0,0x0,8
tick,0x7ff8e7af1be4,47647111,0,0x0,8
tick,0x7ff8e7af1be4,47662364,0,0x0,8
tick,0x7ff8e7af1be4,47678400,0,0x0,8
tick,0x7ff8e7af1be4,47694255,0,0x0,8
tick,0x7ff8e7af1be4,47696517,0,0x0,8
tick,0x7ff8e7af1be4,47712205,0,0x0,8
tick,0x7ff8e7af1be4,47728040,0,0x0,8
tick,0x7ff8e7af1be4,47743516,0,0x0,8
tick,0x7ff8e7af1be4,47745200,0,0x0,8
tick,0x7ff8e7af1be4,47750221,0,0x0,8
tick,0x7ff8e7af1be4,47751534,0,0x0,8
tick,0x7ff8e7af1be4,47753042,0,0x0,8
tick,0x7ff8e7af1be4,47754404,0,0x0,8
tick,0x7ff8e7af1be4,47770495,0,0x0,8
tick,0x7ff8e7af1be4,47785913,0,0x0,8
tick,0x7ff8e7af1be4,47802422,0,0x0,8
tick,0x7ff8e7af1be4,47818473,0,0x0,8
tick,0x7ff8e7af1be4,47833799,0,0x0,8
tick,0x7ff8e7af1be4,47850036,0,0x0,8
tick,0x7ff8e7af1be4,47865314,0,0x0,8
tick,0x7ff8e7af1be4,47881349,0,0x0,8
tick,0x7ff8e7af1be4,47897548,0,0x0,8
tick,0x7ff8e7af1be4,47913261,0,0x0,8
tick,0x7ff8e7af1be4,47929412,0,0x0,8
tick,0x7ff8e7af1be4,47945973,0,0x0,8
tick,0x7ff8e7af1be4,47961746,0,0x0,8
tick,0x7ff8e7af1be4,47977772,0,0x0,8
tick,0x7ff8e7af1be4,47993783,0,0x0,8
tick,0x7ff8e7af1be4,48009276,0,0x0,8
tick,0x7ff8e7af1be4,48025454,0,0x0,8
tick,0x7ff8e7af1be4,48041956,0,0x0,8
tick,0x7ff8e7af1be4,48058235,0,0x0,8
tick,0x7ff8e7af1be4,48073379,0,0x0,8
tick,0x7ff8e7af1be4,48090212,0,0x0,8
tick,0x7ff8e7af1be4,48106459,0,0x0,8
tick,0x7ff8e7af1be4,48122385,0,0x0,8
tick,0x7ff8e7af1be4,48138675,0,0x0,8
tick,0x7ff8e7af1be4,48154304,0,0x0,8
tick,0x7ff8e7af1be4,48170464,0,0x0,8
tick,0x7ff8e7af1be4,48186408,0,0x0,8
tick,0x7ff8e7af1be4,48202271,0,0x0,8
tick,0x7ff8e7af1be4,48218631,0,0x0,8
tick,0x7ff8e7af1be4,48233880,0,0x0,8
tick,0x7ff8e7af1be4,48250638,0,0x0,8
tick,0x7ff8e7af1be4,48253962,0,0x0,8
tick,0x7ff8e7af1be4,48255188,0,0x0,8
tick,0x7ff8e7af1be4,48256414,0,0x0,8
tick,0x7ff8e7af1be4,48272759,0,0x0,8
tick,0x7ff8e7af1be4,48288512,0,0x0,8
tick,0x7ff8e7af1be4,48304649,0,0x0,8
tick,0x7ff8e7af1be4,48321285,0,0x0,8
tick,0x7ff8e7af1be4,48336950,0,0x0,8
tick,0x7ff8e7af1be4,48353377,0,0x0,8
tick,0x7ff8e7af1be4,48369078,0,0x0,8
tick,0x7ff8e7af1be4,48384687,0,0x0,8
tick,0x7ff8e7af1be4,48400978,0,0x0,8
tick,0x7ff8e7af1be4,48416991,0,0x0,8
tick,0x7ff8e7af1be4,48432089,0,0x0,8
tick,0x7ff8e7af1be4,48448645,0,0x0,8
tick,0x7ff8e7af1be4,48464380,0,0x0,8
tick,0x7ff8e7af1be4,48479977,0,0x0,8
tick,0x7ff8e7af1be4,48486202,0,0x0,8
tick,0x7ff8e7af1be4,48501904,0,0x0,8
tick,0x7ff8e7af1be4,48517563,0,0x0,8
tick,0x7ff8e7af1be4,48533303,0,0x0,8
tick,0x7ff8e7af1be4,48548829,0,0x0,8
tick,0x7ff8e7af1be4,48569691,0,0x0,8
tick,0x7ff8e7af1be4,48580203,0,0x0,8
tick,0x7ff8e7af1be4,48595832,0,0x0,8
tick,0x7ff8e7af1be4,48611529,0,0x0,8
tick,0x7ff8e7af1be4,48627656,0,0x0,8
tick,0x7ff8e7af1be4,48649875,0,0x0,8
tick,0x7ff8e7af1be4,48659300,0,0x0,8
tick,0x7ff8e7af1be4,48675348,0,0x0,8
tick,0x7ff8e7af1be4,48691165,0,0x0,8
tick,0x7ff8e7af1be4,48707061,0,0x0,8
tick,0x7ff8e7af1be4,48722894,0,0x0,8
tick,0x7ff8e7af1be4,48739376,0,0x0,8
tick,0x7ff8e7af1be4,48740655,0,0x0,8
tick,0x7ff8e7af1be4,48756688,0,0x0,8
tick,0x7ff8e7af1be4,48764422,0,0x0,8
tick,0x7ff8e7af1be4,48782031,0,0x0,8
tick,0x7ff8e7af1be4,48797535,0,0x0,8
tick,0x7ff8e7af1be4,48813352,0,0x0,8
tick,0x7ff8e7af1be4,48829336,0,0x0,8
tick,0x7ff8e7af1be4,48845133,0,0x0,8
tick,0x7ff8e7af1be4,48861810,0,0x0,8
tick,0x7ff8e7af1be4,48879532,0,0x0,8
tick,0x7ff8e7af1be4,48895134,0,0x0,8
tick,0x7ff8e7af1be4,48911548,0,0x0,8
tick,0x7ff8e7af1be4,48927466,0,0x0,8
tick,0x7ff8e7af1be4,48943419,0,0x0,8
tick,0x7ff8e7af1be4,48959272,0,0x0,8
tick,0x7ff8e7af1be4,48975040,0,0x0,8
tick,0x7ff8e7af1be4,48990880,0,0x0,8
tick,0x7ff8e7af1be4,49006757,0,0x0,8
tick,0x7ff8e7af1be4,49022742,0,0x0,8
tick,0x7ff8e7af1be4,49039056,0,0x0,8
tick,0x7ff8e7af1be4,49055824,0,0x0,8
tick,0x7ff8e7af1be4,49072521,0,0x0,8
tick,0x7ff8e7af1be4,49088941,0,0x0,8
tick,0x7ff8e7af1be4,49105170,0,0x0,8
tick,0x7ff8e7af1be4,49120543,0,0x0,8
tick,0x7ff8e7af1be4,49136794,0,0x0,8
tick,0x7ff8e7af1be4,49153242,0,0x0,8
tick,0x7ff8e7af1be4,49169277,0,0x0,8
tick,0x7ff8e7af1be4,49184762,0,0x0,8
tick,0x7ff8e7af1be4,49200768,0,0x0,8
tick,0x7ff8e7af1be4,49216341,0,0x0,8
tick,0x7ff8e7af1be4,49232504,0,0x0,8
tick,0x7ff8e7af1be4,49248792,0,0x0,8
tick,0x7ff8e7af1be4,49264548,0,0x0,8
tick,0x7ff8e7af1be4,49268213,0,0x0,8
tick,0x7ff8e7af1be4,49269707,0,0x0,8
tick,0x7ff8e7af1be4,49270901,0,0x0,8
tick,0x7ff8e7af1be4,49272654,0,0x0,8
tick,0x7ff8e7af1be4,49287497,0,0x0,8
tick,0x7ff8e7af1be4,49303551,0,0x0,8
tick,0x7ff8e7af1be4,49319494,0,0x0,8
tick,0x7ff8e7af1be4,49335532,0,0x0,8
tick,0x7ff8e7af1be4,49351192,0,0x0,8
tick,0x7ff8e7af1be4,49367980,0,0x0,8
tick,0x7ff8e7af1be4,49383455,0,0x0,8
tick,0x7ff8e7af1be4,49399389,0,0x0,8
tick,0x7ff8e7af1be4,49415030,0,0x0,8
tick,0x7ff8e7af1be4,49430835,0,0x0,8
tick,0x7ff8e7af1be4,49446879,0,0x0,8
tick,0x7ff8e7af1be4,49462823,0,0x0,8
tick,0x7ff8e7af1be4,49478541,0,0x0,8
tick,0x7ff8e7af1be4,49494614,0,0x0,8
tick,0x7ff8e7af1be4,49510788,0,0x0,8
tick,0x7ff8e7af1be4,49526623,0,0x0,8
tick,0x7ff8e7af1be4,49542378,0,0x0,8
tick,0x7ff8e7af1be4,49557238,0,0x0,8
tick,0x7ff8e7af1be4,49573111,0,0x0,8
tick,0x7ff8e7af1be4,49588699,0,0x0,8
tick,0x7ff8e7af1be4,49604740,0,0x0,8
tick,0x7ff8e7af1be4,49620414,0,0x0,8
tick,0x7ff8e7af1be4,49636363,0,0x0,8
tick,0x7ff8e7af1be4,49652235,0,0x0,8
tick,0x7ff8e7af1be4,49668680,0,0x0,8
tick,0x7ff8e7af1be4,49684331,0,0x0,8
tick,0x7ff8e7af1be4,49700732,0,0x0,8
tick,0x7ff8e7af1be4,49716428,0,0x0,8
tick,0x7ff8e7af1be4,49732222,0,0x0,8
tick,0x7ff8e7af1be4,49748425,0,0x0,8
tick,0x7ff8e7af1be4,49764570,0,0x0,8
tick,0x7ff8e7af1be4,49766232,0,0x0,8
tick,0x7ff8e7af1be4,49771911,0,0x0,8
tick,0x7ff8e7af1be4,49773963,0,0x0,8
tick,0x7ff8e7af1be4,49777539,0,0x0,8
tick,0x7ff8e7af1be4,49793202,0,0x0,8
tick,0x7ff8e7af1be4,49808877,0,0x0,8
tick,0x7ff8e7af1be4,49824646,0,0x0,8
tick,0x7ff8e7af1be4,49840672,0,0x0,8
tick,0x7ff8e7af1be4,49856677,0,0x0,8
tick,0x7ff8e7af1be4,49873665,0,0x0,8
tick,0x7ff8e7af1be4,49889498,0,0x0,8
tick,0x7ff8e7af1be4,49904503,0,0x0,8
tick,0x7ff8e7af1be4,49920503,0,0x0,8
tick,0x7ff8e7af1be4,49936838,0,0x0,8
tick,0x7ff8e7af1be4,49952683,0,0x0,8
tick,0x7ff8e7af1be4,49968684,0,0x0,8
tick,0x7ff8e7af1be4,49984777,0,0x0,8
tick,0x7ff8e7af1be4,50000905,0,0x0,8
tick,0x7ff8e7af1be4,50017211,0,0x0,8
tick,0x7ff8e7af1be4,50032258,0,0x0,8
tick,0x7ff8e7af1be4,50047975,0,0x0,8
tick,0x7ff8e7af1be4,50064293,0,0x0,8
tick,0x7ff8e7af1be4,50081450,0,0x0,8
tick,0x7ff8e7af1be4,50097052,0,0x0,8
tick,0x7ff8e7af1be4,50112804,0,0x0,8
tick,0x7ff8e7af1be4,50128804,0,0x0,8
tick,0x7ff8e7af1be4,50145526,0,0x0,8
tick,0x7ff8e7af1be4,50160913,0,0x0,8
tick,0x7ff8e7af1be4,50181596,0,0x0,8
tick,0x7ff8e7af1be4,50192107,0,0x0,8
tick,0x7ff8e7af1be4,50208712,0,0x0,8
tick,0x7ff8e7af1be4,50223800,0,0x0,8
tick,0x7ff8e7af1be4,50239522,0,0x0,8
tick,0x7ff8e7af1be4,50255259,0,0x0,8
tick,0x7ff8e7af1be4,50270920,0,0x0,8
tick,0x7ff8e7af1be4,50276806,0,0x0,8
tick,0x7ff8e7af1be4,50293445,0,0x0,8
tick,0x7ff8e7af1be4,50309913,0,0x0,8
tick,0x7ff8e7af1be4,50325959,0,0x0,8
tick,0x7ff8e7af1be4,50341420,0,0x0,8
tick,0x7ff8e7af1be4,50357242,0,0x0,8
tick,0x7ff8e7af1be4,50373325,0,0x0,8
tick,0x7ff8e7af1be4,50389049,0,0x0,8
tick,0x7ff8e7af1be4,50405009,0,0x0,8
tick,0x7ff8e7af1be4,50420985,0,0x0,8
tick,0x7ff8e7af1be4,50437087,0,0x0,8
tick,0x7ff8e7af1be4,50453473,0,0x0,8
tick,0x7ff8e7af1be4,50467770,0,0x0,8
tick,0x7ff8e7af1be4,50483222,0,0x0,8
tick,0x7ff8e7af1be4,50499550,0,0x0,8
tick,0x7ff8e7af1be4,50514876,0,0x0,8
tick,0x7ff8e7af1be4,50530755,0,0x0,8
tick,0x7ff8e7af1be4,50547292,0,0x0,8
tick,0x7ff8e7af1be4,50562797,0,0x0,8
tick,0x7ff8e7af1be4,50578938,0,0x0,8
tick,0x7ff8e7af1be4,50594881,0,0x0,8
tick,0x7ff8e7af1be4,50610908,0,0x0,8
tick,0x7ff8e7af1be4,50627056,0,0x0,8
tick,0x7ff8e7af1be4,50642663,0,0x0,8
tick,0x7ff8e7af1be4,50658424,0,0x0,8
tick,0x7ff8e7af1be4,50673785,0,0x0,8
tick,0x7ff8e7af1be4,50689246,0,0x0,8
tick,0x7ff8e7af1be4,50705231,0,0x0,8
tick,0x7ff8e7af1be4,50721273,0,0x0,8
tick,0x7ff8e7af1be4,50737073,0,0x0,8
tick,0x7ff8e7af1be4,50753026,0,0x0,8
tick,0x7ff8e7af1be4,50769124,0,0x0,8
tick,0x7ff8e7af1be4,50784811,0,0x0,8
tick,0x7ff8e7af1be4,50795586,0,0x0,8
tick,0x7ff8e7af1be4,50811315,0,0x0,8
tick,0x7ff8e7af1be4,50827249,0,0x0,8
tick,0x7ff8e7af1be4,50843291,0,0x0,8
tick,0x7ff8e7af1be4,50858746,0,0x0,8
tick,0x7ff8e7af1be4,50874397,0,0x0,8
tick,0x7ff8e7af1be4,50890513,0,0x0,8
tick,0x7ff8e7af1be4,50906689,0,0x0,8
tick,0x7ff8e7af1be4,50922983,0,0x0,8
tick,0x7ff8e7af1be4,50938634,0,0x0,8
tick,0x7ff8e7af1be4,50954798,0,0x0,8
tick,0x7ff8e7af1be4,50970448,0,0x0,8
tick,0x7ff8e7af1be4,50986266,0,0x0,8
tick,0x7ff8e7af1be4,51001916,0,0x0,8
tick,0x7ff8e7af1be4,51017693,0,0x0,8
tick,0x7ff8e7af1be4,51033209,0,0x0,8
tick,0x7ff8e7af1be4,51049248,0,0x0,8
tick,0x7ff8e7af1be4,51064968,0,0x0,8
tick,0x7ff8e7af1be4,51080851,0,0x0,8
tick,0x7ff8e7af1be4,51096827,0,0x0,8
tick,0x7ff8e7af1be4,51113518,0,0x0,8
tick,0x7ff8e7af1be4,51128621,0,0x0,8
tick,0x7ff8e7af1be4,51144619,0,0x0,8
tick,0x7ff8e7af1be4,51160333,0,0x0,8
tick,0x7ff8e7af1be4,51175888,0,0x0,8
tick,0x7ff8e7af1be4,51192227,0,0x0,8
tick,0x7ff8e7af1be4,51208006,0,0x0,8
tick,0x7ff8e7af1be4,51224142,0,0x0,8
tick,0x7ff8e7af1be4,51240038,0,0x0,8
tick,0x7ff8e7af1be4,51255902,0,0x0,8
tick,0x7ff8e7af1be4,51271959,0,0x0,8
tick,0x7ff8e7af1be4,51287917,0,0x0,8
tick,0x7ff8e7af1be4,51289453,0,0x0,8
tick,0x7ff8e7af1be4,51292509,0,0x0,8
tick,0x7ff8e7af1be4,51293783,0,0x0,8
tick,0x7ff8e7af1be4,51295357,0,0x0,8
tick,0x7ff8e7af1be4,51296870,0,0x0,8
tick,0x7ff8e7af1be4,51312865,0,0x0,8
tick,0x7ff8e7af1be4,51328577,0,0x0,8
tick,0x7ff8e7af1be4,51344350,0,0x0,8
tick,0x7ff8e7af1be4,51360406,0,0x0,8
tick,0x7ff8e7af1be4,51376553,0,0x0,8
tick,0x7ff8e7af1be4,51392501,0,0x0,8
tick,0x7ff8e7af1be4,51408825,0,0x0,8
tick,0x7ff8e7af1be4,51424964,0,0x0,8
tick,0x7ff8e7af1be4,51440976,0,0x0,8
tick,0x7ff8e7af1be4,51456813,0,0x0,8
tick,0x7ff8e7af1be4,51472427,0,0x0,8
tick,0x7ff8e7af1be4,51488196,0,0x0,8
tick,0x7ff8e7af1be4,51504339,0,0x0,8
tick,0x7ff8e7af1be4,51519918,0,0x0,8
tick,0x7ff8e7af1be4,51535486,0,0x0,8
tick,0x7ff8e7af1be4,51551758,0,0x0,8
tick,0x7ff8e7af1be4,51567275,0,0x0,8
tick,0x7ff8e7af1be4,51583089,0,0x0,8
tick,0x7ff8e7af1be4,51598693,0,0x0,8
tick,0x7ff8e7af1be4,51614562,0,0x0,8
tick,0x7ff8e7af1be4,51630213,0,0x0,8
tick,0x7ff8e7af1be4,51646219,0,0x0,8
tick,0x7ff8e7af1be4,51662062,0,0x0,8
tick,0x7ff8e7af1be4,51678416,0,0x0,8
tick,0x7ff8e7af1be4,51693868,0,0x0,8
tick,0x7ff8e7af1be4,51709840,0,0x0,8
tick,0x7ff8e7af1be4,51725862,0,0x0,8
tick,0x7ff8e7af1be4,51741422,0,0x0,8
tick,0x7ff8e7af1be4,51758166,0,0x0,8
tick,0x7ff8e7af1be4,51772925,0,0x0,8
tick,0x7ff8e7af1be4,51788740,0,0x0,8
tick,0x7ff8e7af1be4,51797177,0,0x0,8
tick,0x7ff8e7af1be4,51803197,0,0x0,8
tick,0x7ff8e7af1be4,51808752,0,0x0,8
tick,0x7ff8e7af1be4,51824611,0,0x0,8
tick,0x7ff8e7af1be4,51840716,0,0x0,8
tick,0x7ff8e7af1be4,51857014,0,0x0,8
tick,0x7ff8e7af1be4,51873258,0,0x0,8
tick,0x7ff8e7af1be4,51889237,0,0x0,8
tick,0x7ff8e7af1be4,51905244,0,0x0,8
tick,0x7ff8e7af1be4,51920724,0,0x0,8
tick,0x7ff8e7af1be4,51936281,0,0x0,8
tick,0x7ff8e7af1be4,51951991,0,0x0,8
tick,0x7ff8e7af1be4,51968295,0,0x0,8
tick,0x7ff8e7af1be4,51984555,0,0x0,8
tick,0x7ff8e7af1be4,52000093,0,0x0,8
tick,0x7ff8e7af1be4,52015878,0,0x0,8
tick,0x7ff8e7af1be4,52031768,0,0x0,8
tick,0x7ff8e7af1be4,52047470,0,0x0,8
tick,0x7ff8e7af1be4,52063089,0,0x0,8
tick,0x7ff8e7af1be4,52079362,0,0x0,8
tick,0x7ff8e7af1be4,52096047,0,0x0,8
tick,0x7ff8e7af1be4,52111359,0,0x0,8
tick,0x7ff8e7af1be4,52126761,0,0x0,8
tick,0x7ff8e7af1be4,52142807,0,0x0,8
tick,0x7ff8e7af1be4,52158272,0,0x0,8
tick,0x7ff8e7af1be4,52173609,0,0x0,8
tick,0x7ff8e7af1be4,52189655,0,0x0,8
tick,0x7ff8e7af1be4,52205489,0,0x0,8
tick,0x7ff8e7af1be4,52221111,0,0x0,8
tick,0x7ff8e7af1be4,52237147,0,0x0,8
tick,0x7ff8e7af1be4,52252877,0,0x0,8
tick,0x7ff8e7af1be4,52269352,0,0x0,8
tick,0x7ff8e7af1be4,52278430,0,0x0,8
tick,0x7ff8e7af1be4,52286045,0,0x0,8
tick,0x7ff8e7af1be4,52301891,0,0x0,8
tick,0x7ff8e7af1be4,52310043,0,0x0,8
tick,0x7ff8e7af1be4,52311223,0,0x0,8
tick,0x7ff8e7af1be4,52312735,0,0x0,8
tick,0x7ff8e7af1be4,52329134,0,0x0,8
tick,0x7ff8e7af1be4,52344921,0,0x0,8
tick,0x7ff8e7af1be4,52360925,0,0x0,8
tick,0x7ff8e7af1be4,52377143,0,0x0,8
tick,0x7ff8e7af1be4,52393003,0,0x0,8
tick,0x7ff8e7af1be4,52408735,0,0x0,8
tick,0x7ff8e7af1be4,52424734,0,0x0,8
tick,0x7ff8e7af1be4,52433570,0,0x0,8
tick,0x7ff8e7af1be4,52449404,0,0x0,8
tick,0x7ff8e7af1be4,52465490,0,0x0,8
tick,0x7ff8e7af1be4,52481080,0,0x0,8
tick,0x7ff8e7af1be4,52497073,0,0x0,8
tick,0x7ff8e7af1be4,52513179,0,0x0,8
tick,0x7ff8e7af1be4,52529453,0,0x0,8
tick,0x7ff8e7af1be4,52545523,0,0x0,8
tick,0x7ff8e7af1be4,52561567,0,0x0,8
tick,0x7ff8e7af1be4,52577486,0,0x0,8
tick,0x7ff8e7af1be4,52593514,0,0x0,8
tick,0x7ff8e7af1be4,52609576,0,0x0,8
tick,0x7ff8e7af1be4,52625603,0,0x0,8
tick,0x7ff8e7af1be4,52641143,0,0x0,8
tick,0x7ff8e7af1be4,52652121,0,0x0,8
tick,0x7ff8e7af1be4,52668559,0,0x0,8
tick,0x7ff8e7af1be4,52693172,0,0x0,8
tick,0x7ff8e7af1be4,52709376,0,0x0,8
tick,0x7ff8e7af1be4,52717713,0,0x0,8
tick,0x7ff8e7af1be4,52741805,0,0x0,8
tick,0x7ff8e7af1be4,52758007,0,0x0,8
tick,0x7ff8e7af1be4,52773695,0,0x0,8
tick,0x7ff8e7af1be4,52789442,0,0x0,8
tick,0x7ff8e7af1be4,52805520,0,0x0,8
tick,0x7ff8e7af1be4,52821319,0,0x0,8
tick,0x7ff8e7af1be4,52830086,0,0x0,8
tick,0x7ff8e7af1be4,52831467,0,0x0,8
tick,0x7ff8e7af1be4,52847604,0,0x0,8
tick,0x7ff8e7af1be4,52863301,0,0x0,8
tick,0x7ff8e7af1be4,52879169,0,0x0,8
tick,0x7ff8e7af1be4,52894971,0,0x0,8
tick,0x7ff8e7af1be4,52910779,0,0x0,8
tick,0x7ff8e7af1be4,52926329,0,0x0,8
tick,0x7ff8e7af1be4,52944066,0,0x0,8
tick,0x7ff8e7af1be4,52957888,0,0x0,8
tick,0x7ff8e7af1be4,52974056,0,0x0,8
tick,0x7ff8e7af1be4,52989290,0,0x0,8
tick,0x7ff8e7af1be4,53005360,0,0x0,8
tick,0x7ff8e7af1be4,53020688,0,0x0,8
tick,0x7ff8e7af1be4,53036573,0,0x0,8
tick,0x7ff8e7af1be4,53052656,0,0x0,8
tick,0x7ff8e7af1be4,53068552,0,0x0,8
tick,0x7ff8e7af1be4,53085412,0,0x0,8
tick,0x7ff8e7af1be4,53100692,0,0x0,8
tick,0x7ff8e7af1be4,53116199,0,0x0,8
tick,0x7ff8e7af1be4,53132369,0,0x0,8
tick,0x7ff8e7af1be4,53147996,0,0x0,8
tick,0x7ff8e7af1be4,53162850,0,0x0,8
tick,0x7ff8e7af1be4,53179218,0,0x0,8
tick,0x7ff8e7af1be4,53195041,0,0x0,8
tick,0x7ff8e7af1be4,53210851,0,0x0,8
tick,0x7ff8e7af1be4,53225322,0,0x0,8
tick,0x7ff8e7af1be4,53241823,0,0x0,8
tick,0x7ff8e7af1be4,53256811,0,0x0,8
tick,0x7ff8e7af1be4,53273229,0,0x0,8
tick,0x7ff8e7af1be4,53288852,0,0x0,8
tick,0x7ff8e7af1be4,53304210,0,0x0,8
tick,0x7ff8e7af1be4,53319319,0,0x0,8
tick,0x7ff8e7af1be4,53335565,0,0x0,8
tick,0x7ff8e7af1be4,53350996,0,0x0,8
tick,0x7ff8e7af1be4,53353257,0,0x0,8
tick,0x7ff8e7af1be4,53360426,0,0x0,8
tick,0x7ff8e7af1be4,53362556,0,0x0,8
tick,0x7ff8e7af1be4,53365825,0,0x0,8
tick,0x7ff8e7af1be4,53370570,0,0x0,8
tick,0x7ff8e7af1be4,53380282,0,0x0,8
tick,0x7ff8e7af1be4,53387248,0,0x0,8
tick,0x7ff8e7af1be4,53403054,0,0x0,8
tick,0x7ff8e7af1be4,53418937,0,0x0,8
tick,0x7ff8e7af1be4,53434519,0,0x0,8
tick,0x7ff8e7af1be4,53450317,0,0x0,8
tick,0x7ff8e7af1be4,53466198,0,0x0,8
tick,0x7ff8e7af1be4,53482200,0,0x0,8
tick,0x7ff8e7af1be4,53498357,0,0x0,8
tick,0x7ff8e7af1be4,53514159,0,0x0,8
tick,0x7ff8e7af1be4,53529850,0,0x0,8
tick,0x7ff8e7af1be4,53545833,0,0x0,8
tick,0x7ff8e7af1be4,53562137,0,0x0,8
tick,0x7ff8e7af1be4,53577708,0,0x0,8
tick,0x7ff8e7af1be4,53593702,0,0x0,8
tick,0x7ff8e7af1be4,53609588,0,0x0,8
tick,0x7ff8e7af1be4,53625598,0,0x0,8
tick,0x7ff8e7af1be4,53641797,0,0x0,8
tick,0x7ff8e7af1be4,53657649,0,0x0,8
tick,0x7ff8e7af1be4,53673789,0,0x0,8
tick,0x7ff8e7af1be4,53689536,0,0x0,8
tick,0x7ff8e7af1be4,53706075,0,0x0,8
tick,0x7ff8e7af1be4,53720900,0,0x0,8
tick,0x7ff8e7af1be4,53736501,0,0x0,8
tick,0x7ff8e7af1be4,53752191,0,0x0,8
tick,0x7ff8e7af1be4,53768632,0,0x0,8
tick,0x7ff8e7af1be4,53783906,0,0x0,8
tick,0x7ff8e7af1be4,53799900,0,0x0,8
tick,0x7ff8e7af1be4,53815624,0,0x0,8
tick,0x7ff8e7af1be4,53831608,0,0x0,8
tick,0x7ff8e7af1be4,53847363,0,0x0,8
tick,0x7ff8e7af1be4,53863422,0,0x0,8
tick,0x7ff8e7af1be4,53864959,0,0x0,8
tick,0x7ff8e7af1be4,53868874,0,0x0,8
tick,0x7ff8e7af1be4,53871062,0,0x0,8
tick,0x7ff8e7af1be4,53872355,0,0x0,8
tick,0x7ff8e7af1be4,53881827,0,0x0,8
tick,0x7ff8e7af1be4,53888666,0,0x0,8
tick,0x7ff8e7af1be4,53904547,0,0x0,8
tick,0x7ff8e7af1be4,53920054,0,0x0,8
tick,0x7ff8e7af1be4,53935802,0,0x0,8
tick,0x7ff8e7af1be4,53951503,0,0x0,8
tick,0x7ff8e7af1be4,53967513,0,0x0,8
tick,0x7ff8e7af1be4,53984118,0,0x0,8
tick,0x7ff8e7af1be4,53999703,0,0x0,8
tick,0x7ff8e7af1be4,54014748,0,0x0,8
tick,0x7ff8e7af1be4,54030092,0,0x0,8
tick,0x7ff8e7af1be4,54045785,0,0x0,8
tick,0x7ff8e7af1be4,54061786,0,0x0,8
tick,0x7ff8e7af1be4,54077224,0,0x0,8
tick,0x7ff8e7af1be4,54093477,0,0x0,8
tick,0x7ff8e7af1be4,54109638,0,0x0,8
tick,0x7ff8e7af1be4,54124882,0,0x0,8
tick,0x7ff8e7af1be4,54140147,0,0x0,8
tick,0x7ff8e7af1be4,54155942,0,0x0,8
tick,0x7ff8e7af1be4,54171978,0,0x0,8
tick,0x7ff8e7af1be4,54188672,0,0x0,8
tick,0x7ff8e7af1be4,54204260,0,0x0,8
tick,0x7ff8e7af1be4,54219697,0,0x0,8
tick,0x7ff8e7af1be4,54235636,0,0x0,8
tick,0x7ff8e7af1be4,54255137,0,0x0,8
tick,0x7ff8e7af1be4,54268915,0,0x0,8
tick,0x7ff8e7af1be4,54284567,0,0x0,8
tick,0x7ff8e7af1be4,54300576,0,0x0,8
tick,0x7ff8e7af1be4,54316664,0,0x0,8
tick,0x7ff8e7af1be4,54332302,0,0x0,8
tick,0x7ff8e7af1be4,54348438,0,0x0,8
tick,0x7ff8e7af1be4,54364759,0,0x0,8
tick,0x7ff8e7af1be4,54381521,0,0x0,8
tick,0x7ff8e7af1be4,54385970,0,0x0,8
tick,0x7ff8e7af1be4,54388463,0,0x0,8
tick,0x7ff8e7af1be4,54391661,0,0x0,8
tick,0x7ff8e7af1be4,54408297,0,0x0,8
tick,0x7ff8e7af1be4,54424378,0,0x0,8
tick,0x7ff8e7af1be4,54439895,0,0x0,8
tick,0x7ff8e7af1be4,54455782,0,0x0,8
tick,0x7ff8e7af1be4,54471737,0,0x0,8
tick,0x7ff8e7af1be4,54487426,0,0x0,8
tick,0x7ff8e7af1be4,54503327,0,0x0,8
tick,0x7ff8e7af1be4,54519510,0,0x0,8
tick,0x7ff8e7af1be4,54535274,0,0x0,8
tick,0x7ff8e7af1be4,54551633,0,0x0,8
tick,0x7ff8e7af1be4,54567622,0,0x0,8
tick,0x7ff8e7af1be4,54583020,0,0x0,8
tick,0x7ff8e7af1be4,54598963,0,0x0,8
tick,0x7ff8e7af1be4,54614805,0,0x0,8
tick,0x7ff8e7af1be4,54630799,0,0x0,8
tick,0x7ff8e7af1be4,54646653,0,0x0,8
tick,0x7ff8e7af1be4,54662592,0,0x0,8
tick,0x7ff8e7af1be4,54678615,0,0x0,8
tick,0x7ff8e7af1be4,54694428,0,0x0,8
tick,0x7ff8e7af1be4,54710716,0,0x0,8
tick,0x7ff8e7af1be4,54726198,0,0x0,8
tick,0x7ff8e7af1be4,54742012,0,0x0,8
tick,0x7ff8e7af1be4,54758156,0,0x0,8
tick,0x7ff8e7af1be4,54774140,0,0x0,8
tick,0x7ff8e7af1be4,54789890,0,0x0,8
tick,0x7ff8e7af1be4,54805933,0,0x0,8
tick,0x7ff8e7af1be4,54821477,0,0x0,8
tick,0x7ff8e7af1be4,54837562,0,0x0,8
tick,0x7ff8e7af1be4,54852648,0,0x0,8
tick,0x7ff8e7af1be4,54868803,0,0x0,8
tick,0x7ff8e7af1be4,54884288,0,0x0,8
tick,0x7ff8e7af1be4,54902553,0,0x0,8
tick,0x7ff8e7af1be4,54906730,0,0x0,8
tick,0x7ff8e7af1be4,54908573,0,0x0,8
tick,0x7ff8e7af1be4,54909722,0,0x0,8
tick,0x7ff8e7af1be4,54911273,0,0x0,8
tick,0x7ff8e7af1be4,54927276,0,0x0,8
tick,0x7ff8e7af1be4,54943174,0,0x0,8
tick,0x7ff8e7af1be4,54958757,0,0x0,8
tick,0x7ff8e7af1be4,54974775,0,0x0,8
tick,0x7ff8e7af1be4,54990657,0,0x0,8
tick,0x7ff8e7af1be4,55006487,0,0x0,8
tick,0x7ff8e7af1be4,55022345,0,0x0,8
tick,0x7ff8e7af1be4,55038874,0,0x0,8
tick,0x7ff8e7af1be4,55054498,0,0x0,8
tick,0x7ff8e7af1be4,55070664,0,0x0,8
tick,0x7ff8e7af1be4,55086546,0,0x0,8
tick,0x7ff8e7af1be4,55102089,0,0x0,8
tick,0x7ff8e7af1be4,55117887,0,0x0,8
tick,0x7ff8e7af1be4,55133696,0,0x0,8
tick,0x7ff8e7af1be4,55149696,0,0x0,8
tick,0x7ff8e7af1be4,55165582,0,0x0,8
tick,0x7ff8e7af1be4,55181757,0,0x0,8
tick,0x7ff8e7af1be4,55197326,0,0x0,8
tick,0x7ff8e7af1be4,55213282,0,0x0,8
tick,0x7ff8e7af1be4,55229467,0,0x0,8
tick,0x7ff8e7af1be4,55245508,0,0x0,8
tick,0x7ff8e7af1be4,55261468,0,0x0,8
tick,0x7ff8e7af1be4,55277461,0,0x0,8
tick,0x7ff8e7af1be4,55293165,0,0x0,8
tick,0x7ff8e7af1be4,55309129,0,0x0,8
tick,0x7ff8e7af1be4,55324833,0,0x0,8
tick,0x7ff8e7af1be4,55340577,0,0x0,8
tick,0x7ff8e7af1be4,55356299,0,0x0,8
tick,0x7ff8e7af1be4,55372007,0,0x0,8
tick,0x7ff8e7af1be4,55388004,0,0x0,8
tick,0x7ff8e7af1be4,55404378,0,0x0,8
tick,0x7ff8e7af1be4,55409131,0,0x0,8
tick,0x7ff8e7af1be4,55410677,0,0x0,8
tick,0x7ff8e7af1be4,55426705,0,0x0,8
tick,0x7ff8e7af1be4,55442032,0,0x0,8
tick,0x7ff8e7af1be4,55457659,0,0x0,8
tick,0x7ff8e7af1be4,55473637,0,0x0,8
tick,0x7ff8e7af1be4,55489764,0,0x0,8
tick,0x7ff8e7af1be4,55505388,0,0x0,8
tick,0x7ff8e7af1be4,55521114,0,0x0,8
tick,0x7ff8e7af1be4,55536730,0,0x0,8
tick,0x7ff8e7af1be4,55553244,0,0x0,8
tick,0x7ff8e7af1be4,55569480,0,0x0,8
tick,0x7ff8e7af1be4,55584709,0,0x0,8
tick,0x7ff8e7af1be4,55600793,0,0x0,8
tick,0x7ff8e7af1be4,55618187,0,0x0,8
tick,0x7ff8e7af1be4,55632287,0,0x0,8
tick,0x7ff8e7af1be4,55648290,0,0x0,8
tick,0x7ff8e7af1be4,55664064,0,0x0,8
tick,0x7ff8e7af1be4,55679986,0,0x0,8
tick,0x7ff8e7af1be4,55696056,0,0x0,8
tick,0x7ff8e7af1be4,55712222,0,0x0,8
tick,0x7ff8e7af1be4,55727827,0,0x0,8
tick,0x7ff8e7af1be4,55743545,0,0x0,8
tick,0x7ff8e7af1be4,55759363,0,0x0,8
tick,0x7ff8e7af1be4,55775595,0,0x0,8
tick,0x7ff8e7af1be4,55791318,0,0x0,8
tick,0x7ff8e7af1be4,55807146,0,0x0,8
tick,0x7ff8e7af1be4,55823250,0,0x0,8
tick,0x7ff8e7af1be4,55839029,0,0x0,8
tick,0x7ff8e7af1be4,55854987,0,0x0,8
tick,0x7ff8e7af1be4,55871029,0,0x0,8
tick,0x7ff8e7af1be4,55886161,0,0x0,8
tick,0x7ff8e7af1be4,55901773,0,0x0,8
tick,0x7ff8e7af1be4,55917748,0,0x0,8
tick,0x7ff8e7af1be4,55922660,0,0x0,8
tick,0x7ff8e7af1be4,55924005,0,0x0,8
tick,0x7ff8e7af1be4,55925567,0,0x0,8
tick,0x7ff8e7af1be4,55926882,0,0x0,8
tick,0x7ff8e7af1be4,55928077,0,0x0,8
tick,0x7ff8e7af1be4,55944592,0,0x0,8
tick,0x7ff8e7af1be4,55960071,0,0x0,8
tick,0x7ff8e7af1be4,55968671,0,0x0,8
tick,0x7ff8e7af1be4,55986630,0,0x0,8
tick,0x7ff8e7af1be4,55993001,0,0x0,8
tick,0x7ff8e7af1be4,56009960,0,0x0,8
tick,0x7ff8e7af1be4,56024860,0,0x0,8
tick,0x7ff8e7af1be4,56040629,0,0x0,8
tick,0x7ff8e7af1be4,56056037,0,0x0,8
tick,0x7ff8e7af1be4,56071775,0,0x0,8
tick,0x7ff8e7af1be4,56087918,0,0x0,8
tick,0x7ff8e7af1be4,56103625,0,0x0,8
tick,0x7ff8e7af1be4,56120082,0,0x0,8
tick,0x7ff8e7af1be4,56134187,0,0x0,8
tick,0x7ff8e7af1be4,56149355,0,0x0,8
tick,0x7ff8e7af1be4,56164978,0,0x0,8
tick,0x7ff8e7af1be4,56180542,0,0x0,8
tick,0x7ff8e7af1be4,56196653,0,0x0,8
tick,0x7ff8e7af1be4,56212400,0,0x0,8
tick,0x7ff8e7af1be4,56229014,0,0x0,8
tick,0x7ff8e7af1be4,56244343,0,0x0,8
tick,0x7ff8e7af1be4,56259721,0,0x0,8
tick,0x7ff8e7af1be4,56275928,0,0x0,8
tick,0x7ff8e7af1be4,56291872,0,0x0,8
tick,0x7ff8e7af1be4,56307952,0,0x0,8
tick,0x7ff8e7af1be4,56323285,0,0x0,8
tick,0x7ff8e7af1be4,56338706,0,0x0,8
tick,0x7ff8e7af1be4,56354610,0,0x0,8
tick,0x7ff8e7af1be4,56370256,0,0x0,8
tick,0x7ff8e7af1be4,56387182,0,0x0,8
tick,0x7ff8e7af1be4,56402517,0,0x0,8
tick,0x7ff8e7af1be4,56418232,0,0x0,8
tick,0x7ff8e7af1be4,56425275,0,0x0,8
tick,0x7ff8e7af1be4,56426809,0,0x0,8
tick,0x7ff8e7af1be4,56428438,0,0x0,8
tick,0x7ff8e7af1be4,56444820,0,0x0,8
tick,0x7ff8e7af1be4,56460631,0,0x0,8
tick,0x7ff8e7af1be4,56476581,0,0x0,8
tick,0x7ff8e7af1be4,56493539,0,0x0,8
tick,0x7ff8e7af1be4,56508717,0,0x0,8
tick,0x7ff8e7af1be4,56524425,0,0x0,8
tick,0x7ff8e7af1be4,56539817,0,0x0,8
tick,0x7ff8e7af1be4,56555362,0,0x0,8
tick,0x7ff8e7af1be4,56571254,0,0x0,8
tick,0x7ff8e7af1be4,56586939,0,0x0,8
tick,0x7ff8e7af1be4,56603115,0,0x0,8
tick,0x7ff8e7af1be4,56619113,0,0x0,8
tick,0x7ff8e7af1be4,56634992,0,0x0,8
tick,0x7ff8e7af1be4,56650273,0,0x0,8
tick,0x7ff8e7af1be4,56666197,0,0x0,8
tick,0x7ff8e7af1be4,56682229,0,0x0,8
tick,0x7ff8e7af1be4,56698022,0,0x0,8
tick,0x7ff8e7af1be4,56714560,0,0x0,8
tick,0x7ff8e7af1be4,56729267,0,0x0,8
tick,0x7ff8e7af1be4,56744767,0,0x0,8
tick,0x7ff8e7af1be4,56760520,0,0x0,8
tick,0x7ff8e7af1be4,56776092,0,0x0,8
tick,0x7ff8e7af1be4,56791879,0,0x0,8
tick,0x7ff8e7af1be4,56807724,0,0x0,8
tick,0x7ff8e7af1be4,56823552,0,0x0,8
tick,0x7ff8e7af1be4,56839408,0,0x0,8
tick,0x7ff8e7af1be4,56855346,0,0x0,8
tick,0x7ff8e7af1be4,56870671,0,0x0,8
tick,0x7ff8e7af1be4,56886601,0,0x0,8
tick,0x7ff8e7af1be4,56902462,0,0x0,8
tick,0x7ff8e7af1be4,56918192,0,0x0,8
tick,0x7ff8e7af1be4,56933793,0,0x0,8
tick,0x7ff8e7af1be4,56935466,0,0x0,8
tick,0x7ff8e7af1be4,56939120,0,0x0,8
tick,0x7ff8e7af1be4,56941100,0,0x0,8
tick,0x7ff8e7af1be4,56942744,0,0x0,8
tick,0x7ff8e7af1be4,56959578,0,0x0,8
tick,0x7ff8e7af1be4,56975308,0,0x0,8
tick,0x7ff8e7af1be4,56991191,0,0x0,8
tick,0x7ff8e7af1be4,57007352,0,0x0,8
tick,0x7ff8e7af1be4,57023105,0,0x0,8
tick,0x7ff8e7af1be4,57038729,0,0x0,8
tick,0x7ff8e7af1be4,57054341,0,0x0,8
tick,0x7ff8e7af1be4,57070897,0,0x0,8
tick,0x7ff8e7af1be4,57086434,0,0x0,8
tick,0x7ff8e7af1be4,57103274,0,0x0,8
tick,0x7ff8e7af1be4,57118617,0,0x0,8
tick,0x7ff8e7af1be4,57134086,0,0x0,8
tick,0x7ff8e7af1be4,57150050,0,0x0,8
tick,0x7ff8e7af1be4,57165258,0,0x0,8
tick,0x7ff8e7af1be4,57180813,0,0x0,8
tick,0x7ff8e7af1be4,57196566,0,0x0,8
tick,0x7ff8e7af1be4,57212370,0,0x0,8
tick,0x7ff8e7af1be4,57227742,0,0x0,8
tick,0x7ff8e7af1be4,57243221,0,0x0,8
tick,0x7ff8e7af1be4,57259261,0,0x0,8
tick,0x7ff8e7af1be4,57274971,0,0x0,8
tick,0x7ff8e7af1be4,57289892,0,0x0,8
tick,0x7ff8e7af1be4,57306505,0,0x0,8
tick,0x7ff8e7af1be4,57321164,0,0x0,8
tick,0x7ff8e7af1be4,57336809,0,0x0,8
tick,0x7ff8e7af1be4,57353026,0,0x0,8
tick,0x7ff8e7af1be4,57368211,0,0x0,8
tick,0x7ff8e7af1be4,57384055,0,0x0,8
tick,0x7ff8e7af1be4,57399520,0,0x0,8
tick,0x7ff8e7af1be4,57415871,0,0x0,8
tick,0x7ff8e7af1be4,57431060,0,0x0,8
tick,0x7ff8e7af1be4,57447498,0,0x0,8
tick,0x7ff8e7af1be4,57453424,0,0x0,8
tick,0x7ff8e7af1be4,57455011,0,0x0,8
tick,0x7ff8e7af1be4,57456396,0,0x0,8
tick,0x7ff8e7af1be4,57457663,0,0x0,8
tick,0x7ff8e7af1be4,57474657,0,0x0,8
tick,0x7ff8e7af1be4,57490830,0,0x0,8
tick,0x7ff8e7af1be4,57506422,0,0x0,8
tick,0x7ff8e7af1be4,57522080,0,0x0,8
tick,0x7ff8e7af1be4,57537817,0,0x0,8
tick,0x7ff8e7af1be4,57553583,0,0x0,8
tick,0x7ff8e7af1be4,57569657,0,0x0,8
tick,0x7ff8e7af1be4,57585565,0,0x0,8
tick,0x7ff8e7af1be4,57600888,0,0x0,8
tick,0x7ff8e7af1be4,57616878,0,0x0,8
tick,0x7ff8e7af1be4,57632394,0,0x0,8
tick,0x7ff8e7af1be4,57647870,0,0x0,8
tick,0x7ff8e7af1be4,57663476,0,0x0,8
tick,0x7ff8e7af1be4,57679605,0,0x0,8
tick,0x7ff8e7af1be4,57695467,0,0x0,8
tick,0x7ff8e7af1be4,57711622,0,0x0,8
tick,0x7ff8e7af1be4,57726912,0,0x0,8
tick,0x7ff8e7af1be4,57742029,0,0x0,8
tick,0x7ff8e7af1be4,57757666,0,0x0,8
tick,0x7ff8e7af1be4,57773328,0,0x0,8
tick,0x7ff8e7af1be4,57788933,0,0x0,8
tick,0x7ff8e7af1be4,57804870,0,0x0,8
tick,0x7ff8e7af1be4,57820902,0,0x0,8
tick,0x7ff8e7af1be4,57836348,0,0x0,8
tick,0x7ff8e7af1be4,57852262,0,0x0,8
tick,0x7ff8e7af1be4,57867776,0,0x0,8
tick,0x7ff8e7af1be4,57883520,0,0x0,8
tick,0x7ff8e7af1be4,57899482,0,0x0,8
tick,0x7ff8e7af1be4,57915931,0,0x0,8
tick,0x7ff8e7af1be4,57931478,0,0x0,8
tick,0x7ff8e7af1be4,57947821,0,0x0,8
tick,0x7ff8e7af1be4,57963840,0,0x0,8
tick,0x7ff8e7af1be4,57969824,0,0x0,8
tick,0x7ff8e7af1be4,57971041,0,0x0,8
tick,0x7ff8e7af1be4,57973099,0,0x0,8
tick,0x7ff8e7af1be4,57974688,0,0x0,8
tick,0x7ff8e7af1be4,57975851,0,0x0,8
tick,0x7ff8e7af1be4,57992185,0,0x0,8
tick,0x7ff8e7af1be4,58007682,0,0x0,8
tick,0x7ff8e7af1be4,58023026,0,0x0,8
tick,0x7ff8e7af1be4,58038758,0,0x0,8
tick,0x7ff8e7af1be4,58054905,0,0x0,8
tick,0x7ff8e7af1be4,58070771,0,0x0,8
tick,0x7ff8e7af1be4,58086429,0,0x0,8
tick,0x7ff8e7af1be4,58102431,0,0x0,8
tick,0x7ff8e7af1be4,58119024,0,0x0,8
tick,0x7ff8e7af1be4,58134979,0,0x0,8
tick,0x7ff8e7af1be4,58150867,0,0x0,8
tick,0x7ff8e7af1be4,58165680,0,0x0,8
tick,0x7ff8e7af1be4,58181072,0,0x0,8
tick,0x7ff8e7af1be4,58197128,0,0x0,8
tick,0x7ff8e7af1be4,58212854,0,0x0,8
tick,0x7ff8e7af1be4,58228159,0,0x0,8
tick,0x7ff8e7af1be4,58243921,0,0x0,8
tick,0x7ff8e7af1be4,58259201,0,0x0,8
tick,0x7ff8e7af1be4,58275188,0,0x0,8
tick,0x7ff8e7af1be4,58290930,0,0x0,8
tick,0x7ff8e7af1be4,58306642,0,0x0,8
tick,0x7ff8e7af1be4,58322750,0,0x0,8
tick,0x7ff8e7af1be4,58338288,0,0x0,8
tick,0x7ff8e7af1be4,58354294,0,0x0,8
tick,0x7ff8e7af1be4,58360347,0,0x0,8
tick,0x7ff8e7af1be4,58364754,0,0x0,8
tick,0x7ff8e7af1be4,58380411,0,0x0,8
tick,0x7ff8e7af1be4,58396628,0,0x0,8
tick,0x7ff8e7af1be4,58412819,0,0x0,8
tick,0x7ff8e7af1be4,58428559,0,0x0,8
tick,0x7ff8e7af1be4,58444440,0,0x0,8
tick,0x7ff8e7af1be4,58459887,0,0x0,8
tick,0x7ff8e7af1be4,58475689,0,0x0,8
tick,0x7ff8e7af1be4,58483384,0,0x0,8
tick,0x7ff8e7af1be4,58485309,0,0x0,8
tick,0x7ff8e7af1be4,58487056,0,0x0,8
tick,0x7ff8e7af1be4,58502741,0,0x0,8
tick,0x7ff8e7af1be4,58518376,0,0x0,8
tick,0x7ff8e7af1be4,58534376,0,0x0,8
tick,0x7ff8e7af1be4,58550158,0,0x0,8
tick,0x7ff8e7af1be4,58566056,0,0x0,8
tick,0x7ff8e7af1be4,58582411,0,0x0,8
tick,0x7ff8e7af1be4,58598903,0,0x0,8
tick,0x7ff8e7af1be4,58614046,0,0x0,8
tick,0x7ff8e7af1be4,58630126,0,0x0,8
tick,0x7ff8e7af1be4,58646351,0,0x0,8
tick,0x7ff8e7af1be4,58661971,0,0x0,8
tick,0x7ff8e7af1be4,58677732,0,0x0,8
tick,0x7ff8e7af1be4,58693402,0,0x0,8
tick,0x7ff8e7af1be4,58710057,0,0x0,8
tick,0x7ff8e7af1be4,58725317,0,0x0,8
tick,0x7ff8e7af1be4,58741589,0,0x0,8
tick,0x7ff8e7af1be4,58756545,0,0x0,8
tick,0x7ff8e7af1be4,58772797,0,0x0,8
tick,0x7ff8e7af1be4,58787831,0,0x0,8
tick,0x7ff8e7af1be4,58804410,0,0x0,8
tick,0x7ff8e7af1be4,58819493,0,0x0,8
tick,0x7ff8e7af1be4,58835895,0,0x0,8
tick,0x7ff8e7af1be4,58851607,0,0x0,8
tick,0x7ff8e7af1be4,58866938,0,0x0,8
tick,0x7ff8e7af1be4,58882328,0,0x0,8
tick,0x7ff8e7af1be4,58898851,0,0x0,8
tick,0x7ff8e7af1be4,58914940,0,0x0,8
tick,0x7ff8e7af1be4,58931095,0,0x0,8
tick,0x7ff8e7af1be4,58947519,0,0x0,8
tick,0x7ff8e7af1be4,58963525,0,0x0,8
tick,0x7ff8e7af1be4,58979791,0,0x0,8
tick,0x7ff8e7af1be4,58987001,0,0x0,8
tick,0x7ff8e7af1be4,58989882,0,0x0,8
tick,0x7ff8e7af1be4,58991852,0,0x0,8
tick,0x7ff8e7af1be4,59007922,0,0x0,8
tick,0x7ff8e7af1be4,59023689,0,0x0,8
tick,0x7ff8e7af1be4,59040153,0,0x0,8
tick,0x7ff8e7af1be4,59055543,0,0x0,8
tick,0x7ff8e7af1be4,59071428,0,0x0,8
tick,0x7ff8e7af1be4,59087615,0,0x0,8
tick,0x7ff8e7af1be4,59103237,0,0x0,8
tick,0x7ff8e7af1be4,59119196,0,0x0,8
tick,0x7ff8e7af1be4,59135761,0,0x0,8
tick,0x7ff8e7af1be4,59151030,0,0x0,8
tick,0x7ff8e7af1be4,59167075,0,0x0,8
tick,0x7ff8e7af1be4,59183123,0,0x0,8
tick,0x7ff8e7af1be4,59199173,0,0x0,8
tick,0x7ff8e7af1be4,59215252,0,0x0,8
tick,0x7ff8e7af1be4,59230700,0,0x0,8
tick,0x7ff8e7af1be4,59246376,0,0x0,8
tick,0x7ff8e7af1be4,59262033,0,0x0,8
tick,0x7ff8e7af1be4,59277873,0,0x0,8
tick,0x7ff8e7af1be4,59293517,0,0x0,8
tick,0x7ff8e7af1be4,59309766,0,0x0,8
tick,0x7ff8e7af1be4,59325255,0,0x0,8
tick,0x7ff8e7af1be4,59341750,0,0x0,8
tick,0x7ff8e7af1be4,59357778,0,0x0,8
tick,0x7ff8e7af1be4,59373637,0,0x0,8
tick,0x7ff8e7af1be4,59389795,0,0x0,8
tick,0x7ff8e7af1be4,59405716,0,0x0,8
tick,0x7ff8e7af1be4,59421356,0,0x0,8
tick,0x7ff8e7af1be4,59437762,0,0x0,8
tick,0x7ff8e7af1be4,59453764,0,0x0,8
tick,0x7ff8e7af1be4,59469582,0,0x0,8
tick,0x7ff8e7af1be4,59486222,0,0x0,8
tick,0x7ff8e7af1be4,59491448,0,0x0,8
tick,0x7ff8e7af1be4,59494300,0,0x0,8
tick,0x7ff8e7af1be4,59495855,0,0x0,8
tick,0x7ff8e7af1be4,59498599,0,0x0,8
tick,0x7ff8e7af1be4,59514488,0,0x0,8
tick,0x7ff8e7af1be4,59530403,0,0x0,8
tick,0x7ff8e7af1be4,59546309,0,0x0,8
tick,0x7ff8e7af1be4,59562075,0,0x0,8
tick,0x7ff8e7af1be4,59577853,0,0x0,8
tick,0x7ff8e7af1be4,59593718,0,0x0,8
tick,0x7ff8e7af1be4,59610418,0,0x0,8
tick,0x7ff8e7af1be4,59625695,0,0x0,8
tick,0x7ff8e7af1be4,59641411,0,0x0,8
tick,0x7ff8e7af1be4,59657336,0,0x0,8
tick,0x7ff8e7af1be4,59673165,0,0x0,8
tick,0x7ff8e7af1be4,59688553,0,0x0,8
tick,0x7ff8e7af1be4,59704921,0,0x0,8
tick,0x7ff8e7af1be4,59720584,0,0x0,8
tick,0x7ff8e7af1be4,59736611,0,0x0,8
tick,0x7ff8e7af1be4,59752611,0,0x0,8
tick,0x7ff8e7af1be4,59768459,0,0x0,8
tick,0x7ff8e7af1be4,59783834,0,0x0,8
tick,0x7ff8e7af1be4,59799819,0,0x0,8
tick,0x7ff8e7af1be4,59815909,0,0x0,8
tick,0x7ff8e7af1be4,59831731,0,0x0,8
tick,0x7ff8e7af1be4,59847709,0,0x0,8
tick,0x7ff8e7af1be4,59863630,0,0x0,8
tick,0x7ff8e7af1be4,59879536,0,0x0,8
tick,0x7ff8e7af1be4,59895257,0,0x0,8
tick,0x7ff8e7af1be4,59911568,0,0x0,8
tick,0x7ff8e7af1be4,59927356,0,0x0,8
tick,0x7ff8e7af1be4,59943243,0,0x0,8
tick,0x7ff8e7af1be4,59958936,0,0x0,8
tick,0x7ff8e7af1be4,59974731,0,0x0,8
tick,0x7ff8e7af1be4,59990353,0,0x0,8
tick,0x7ff8e7af1be4,59993288,0,0x0,8
tick,0x7ff8e7af1be4,59994804,0,0x0,8
tick,0x7ff8e7af1be4,59996064,0,0x0,8
tick,0x7ff8e7af1be4,60012536,0,0x0,8
tick,0x7ff8e7af1be4,60028119,0,0x0,8
tick,0x7ff8e7af1be4,60043893,0,0x0,8
tick,0x7ff8e7af1be4,60059705,0,0x0,8
tick,0x7ff8e7af1be4,60075305,0,0x0,8
tick,0x7ff8e7af1be4,60091155,0,0x0,8
tick,0x7ff8e7af1be4,60107286,0,0x0,8
tick,0x7ff8e7af1be4,60123242,0,0x0,8
tick,0x7ff8e7af1be4,60138990,0,0x0,8
tick,0x7ff8e7af1be4,60154680,0,0x0,8
tick,0x7ff8e7af1be4,60170743,0,0x0,8
tick,0x7ff8e7af1be4,60186829,0,0x0,8
tick,0x7ff8e7af1be4,60203024,0,0x0,8
tick,0x7ff8e7af1be4,60218850,0,0x0,8
tick,0x7ff8e7af1be4,60234423,0,0x0,8
tick,0x7ff8e7af1be4,60250067,0,0x0,8
tick,0x7ff8e7af1be4,60265946,0,0x0,8
tick,0x7ff8e7af1be4,60281763,0,0x0,8
tick,0x7ff8e7af1be4,60297608,0,0x0,8
tick,0x7ff8e7af1be4,60313630,0,0x0,8
tick,0x7ff8e7af1be4,60329351,0,0x0,8
tick,0x7ff8e7af1be4,60345108,0,0x0,8
tick,0x7ff8e7af1be4,60360984,0,0x0,8
tick,0x7ff8e7af1be4,60377158,0,0x0,8
tick,0x7ff8e7af1be4,60392471,0,0x0,8
tick,0x7ff8e7af1be4,60408664,0,0x0,8
tick,0x7ff8e7af1be4,60424752,0,0x0,8
tick,0x7ff8e7af1be4,60440409,0,0x0,8
tick,0x7ff8e7af1be4,60456481,0,0x0,8
tick,0x7ff8e7af1be4,60472570,0,0x0,8
tick,0x7ff8e7af1be4,60488233,0,0x0,8
tick,0x7ff8e7af1be4,60504054,0,0x0,8
tick,0x7ff8e7af1be4,60507040,0,0x0,8
tick,0x7ff8e7af1be4,60508575,0,0x0,8
tick,0x7ff8e7af1be4,60524987,0,0x0,8
tick,0x7ff8e7af1be4,60541280,0,0x0,8
tick,0x7ff8e7af1be4,60556949,0,0x0,8
tick,0x7ff8e7af1be4,60572629,0,0x0,8
tick,0x7ff8e7af1be4,60588823,0,0x0,8
tick,0x7ff8e7af1be4,60604856,0,0x0,8
tick,0x7ff8e7af1be4,60620765,0,0x0,8
tick,0x7ff8e7af1be4,60636329,0,0x0,8
tick,0x7ff8e7af1be4,60652205,0,0x0,8
tick,0x7ff8e7af1be4,60668431,0,0x0,8
tick,0x7ff8e7af1be4,60683390,0,0x0,8
tick,0x7ff8e7af1be4,60698815,0,0x0,8
tick,0x7ff8e7af1be4,60714592,0,0x0,8
tick,0x7ff8e7af1be4,60730816,0,0x0,8
tick,0x7ff8e7af1be4,60746801,0,0x0,8
tick,0x7ff8e7af1be4,60762555,0,0x0,8
tick,0x7ff8e7af1be4,60778464,0,0x0,8
tick,0x7ff8e7af1be4,60794750,0,0x0,8
tick,0x7ff8e7af1be4,60810627,0,0x0,8
tick,0x7ff8e7af1be4,60826178,0,0x0,8
tick,0x7ff8e7af1be4,60842049,0,0x0,8
tick,0x7ff8e7af1be4,60858022,0,0x0,8
tick,0x7ff8e7af1be4,60874047,0,0x0,8
tick,0x7ff8e7af1be4,60890085,0,0x0,8
tick,0x7ff8e7af1be4,60905864,0,0x0,8
tick,0x7ff8e7af1be4,60921688,0,0x0,8
tick,0x7ff8e7af1be4,60937410,0,0x0,8
tick,0x7ff8e7af1be4,60952918,0,0x0,8
tick,0x7ff8e7af1be4,60968672,0,0x0,8
tick,0x7ff8e7af1be4,60984368,0,0x0,8
tick,0x7ff8e7af1be4,61000302,0,0x0,8
tick,0x7ff8e7af1be4,61016496,0,0x0,8
tick,0x7ff8e7af1be4,61019595,0,0x0,8
tick,0x7ff8e7af1be4,61020763,0,0x0,8
tick,0x7ff8e7af1be4,61036650,0,0x0,8
tick,0x7ff8e7af1be4,61052599,0,0x0,8
tick,0x7ff8e7af1be4,61068569,0,0x0,8
tick,0x7ff8e7af1be4,61084433,0,0x0,8
tick,0x7ff8e7af1be4,61100371,0,0x0,8
tick,0x7ff8e7af1be4,61116111,0,0x0,8
tick,0x7ff8e7af1be4,61131861,0,0x0,8
tick,0x7ff8e7af1be4,61147649,0,0x0,8
tick,0x7ff8e7af1be4,61163527,0,0x0,8
tick,0x7ff8e7af1be4,61179213,0,0x0,8
tick,0x7ff8e7af1be4,61194894,0,0x0,8
tick,0x7ff8e7af1be4,61211026,0,0x0,8
tick,0x7ff8e7af1be4,61227137,0,0x0,8
tick,0x7ff8e7af1be4,61242996,0,0x0,8
tick,0x7ff8e7af1be4,61259051,0,0x0,8
tick,0x7ff8e7af1be4,61275000,0,0x0,8
tick,0x7ff8e7af1be4,61290757,0,0x0,8
tick,0x7ff8e7af1be4,61306630,0,0x0,8
tick,0x7ff8e7af1be4,61322297,0,0x0,8
tick,0x7ff8e7af1be4,61338530,0,0x0,8
tick,0x7ff8e7af1be4,61354047,0,0x0,8
tick,0x7ff8e7af1be4,61369830,0,0x0,8
tick,0x7ff8e7af1be4,61385458,0,0x0,8
tick,0x7ff8e7af1be4,61401230,0,0x0,8
tick,0x7ff8e7af1be4,61416707,0,0x0,8
tick,0x7ff8e7af1be4,61432397,0,0x0,8
tick,0x7ff8e7af1be4,61448378,0,0x0,8
tick,0x7ff8e7af1be4,61464538,0,0x0,8
tick,0x7ff8e7af1be4,61480189,0,0x0,8
tick,0x7ff8e7af1be4,61495814,0,0x0,8
tick,0x7ff8e7af1be4,61511275,0,0x0,8
tick,0x7ff8e7af1be4,61527031,0,0x0,8
tick,0x7ff8e7af1be4,61542722,0,0x0,8
tick,0x7ff8e7af1be4,61547682,0,0x0,8
tick,0x7ff8e7af1be4,61549097,0,0x0,8
tick,0x7ff8e7af1be4,61550337,0,0x0,8
tick,0x7ff8e7af1be4,61566049,0,0x0,8
tick,0x7ff8e7af1be4,61581902,0,0x0,8
tick,0x7ff8e7af1be4,61597613,0,0x0,8
tick,0x7ff8e7af1be4,61613300,0,0x0,8
tick,0x7ff8e7af1be4,61629315,0,0x0,8
tick,0x7ff8e7af1be4,61645232,0,0x0,8
tick,0x7ff8e7af1be4,61661401,0,0x0,8
tick,0x7ff8e7af1be4,61677142,0,0x0,8
tick,0x7ff8e7af1be4,61693093,0,0x0,8
tick,0x7ff8e7af1be4,61708959,0,0x0,8
tick,0x7ff8e7af1be4,61724566,0,0x0,8
tick,0x7ff8e7af1be4,61740130,0,0x0,8
tick,0x7ff8e7af1be4,61756158,0,0x0,8
tick,0x7ff8e7af1be4,61772017,0,0x0,8
tick,0x7ff8e7af1be4,61787570,0,0x0,8
tick,0x7ff8e7af1be4,61803331,0,0x0,8
tick,0x7ff8e7af1be4,61818842,0,0x0,8
tick,0x7ff8e7af1be4,61834651,0,0x0,8
tick,0x7ff8e7af1be4,61850608,0,0x0,8
tick,0x7ff8e7af1be4,61866205,0,0x0,8
tick,0x7ff8e7af1be4,61881873,0,0x0,8
tick,0x7ff8e7af1be4,61897530,0,0x0,8
tick,0x7ff8e7af1be4,61913598,0,0x0,8
tick,0x7ff8e7af1be4,61929260,0,0x0,8
tick,0x7ff8e7af1be4,61945364,0,0x0,8
tick,0x7ff8e7af1be4,61961275,0,0x0,8
tick,0x7ff8e7af1be4,61976994,0,0x0,8
tick,0x7ff8e7af1be4,61992729,0,0x0,8
tick,0x7ff8e7af1be4,62008436,0,0x0,8
tick,0x7ff8e7af1be4,62024235,0,0x0,8
tick,0x7ff8e7af1be4,62039945,0,0x0,8
tick,0x7ff8e7af1be4,62056119,0,0x0,8
tick,0x7ff8e7af1be4,62060719,0,0x0,8
tick,0x7ff8e7af1be4,62077334,0,0x0,8
tick,0x7ff8e7af1be4,62093011,0,0x0,8
tick,0x7ff8e7af1be4,62108926,0,0x0,8
tick,0x7ff8e7af1be4,62124524,0,0x0,8
tick,0x7ff8e7af1be4,62140238,0,0x0,8
tick,0x7ff8e7af1be4,62155955,0,0x0,8
tick,0x7ff8e7af1be4,62171543,0,0x0,8
tick,0x7ff8e7af1be4,62187501,0,0x0,8
tick,0x7ff8e7af1be4,62203585,0,0x0,8
tick,0x7ff8e7af1be4,62219419,0,0x0,8
tick,0x7ff8e7af1be4,62235400,0,0x0,8
tick,0x7ff8e7af1be4,62251098,0,0x0,8
tick,0x7ff8e7af1be4,62266626,0,0x0,8
tick,0x7ff8e7af1be4,62282410,0,0x0,8
tick,0x7ff8e7af1be4,62297871,0,0x0,8
tick,0x7ff8e7af1be4,62314008,0,0x0,8
tick,0x7ff8e7af1be4,62329848,0,0x0,8
tick,0x7ff8e7af1be4,62345764,0,0x0,8
tick,0x7ff8e7af1be4,62361386,0,0x0,8
tick,0x7ff8e7af1be4,62377430,0,0x0,8
tick,0x7ff8e7af1be4,62393571,0,0x0,8
tick,0x7ff8e7af1be4,62409677,0,0x0,8
tick,0x7ff8e7af1be4,62425317,0,0x0,8
tick,0x7ff8e7af1be4,62440891,0,0x0,8
tick,0x7ff8e7af1be4,62456532,0,0x0,8
tick,0x7ff8e7af1be4,62472193,0,0x0,8
tick,0x7ff8e7af1be4,62487825,0,0x0,8
tick,0x7ff8e7af1be4,62503909,0,0x0,8
tick,0x7ff8e7af1be4,62519730,0,0x0,8
tick,0x7ff8e7af1be4,62535778,0,0x0,8
tick,0x7ff8e7af1be4,62551808,0,0x0,8
tick,0x7ff8e7af1be4,62567496,0,0x0,8
tick,0x7ff8e7af1be4,62583315,0,0x0,8
tick,0x7ff8e7af1be4,62586323,0,0x0,8
tick,0x7ff8e7af1be4,62587900,0,0x0,8
tick,0x7ff8e7af1be4,62604157,0,0x0,8
tick,0x7ff8e7af1be4,62619846,0,0x0,8
tick,0x7ff8e7af1be4,62635922,0,0x0,8
tick,0x7ff8e7af1be4,62651373,0,0x0,8
tick,0x7ff8e7af1be4,62666958,0,0x0,8
tick,0x7ff8e7af1be4,62682630,0,0x0,8
tick,0x7ff8e7af1be4,62698947,0,0x0,8
tick,0x7ff8e7af1be4,62714817,0,0x0,8
tick,0x7ff8e7af1be4,62730898,0,0x0,8
tick,0x7ff8e7af1be4,62746444,0,0x0,8
tick,0x7ff8e7af1be4,62762564,0,0x0,8
tick,0x7ff8e7af1be4,62778283,0,0x0,8
tick,0x7ff8e7af1be4,62793957,0,0x0,8
tick,0x7ff8e7af1be4,62810063,0,0x0,8
tick,0x7ff8e7af1be4,62825892,0,0x0,8
tick,0x7ff8e7af1be4,62841487,0,0x0,8
tick,0x7ff8e7af1be4,62857218,0,0x0,8
tick,0x7ff8e7af1be4,62873018,0,0x0,8
tick,0x7ff8e7af1be4,62888703,0,0x0,8
tick,0x7ff8e7af1be4,62905188,0,0x0,8
tick,0x7ff8e7af1be4,62921003,0,0x0,8
tick,0x7ff8e7af1be4,62937069,0,0x0,8
tick,0x7ff8e7af1be4,62952994,0,0x0,8
tick,0x7ff8e7af1be4,62968730,0,0x0,8
tick,0x7ff8e7af1be4,62984482,0,0x0,8
tick,0x7ff8e7af1be4,63000632,0,0x0,8
tick,0x7ff8e7af1be4,63016575,0,0x0,8
tick,0x7ff8e7af1be4,63032253,0,0x0,8
tick,0x7ff8e7af1be4,63047934,0,0x0,8
tick,0x7ff8e7af1be4,63063792,0,0x0,8
tick,0x7ff8e7af1be4,63079769,0,0x0,8
tick,0x7ff8e7af1be4,63095710,0,0x0,8
tick,0x7ff8e7af1be4,63098565,0,0x0,8
tick,0x7ff8e7af1be4,63100438,0,0x0,8
tick,0x7ff8e7af1be4,63116436,0,0x0,8
tick,0x7ff8e7af1be4,63132107,0,0x0,8
tick,0x7ff8e7af1be4,63147823,0,0x0,8
tick,0x7ff8e7af1be4,63163575,0,0x0,8
tick,0x7ff8e7af1be4,63179091,0,0x0,8
tick,0x7ff8e7af1be4,63195029,0,0x0,8
tick,0x7ff8e7af1be4,63211734,0,0x0,8
tick,0x7ff8e7af1be4,63227447,0,0x0,8
tick,0x7ff8e7af1be4,63243902,0,0x0,8
tick,0x7ff8e7af1be4,63259948,0,0x0,8
tick,0x7ff8e7af1be4,63275951,0,0x0,8
tick,0x7ff8e7af1be4,63291613,0,0x0,8
tick,0x7ff8e7af1be4,63307726,0,0x0,8
tick,0x7ff8e7af1be4,63323772,0,0x0,8
tick,0x7ff8e7af1be4,63339783,0,0x0,8
tick,0x7ff8e7af1be4,63355222,0,0x0,8
tick,0x7ff8e7af1be4,63371467,0,0x0,8
tick,0x7ff8e7af1be4,63386999,0,0x0,8
tick,0x7ff8e7af1be4,63402678,0,0x0,8
tick,0x7ff8e7af1be4,63419090,0,0x0,8
tick,0x7ff8e7af1be4,63434355,0,0x0,8
tick,0x7ff8e7af1be4,63450103,0,0x0,8
tick,0x7ff8e7af1be4,63465586,0,0x0,8
tick,0x7ff8e7af1be4,63481189,0,0x0,8
tick,0x7ff8e7af1be4,63496944,0,0x0,8
tick,0x7ff8e7af1be4,63513249,0,0x0,8
tick,0x7ff8e7af1be4,63528865,0,0x0,8
tick,0x7ff8e7af1be4,63544754,0,0x0,8
tick,0x7ff8e7af1be4,63561172,0,0x0,8
tick,0x7ff8e7af1be4,63576825,0,0x0,8
tick,0x7ff8e7af1be4,63592412,0,0x0,8
tick,0x7ff8e7af1be4,63608114,0,0x0,8
tick,0x7ff8e7af1be4,63609744,0,0x0,8
tick,0x7ff8e7af1be4,63615500,0,0x0,8
tick,0x7ff8e7af1be4,63617101,0,0x0,8
tick,0x7ff8e7af1be4,63633133,0,0x0,8
tick,0x7ff8e7af1be4,63648627,0,0x0,8
tick,0x7ff8e7af1be4,63664013,0,0x0,8
tick,0x7ff8e7af1be4,63679695,0,0x0,8
tick,0x7ff8e7af1be4,63695495,0,0x0,8
tick,0x7ff8e7af1be4,63711485,0,0x0,8
tick,0x7ff8e7af1be4,63727518,0,0x0,8
tick,0x7ff8e7af1be4,63742976,0,0x0,8
tick,0x7ff8e7af1be4,63758745,0,0x0,8
tick,0x7ff8e7af1be4,63774239,0,0x0,8
tick,0x7ff8e7af1be4,63789842,0,0x0,8
tick,0x7ff8e7af1be4,63806227,0,0x0,8
tick,0x7ff8e7af1be4,63822234,0,0x0,8
tick,0x7ff8e7af1be4,63838077,0,0x0,8
tick,0x7ff8e7af1be4,63854028,0,0x0,8
tick,0x7ff8e7af1be4,63869596,0,0x0,8
tick,0x7ff8e7af1be4,63885779,0,0x0,8
tick,0x7ff8e7af1be4,63901632,0,0x0,8
tick,0x7ff8e7af1be4,63917663,0,0x0,8
tick,0x7ff8e7af1be4,63933583,0,0x0,8
tick,0x7ff8e7af1be4,63949513,0,0x0,8
tick,0x7ff8e7af1be4,63966224,0,0x0,8
tick,0x7ff8e7af1be4,63981234,0,0x0,8
tick,0x7ff8e7af1be4,63997041,0,0x0,8
tick,0x7ff8e7af1be4,64012989,0,0x0,8
tick,0x7ff8e7af1be4,64028473,0,0x0,8
tick,0x7ff8e7af1be4,64044678,0,0x0,8
tick,0x7ff8e7af1be4,64060671,0,0x0,8
tick,0x7ff8e7af1be4,64068864,0,0x0,8
tick,0x7ff8e7af1be4,64085146,0,0x0,8
tick,0x7ff8e7af1be4,64101274,0,0x0,8
tick,0x7ff8e7af1be4,64116924,0,0x0,8
tick,0x7ff8e7af1be4,64133277,0,0x0,8
tick,0x7ff8e7af1be4,64137498,0,0x0,8
tick,0x7ff8e7af1be4,64138651,0,0x0,8
tick,0x7ff8e7af1be4,64154708,0,0x0,8
tick,0x7ff8e7af1be4,64170429,0,0x0,8
tick,0x7ff8e7af1be4,64185935,0,0x0,8
tick,0x7ff8e7af1be4,64201732,0,0x0,8
tick,0x7ff8e7af1be4,64217762,0,0x0,8
tick,0x7ff8e7af1be4,64233897,0,0x0,8
tick,0x7ff8e7af1be4,64249517,0,0x0,8
tick,0x7ff8e7af1be4,64265228,0,0x0,8
tick,0x7ff8e7af1be4,64281615,0,0x0,8
tick,0x7ff8e7af1be4,64297435,0,0x0,8
tick,0x7ff8e7af1be4,64313937,0,0x0,8
tick,0x7ff8e7af1be4,64329254,0,0x0,8
tick,0x7ff8e7af1be4,64344952,0,0x0,8
tick,0x7ff8e7af1be4,64361059,0,0x0,8
tick,0x7ff8e7af1be4,64377256,0,0x0,8
tick,0x7ff8e7af1be4,64393031,0,0x0,8
tick,0x7ff8e7af1be4,64409185,0,0x0,8
tick,0x7ff8e7af1be4,64425432,0,0x0,8
tick,0x7ff8e7af1be4,64440839,0,0x0,8
tick,0x7ff8e7af1be4,64457265,0,0x0,8
tick,0x7ff8e7af1be4,64472932,0,0x0,8
tick,0x7ff8e7af1be4,64489459,0,0x0,8
tick,0x7ff8e7af1be4,64505540,0,0x0,8
tick,0x7ff8e7af1be4,64522104,0,0x0,8
tick,0x7ff8e7af1be4,64537430,0,0x0,8
tick,0x7ff8e7af1be4,64553206,0,0x0,8
tick,0x7ff8e7af1be4,64569038,0,0x0,8
tick,0x7ff8e7af1be4,64584936,0,0x0,8
tick,0x7ff8e7af1be4,64600256,0,0x0,8
tick,0x7ff8e7af1be4,64616381,0,0x0,8
tick,0x7ff8e7af1be4,64631977,0,0x0,8
tick,0x7ff8e7af1be4,64647688,0,0x0,8
tick,0x7ff8e7af1be4,64650823,0,0x0,8
tick,0x7ff8e7af1be4,64652340,0,0x0,8
tick,0x7ff8e7af1be4,64669401,0,0x0,8
tick,0x7ff8e7af1be4,64685384,0,0x0,8
tick,0x7ff8e7af1be4,64701087,0,0x0,8
tick,0x7ff8e7af1be4,64717276,0,0x0,8
tick,0x7ff8e7af1be4,64732872,0,0x0,8
tick,0x7ff8e7af1be4,64749193,0,0x0,8
tick,0x7ff8e7af1be4,64765417,0,0x0,8
tick,0x7ff8e7af1be4,64781200,0,0x0,8
tick,0x7ff8e7af1be4,64797169,0,0x0,8
tick,0x7ff8e7af1be4,64813393,0,0x0,8
tick,0x7ff8e7af1be4,64829638,0,0x0,8
tick,0x7ff8e7af1be4,64845260,0,0x0,8
tick,0x7ff8e7af1be4,64861329,0,0x0,8
tick,0x7ff8e7af1be4,64876764,0,0x0,8
tick,0x7ff8e7af1be4,64892838,0,0x0,8
tick,0x7ff8e7af1be4,64908399,0,0x0,8
tick,0x7ff8e7af1be4,64924527,0,0x0,8
tick,0x7ff8e7af1be4,64940389,0,0x0,8
tick,0x7ff8e7af1be4,64956535,0,0x0,8
tick,0x7ff8e7af1be4,64972647,0,0x0,8
tick,0x7ff8e7af1be4,64988571,0,0x0,8
tick,0x7ff8e7af1be4,65004817,0,0x0,8
tick,0x7ff8e7af1be4,65020543,0,0x0,8
tick,0x7ff8e7af1be4,65036904,0,0x0,8
tick,0x7ff8e7af1be4,65052650,0,0x0,8
tick,0x7ff8e7af1be4,65067935,0,0x0,8
tick,0x7ff8e7af1be4,65083427,0,0x0,8
tick,0x7ff8e7af1be4,65099188,0,0x0,8
tick,0x7ff8e7af1be4,65114964,0,0x0,8
tick,0x7ff8e7af1be4,65130788,0,0x0,8
tick,0x7ff8e7af1be4,65146503,0,0x0,8
tick,0x7ff8e7af1be4,65162347,0,0x0,8
tick,0x7ff8e7af1be4,65164333,0,0x0,8
tick,0x7ff8e7af1be4,65166078,0,0x0,8
tick,0x7ff8e7af1be4,65167217,0,0x0,8
tick,0x7ff8e7af1be4,65183377,0,0x0,8
tick,0x7ff8e7af1be4,65198878,0,0x0,8
tick,0x7ff8e7af1be4,65214822,0,0x0,8
tick,0x7ff8e7af1be4,65230436,0,0x0,8
tick,0x7ff8e7af1be4,65246001,0,0x0,8
tick,0x7ff8e7af1be4,65261875,0,0x0,8
tick,0x7ff8e7af1be4,65278099,0,0x0,8
tick,0x7ff8e7af1be4,65294090,0,0x0,8
tick,0x7ff8e7af1be4,65310075,0,0x0,8
tick,0x7ff8e7af1be4,65326145,0,0x0,8
tick,0x7ff8e7af1be4,65342408,0,0x0,8
tick,0x7ff8e7af1be4,65358594,0,0x0,8
tick,0x7ff8e7af1be4,65374212,0,0x0,8
tick,0x7ff8e7af1be4,65390313,0,0x0,8
tick,0x7ff8e7af1be4,65406236,0,0x0,8
tick,0x7ff8e7af1be4,65422066,0,0x0,8
tick,0x7ff8e7af1be4,65438392,0,0x0,8
tick,0x7ff8e7af1be4,65454309,0,0x0,8
tick,0x7ff8e7af1be4,65469805,0,0x0,8
tick,0x7ff8e7af1be4,65485702,0,0x0,8
tick,0x7ff8e7af1be4,65501947,0,0x0,8
tick,0x7ff8e7af1be4,65518590,0,0x0,8
tick,0x7ff8e7af1be4,65534188,0,0x0,8
tick,0x7ff8e7af1be4,65550137,0,0x0,8
tick,0x7ff8e7af1be4,65566238,0,0x0,8
tick,0x7ff8e7af1be4,65582322,0,0x0,8
tick,0x7ff8e7af1be4,65598398,0,0x0,8
tick,0x7ff8e7af1be4,65614218,0,0x0,8
tick,0x7ff8e7af1be4,65629737,0,0x0,8
tick,0x7ff8e7af1be4,65646326,0,0x0,8
tick,0x7ff8e7af1be4,65662192,0,0x0,8
tick,0x7ff8e7af1be4,65677583,0,0x0,8
tick,0x7ff8e7af1be4,65693569,0,0x0,8
tick,0x7ff8e7af1be4,65708995,0,0x0,8
tick,0x7ff8e7af1be4,65724761,0,0x0,8
tick,0x7ff8e7af1be4,65740666,0,0x0,8
tick,0x7ff8e7af1be4,65756406,0,0x0,8
tick,0x7ff8e7af1be4,65772524,0,0x0,8
tick,0x7ff8e7af1be4,65788162,0,0x0,8
tick,0x7ff8e7af1be4,65803794,0,0x0,8
tick,0x7ff8e7af1be4,65819485,0,0x0,8
tick,0x7ff8e7af1be4,65835130,0,0x0,8
tick,0x7ff8e7af1be4,65850859,0,0x0,8
tick,0x7ff8e7af1be4,65866708,0,0x0,8
tick,0x7ff8e7af1be4,65882386,0,0x0,8
tick,0x7ff8e7af1be4,65898045,0,0x0,8
tick,0x7ff8e7af1be4,65913919,0,0x0,8
tick,0x7ff8e7af1be4,65929635,0,0x0,8
tick,0x7ff8e7af1be4,65945980,0,0x0,8
tick,0x7ff8e7af1be4,65961996,0,0x0,8
tick,0x7ff8e7af1be4,65977451,0,0x0,8
tick,0x7ff8e7af1be4,65993201,0,0x0,8
tick,0x7ff8e7af1be4,66009007,0,0x0,8
tick,0x7ff8e7af1be4,66024883,0,0x0,8
tick,0x7ff8e7af1be4,66040998,0,0x0,8
tick,0x7ff8e7af1be4,66056817,0,0x0,8
tick,0x7ff8e7af1be4,66072680,0,0x0,8
tick,0x7ff8e7af1be4,66083122,0,0x0,8
tick,0x7ff8e7af1be4,66108457,0,0x0,8
tick,0x7ff8e7af1be4,66124902,0,0x0,8
tick,0x7ff8e7af1be4,66139911,0,0x0,8
tick,0x7ff8e7af1be4,66155476,0,0x0,8
tick,0x7ff8e7af1be4,66171860,0,0x0,8
tick,0x7ff8e7af1be4,66187922,0,0x0,8
tick,0x7ff8e7af1be4,66194242,0,0x0,8
tick,0x7ff8e7af1be4,66196108,0,0x0,8
tick,0x7ff8e7af1be4,66197787,0,0x0,8
tick,0x7ff8e7af1be4,66200927,0,0x0,8
tick,0x7ff8e7af1be4,66210278,0,0x0,8
tick,0x7ff8e7af1be4,66216750,0,0x0,8
tick,0x7ff8e7af1be4,66233226,0,0x0,8
tick,0x7ff8e7af1be4,66249288,0,0x0,8
tick,0x7ff8e7af1be4,66265319,0,0x0,8
tick,0x7ff8e7af1be4,66280924,0,0x0,8
tick,0x7ff8e7af1be4,66297534,0,0x0,8
tick,0x7ff8e7af1be4,66312594,0,0x0,8
tick,0x7ff8e7af1be4,66328933,0,0x0,8
tick,0x7ff8e7af1be4,66344410,0,0x0,8
tick,0x7ff8e7af1be4,66360003,0,0x0,8
tick,0x7ff8e7af1be4,66375649,0,0x0,8
tick,0x7ff8e7af1be4,66391530,0,0x0,8
tick,0x7ff8e7af1be4,66407418,0,0x0,8
tick,0x7ff8e7af1be4,66423473,0,0x0,8
tick,0x7ff8e7af1be4,66439696,0,0x0,8
tick,0x7ff8e7af1be4,66455966,0,0x0,8
tick,0x7ff8e7af1be4,66471462,0,0x0,8
tick,0x7ff8e7af1be4,66487202,0,0x0,8
tick,0x7ff8e7af1be4,66502688,0,0x0,8
tick,0x7ff8e7af1be4,66518903,0,0x0,8
tick,0x7ff8e7af1be4,66534532,0,0x0,8
tick,0x7ff8e7af1be4,66550356,0,0x0,8
tick,0x7ff8e7af1be4,66566365,0,0x0,8
tick,0x7ff8e7af1be4,66582294,0,0x0,8
tick,0x7ff8e7af1be4,66598777,0,0x0,8
tick,0x7ff8e7af1be4,66614545,0,0x0,8
tick,0x7ff8e7af1be4,66630303,0,0x0,8
tick,0x7ff8e7af1be4,66645925,0,0x0,8
tick,0x7ff8e7af1be4,66662589,0,0x0,8
tick,0x7ff8e7af1be4,66678112,0,0x0,8
tick,0x7ff8e7af1be4,66693972,0,0x0,8
tick,0x7ff8e7af1be4,66699953,0,0x0,8
tick,0x7ff8e7af1be4,66702740,0,0x0,8
tick,0x7ff8e7af1be4,66705392,0,0x0,8
tick,0x7ff8e7af1be4,66711538,0,0x0,8
tick,0x7ff8e7af1be4,66722262,0,0x0,8
tick,0x7ff8e7af1be4,66737978,0,0x0,8
tick,0x7ff8e7af1be4,66753976,0,0x0,8
tick,0x7ff8e7af1be4,66769796,0,0x0,8
tick,0x7ff8e7af1be4,66786028,0,0x0,8
tick,0x7ff8e7af1be4,66802245,0,0x0,8
tick,0x7ff8e7af1be4,66817937,0,0x0,8
tick,0x7ff8e7af1be4,66833822,0,0x0,8
tick,0x7ff8e7af1be4,66849975,0,0x0,8
tick,0x7ff8e7af1be4,66865864,0,0x0,8
tick,0x7ff8e7af1be4,66882191,0,0x0,8
tick,0x7ff8e7af1be4,66897682,0,0x0,8
tick,0x7ff8e7af1be4,66913696,0,0x0,8
tick,0x7ff8e7af1be4,66929605,0,0x0,8
tick,0x7ff8e7af1be4,66945972,0,0x0,8
tick,0x7ff8e7af1be4,66961628,0,0x0,8
tick,0x7ff8e7af1be4,66977737,0,0x0,8
tick,0x7ff8e7af1be4,66993102,0,0x0,8
tick,0x7ff8e7af1be4,67009034,0,0x0,8
tick,0x7ff8e7af1be4,67024837,0,0x0,8
tick,0x7ff8e7af1be4,67041200,0,0x0,8
tick,0x7ff8e7af1be4,67057244,0,0x0,8
tick,0x7ff8e7af1be4,67072997,0,0x0,8
tick,0x7ff8e7af1be4,67088798,0,0x0,8
tick,0x7ff8e7af1be4,67097282,0,0x0,8
tick,0x7ff8e7af1be4,67105366,0,0x0,8
tick,0x7ff8e7af1be4,67121058,0,0x0,8
tick,0x7ff8e7af1be4,67136918,0,0x0,8
tick,0x7ff8e7af1be4,67153198,0,0x0,8
tick,0x7ff8e7af1be4,67168971,0,0x0,8
tick,0x7ff8e7af1be4,67184609,0,0x0,8
tick,0x7ff8e7af1be4,67201454,0,0x0,8
tick,0x7ff8e7af1be4,67209249,0,0x0,8
tick,0x7ff8e7af1be4,67210837,0,0x0,8
tick,0x7ff8e7af1be4,67213749,0,0x0,8
tick,0x7ff8e7af1be4,67230924,0,0x0,8
tick,0x7ff8e7af1be4,67246735,0,0x0,8
tick,0x7ff8e7af1be4,67262624,0,0x0,8
tick,0x7ff8e7af1be4,67278216,0,0x0,8
tick,0x7ff8e7af1be4,67295448,0,0x0,8
tick,0x7ff8e7af1be4,67309962,0,0x0,8
tick,0x7ff8e7af1be4,67326569,0,0x0,8
tick,0x7ff8e7af1be4,67341963,0,0x0,8
tick,0x7ff8e7af1be4,67358626,0,0x0,8
tick,0x7ff8e7af1be4,67374361,0,0x0,8
tick,0x7ff8e7af1be4,67390803,0,0x0,8
tick,0x7ff8e7af1be4,67406477,0,0x0,8
tick,0x7ff8e7af1be4,67422264,0,0x0,8
tick,0x7ff8e7af1be4,67437759,0,0x0,8
tick,0x7ff8e7af1be4,67453986,0,0x0,8
tick,0x7ff8e7af1be4,67469338,0,0x0,8
tick,0x7ff8e7af1be4,67485921,0,0x0,8
tick,0x7ff8e7af1be4,67501669,0,0x0,8
tick,0x7ff8e7af1be4,67517191,0,0x0,8
tick,0x7ff8e7af1be4,67532758,0,0x0,8
tick,0x7ff8e7af1be4,67548470,0,0x0,8
tick,0x7ff8e7af1be4,67564358,0,0x0,8
tick,0x7ff8e7af1be4,67580476,0,0x0,8
tick,0x7ff8e7af1be4,67595734,0,0x0,8
tick,0x7ff8e7af1be4,67612171,0,0x0,8
tick,0x7ff8e7af1be4,67628954,0,0x0,8
tick,0x7ff8e7af1be4,67644108,0,0x0,8
tick,0x7ff8e7af1be4,67660147,0,0x0,8
tick,0x7ff8e7af1be4,67676388,0,0x0,8
tick,0x7ff8e7af1be4,67691750,0,0x0,8
tick,0x7ff8e7af1be4,67707682,0,0x0,8
tick,0x7ff8e7af1be4,67723892,0,0x0,8
tick,0x7ff8e7af1be4,67728347,0,0x0,8
tick,0x7ff8e7af1be4,67745348,0,0x0,8
tick,0x7ff8e7af1be4,67760930,0,0x0,8
tick,0x7ff8e7af1be4,67776768,0,0x0,8
tick,0x7ff8e7af1be4,67792759,0,0x0,8
tick,0x7ff8e7af1be4,67808710,0,0x0,8
tick,0x7ff8e7af1be4,67825381,0,0x0,8
tick,0x7ff8e7af1be4,67840714,0,0x0,8
tick,0x7ff8e7af1be4,67857167,0,0x0,8
tick,0x7ff8e7af1be4,67872242,0,0x0,8
tick,0x7ff8e7af1be4,67888489,0,0x0,8
tick,0x7ff8e7af1be4,67904401,0,0x0,8
tick,0x7ff8e7af1be4,67920509,0,0x0,8
tick,0x7ff8e7af1be4,67936644,0,0x0,8
tick,0x7ff8e7af1be4,67953242,0,0x0,8
tick,0x7ff8e7af1be4,67968508,0,0x0,8
tick,0x7ff8e7af1be4,67985171,0,0x0,8
tick,0x7ff8e7af1be4,68000791,0,0x0,8
tick,0x7ff8e7af1be4,68016577,0,0x0,8
tick,0x7ff8e7af1be4,68032394,0,0x0,8
tick,0x7ff8e7af1be4,68048375,0,0x0,8
tick,0x7ff8e7af1be4,68064663,0,0x0,8
tick,0x7ff8e7af1be4,68080690,0,0x0,8
tick,0x7ff8e7af1be4,68097002,0,0x0,8
tick,0x7ff8e7af1be4,68113298,0,0x0,8
tick,0x7ff8e7af1be4,68128613,0,0x0,8
tick,0x7ff8e7af1be4,68144738,0,0x0,8
tick,0x7ff8e7af1be4,68160500,0,0x0,8
tick,0x7ff8e7af1be4,68176330,0,0x0,8
tick,0x7ff8e7af1be4,68192245,0,0x0,8
tick,0x7ff8e7af1be4,68208412,0,0x0,8
tick,0x7ff8e7af1be4,68225027,0,0x0,8
tick,0x7ff8e7af1be4,68229911,0,0x0,8
tick,0x7ff8e7af1be4,68231869,0,0x0,8
tick,0x7ff8e7af1be4,68233385,0,0x0,8
tick,0x7ff8e7af1be4,68250776,0,0x0,8
tick,0x7ff8e7af1be4,68266360,0,0x0,8
tick,0x7ff8e7af1be4,68282428,0,0x0,8
tick,0x7ff8e7af1be4,68297954,0,0x0,8
tick,0x7ff8e7af1be4,68314654,0,0x0,8
tick,0x7ff8e7af1be4,68330004,0,0x0,8
tick,0x7ff8e7af1be4,68346275,0,0x0,8
tick,0x7ff8e7af1be4,68361961,0,0x0,8
tick,0x7ff8e7af1be4,68377939,0,0x0,8
tick,0x7ff8e7af1be4,68394110,0,0x0,8
tick,0x7ff8e7af1be4,68409995,0,0x0,8
tick,0x7ff8e7af1be4,68426728,0,0x0,8
tick,0x7ff8e7af1be4,68442179,0,0x0,8
tick,0x7ff8e7af1be4,68458392,0,0x0,8
tick,0x7ff8e7af1be4,68473997,0,0x0,8
tick,0x7ff8e7af1be4,68490496,0,0x0,8
tick,0x7ff8e7af1be4,68506647,0,0x0,8
tick,0x7ff8e7af1be4,68522517,0,0x0,8
tick,0x7ff8e7af1be4,68538568,0,0x0,8
tick,0x7ff8e7af1be4,68553813,0,0x0,8
tick,0x7ff8e7af1be4,68570036,0,0x0,8
tick,0x7ff8e7af1be4,68586403,0,0x0,8
tick,0x7ff8e7af1be4,68602428,0,0x0,8
tick,0x7ff8e7af1be4,68618604,0,0x0,8
tick,0x7ff8e7af1be4,68634369,0,0x0,8
tick,0x7ff8e7af1be4,68642820,0,0x0,8
tick,0x7ff8e7af1be4,68658818,0,0x0,8
tick,0x7ff8e7af1be4,68674979,0,0x0,8
tick,0x7ff8e7af1be4,68692442,0,0x0,8
tick,0x7ff8e7af1be4,68706015,0,0x0,8
tick,0x7ff8e7af1be4,68721477,0,0x0,8
tick,0x7ff8e7af1be4,68737326,0,0x0,8
tick,0x7ff8e7af1be4,68740916,0,0x0,8
tick,0x7ff8e7af1be4,68742576,0,0x0,8
tick,0x7ff8e7af1be4,68758767,0,0x0,8
tick,0x7ff8e7af1be4,68774396,0,0x0,8
tick,0x7ff8e7af1be4,68790339,0,0x0,8
tick,0x7ff8e7af1be4,68806045,0,0x0,8
tick,0x7ff8e7af1be4,68822568,0,0x0,8
tick,0x7ff8e7af1be4,68839102,0,0x0,8
tick,0x7ff8e7af1be4,68854814,0,0x0,8
tick,0x7ff8e7af1be4,68870955,0,0x0,8
tick,0x7ff8e7af1be4,68886756,0,0x0,8
tick,0x7ff8e7af1be4,68902990,0,0x0,8
tick,0x7ff8e7af1be4,68918970,0,0x0,8
tick,0x7ff8e7af1be4,68934747,0,0x0,8
tick,0x7ff8e7af1be4,68951074,0,0x0,8
tick,0x7ff8e7af1be4,68967143,0,0x0,8
tick,0x7ff8e7af1be4,68982748,0,0x0,8
tick,0x7ff8e7af1be4,68998941,0,0x0,8
tick,0x7ff8e7af1be4,69014521,0,0x0,8
tick,0x7ff8e7af1be4,69030435,0,0x0,8
tick,0x7ff8e7af1be4,69046235,0,0x0,8
tick,0x7ff8e7af1be4,69062597,0,0x0,8
tick,0x7ff8e7af1be4,69078172,0,0x0,8
tick,0x7ff8e7af1be4,69094167,0,0x0,8
tick,0x7ff8e7af1be4,69109644,0,0x0,8
tick,0x7ff8e7af1be4,69125912,0,0x0,8
tick,0x7ff8e7af1be4,69141540,0,0x0,8
tick,0x7ff8e7af1be4,69157176,0,0x0,8
tick,0x7ff8e7af1be4,69172699,0,0x0,8
tick,0x7ff8e7af1be4,69188471,0,0x0,8
tick,0x7ff8e7af1be4,69205065,0,0x0,8
tick,0x7ff8e7af1be4,69220778,0,0x0,8
tick,0x7ff8e7af1be4,69236840,0,0x0,8
tick,0x7ff8e7af1be4,69252984,0,0x0,8
tick,0x7ff8e7af1be4,69257999,0,0x0,8
tick,0x7ff8e7af1be4,69261066,0,0x0,8
tick,0x7ff8e7af1be4,69263358,0,0x0,8
tick,0x7ff8e7af1be4,69280280,0,0x0,8
tick,0x7ff8e7af1be4,69295846,0,0x0,8
tick,0x7ff8e7af1be4,69312359,0,0x0,8
tick,0x7ff8e7af1be4,69328374,0,0x0,8
tick,0x7ff8e7af1be4,69344807,0,0x0,8
tick,0x7ff8e7af1be4,69360164,0,0x0,8
tick,0x7ff8e7af1be4,69376693,0,0x0,8
tick,0x7ff8e7af1be4,69392792,0,0x0,8
tick,0x7ff8e7af1be4,69409172,0,0x0,8
tick,0x7ff8e7af1be4,69424289,0,0x0,8
tick,0x7ff8e7af1be4,69441094,0,0x0,8
tick,0x7ff8e7af1be4,69456167,0,0x0,8
tick,0x7ff8e7af1be4,69471942,0,0x0,8
tick,0x7ff8e7af1be4,69488827,0,0x0,8
tick,0x7ff8e7af1be4,69504751,0,0x0,8
tick,0x7ff8e7af1be4,69520490,0,0x0,8
tick,0x7ff8e7af1be4,69536863,0,0x0,8
tick,0x7ff8e7af1be4,69552487,0,0x0,8
tick,0x7ff8e7af1be4,69568856,0,0x0,8
tick,0x7ff8e7af1be4,69584541,0,0x0,8
tick,0x7ff8e7af1be4,69600555,0,0x0,8
tick,0x7ff8e7af1be4,69616229,0,0x0,8
tick,0x7ff8e7af1be4,69632793,0,0x0,8
tick,0x7ff8e7af1be4,69649372,0,0x0,8
tick,0x7ff8e7af1be4,69665485,0,0x0,8
tick,0x7ff8e7af1be4,69681286,0,0x0,8
tick,0x7ff8e7af1be4,69698158,0,0x0,8
tick,0x7ff8e7af1be4,69713631,0,0x0,8
tick,0x7ff8e7af1be4,69729424,0,0x0,8
tick,0x7ff8e7af1be4,69745273,0,0x0,8
tick,0x7ff8e7af1be4,69760775,0,0x0,8
tick,0x7ff8e7af1be4,69766034,0,0x0,8
tick,0x7ff8e7af1be4,69767700,0,0x0,8
tick,0x7ff8e7af1be4,69769767,0,0x0,8
tick,0x7ff8e7af1be4,69771363,0,0x0,8
tick,0x7ff8e7af1be4,69787464,0,0x0,8
tick,0x7ff8e7af1be4,69803304,0,0x0,8
tick,0x7ff8e7af1be4,69819147,0,0x0,8
tick,0x7ff8e7af1be4,69835587,0,0x0,8
tick,0x7ff8e7af1be4,69851855,0,0x0,8
tick,0x7ff8e7af1be4,69867250,0,0x0,8
tick,0x7ff8e7af1be4,69883096,0,0x0,8
tick,0x7ff8e7af1be4,69899041,0,0x0,8
tick,0x7ff8e7af1be4,69915485,0,0x0,8
tick,0x7ff8e7af1be4,69931348,0,0x0,8
tick,0x7ff8e7af1be4,69947656,0,0x0,8
tick,0x7ff8e7af1be4,69963095,0,0x0,8
tick,0x7ff8e7af1be4,69979111,0,0x0,8
tick,0x7ff8e7af1be4,69994947,0,0x0,8
tick,0x7ff8e7af1be4,70011144,0,0x0,8
tick,0x7ff8e7af1be4,70027028,0,0x0,8
tick,0x7ff8e7af1be4,70043611,0,0x0,8
tick,0x7ff8e7af1be4,70059439,0,0x0,8
tick,0x7ff8e7af1be4,70075292,0,0x0,8
tick,0x7ff8e7af1be4,70090852,0,0x0,8
tick,0x7ff8e7af1be4,70106993,0,0x0,8
tick,0x7ff8e7af1be4,70123083,0,0x0,8
tick,0x7ff8e7af1be4,70139126,0,0x0,8
tick,0x7ff8e7af1be4,70155161,0,0x0,8
tick,0x7ff8e7af1be4,70170979,0,0x0,8
tick,0x7ff8e7af1be4,70186873,0,0x0,8
tick,0x7ff8e7af1be4,70203040,0,0x0,8
tick,0x7ff8e7af1be4,70218690,0,0x0,8
tick,0x7ff8e7af1be4,70235520,0,0x0,8
tick,0x7ff8e7af1be4,70250886,0,0x0,8
tick,0x7ff8e7af1be4,70267641,0,0x0,8
tick,0x7ff8e7af1be4,70272145,0,0x0,8
tick,0x7ff8e7af1be4,70275806,0,0x0,8
tick,0x7ff8e7af1be4,70277535,0,0x0,8
tick,0x7ff8e7af1be4,70294390,0,0x0,8
tick,0x7ff8e7af1be4,70310156,0,0x0,8
tick,0x7ff8e7af1be4,70326111,0,0x0,8
tick,0x7ff8e7af1be4,70342450,0,0x0,8
tick,0x7ff8e7af1be4,70358328,0,0x0,8
tick,0x7ff8e7af1be4,70374054,0,0x0,8
tick,0x7ff8e7af1be4,70390187,0,0x0,8
tick,0x7ff8e7af1be4,70406146,0,0x0,8
tick,0x7ff8e7af1be4,70422427,0,0x0,8
tick,0x7ff8e7af1be4,70438329,0,0x0,8
tick,0x7ff8e7af1be4,70454846,0,0x0,8
tick,0x7ff8e7af1be4,70469968,0,0x0,8
tick,0x7ff8e7af1be4,70485609,0,0x0,8
tick,0x7ff8e7af1be4,70501287,0,0x0,8
tick,0x7ff8e7af1be4,70517014,0,0x0,8
tick,0x7ff8e7af1be4,70533185,0,0x0,8
tick,0x7ff8e7af1be4,70549829,0,0x0,8
tick,0x7ff8e7af1be4,70564915,0,0x0,8
tick,0x7ff8e7af1be4,70580577,0,0x0,8
tick,0x7ff8e7af1be4,70596320,0,0x0,8
tick,0x7ff8e7af1be4,70611848,0,0x0,8
tick,0x7ff8e7af1be4,70627749,0,0x0,8
tick,0x7ff8e7af1be4,70643434,0,0x0,8
tick,0x7ff8e7af1be4,70659665,0,0x0,8
tick,0x7ff8e7af1be4,70675834,0,0x0,8
tick,0x7ff8e7af1be4,70692258,0,0x0,8
tick,0x7ff8e7af1be4,70708502,0,0x0,8
tick,0x7ff8e7af1be4,70722920,0,0x0,8
tick,0x7ff8e7af1be4,70738983,0,0x0,8
tick,0x7ff8e7af1be4,70753978,0,0x0,8
tick,0x7ff8e7af1be4,70770045,0,0x0,8
tick,0x7ff8e7af1be4,70771784,0,0x0,8
tick,0x7ff8e7af1be4,70776005,0,0x0,8
tick,0x7ff8e7af1be4,70777785,0,0x0,8
tick,0x7ff8e7af1be4,70779382,0,0x0,8
tick,0x7ff8e7af1be4,70795430,0,0x0,8
tick,0x7ff8e7af1be4,70811385,0,0x0,8
tick,0x7ff8e7af1be4,70827552,0,0x0,8
tick,0x7ff8e7af1be4,70843447,0,0x0,8
tick,0x7ff8e7af1be4,70859119,0,0x0,8
tick,0x7ff8e7af1be4,70875433,0,0x0,8
tick,0x7ff8e7af1be4,70891767,0,0x0,8
tick,0x7ff8e7af1be4,70907467,0,0x0,8
tick,0x7ff8e7af1be4,70923336,0,0x0,8
tick,0x7ff8e7af1be4,70938837,0,0x0,8
tick,0x7ff8e7af1be4,70954563,0,0x0,8
tick,0x7ff8e7af1be4,70970003,0,0x0,8
tick,0x7ff8e7af1be4,70985768,0,0x0,8
tick,0x7ff8e7af1be4,71001474,0,0x0,8
tick,0x7ff8e7af1be4,71017414,0,0x0,8
tick,0x7ff8e7af1be4,71033126,0,0x0,8
tick,0x7ff8e7af1be4,71049892,0,0x0,8
tick,0x7ff8e7af1be4,71065147,0,0x0,8
tick,0x7ff8e7af1be4,71080778,0,0x0,8
tick,0x7ff8e7af1be4,71096567,0,0x0,8
tick,0x7ff8e7af1be4,71112318,0,0x0,8
tick,0x7ff8e7af1be4,71128399,0,0x0,8
tick,0x7ff8e7af1be4,71144131,0,0x0,8
tick,0x7ff8e7af1be4,71160070,0,0x0,8
tick,0x7ff8e7af1be4,71176080,0,0x0,8
tick,0x7ff8e7af1be4,71191542,0,0x0,8
tick,0x7ff8e7af1be4,71207962,0,0x0,8
tick,0x7ff8e7af1be4,71223565,0,0x0,8
tick,0x7ff8e7af1be4,71240030,0,0x0,8
tick,0x7ff8e7af1be4,71254982,0,0x0,8
tick,0x7ff8e7af1be4,71271770,0,0x0,8
tick,0x7ff8e7af1be4,71276683,0,0x0,8
tick,0x7ff8e7af1be4,71279383,0,0x0,8
tick,0x7ff8e7af1be4,71281061,0,0x0,8
tick,0x7ff8e7af1be4,71282756,0,0x0,8
tick,0x7ff8e7af1be4,71299050,0,0x0,8
tick,0x7ff8e7af1be4,71314739,0,0x0,8
tick,0x7ff8e7af1be4,71331067,0,0x0,8
tick,0x7ff8e7af1be4,71347731,0,0x0,8
tick,0x7ff8e7af1be4,71363137,0,0x0,8
tick,0x7ff8e7af1be4,71379163,0,0x0,8
tick,0x7ff8e7af1be4,71395389,0,0x0,8
tick,0x7ff8e7af1be4,71411487,0,0x0,8
tick,0x7ff8e7af1be4,71428367,0,0x0,8
tick,0x7ff8e7af1be4,71443625,0,0x0,8
tick,0x7ff8e7af1be4,71459802,0,0x0,8
tick,0x7ff8e7af1be4,71475408,0,0x0,8
tick,0x7ff8e7af1be4,71491739,0,0x0,8
tick,0x7ff8e7af1be4,71508297,0,0x0,8
tick,0x7ff8e7af1be4,71523439,0,0x0,8
tick,0x7ff8e7af1be4,71539784,0,0x0,8
tick,0x7ff8e7af1be4,71555993,0,0x0,8
tick,0x7ff8e7af1be4,71571810,0,0x0,8
tick,0x7ff8e7af1be4,71587507,0,0x0,8
tick,0x7ff8e7af1be4,71603374,0,0x0,8
tick,0x7ff8e7af1be4,71619221,0,0x0,8
tick,0x7ff8e7af1be4,71634998,0,0x0,8
tick,0x7ff8e7af1be4,71651500,0,0x0,8
tick,0x7ff8e7af1be4,71667309,0,0x0,8
tick,0x7ff8e7af1be4,71683199,0,0x0,8
tick,0x7ff8e7af1be4,71699331,0,0x0,8
tick,0x7ff8e7af1be4,71715397,0,0x0,8
tick,0x7ff8e7af1be4,71731025,0,0x0,8
tick,0x7ff8e7af1be4,71747349,0,0x0,8
tick,0x7ff8e7af1be4,71763466,0,0x0,8
tick,0x7ff8e7af1be4,71779169,0,0x0,8
tick,0x7ff8e7af1be4,71786218,0,0x0,8
tick,0x7ff8e7af1be4,71787378,0,0x0,8
tick,0x7ff8e7af1be4,71788841,0,0x0,8
tick,0x7ff8e7af1be4,71804622,0,0x0,8
tick,0x7ff8e7af1be4,71820298,0,0x0,8
tick,0x7ff8e7af1be4,71836608,0,0x0,8
tick,0x7ff8e7af1be4,71853703,0,0x0,8
tick,0x7ff8e7af1be4,71869450,0,0x0,8
tick,0x7ff8e7af1be4,71886545,0,0x0,8
tick,0x7ff8e7af1be4,71901824,0,0x0,8
tick,0x7ff8e7af1be4,71917393,0,0x0,8
tick,0x7ff8e7af1be4,71933402,0,0x0,8
tick,0x7ff8e7af1be4,71949100,0,0x0,8
tick,0x7ff8e7af1be4,71965054,0,0x0,8
tick,0x7ff8e7af1be4,71981267,0,0x0,8
tick,0x7ff8e7af1be4,71997432,0,0x0,8
tick,0x7ff8e7af1be4,72013285,0,0x0,8
tick,0x7ff8e7af1be4,72029315,0,0x0,8
tick,0x7ff8e7af1be4,72045253,0,0x0,8
tick,0x7ff8e7af1be4,72060930,0,0x0,8
tick,0x7ff8e7af1be4,72076624,0,0x0,8
tick,0x7ff8e7af1be4,72092743,0,0x0,8
tick,0x7ff8e7af1be4,72108471,0,0x0,8
tick,0x7ff8e7af1be4,72124338,0,0x0,8
tick,0x7ff8e7af1be4,72140430,0,0x0,8
tick,0x7ff8e7af1be4,72157175,0,0x0,8
tick,0x7ff8e7af1be4,72172184,0,0x0,8
tick,0x7ff8e7af1be4,72187972,0,0x0,8
tick,0x7ff8e7af1be4,72203827,0,0x0,8
tick,0x7ff8e7af1be4,72219942,0,0x0,8
tick,0x7ff8e7af1be4,72235854,0,0x0,8
tick,0x7ff8e7af1be4,72252004,0,0x0,8
tick,0x7ff8e7af1be4,72267761,0,0x0,8
tick,0x7ff8e7af1be4,72283387,0,0x0,8
tick,0x7ff8e7af1be4,72286780,0,0x0,8
tick,0x7ff8e7af1be4,72288711,0,0x0,8
tick,0x7ff8e7af1be4,72290790,0,0x0,8
tick,0x7ff8e7af1be4,72292067,0,0x0,8
tick,0x7ff8e7af1be4,72309406,0,0x0,8
tick,0x7ff8e7af1be4,72324835,0,0x0,8
tick,0x7ff8e7af1be4,72341258,0,0x0,8
tick,0x7ff8e7af1be4,72357614,0,0x0,8
tick,0x7ff8e7af1be4,72374142,0,0x0,8
tick,0x7ff8e7af1be4,72389070,0,0x0,8
tick,0x7ff8e7af1be4,72405368,0,0x0,8
tick,0x7ff8e7af1be4,72421775,0,0x0,8
tick,0x7ff8e7af1be4,72436770,0,0x0,8
tick,0x7ff8e7af1be4,72453401,0,0x0,8
tick,0x7ff8e7af1be4,72468915,0,0x0,8
tick,0x7ff8e7af1be4,72484946,0,0x0,8
tick,0x7ff8e7af1be4,72501178,0,0x0,8
tick,0x7ff8e7af1be4,72517697,0,0x0,8
tick,0x7ff8e7af1be4,72532843,0,0x0,8
tick,0x7ff8e7af1be4,72548731,0,0x0,8
tick,0x7ff8e7af1be4,72564727,0,0x0,8
tick,0x7ff8e7af1be4,72580220,0,0x0,8
tick,0x7ff8e7af1be4,72596475,0,0x0,8
tick,0x7ff8e7af1be4,72612269,0,0x0,8
tick,0x7ff8e7af1be4,72628315,0,0x0,8
tick,0x7ff8e7af1be4,72644161,0,0x0,8
tick,0x7ff8e7af1be4,72659381,0,0x0,8
tick,0x7ff8e7af1be4,72675586,0,0x0,8
tick,0x7ff8e7af1be4,72692317,0,0x0,8
tick,0x7ff8e7af1be4,72707670,0,0x0,8
tick,0x7ff8e7af1be4,72724168,0,0x0,8
tick,0x7ff8e7af1be4,72739833,0,0x0,8
tick,0x7ff8e7af1be4,72755557,0,0x0,8
tick,0x7ff8e7af1be4,72771430,0,0x0,8
tick,0x7ff8e7af1be4,72788255,0,0x0,8
tick,0x7ff8e7af1be4,72794075,0,0x0,8
tick,0x7ff8e7af1be4,72796173,0,0x0,8
tick,0x7ff8e7af1be4,72798567,0,0x0,8
tick,0x7ff8e7af1be4,72814657,0,0x0,8
tick,0x7ff8e7af1be4,72830172,0,0x0,8
tick,0x7ff8e7af1be4,72846154,0,0x0,8
tick,0x7ff8e7af1be4,72861841,0,0x0,8
tick,0x7ff8e7af1be4,72877629,0,0x0,8
tick,0x7ff8e7af1be4,72893174,0,0x0,8
tick,0x7ff8e7af1be4,72909166,0,0x0,8
tick,0x7ff8e7af1be4,72925513,0,0x0,8
tick,0x7ff8e7af1be4,72941703,0,0x0,8
tick,0x7ff8e7af1be4,72957779,0,0x0,8
tick,0x7ff8e7af1be4,72973439,0,0x0,8
tick,0x7ff8e7af1be4,72989240,0,0x0,8
tick,0x7ff8e7af1be4,73005197,0,0x0,8
tick,0x7ff8e7af1be4,73020773,0,0x0,8
tick,0x7ff8e7af1be4,73036914,0,0x0,8
tick,0x7ff8e7af1be4,73052641,0,0x0,8
tick,0x7ff8e7af1be4,73069066,0,0x0,8
tick,0x7ff8e7af1be4,73084928,0,0x0,8
tick,0x7ff8e7af1be4,73101266,0,0x0,8
tick,0x7ff8e7af1be4,73116535,0,0x0,8
tick,0x7ff8e7af1be4,73132560,0,0x0,8
tick,0x7ff8e7af1be4,73148489,0,0x0,8
tick,0x7ff8e7af1be4,73164376,0,0x0,8
tick,0x7ff8e7af1be4,73180031,0,0x0,8
tick,0x7ff8e7af1be4,73196360,0,0x0,8
tick,0x7ff8e7af1be4,73212069,0,0x0,8
tick,0x7ff8e7af1be4,73227148,0,0x0,8
tick,0x7ff8e7af1be4,73242945,0,0x0,8
tick,0x7ff8e7af1be4,73259616,0,0x0,8
tick,0x7ff8e7af1be4,73275080,0,0x0,8
tick,0x7ff8e7af1be4,73290817,0,0x0,8
tick,0x7ff8e7af1be4,73295797,0,0x0,8
tick,0x7ff8e7af1be4,73297429,0,0x0,8
tick,0x7ff8e7af1be4,73299009,0,0x0,8
tick,0x7ff8e7af1be4,73300477,0,0x0,8
tick,0x7ff8e7af1be4,73301694,0,0x0,8
tick,0x7ff8e7af1be4,73302855,0,0x0,8
tick,0x7ff8e7af1be4,73318558,0,0x0,8
tick,0x7ff8e7af1be4,73334546,0,0x0,8
tick,0x7ff8e7af1be4,73350771,0,0x0,8
tick,0x7ff8e7af1be4,73366740,0,0x0,8
tick,0x7ff8e7af1be4,73382818,0,0x0,8
tick,0x7ff8e7af1be4,73398554,0,0x0,8
tick,0x7ff8e7af1be4,73414314,0,0x0,8
tick,0x7ff8e7af1be4,73430354,0,0x0,8
tick,0x7ff8e7af1be4,73445560,0,0x0,8
tick,0x7ff8e7af1be4,73462035,0,0x0,8
tick,0x7ff8e7af1be4,73477557,0,0x0,8
tick,0x7ff8e7af1be4,73493433,0,0x0,8
tick,0x7ff8e7af1be4,73508959,0,0x0,8
tick,0x7ff8e7af1be4,73524598,0,0x0,8
tick,0x7ff8e7af1be4,73540313,0,0x0,8
tick,0x7ff8e7af1be4,73556412,0,0x0,8
tick,0x7ff8e7af1be4,73572775,0,0x0,8
tick,0x7ff8e7af1be4,73588039,0,0x0,8
tick,0x7ff8e7af1be4,73603802,0,0x0,8
tick,0x7ff8e7af1be4,73619653,0,0x0,8
tick,0x7ff8e7af1be4,73635677,0,0x0,8
tick,0x7ff8e7af1be4,73651338,0,0x0,8
tick,0x7ff8e7af1be4,73666937,0,0x0,8
tick,0x7ff8e7af1be4,73683416,0,0x0,8
tick,0x7ff8e7af1be4,73699661,0,0x0,8
tick,0x7ff8e7af1be4,73715620,0,0x0,8
tick,0x7ff8e7af1be4,73731717,0,0x0,8
tick,0x7ff8e7af1be4,73747123,0,0x0,8
tick,0x7ff8e7af1be4,73763277,0,0x0,8
tick,0x7ff8e7af1be4,73778794,0,0x0,8
tick,0x7ff8e7af1be4,73794696,0,0x0,8
tick,0x7ff8e7af1be4,73800323,0,0x0,8
tick,0x7ff8e7af1be4,73802109,0,0x0,8
tick,0x7ff8e7af1be4,73804475,0,0x0,8
tick,0x7ff8e7af1be4,73821446,0,0x0,8
tick,0x7ff8e7af1be4,73837360,0,0x0,8
tick,0x7ff8e7af1be4,73853515,0,0x0,8
tick,0x7ff8e7af1be4,73869422,0,0x0,8
tick,0x7ff8e7af1be4,73885220,0,0x0,8
tick,0x7ff8e7af1be4,73900445,0,0x0,8
tick,0x7ff8e7af1be4,73916563,0,0x0,8
tick,0x7ff8e7af1be4,73931680,0,0x0,8
tick,0x7ff8e7af1be4,73947489,0,0x0,8
tick,0x7ff8e7af1be4,73963729,0,0x0,8
tick,0x7ff8e7af1be4,73978941,0,0x0,8
tick,0x7ff8e7af1be4,73994432,0,0x0,8
tick,0x7ff8e7af1be4,74010494,0,0x0,8
tick,0x7ff8e7af1be4,74025891,0,0x0,8
tick,0x7ff8e7af1be4,74041837,0,0x0,8
tick,0x7ff8e7af1be4,74057507,0,0x0,8
tick,0x7ff8e7af1be4,74073340,0,0x0,8
tick,0x7ff8e7af1be4,74089241,0,0x0,8
tick,0x7ff8e7af1be4,74104907,0,0x0,8
tick,0x7ff8e7af1be4,74119832,0,0x0,8
tick,0x7ff8e7af1be4,74136204,0,0x0,8
tick,0x7ff8e7af1be4,74152092,0,0x0,8
tick,0x7ff8e7af1be4,74167425,0,0x0,8
tick,0x7ff8e7af1be4,74183001,0,0x0,8
tick,0x7ff8e7af1be4,74198393,0,0x0,8
tick,0x7ff8e7af1be4,74214592,0,0x0,8
tick,0x7ff8e7af1be4,74230714,0,0x0,8
tick,0x7ff8e7af1be4,74246504,0,0x0,8
tick,0x7ff8e7af1be4,74263121,0,0x0,8
tick,0x7ff8e7af1be4,74278670,0,0x0,8
tick,0x7ff8e7af1be4,74294243,0,0x0,8
tick,0x7ff8e7af1be4,74310611,0,0x0,8
tick,0x7ff8e7af1be4,74316874,0,0x0,8
tick,0x7ff8e7af1be4,74318513,0,0x0,8
tick,0x7ff8e7af1be4,74319987,0,0x0,8
tick,0x7ff8e7af1be4,74322174,0,0x0,8
tick,0x7ff8e7af1be4,74323319,0,0x0,8
tick,0x7ff8e7af1be4,74339484,0,0x0,8
tick,0x7ff8e7af1be4,74355073,0,0x0,8
tick,0x7ff8e7af1be4,74371733,0,0x0,8
tick,0x7ff8e7af1be4,74387342,0,0x0,8
tick,0x7ff8e7af1be4,74403196,0,0x0,8
tick,0x7ff8e7af1be4,74418910,0,0x0,8
tick,0x7ff8e7af1be4,74435540,0,0x0,8
tick,0x7ff8e7af1be4,74451038,0,0x0,8
tick,0x7ff8e7af1be4,74466775,0,0x0,8
tick,0x7ff8e7af1be4,74482312,0,0x0,8
tick,0x7ff8e7af1be4,74498397,0,0x0,8
tick,0x7ff8e7af1be4,74513292,0,0x0,8
tick,0x7ff8e7af1be4,74529496,0,0x0,8
tick,0x7ff8e7af1be4,74544951,0,0x0,8
tick,0x7ff8e7af1be4,74561144,0,0x0,8
tick,0x7ff8e7af1be4,74576270,0,0x0,8
tick,0x7ff8e7af1be4,74592532,0,0x0,8
tick,0x7ff8e7af1be4,74608080,0,0x0,8
tick,0x7ff8e7af1be4,74623913,0,0x0,8
tick,0x7ff8e7af1be4,74639827,0,0x0,8
tick,0x7ff8e7af1be4,74655535,0,0x0,8
tick,0x7ff8e7af1be4,74672193,0,0x0,8
tick,0x7ff8e7af1be4,74687390,0,0x0,8
tick,0x7ff8e7af1be4,74702867,0,0x0,8
tick,0x7ff8e7af1be4,74718367,0,0x0,8
tick,0x7ff8e7af1be4,74734437,0,0x0,8
tick,0x7ff8e7af1be4,74750432,0,0x0,8
tick,0x7ff8e7af1be4,74765858,0,0x0,8
tick,0x7ff8e7af1be4,74781818,0,0x0,8
tick,0x7ff8e7af1be4,74797018,0,0x0,8
tick,0x7ff8e7af1be4,74812584,0,0x0,8
tick,0x7ff8e7af1be4,74819243,0,0x0,8
tick,0x7ff8e7af1be4,74820526,0,0x0,8
tick,0x7ff8e7af1be4,74837644,0,0x0,8
tick,0x7ff8e7af1be4,74853570,0,0x0,8
tick,0x7ff8e7af1be4,74869253,0,0x0,8
tick,0x7ff8e7af1be4,74885445,0,0x0,8
tick,0x7ff8e7af1be4,74900839,0,0x0,8
tick,0x7ff8e7af1be4,74917039,0,0x0,8
tick,0x7ff8e7af1be4,74932885,0,0x0,8
tick,0x7ff8e7af1be4,74948732,0,0x0,8
tick,0x7ff8e7af1be4,74964706,0,0x0,8
tick,0x7ff8e7af1be4,74979704,0,0x0,8
tick,0x7ff8e7af1be4,74995781,0,0x0,8
tick,0x7ff8e7af1be4,75011231,0,0x0,8
tick,0x7ff8e7af1be4,75027046,0,0x0,8
tick,0x7ff8e7af1be4,75042698,0,0x0,8
tick,0x7ff8e7af1be4,75058167,0,0x0,8
tick,0x7ff8e7af1be4,75074653,0,0x0,8
tick,0x7ff8e7af1be4,75090151,0,0x0,8
tick,0x7ff8e7af1be4,75105633,0,0x0,8
tick,0x7ff8e7af1be4,75121655,0,0x0,8
tick,0x7ff8e7af1be4,75137041,0,0x0,8
tick,0x7ff8e7af1be4,75152977,0,0x0,8
tick,0x7ff8e7af1be4,75168275,0,0x0,8
tick,0x7ff8e7af1be4,75184015,0,0x0,8
tick,0x7ff8e7af1be4,75199795,0,0x0,8
tick,0x7ff8e7af1be4,75215385,0,0x0,8
tick,0x7ff8e7af1be4,75231128,0,0x0,8
tick,0x7ff8e7af1be4,75246831,0,0x0,8
tick,0x7ff8e7af1be4,75262592,0,0x0,8
tick,0x7ff8e7af1be4,75278847,0,0x0,8
tick,0x7ff8e7af1be4,75293983,0,0x0,8
tick,0x7ff8e7af1be4,75309129,0,0x0,8
tick,0x7ff8e7af1be4,75324694,0,0x0,8
tick,0x7ff8e7af1be4,75329670,0,0x0,8
tick,0x7ff8e7af1be4,75331997,0,0x0,8
tick,0x7ff8e7af1be4,75333562,0,0x0,8
tick,0x7ff8e7af1be4,75350159,0,0x0,8
tick,0x7ff8e7af1be4,75365450,0,0x0,8
tick,0x7ff8e7af1be4,75381511,0,0x0,8
tick,0x7ff8e7af1be4,75397138,0,0x0,8
tick,0x7ff8e7af1be4,75413256,0,0x0,8
tick,0x7ff8e7af1be4,75429118,0,0x0,8
tick,0x7ff8e7af1be4,75445519,0,0x0,8
tick,0x7ff8e7af1be4,75461829,0,0x0,8
tick,0x7ff8e7af1be4,75477456,0,0x0,8
tick,0x7ff8e7af1be4,75492956,0,0x0,8
tick,0x7ff8e7af1be4,75508665,0,0x0,8
tick,0x7ff8e7af1be4,75524455,0,0x0,8
tick,0x7ff8e7af1be4,75539831,0,0x0,8
tick,0x7ff8e7af1be4,75555344,0,0x0,8
tick,0x7ff8e7af1be4,75571227,0,0x0,8
tick,0x7ff8e7af1be4,75586753,0,0x0,8
tick,0x7ff8e7af1be4,75602834,0,0x0,8
tick,0x7ff8e7af1be4,75618280,0,0x0,8
tick,0x7ff8e7af1be4,75634161,0,0x0,8
tick,0x7ff8e7af1be4,75650046,0,0x0,8
tick,0x7ff8e7af1be4,75666382,0,0x0,8
tick,0x7ff8e7af1be4,75681807,0,0x0,8
tick,0x7ff8e7af1be4,75697327,0,0x0,8
tick,0x7ff8e7af1be4,75712780,0,0x0,8
tick,0x7ff8e7af1be4,75728370,0,0x0,8
tick,0x7ff8e7af1be4,75746064,0,0x0,8
tick,0x7ff8e7af1be4,75760150,0,0x0,8
tick,0x7ff8e7af1be4,75775375,0,0x0,8
tick,0x7ff8e7af1be4,75791281,0,0x0,8
tick,0x7ff8e7af1be4,75807575,0,0x0,8
tick,0x7ff8e7af1be4,75823404,0,0x0,8
tick,0x7ff8e7af1be4,75839664,0,0x0,8
tick,0x7ff8e7af1be4,75843734,0,0x0,8
tick,0x7ff8e7af1be4,75844839,0,0x0,8
tick,0x7ff8e7af1be4,75861802,0,0x0,8
tick,0x7ff8e7af1be4,75877204,0,0x0,8
tick,0x7ff8e7af1be4,75892912,0,0x0,8
tick,0x7ff8e7af1be4,75908894,0,0x0,8
tick,0x7ff8e7af1be4,75924738,0,0x0,8
tick,0x7ff8e7af1be4,75940387,0,0x0,8
tick,0x7ff8e7af1be4,75956148,0,0x0,8
tick,0x7ff8e7af1be4,75971310,0,0x0,8
tick,0x7ff8e7af1be4,75987629,0,0x0,8
tick,0x7ff8e7af1be4,76003589,0,0x0,8
tick,0x7ff8e7af1be4,76018820,0,0x0,8
tick,0x7ff8e7af1be4,76034418,0,0x0,8
tick,0x7ff8e7af1be4,76050615,0,0x0,8
tick,0x7ff8e7af1be4,76065982,0,0x0,8
tick,0x7ff8e7af1be4,76081624,0,0x0,8
tick,0x7ff8e7af1be4,76097178,0,0x0,8
tick,0x7ff8e7af1be4,76112823,0,0x0,8
tick,0x7ff8e7af1be4,76128449,0,0x0,8
tick,0x7ff8e7af1be4,76144510,0,0x0,8
tick,0x7ff8e7af1be4,76160383,0,0x0,8
tick,0x7ff8e7af1be4,76176070,0,0x0,8
tick,0x7ff8e7af1be4,76192182,0,0x0,8
tick,0x7ff8e7af1be4,76208068,0,0x0,8
tick,0x7ff8e7af1be4,76224015,0,0x0,8
tick,0x7ff8e7af1be4,76239914,0,0x0,8
tick,0x7ff8e7af1be4,76256200,0,0x0,8
tick,0x7ff8e7af1be4,76271466,0,0x0,8
tick,0x7ff8e7af1be4,76287750,0,0x0,8
tick,0x7ff8e7af1be4,76302981,0,0x0,8
tick,0x7ff8e7af1be4,76318635,0,0x0,8
tick,0x7ff8e7af1be4,76334185,0,0x0,8
tick,0x7ff8e7af1be4,76349947,0,0x0,8
tick,0x7ff8e7af1be4,76354727,0,0x0,8
tick,0x7ff8e7af1be4,76372227,0,0x0,8
tick,0x7ff8e7af1be4,76387302,0,0x0,8
tick,0x7ff8e7af1be4,76402689,0,0x0,8
tick,0x7ff8e7af1be4,76418634,0,0x0,8
tick,0x7ff8e7af1be4,76433984,0,0x0,8
tick,0x7ff8e7af1be4,76449959,0,0x0,8
tick,0x7ff8e7af1be4,76466393,0,0x0,8
tick,0x7ff8e7af1be4,76481425,0,0x0,8
tick,0x7ff8e7af1be4,76497282,0,0x0,8
tick,0x7ff8e7af1be4,76513024,0,0x0,8
tick,0x7ff8e7af1be4,76528456,0,0x0,8
tick,0x7ff8e7af1be4,76544446,0,0x0,8
tick,0x7ff8e7af1be4,76560339,0,0x0,8
tick,0x7ff8e7af1be4,76576033,0,0x0,8
tick,0x7ff8e7af1be4,76592146,0,0x0,8
tick,0x7ff8e7af1be4,76607549,0,0x0,8
tick,0x7ff8e7af1be4,76622711,0,0x0,8
tick,0x7ff8e7af1be4,76638648,0,0x0,8
tick,0x7ff8e7af1be4,76654501,0,0x0,8
tick,0x7ff8e7af1be4,76670457,0,0x0,8
tick,0x7ff8e7af1be4,76686450,0,0x0,8
tick,0x7ff8e7af1be4,76701639,0,0x0,8
tick,0x7ff8e7af1be4,76717577,0,0x0,8
tick,0x7ff8e7af1be4,76732943,0,0x0,8
tick,0x7ff8e7af1be4,76749150,0,0x0,8
tick,0x7ff8e7af1be4,76765377,0,0x0,8
tick,0x7ff8e7af1be4,76779920,0,0x0,8
tick,0x7ff8e7af1be4,76795494,0,0x0,8
tick,0x7ff8e7af1be4,76811662,0,0x0,8
tick,0x7ff8e7af1be4,76826975,0,0x0,8
tick,0x7ff8e7af1be4,76843077,0,0x0,8
tick,0x7ff8e7af1be4,76858418,0,0x0,8
tick,0x7ff8e7af1be4,76864986,0,0x0,8
tick,0x7ff8e7af1be4,76866788,0,0x0,8
tick,0x7ff8e7af1be4,76867937,0,0x0,8
tick,0x7ff8e7af1be4,76869585,0,0x0,8
tick,0x7ff8e7af1be4,76886247,0,0x0,8
tick,0x7ff8e7af1be4,76901934,0,0x0,8
tick,0x7ff8e7af1be4,76917889,0,0x0,8
tick,0x7ff8e7af1be4,76933856,0,0x0,8
tick,0x7ff8e7af1be4,76949969,0,0x0,8
tick,0x7ff8e7af1be4,76965770,0,0x0,8
tick,0x7ff8e7af1be4,76981658,0,0x0,8
tick,0x7ff8e7af1be4,76997434,0,0x0,8
tick,0x7ff8e7af1be4,77012782,0,0x0,8
tick,0x7ff8e7af1be4,77028196,0,0x0,8
tick,0x7ff8e7af1be4,77044419,0,0x0,8
tick,0x7ff8e7af1be4,77060591,0,0x0,8
tick,0x7ff8e7af1be4,77075556,0,0x0,8
tick,0x7ff8e7af1be4,77091778,0,0x0,8
tick,0x7ff8e7af1be4,77107439,0,0x0,8
tick,0x7ff8e7af1be4,77122631,0,0x0,8
tick,0x7ff8e7af1be4,77138499,0,0x0,8
tick,0x7ff8e7af1be4,77154301,0,0x0,8
tick,0x7ff8e7af1be4,77170258,0,0x0,8
tick,0x7ff8e7af1be4,77185278,0,0x0,8
tick,0x7ff8e7af1be4,77200893,0,0x0,8
tick,0x7ff8e7af1be4,77216726,0,0x0,8
tick,0x7ff8e7af1be4,77232082,0,0x0,8
tick,0x7ff8e7af1be4,77248007,0,0x0,8
tick,0x7ff8e7af1be4,77263625,0,0x0,8
tick,0x7ff8e7af1be4,77279760,0,0x0,8
tick,0x7ff8e7af1be4,77296305,0,0x0,8
tick,0x7ff8e7af1be4,77311145,0,0x0,8
tick,0x7ff8e7af1be4,77327296,0,0x0,8
tick,0x7ff8e7af1be4,77343106,0,0x0,8
tick,0x7ff8e7af1be4,77359201,0,0x0,8
tick,0x7ff8e7af1be4,77364924,0,0x0,8
tick,0x7ff8e7af1be4,77366397,0,0x0,8
tick,0x7ff8e7af1be4,77367833,0,0x0,8
tick,0x7ff8e7af1be4,77369306,0,0x0,8
tick,0x7ff8e7af1be4,77371325,0,0x0,8
tick,0x7ff8e7af1be4,77387380,0,0x0,8
tick,0x7ff8e7af1be4,77402820,0,0x0,8
tick,0x7ff8e7af1be4,77418871,0,0x0,8
tick,0x7ff8e7af1be4,77434633,0,0x0,8
tick,0x7ff8e7af1be4,77450870,0,0x0,8
tick,0x7ff8e7af1be4,77466899,0,0x0,8
tick,0x7ff8e7af1be4,77483248,0,0x0,8
tick,0x7ff8e7af1be4,77498931,0,0x0,8
tick,0x7ff8e7af1be4,77514670,0,0x0,8
tick,0x7ff8e7af1be4,77530404,0,0x0,8
tick,0x7ff8e7af1be4,77546108,0,0x0,8
tick,0x7ff8e7af1be4,77561481,0,0x0,8
tick,0x7ff8e7af1be4,77577186,0,0x0,8
tick,0x7ff8e7af1be4,77593647,0,0x0,8
tick,0x7ff8e7af1be4,77608820,0,0x0,8
tick,0x7ff8e7af1be4,77623824,0,0x0,8
tick,0x7ff8e7af1be4,77639863,0,0x0,8
tick,0x7ff8e7af1be4,77656121,0,0x0,8
tick,0x7ff8e7af1be4,77671715,0,0x0,8
tick,0x7ff8e7af1be4,77687436,0,0x0,8
tick,0x7ff8e7af1be4,77702836,0,0x0,8
tick,0x7ff8e7af1be4,77718696,0,0x0,8
tick,0x7ff8e7af1be4,77734398,0,0x0,8
tick,0x7ff8e7af1be4,77750564,0,0x0,8
tick,0x7ff8e7af1be4,77766062,0,0x0,8
tick,0x7ff8e7af1be4,77781849,0,0x0,8
tick,0x7ff8e7af1be4,77797147,0,0x0,8
tick,0x7ff8e7af1be4,77812883,0,0x0,8
tick,0x7ff8e7af1be4,77828797,0,0x0,8
tick,0x7ff8e7af1be4,77845319,0,0x0,8
tick,0x7ff8e7af1be4,77860892,0,0x0,8
tick,0x7ff8e7af1be4,77865207,0,0x0,8
tick,0x7ff8e7af1be4,77867142,0,0x0,8
tick,0x7ff8e7af1be4,77868682,0,0x0,8
tick,0x7ff8e7af1be4,77884656,0,0x0,8
tick,0x7ff8e7af1be4,77900334,0,0x0,8
tick,0x7ff8e7af1be4,77915903,0,0x0,8
tick,0x7ff8e7af1be4,77932008,0,0x0,8
tick,0x7ff8e7af1be4,77948008,0,0x0,8
tick,0x7ff8e7af1be4,77963756,0,0x0,8
tick,0x7ff8e7af1be4,77978751,0,0x0,8
tick,0x7ff8e7af1be4,77994427,0,0x0,8
tick,0x7ff8e7af1be4,78010404,0,0x0,8
tick,0x7ff8e7af1be4,78026150,0,0x0,8
tick,0x7ff8e7af1be4,78042066,0,0x0,8
tick,0x7ff8e7af1be4,78058003,0,0x0,8
tick,0x7ff8e7af1be4,78073641,0,0x0,8
tick,0x7ff8e7af1be4,78089216,0,0x0,8
tick,0x7ff8e7af1be4,78105091,0,0x0,8
tick,0x7ff8e7af1be4,78120844,0,0x0,8
tick,0x7ff8e7af1be4,78136432,0,0x0,8
tick,0x7ff8e7af1be4,78152343,0,0x0,8
tick,0x7ff8e7af1be4,78167865,0,0x0,8
tick,0x7ff8e7af1be4,78183699,0,0x0,8
tick,0x7ff8e7af1be4,78199158,0,0x0,8
tick,0x7ff8e7af1be4,78214781,0,0x0,8
tick,0x7ff8e7af1be4,78230427,0,0x0,8
tick,0x7ff8e7af1be4,78246070,0,0x0,8
tick,0x7ff8e7af1be4,78262040,0,0x0,8
tick,0x7ff8e7af1be4,78277205,0,0x0,8
tick,0x7ff8e7af1be4,78293264,0,0x0,8
tick,0x7ff8e7af1be4,78309051,0,0x0,8
tick,0x7ff8e7af1be4,78324532,0,0x0,8
tick,0x7ff8e7af1be4,78340101,0,0x0,8
tick,0x7ff8e7af1be4,78355979,0,0x0,8
tick,0x7ff8e7af1be4,78372114,0,0x0,8
tick,0x7ff8e7af1be4,78377017,0,0x0,8
tick,0x7ff8e7af1be4,78380715,0,0x0,8
tick,0x7ff8e7af1be4,78383438,0,0x0,8
tick,0x7ff8e7af1be4,78383824,0,0x0,8
tick,0x7ff8e7af1be4,78400247,0,0x0,8
tick,0x7ff8e7af1be4,78415800,0,0x0,8
tick,0x7ff8e7af1be4,78431591,0,0x0,8
tick,0x7ff8e7af1be4,78447600,0,0x0,8
tick,0x7ff8e7af1be4,78463627,0,0x0,8
tick,0x7ff8e7af1be4,78479271,0,0x0,8
tick,0x7ff8e7af1be4,78495298,0,0x0,8
tick,0x7ff8e7af1be4,78511122,0,0x0,8
tick,0x7ff8e7af1be4,78527052,0,0x0,8
tick,0x7ff8e7af1be4,78542933,0,0x0,8
tick,0x7ff8e7af1be4,78558886,0,0x0,8
tick,0x7ff8e7af1be4,78574544,0,0x0,8
tick,0x7ff8e7af1be4,78590281,0,0x0,8
tick,0x7ff8e7af1be4,78605811,0,0x0,8
tick,0x7ff8e7af1be4,78621587,0,0x0,8
tick,0x7ff8e7af1be4,78637354,0,0x0,8
tick,0x7ff8e7af1be4,78653552,0,0x0,8
tick,0x7ff8e7af1be4,78669173,0,0x0,8
tick,0x7ff8e7af1be4,78684826,0,0x0,8
tick,0x7ff8e7af1be4,78700422,0,0x0,8
tick,0x7ff8e7af1be4,78716197,0,0x0,8
tick,0x7ff8e7af1be4,78732789,0,0x0,8
tick,0x7ff8e7af1be4,78748113,0,0x0,8
tick,0x7ff8e7af1be4,78764487,0,0x0,8
tick,0x7ff8e7af1be4,78779372,0,0x0,8
tick,0x7ff8e7af1be4,78795006,0,0x0,8
tick,0x7ff8e7af1be4,78810822,0,0x0,8
tick,0x7ff8e7af1be4,78826658,0,0x0,8
tick,0x7ff8e7af1be4,78842756,0,0x0,8
tick,0x7ff8e7af1be4,78859781,0,0x0,8
tick,0x7ff8e7af1be4,78885211,0,0x0,8
tick,0x7ff8e7af1be4,78888885,0,0x0,8
tick,0x7ff8e7af1be4,78890305,0,0x0,8
tick,0x7ff8e7af1be4,78891904,0,0x0,8
tick,0x7ff8e7af1be4,78908368,0,0x0,8
tick,0x7ff8e7af1be4,78924421,0,0x0,8
tick,0x7ff8e7af1be4,78940215,0,0x0,8
tick,0x7ff8e7af1be4,78956069,0,0x0,8
tick,0x7ff8e7af1be4,78971605,0,0x0,8
tick,0x7ff8e7af1be4,78987498,0,0x0,8
tick,0x7ff8e7af1be4,79003446,0,0x0,8
tick,0x7ff8e7af1be4,79018952,0,0x0,8
tick,0x7ff8e7af1be4,79035041,0,0x0,8
tick,0x7ff8e7af1be4,79050558,0,0x0,8
tick,0x7ff8e7af1be4,79066823,0,0x0,8
tick,0x7ff8e7af1be4,79081797,0,0x0,8
tick,0x7ff8e7af1be4,79097467,0,0x0,8
tick,0x7ff8e7af1be4,79113240,0,0x0,8
tick,0x7ff8e7af1be4,79128970,0,0x0,8
tick,0x7ff8e7af1be4,79144579,0,0x0,8
tick,0x7ff8e7af1be4,79160356,0,0x0,8
tick,0x7ff8e7af1be4,79176646,0,0x0,8
tick,0x7ff8e7af1be4,79192306,0,0x0,8
tick,0x7ff8e7af1be4,79207734,0,0x0,8
tick,0x7ff8e7af1be4,79223084,0,0x0,8
tick,0x7ff8e7af1be4,79239108,0,0x0,8
tick,0x7ff8e7af1be4,79255081,0,0x0,8
tick,0x7ff8e7af1be4,79271109,0,0x0,8
tick,0x7ff8e7af1be4,79286087,0,0x0,8
tick,0x7ff8e7af1be4,79302641,0,0x0,8
tick,0x7ff8e7af1be4,79318337,0,0x0,8
tick,0x7ff8e7af1be4,79332926,0,0x0,8
tick,0x7ff8e7af1be4,79348747,0,0x0,8
tick,0x7ff8e7af1be4,79365071,0,0x0,8
tick,0x7ff8e7af1be4,79381319,0,0x0,8
tick,0x7ff8e7af1be4,79391902,0,0x0,8
tick,0x7ff8e7af1be4,79393095,0,0x0,8
tick,0x7ff8e7af1be4,79409364,0,0x0,8
tick,0x7ff8e7af1be4,79425068,0,0x0,8
tick,0x7ff8e7af1be4,79440680,0,0x0,8
tick,0x7ff8e7af1be4,79456755,0,0x0,8
tick,0x7ff8e7af1be4,79472420,0,0x0,8
tick,0x7ff8e7af1be4,79488414,0,0x0,8
tick,0x7ff8e7af1be4,79504061,0,0x0,8
tick,0x7ff8e7af1be4,79520765,0,0x0,8
tick,0x7ff8e7af1be4,79536233,0,0x0,8
tick,0x7ff8e7af1be4,79552226,0,0x0,8
tick,0x7ff8e7af1be4,79568912,0,0x0,8
tick,0x7ff8e7af1be4,79584416,0,0x0,8
tick,0x7ff8e7af1be4,79600806,0,0x0,8
tick,0x7ff8e7af1be4,79616248,0,0x0,8
tick,0x7ff8e7af1be4,79632139,0,0x0,8
tick,0x7ff8e7af1be4,79647782,0,0x0,8
tick,0x7ff8e7af1be4,79664289,0,0x0,8
tick,0x7ff8e7af1be4,79679618,0,0x0,8
tick,0x7ff8e7af1be4,79695746,0,0x0,8
tick,0x7ff8e7af1be4,79711265,0,0x0,8
tick,0x7ff8e7af1be4,79727148,0,0x0,8
tick,0x7ff8e7af1be4,79742965,0,0x0,8
tick,0x7ff8e7af1be4,79758408,0,0x0,8
tick,0x7ff8e7af1be4,79774352,0,0x0,8
tick,0x7ff8e7af1be4,79790167,0,0x0,8
tick,0x7ff8e7af1be4,79806051,0,0x0,8
tick,0x7ff8e7af1be4,79820977,0,0x0,8
tick,0x7ff8e7af1be4,79837146,0,0x0,8
tick,0x7ff8e7af1be4,79853371,0,0x0,8
tick,0x7ff8e7af1be4,79869398,0,0x0,8
tick,0x7ff8e7af1be4,79885024,0,0x0,8
tick,0x7ff8e7af1be4,79892119,0,0x0,8
tick,0x7ff8e7af1be4,79893746,0,0x0,8
tick,0x7ff8e7af1be4,79910146,0,0x0,8
tick,0x7ff8e7af1be4,79926147,0,0x0,8
tick,0x7ff8e7af1be4,79941895,0,0x0,8
tick,0x7ff8e7af1be4,79958165,0,0x0,8
tick,0x7ff8e7af1be4,79974229,0,0x0,8
tick,0x7ff8e7af1be4,79990193,0,0x0,8
tick,0x7ff8e7af1be4,80006276,0,0x0,8
tick,0x7ff8e7af1be4,80022637,0,0x0,8
tick,0x7ff8e7af1be4,80037921,0,0x0,8
tick,0x7ff8e7af1be4,80053833,0,0x0,8
tick,0x7ff8e7af1be4,80069403,0,0x0,8
tick,0x7ff8e7af1be4,80085619,0,0x0,8
tick,0x7ff8e7af1be4,80101823,0,0x0,8
tick,0x7ff8e7af1be4,80117933,0,0x0,8
tick,0x7ff8e7af1be4,80133688,0,0x0,8
tick,0x7ff8e7af1be4,80149711,0,0x0,8
tick,0x7ff8e7af1be4,80165474,0,0x0,8
tick,0x7ff8e7af1be4,80181017,0,0x0,8
tick,0x7ff8e7af1be4,80196741,0,0x0,8
tick,0x7ff8e7af1be4,80212212,0,0x0,8
tick,0x7ff8e7af1be4,80227882,0,0x0,8
tick,0x7ff8e7af1be4,80243653,0,0x0,8
tick,0x7ff8e7af1be4,80259808,0,0x0,8
tick,0x7ff8e7af1be4,80275345,0,0x0,8
tick,0x7ff8e7af1be4,80291023,0,0x0,8
tick,0x7ff8e7af1be4,80307152,0,0x0,8
tick,0x7ff8e7af1be4,80323724,0,0x0,8
tick,0x7ff8e7af1be4,80339454,0,0x0,8
tick,0x7ff8e7af1be4,80355460,0,0x0,8
tick,0x7ff8e7af1be4,80371407,0,0x0,8
tick,0x7ff8e7af1be4,80388837,0,0x0,8
tick,0x7ff8e7af1be4,80394938,0,0x0,8
tick,0x7ff8e7af1be4,80396997,0,0x0,8
tick,0x7ff8e7af1be4,80397993,0,0x0,8
tick,0x7ff8e7af1be4,80415110,0,0x0,8
tick,0x7ff8e7af1be4,80429939,0,0x0,8
tick,0x7ff8e7af1be4,80446259,0,0x0,8
tick,0x7ff8e7af1be4,80461589,0,0x0,8
tick,0x7ff8e7af1be4,80478015,0,0x0,8
tick,0x7ff8e7af1be4,80494131,0,0x0,8
tick,0x7ff8e7af1be4,80509419,0,0x0,8
tick,0x7ff8e7af1be4,80525487,0,0x0,8
tick,0x7ff8e7af1be4,80541181,0,0x0,8
tick,0x7ff8e7af1be4,80557340,0,0x0,8
tick,0x7ff8e7af1be4,80573214,0,0x0,8
tick,0x7ff8e7af1be4,80589054,0,0x0,8
tick,0x7ff8e7af1be4,80604905,0,0x0,8
tick,0x7ff8e7af1be4,80620707,0,0x0,8
tick,0x7ff8e7af1be4,80636736,0,0x0,8
tick,0x7ff8e7af1be4,80653036,0,0x0,8
tick,0x7ff8e7af1be4,80669227,0,0x0,8
tick,0x7ff8e7af1be4,80685356,0,0x0,8
tick,0x7ff8e7af1be4,80701681,0,0x0,8
tick,0x7ff8e7af1be4,80717038,0,0x0,8
tick,0x7ff8e7af1be4,80733345,0,0x0,8
tick,0x7ff8e7af1be4,80749099,0,0x0,8
tick,0x7ff8e7af1be4,80765243,0,0x0,8
tick,0x7ff8e7af1be4,80781434,0,0x0,8
tick,0x7ff8e7af1be4,80796880,0,0x0,8
tick,0x7ff8e7af1be4,80812814,0,0x0,8
tick,0x7ff8e7af1be4,80829251,0,0x0,8
tick,0x7ff8e7af1be4,80845281,0,0x0,8
tick,0x7ff8e7af1be4,80861415,0,0x0,8
tick,0x7ff8e7af1be4,80877278,0,0x0,8
tick,0x7ff8e7af1be4,80893694,0,0x0,8
tick,0x7ff8e7af1be4,80900288,0,0x0,8
tick,0x7ff8e7af1be4,80902032,0,0x0,8
tick,0x7ff8e7af1be4,80904415,0,0x0,8
tick,0x7ff8e7af1be4,80920400,0,0x0,8
tick,0x7ff8e7af1be4,80936224,0,0x0,8
tick,0x7ff8e7af1be4,80952280,0,0x0,8
tick,0x7ff8e7af1be4,80968333,0,0x0,8
tick,0x7ff8e7af1be4,80983936,0,0x0,8
tick,0x7ff8e7af1be4,81000106,0,0x0,8
tick,0x7ff8e7af1be4,81015854,0,0x0,8
tick,0x7ff8e7af1be4,81031122,0,0x0,8
tick,0x7ff8e7af1be4,81047059,0,0x0,8
tick,0x7ff8e7af1be4,81062585,0,0x0,8
tick,0x7ff8e7af1be4,81078381,0,0x0,8
tick,0x7ff8e7af1be4,81094404,0,0x0,8
tick,0x7ff8e7af1be4,81110002,0,0x0,8
tick,0x7ff8e7af1be4,81125765,0,0x0,8
tick,0x7ff8e7af1be4,81141689,0,0x0,8
tick,0x7ff8e7af1be4,81157773,0,0x0,8
tick,0x7ff8e7af1be4,81174588,0,0x0,8
tick,0x7ff8e7af1be4,81189908,0,0x0,8
tick,0x7ff8e7af1be4,81205874,0,0x0,8
tick,0x7ff8e7af1be4,81221209,0,0x0,8
tick,0x7ff8e7af1be4,81237252,0,0x0,8
tick,0x7ff8e7af1be4,81252492,0,0x0,8
tick,0x7ff8e7af1be4,81268621,0,0x0,8
tick,0x7ff8e7af1be4,81284455,0,0x0,8
tick,0x7ff8e7af1be4,81299881,0,0x0,8
tick,0x7ff8e7af1be4,81315775,0,0x0,8
tick,0x7ff8e7af1be4,81331993,0,0x0,8
tick,0x7ff8e7af1be4,81347860,0,0x0,8
tick,0x7ff8e7af1be4,81363537,0,0x0,8
tick,0x7ff8e7af1be4,81379338,0,0x0,8
tick,0x7ff8e7af1be4,81395183,0,0x0,8
tick,0x7ff8e7af1be4,81413111,0,0x0,8
tick,0x7ff8e7af1be4,81417002,0,0x0,8
tick,0x7ff8e7af1be4,81419084,0,0x0,8
tick,0x7ff8e7af1be4,81420782,0,0x0,8
tick,0x7ff8e7af1be4,81422171,0,0x0,8
tick,0x7ff8e7af1be4,81438320,0,0x0,8
tick,0x7ff8e7af1be4,81454264,0,0x0,8
tick,0x7ff8e7af1be4,81470211,0,0x0,8
tick,0x7ff8e7af1be4,81486565,0,0x0,8
tick,0x7ff8e7af1be4,81502187,0,0x0,8
tick,0x7ff8e7af1be4,81517872,0,0x0,8
tick,0x7ff8e7af1be4,81533827,0,0x0,8
tick,0x7ff8e7af1be4,81549507,0,0x0,8
tick,0x7ff8e7af1be4,81565751,0,0x0,8
tick,0x7ff8e7af1be4,81581494,0,0x0,8
tick,0x7ff8e7af1be4,81597087,0,0x0,8
tick,0x7ff8e7af1be4,81613558,0,0x0,8
tick,0x7ff8e7af1be4,81628847,0,0x0,8
tick,0x7ff8e7af1be4,81644763,0,0x0,8
tick,0x7ff8e7af1be4,81661124,0,0x0,8
tick,0x7ff8e7af1be4,81676189,0,0x0,8
tick,0x7ff8e7af1be4,81691744,0,0x0,8
tick,0x7ff8e7af1be4,81707661,0,0x0,8
tick,0x7ff8e7af1be4,81723253,0,0x0,8
tick,0x7ff8e7af1be4,81738557,0,0x0,8
tick,0x7ff8e7af1be4,81755485,0,0x0,8
tick,0x7ff8e7af1be4,81770722,0,0x0,8
tick,0x7ff8e7af1be4,81787787,0,0x0,8
tick,0x7ff8e7af1be4,81801897,0,0x0,8
tick,0x7ff8e7af1be4,81818042,0,0x0,8
tick,0x7ff8e7af1be4,81834354,0,0x0,8
tick,0x7ff8e7af1be4,81850154,0,0x0,8
tick,0x7ff8e7af1be4,81866070,0,0x0,8
tick,0x7ff8e7af1be4,81882647,0,0x0,8
tick,0x7ff8e7af1be4,81897509,0,0x0,8
tick,0x7ff8e7af1be4,81913466,0,0x0,8
tick,0x7ff8e7af1be4,81928960,0,0x0,8
tick,0x7ff8e7af1be4,81936815,0,0x0,8
tick,0x7ff8e7af1be4,81953920,0,0x0,8
tick,0x7ff8e7af1be4,81969810,0,0x0,8
tick,0x7ff8e7af1be4,81985839,0,0x0,8
tick,0x7ff8e7af1be4,82001807,0,0x0,8
tick,0x7ff8e7af1be4,82017360,0,0x0,8
tick,0x7ff8e7af1be4,82033381,0,0x0,8
tick,0x7ff8e7af1be4,82049580,0,0x0,8
tick,0x7ff8e7af1be4,82065462,0,0x0,8
tick,0x7ff8e7af1be4,82081510,0,0x0,8
tick,0x7ff8e7af1be4,82097745,0,0x0,8
tick,0x7ff8e7af1be4,82113538,0,0x0,8
tick,0x7ff8e7af1be4,82129353,0,0x0,8
tick,0x7ff8e7af1be4,82145465,0,0x0,8
tick,0x7ff8e7af1be4,82161382,0,0x0,8
tick,0x7ff8e7af1be4,82177398,0,0x0,8
tick,0x7ff8e7af1be4,82193361,0,0x0,8
tick,0x7ff8e7af1be4,82209131,0,0x0,8
tick,0x7ff8e7af1be4,82224695,0,0x0,8
tick,0x7ff8e7af1be4,82240931,0,0x0,8
tick,0x7ff8e7af1be4,82262308,0,0x0,8
tick,0x7ff8e7af1be4,82273182,0,0x0,8
tick,0x7ff8e7af1be4,82288608,0,0x0,8
tick,0x7ff8e7af1be4,82304494,0,0x0,8
tick,0x7ff8e7af1be4,82320073,0,0x0,8
tick,0x7ff8e7af1be4,82336786,0,0x0,8
tick,0x7ff8e7af1be4,82351911,0,0x0,8
tick,0x7ff8e7af1be4,82367366,0,0x0,8
tick,0x7ff8e7af1be4,82382940,0,0x0,8
tick,0x7ff8e7af1be4,82399078,0,0x0,8
tick,0x7ff8e7af1be4,82415567,0,0x0,8
tick,0x7ff8e7af1be4,82431009,0,0x0,8
tick,0x7ff8e7af1be4,82434772,0,0x0,8
tick,0x7ff8e7af1be4,82436440,0,0x0,8
tick,0x7ff8e7af1be4,82437799,0,0x0,8
tick,0x7ff8e7af1be4,82454207,0,0x0,8
tick,0x7ff8e7af1be4,82469985,0,0x0,8
tick,0x7ff8e7af1be4,82485654,0,0x0,8
tick,0x7ff8e7af1be4,82501304,0,0x0,8
tick,0x7ff8e7af1be4,82516972,0,0x0,8
tick,0x7ff8e7af1be4,82532368,0,0x0,8
tick,0x7ff8e7af1be4,82548055,0,0x0,8
tick,0x7ff8e7af1be4,82564160,0,0x0,8
tick,0x7ff8e7af1be4,82580167,0,0x0,8
tick,0x7ff8e7af1be4,82595405,0,0x0,8
tick,0x7ff8e7af1be4,82611880,0,0x0,8
tick,0x7ff8e7af1be4,82627680,0,0x0,8
tick,0x7ff8e7af1be4,82643125,0,0x0,8
tick,0x7ff8e7af1be4,82659498,0,0x0,8
tick,0x7ff8e7af1be4,82675265,0,0x0,8
tick,0x7ff8e7af1be4,82691070,0,0x0,8
tick,0x7ff8e7af1be4,82706910,0,0x0,8
tick,0x7ff8e7af1be4,82722725,0,0x0,8
tick,0x7ff8e7af1be4,82739332,0,0x0,8
tick,0x7ff8e7af1be4,82754991,0,0x0,8
tick,0x7ff8e7af1be4,82770537,0,0x0,8
tick,0x7ff8e7af1be4,82786697,0,0x0,8
tick,0x7ff8e7af1be4,82802475,0,0x0,8
tick,0x7ff8e7af1be4,82817397,0,0x0,8
tick,0x7ff8e7af1be4,82833497,0,0x0,8
tick,0x7ff8e7af1be4,82849226,0,0x0,8
tick,0x7ff8e7af1be4,82865098,0,0x0,8
tick,0x7ff8e7af1be4,82881025,0,0x0,8
tick,0x7ff8e7af1be4,82897316,0,0x0,8
tick,0x7ff8e7af1be4,82913112,0,0x0,8
tick,0x7ff8e7af1be4,82929275,0,0x0,8
tick,0x7ff8e7af1be4,82945968,0,0x0,8
tick,0x7ff8e7af1be4,82948569,0,0x0,8
tick,0x7ff8e7af1be4,82951309,0,0x0,8
tick,0x7ff8e7af1be4,82952146,0,0x0,8
tick,0x7ff8e7af1be4,82967562,0,0x0,8
tick,0x7ff8e7af1be4,82983441,0,0x0,8
tick,0x7ff8e7af1be4,82998851,0,0x0,8
tick,0x7ff8e7af1be4,83014831,0,0x0,8
tick,0x7ff8e7af1be4,83030579,0,0x0,8
tick,0x7ff8e7af1be4,83046606,0,0x0,8
tick,0x7ff8e7af1be4,83062411,0,0x0,8
tick,0x7ff8e7af1be4,83078929,0,0x0,8
tick,0x7ff8e7af1be4,83094195,0,0x0,8
tick,0x7ff8e7af1be4,83110062,0,0x0,8
tick,0x7ff8e7af1be4,83125679,0,0x0,8
tick,0x7ff8e7af1be4,83142909,0,0x0,8
tick,0x7ff8e7af1be4,83158026,0,0x0,8
tick,0x7ff8e7af1be4,83173903,0,0x0,8
tick,0x7ff8e7af1be4,83190062,0,0x0,8
tick,0x7ff8e7af1be4,83205748,0,0x0,8
tick,0x7ff8e7af1be4,83221656,0,0x0,8
tick,0x7ff8e7af1be4,83237495,0,0x0,8
tick,0x7ff8e7af1be4,83253385,0,0x0,8
tick,0x7ff8e7af1be4,83269975,0,0x0,8
tick,0x7ff8e7af1be4,83285162,0,0x0,8
tick,0x7ff8e7af1be4,83300766,0,0x0,8
tick,0x7ff8e7af1be4,83316556,0,0x0,8
tick,0x7ff8e7af1be4,83332373,0,0x0,8
tick,0x7ff8e7af1be4,83349551,0,0x0,8
tick,0x7ff8e7af1be4,83364625,0,0x0,8
tick,0x7ff8e7af1be4,83380322,0,0x0,8
tick,0x7ff8e7af1be4,83396080,0,0x0,8
tick,0x7ff8e7af1be4,83411514,0,0x0,8
tick,0x7ff8e7af1be4,83426854,0,0x0,8
tick,0x7ff8e7af1be4,83442555,0,0x0,8
tick,0x7ff8e7af1be4,83461510,0,0x0,8
tick,0x7ff8e7af1be4,83463143,0,0x0,8
tick,0x7ff8e7af1be4,83464928,0,0x0,8
tick,0x7ff8e7af1be4,83466733,0,0x0,8
tick,0x7ff8e7af1be4,83482543,0,0x0,8
tick,0x7ff8e7af1be4,83498782,0,0x0,8
tick,0x7ff8e7af1be4,83514537,0,0x0,8
tick,0x7ff8e7af1be4,83530033,0,0x0,8
tick,0x7ff8e7af1be4,83545998,0,0x0,8
tick,0x7ff8e7af1be4,83561793,0,0x0,8
tick,0x7ff8e7af1be4,83577678,0,0x0,8
tick,0x7ff8e7af1be4,83593183,0,0x0,8
tick,0x7ff8e7af1be4,83609163,0,0x0,8
tick,0x7ff8e7af1be4,83625159,0,0x0,8
tick,0x7ff8e7af1be4,83641070,0,0x0,8
tick,0x7ff8e7af1be4,83656928,0,0x0,8
tick,0x7ff8e7af1be4,83672812,0,0x0,8
tick,0x7ff8e7af1be4,83688291,0,0x0,8
tick,0x7ff8e7af1be4,83703988,0,0x0,8
tick,0x7ff8e7af1be4,83719682,0,0x0,8
code-creation,JS,10,83733139,0x3146885841e,50,checkAndSetDirectionKey node:internal/repl/utils:531:35,0x3b94bd92728,~
code-source-info,0x3146885841e,458,17692,18007,C0O17709C7O17720C12O17740C13O17753C14O17766C21O17774C26O17932C31O17947C36O17947C40O17963C42O17967C48O17990C49O18002,,
code-creation,JS,10,83733495,0x3146885865e,341,onSigInt node:repl:821:38,0x13674f2f010,~
code-source-info,0x3146885865e
code-creation,JS,10,83734075,0x3146885892e,22,_turnOffEditorMode node:repl:1703:28,0x1b0323df398,~
code-source-info,0x3146885892e,447,56926,57005,C0O56938C1O56954C5O56971C10O56986C15O56971C21O57004,,
tick,0x7ff8e7af1be4,83735836,0,0x0,8
tick,0x7ff8e7af1be4,83751475,0,0x0,8
tick,0x7ff8e7af1be4,83767658,0,0x0,8
tick,0x7ff8e7af1be4,83783537,0,0x0,8
tick,0x7ff8e7af1be4,83799178,0,0x0,8
tick,0x7ff8e7af1be4,83815091,0,0x0,8
tick,0x7ff8e7af1be4,83830773,0,0x0,8
tick,0x7ff8e7af1be4,83847334,0,0x0,8
tick,0x7ff8e7af1be4,83863310,0,0x0,8
tick,0x7ff8e7af1be4,83878849,0,0x0,8
tick,0x7ff8e7af1be4,83894556,0,0x0,8
tick,0x7ff8e7af1be4,83910395,0,0x0,8
tick,0x7ff8e7af1be4,83926084,0,0x0,8
tick,0x7ff8e7af1be4,83941724,0,0x0,8
tick,0x7ff8e7af1be4,83957786,0,0x0,8
tick,0x7ff8e7af1be4,83972990,0,0x0,8
tick,0x7ff8e7af1be4,83980083,0,0x0,8
tick,0x7ff8e7af1be4,83982901,0,0x0,8
tick,0x7ff8e7af1be4,83985211,0,0x0,8
tick,0x7ff8e7af1be4,84001944,0,0x0,8
tick,0x7ff8e7af1be4,84017437,0,0x0,8
tick,0x7ff8e7af1be4,84032968,0,0x0,8
tick,0x7ff8e7af1be4,84049187,0,0x0,8
tick,0x7ff8e7af1be4,84064382,0,0x0,8
tick,0x7ff8e7af1be4,84079906,0,0x0,8
tick,0x7ff8e7af1be4,84095679,0,0x0,8
tick,0x7ff8e7af1be4,84111559,0,0x0,8
tick,0x7ff8e7af1be4,84126829,0,0x0,8
tick,0x7ff8e7af1be4,84142734,0,0x0,8
tick,0x7ff8e7af1be4,84158776,0,0x0,8
tick,0x7ff8e7af1be4,84174326,0,0x0,8
tick,0x7ff8e7af1be4,84190204,0,0x0,8
tick,0x7ff8e7af1be4,84205834,0,0x0,8
tick,0x7ff8e7af1be4,84221264,0,0x0,8
tick,0x7ff8e7af1be4,84237013,0,0x0,8
tick,0x7ff8e7af1be4,84252625,0,0x0,8
tick,0x7ff8e7af1be4,84268658,0,0x0,8
tick,0x7ff8e7af1be4,84284638,0,0x0,8
tick,0x7ff8e7af1be4,84300076,0,0x0,8
tick,0x7ff8e7af1be4,84315484,0,0x0,8
tick,0x7ff8e7af1be4,84331070,0,0x0,8
tick,0x7ff8e7af1be4,84346765,0,0x0,8
tick,0x7ff8e7af1be4,84362777,0,0x0,8
tick,0x7ff8e7af1be4,84378482,0,0x0,8
tick,0x7ff8e7af1be4,84393993,0,0x0,8
tick,0x7ff8e7af1be4,84409618,0,0x0,8
tick,0x7ff8e7af1be4,84425464,0,0x0,8
tick,0x7ff8e7af1be4,84440852,0,0x0,8
tick,0x7ff8e7af1be4,84456722,0,0x0,8
tick,0x7ff8e7af1be4,84472411,0,0x0,8
tick,0x7ff8e7af1be4,84488076,0,0x0,8
tick,0x7ff8e7af1be4,84497861,0,0x0,8
tick,0x7ff8e7af1be4,84501743,0,0x0,8
tick,0x7ff8e7af1be4,84503131,0,0x0,8
tick,0x7ff8e7af1be4,84518958,0,0x0,8
tick,0x7ff8e7af1be4,84534555,0,0x0,8
tick,0x7ff8e7af1be4,84550630,0,0x0,8
tick,0x7ff8e7af1be4,84566521,0,0x0,8
tick,0x7ff8e7af1be4,84582804,0,0x0,8
tick,0x7ff8e7af1be4,84598374,0,0x0,8
tick,0x7ff8e7af1be4,84613695,0,0x0,8
tick,0x7ff8e7af1be4,84629285,0,0x0,8
tick,0x7ff8e7af1be4,84644563,0,0x0,8
tick,0x7ff8e7af1be4,84660615,0,0x0,8
tick,0x7ff8e7af1be4,84676245,0,0x0,8
tick,0x7ff8e7af1be4,84691788,0,0x0,8
tick,0x7ff8e7af1be4,84707403,0,0x0,8
tick,0x7ff8e7af1be4,84723476,0,0x0,8
tick,0x7ff8e7af1be4,84738863,0,0x0,8
tick,0x7ff8e7af1be4,84755291,0,0x0,8
tick,0x7ff8e7af1be4,84771892,0,0x0,8
tick,0x7ff8e7af1be4,84786635,0,0x0,8
tick,0x7ff8e7af1be4,84802385,0,0x0,8
tick,0x7ff8e7af1be4,84818376,0,0x0,8
tick,0x7ff8e7af1be4,84834369,0,0x0,8
tick,0x7ff8e7af1be4,84850025,0,0x0,8
tick,0x7ff8e7af1be4,84865747,0,0x0,8
tick,0x7ff8e7af1be4,84881491,0,0x0,8
tick,0x7ff8e7af1be4,84897030,0,0x0,8
tick,0x7ff8e7af1be4,84912751,0,0x0,8
tick,0x7ff8e7af1be4,84928481,0,0x0,8
tick,0x7ff8e7af1be4,84943816,0,0x0,8
tick,0x7ff8e7af1be4,84963845,0,0x0,8
tick,0x7ff8e7af1be4,84975924,0,0x0,8
tick,0x7ff8e7af1be4,84991696,0,0x0,8
tick,0x7ff8e7af1be4,85006773,0,0x0,8
tick,0x7ff8e7af1be4,85022515,0,0x0,8
tick,0x7ff8e7af1be4,85038120,0,0x0,8
tick,0x7ff8e7af1be4,85053856,0,0x0,8
tick,0x7ff8e7af1be4,85070066,0,0x0,8
tick,0x7ff8e7af1be4,85078281,0,0x0,8
tick,0x7ff8e7af1be4,85094103,0,0x0,8
tick,0x7ff8e7af1be4,85110520,0,0x0,8
tick,0x7ff8e7af1be4,85125648,0,0x0,8
tick,0x7ff8e7af1be4,85141900,0,0x0,8
tick,0x7ff8e7af1be4,85157287,0,0x0,8
tick,0x7ff8e7af1be4,85173132,0,0x0,8
tick,0x7ff8e7af1be4,85187979,0,0x0,8
tick,0x7ff8e7af1be4,85204129,0,0x0,8
tick,0x7ff8e7af1be4,85219085,0,0x0,8
tick,0x7ff8e7af1be4,85234654,0,0x0,8
tick,0x7ff8e7af1be4,85250343,0,0x0,8
tick,0x7ff8e7af1be4,85266908,0,0x0,8
tick,0x7ff8e7af1be4,85283248,0,0x0,8
tick,0x7ff8e7af1be4,85301407,0,0x0,8
tick,0x7ff8e7af1be4,85313841,0,0x0,8
tick,0x7ff8e7af1be4,85329558,0,0x0,8
tick,0x7ff8e7af1be4,85344899,0,0x0,8
tick,0x7ff8e7af1be4,85360574,0,0x0,8
tick,0x7ff8e7af1be4,85376529,0,0x0,8
tick,0x7ff8e7af1be4,85391877,0,0x0,8
tick,0x7ff8e7af1be4,85407359,0,0x0,8
tick,0x7ff8e7af1be4,85423194,0,0x0,8
tick,0x7ff8e7af1be4,85438531,0,0x0,8
tick,0x7ff8e7af1be4,85454190,0,0x0,8
tick,0x7ff8e7af1be4,85470249,0,0x0,8
tick,0x7ff8e7af1be4,85486087,0,0x0,8
tick,0x7ff8e7af1be4,85501666,0,0x0,8
tick,0x7ff8e7af1be4,85517423,0,0x0,8
tick,0x7ff8e7af1be4,85532648,0,0x0,8
tick,0x7ff8e7af1be4,85549380,0,0x0,8
tick,0x7ff8e7af1be4,85565414,0,0x0,8
tick,0x7ff8e7af1be4,85581327,0,0x0,8
tick,0x7ff8e7af1be4,85597021,0,0x0,8
tick,0x7ff8e7af1be4,85613059,0,0x0,8
tick,0x7ff8e7af1be4,85628498,0,0x0,8
tick,0x7ff8e7af1be4,85644286,0,0x0,8
tick,0x7ff8e7af1be4,85665197,0,0x0,8
tick,0x7ff8e7af1be4,85676071,0,0x0,8
tick,0x7ff8e7af1be4,85691955,0,0x0,8
tick,0x7ff8e7af1be4,85708367,0,0x0,8
tick,0x7ff8e7af1be4,85723899,0,0x0,8
tick,0x7ff8e7af1be4,85739579,0,0x0,8
tick,0x7ff8e7af1be4,85755046,0,0x0,8
tick,0x7ff8e7af1be4,85772174,0,0x0,8
tick,0x7ff8e7af1be4,85787140,0,0x0,8
tick,0x7ff8e7af1be4,85803183,0,0x0,8
tick,0x7ff8e7af1be4,85818490,0,0x0,8
tick,0x7ff8e7af1be4,85834478,0,0x0,8
tick,0x7ff8e7af1be4,85850202,0,0x0,8
tick,0x7ff8e7af1be4,85866235,0,0x0,8
tick,0x7ff8e7af1be4,85882010,0,0x0,8
tick,0x7ff8e7af1be4,85897729,0,0x0,8
tick,0x7ff8e7af1be4,85913217,0,0x0,8
tick,0x7ff8e7af1be4,85929067,0,0x0,8
tick,0x7ff8e7af1be4,85944504,0,0x0,8
tick,0x7ff8e7af1be4,85960739,0,0x0,8
tick,0x7ff8e7af1be4,85976656,0,0x0,8
tick,0x7ff8e7af1be4,85992560,0,0x0,8
tick,0x7ff8e7af1be4,86008220,0,0x0,8
tick,0x7ff8e7af1be4,86023914,0,0x0,8
tick,0x7ff8e7af1be4,86027432,0,0x0,8
tick,0x7ff8e7af1be4,86044832,0,0x0,8
tick,0x7ff8e7af1be4,86061387,0,0x0,8
tick,0x7ff8e7af1be4,86076813,0,0x0,8
tick,0x7ff8e7af1be4,86092677,0,0x0,8
tick,0x7ff8e7af1be4,86108401,0,0x0,8
tick,0x7ff8e7af1be4,86123891,0,0x0,8
tick,0x7ff8e7af1be4,86139787,0,0x0,8
tick,0x7ff8e7af1be4,86155638,0,0x0,8
tick,0x7ff8e7af1be4,86171757,0,0x0,8
tick,0x7ff8e7af1be4,86187718,0,0x0,8
tick,0x7ff8e7af1be4,86203452,0,0x0,8
tick,0x7ff8e7af1be4,86219400,0,0x0,8
tick,0x7ff8e7af1be4,86235215,0,0x0,8
tick,0x7ff8e7af1be4,86251101,0,0x0,8
tick,0x7ff8e7af1be4,86267176,0,0x0,8
tick,0x7ff8e7af1be4,86283521,0,0x0,8
tick,0x7ff8e7af1be4,86298742,0,0x0,8
tick,0x7ff8e7af1be4,86313960,0,0x0,8
tick,0x7ff8e7af1be4,86329726,0,0x0,8
tick,0x7ff8e7af1be4,86345257,0,0x0,8
tick,0x7ff8e7af1be4,86360687,0,0x0,8
tick,0x7ff8e7af1be4,86376785,0,0x0,8
tick,0x7ff8e7af1be4,86392228,0,0x0,8
tick,0x7ff8e7af1be4,86407782,0,0x0,8
tick,0x7ff8e7af1be4,86423304,0,0x0,8
tick,0x7ff8e7af1be4,86438690,0,0x0,8
tick,0x7ff8e7af1be4,86454420,0,0x0,8
tick,0x7ff8e7af1be4,86470505,0,0x0,8
tick,0x7ff8e7af1be4,86486173,0,0x0,8
tick,0x7ff8e7af1be4,86502042,0,0x0,8
tick,0x7ff8e7af1be4,86517568,0,0x0,8
tick,0x7ff8e7af1be4,86533478,0,0x0,8
tick,0x7ff8e7af1be4,86549073,0,0x0,8
tick,0x7ff8e7af1be4,86550860,0,0x0,8
tick,0x7ff8e7af1be4,86554350,0,0x0,8
tick,0x7ff8e7af1be4,86556378,0,0x0,8
tick,0x7ff8e7af1be4,86557807,0,0x0,8
tick,0x7ff8e7af1be4,86559181,0,0x0,8
tick,0x7ff8e7af1be4,86575570,0,0x0,8
tick,0x7ff8e7af1be4,86591362,0,0x0,8
tick,0x7ff8e7af1be4,86607775,0,0x0,8
tick,0x7ff8e7af1be4,86623003,0,0x0,8
tick,0x7ff8e7af1be4,86638176,0,0x0,8
tick,0x7ff8e7af1be4,86653557,0,0x0,8
tick,0x7ff8e7af1be4,86669759,0,0x0,8
tick,0x7ff8e7af1be4,86686133,0,0x0,8
tick,0x7ff8e7af1be4,86702774,0,0x0,8
tick,0x7ff8e7af1be4,86716784,0,0x0,8
tick,0x7ff8e7af1be4,86732717,0,0x0,8
tick,0x7ff8e7af1be4,86748340,0,0x0,8
tick,0x7ff8e7af1be4,86765199,0,0x0,8
tick,0x7ff8e7af1be4,86780177,0,0x0,8
tick,0x7ff8e7af1be4,86795817,0,0x0,8
tick,0x7ff8e7af1be4,86811738,0,0x0,8
tick,0x7ff8e7af1be4,86828232,0,0x0,8
tick,0x7ff8e7af1be4,86843284,0,0x0,8
tick,0x7ff8e7af1be4,86858600,0,0x0,8
tick,0x7ff8e7af1be4,86874605,0,0x0,8
tick,0x7ff8e7af1be4,86890770,0,0x0,8
tick,0x7ff8e7af1be4,86905965,0,0x0,8
tick,0x7ff8e7af1be4,86921455,0,0x0,8
tick,0x7ff8e7af1be4,86937287,0,0x0,8
tick,0x7ff8e7af1be4,86953832,0,0x0,8
tick,0x7ff8e7af1be4,86969436,0,0x0,8
tick,0x7ff8e7af1be4,86984818,0,0x0,8
tick,0x7ff8e7af1be4,87000451,0,0x0,8
tick,0x7ff8e7af1be4,87015985,0,0x0,8
tick,0x7ff8e7af1be4,87031564,0,0x0,8
tick,0x7ff8e7af1be4,87047238,0,0x0,8
tick,0x7ff8e7af1be4,87066337,0,0x0,8
tick,0x7ff8e7af1be4,87067802,0,0x0,8
tick,0x7ff8e7af1be4,87069358,0,0x0,8
tick,0x7ff8e7af1be4,87070445,0,0x0,8
tick,0x7ff8e7af1be4,87087472,0,0x0,8
tick,0x7ff8e7af1be4,87102723,0,0x0,8
tick,0x7ff8e7af1be4,87118206,0,0x0,8
tick,0x7ff8e7af1be4,87134392,0,0x0,8
tick,0x7ff8e7af1be4,87149707,0,0x0,8
tick,0x7ff8e7af1be4,87165272,0,0x0,8
tick,0x7ff8e7af1be4,87181069,0,0x0,8
tick,0x7ff8e7af1be4,87196755,0,0x0,8
tick,0x7ff8e7af1be4,87212962,0,0x0,8
tick,0x7ff8e7af1be4,87228265,0,0x0,8
tick,0x7ff8e7af1be4,87244045,0,0x0,8
tick,0x7ff8e7af1be4,87259469,0,0x0,8
tick,0x7ff8e7af1be4,87275223,0,0x0,8
tick,0x7ff8e7af1be4,87291069,0,0x0,8
tick,0x7ff8e7af1be4,87314638,0,0x0,8
tick,0x7ff8e7af1be4,87321989,0,0x0,8
tick,0x7ff8e7af1be4,87337713,0,0x0,8
tick,0x7ff8e7af1be4,87354254,0,0x0,8
tick,0x7ff8e7af1be4,87369306,0,0x0,8
tick,0x7ff8e7af1be4,87386705,0,0x0,8
tick,0x7ff8e7af1be4,87402243,0,0x0,8
tick,0x7ff8e7af1be4,87419222,0,0x0,8
tick,0x7ff8e7af1be4,87434179,0,0x0,8
tick,0x7ff8e7af1be4,87449630,0,0x0,8
tick,0x7ff8e7af1be4,87466346,0,0x0,8
tick,0x7ff8e7af1be4,87481407,0,0x0,8
tick,0x7ff8e7af1be4,87497182,0,0x0,8
tick,0x7ff8e7af1be4,87512718,0,0x0,8
tick,0x7ff8e7af1be4,87528724,0,0x0,8
tick,0x7ff8e7af1be4,87544129,0,0x0,8
tick,0x7ff8e7af1be4,87560138,0,0x0,8
tick,0x7ff8e7af1be4,87575678,0,0x0,8
tick,0x7ff8e7af1be4,87591420,0,0x0,8
tick,0x7ff8e7af1be4,87607107,0,0x0,8
tick,0x7ff8e7af1be4,87616078,0,0x0,8
tick,0x7ff8e7af1be4,87632244,0,0x0,8
tick,0x7ff8e7af1be4,87647947,0,0x0,8
tick,0x7ff8e7af1be4,87664220,0,0x0,8
tick,0x7ff8e7af1be4,87679691,0,0x0,8
tick,0x7ff8e7af1be4,87696122,0,0x0,8
tick,0x7ff8e7af1be4,87711711,0,0x0,8
tick,0x7ff8e7af1be4,87727647,0,0x0,8
tick,0x7ff8e7af1be4,87743214,0,0x0,8
tick,0x7ff8e7af1be4,87758858,0,0x0,8
tick,0x7ff8e7af1be4,87774895,0,0x0,8
tick,0x7ff8e7af1be4,87790538,0,0x0,8
tick,0x7ff8e7af1be4,87806268,0,0x0,8
tick,0x7ff8e7af1be4,87822343,0,0x0,8
tick,0x7ff8e7af1be4,87838689,0,0x0,8
tick,0x7ff8e7af1be4,87854168,0,0x0,8
tick,0x7ff8e7af1be4,87870012,0,0x0,8
tick,0x7ff8e7af1be4,87885353,0,0x0,8
tick,0x7ff8e7af1be4,87901467,0,0x0,8
tick,0x7ff8e7af1be4,87917203,0,0x0,8
tick,0x7ff8e7af1be4,87932839,0,0x0,8
tick,0x7ff8e7af1be4,87948957,0,0x0,8
tick,0x7ff8e7af1be4,87965047,0,0x0,8
tick,0x7ff8e7af1be4,87981032,0,0x0,8
tick,0x7ff8e7af1be4,87996456,0,0x0,8
tick,0x7ff8e7af1be4,88012043,0,0x0,8
tick,0x7ff8e7af1be4,88027519,0,0x0,8
tick,0x7ff8e7af1be4,88043251,0,0x0,8
tick,0x7ff8e7af1be4,88058992,0,0x0,8
tick,0x7ff8e7af1be4,88075262,0,0x0,8
tick,0x7ff8e7af1be4,88090565,0,0x0,8
tick,0x7ff8e7af1be4,88106466,0,0x0,8
tick,0x7ff8e7af1be4,88121907,0,0x0,8
tick,0x7ff8e7af1be4,88137462,0,0x0,8
tick,0x7ff8e7af1be4,88153206,0,0x0,8
tick,0x7ff8e7af1be4,88169051,0,0x0,8
tick,0x7ff8e7af1be4,88184844,0,0x0,8
tick,0x7ff8e7af1be4,88200873,0,0x0,8
tick,0x7ff8e7af1be4,88216440,0,0x0,8
tick,0x7ff8e7af1be4,88231680,0,0x0,8
tick,0x7ff8e7af1be4,88247286,0,0x0,8
tick,0x7ff8e7af1be4,88263174,0,0x0,8
tick,0x7ff8e7af1be4,88278949,0,0x0,8
tick,0x7ff8e7af1be4,88294576,0,0x0,8
tick,0x7ff8e7af1be4,88310779,0,0x0,8
tick,0x7ff8e7af1be4,88325864,0,0x0,8
tick,0x7ff8e7af1be4,88341450,0,0x0,8
tick,0x7ff8e7af1be4,88357434,0,0x0,8
tick,0x7ff8e7af1be4,88373163,0,0x0,8
tick,0x7ff8e7af1be4,88389401,0,0x0,8
tick,0x7ff8e7af1be4,88404653,0,0x0,8
tick,0x7ff8e7af1be4,88420109,0,0x0,8
tick,0x7ff8e7af1be4,88435470,0,0x0,8
tick,0x7ff8e7af1be4,88451219,0,0x0,8
tick,0x7ff8e7af1be4,88467338,0,0x0,8
tick,0x7ff8e7af1be4,88483522,0,0x0,8
tick,0x7ff8e7af1be4,88499133,0,0x0,8
tick,0x7ff8e7af1be4,88515191,0,0x0,8
tick,0x7ff8e7af1be4,88530533,0,0x0,8
tick,0x7ff8e7af1be4,88546163,0,0x0,8
tick,0x7ff8e7af1be4,88561292,0,0x0,8
tick,0x7ff8e7af1be4,88577056,0,0x0,8
tick,0x7ff8e7af1be4,88592829,0,0x0,8
tick,0x7ff8e7af1be4,88610805,0,0x0,8
tick,0x7ff8e7af1be4,88629247,0,0x0,8
tick,0x7ff8e7af1be4,88644720,0,0x0,8
tick,0x7ff8e7af1be4,88661015,0,0x0,8
tick,0x7ff8e7af1be4,88676748,0,0x0,8
tick,0x7ff8e7af1be4,88693636,0,0x0,8
tick,0x7ff8e7af1be4,88708160,0,0x0,8
tick,0x7ff8e7af1be4,88723253,0,0x0,8
tick,0x7ff8e7af1be4,88738839,0,0x0,8
tick,0x7ff8e7af1be4,88754330,0,0x0,8
tick,0x7ff8e7af1be4,88770863,0,0x0,8
tick,0x7ff8e7af1be4,88786476,0,0x0,8
tick,0x7ff8e7af1be4,88802432,0,0x0,8
tick,0x7ff8e7af1be4,88817980,0,0x0,8
tick,0x7ff8e7af1be4,88833588,0,0x0,8
tick,0x7ff8e7af1be4,88849412,0,0x0,8
tick,0x7ff8e7af1be4,88865277,0,0x0,8
tick,0x7ff8e7af1be4,88880710,0,0x0,8
tick,0x7ff8e7af1be4,88896552,0,0x0,8
tick,0x7ff8e7af1be4,88911713,0,0x0,8
tick,0x7ff8e7af1be4,88927619,0,0x0,8
tick,0x7ff8e7af1be4,88942996,0,0x0,8
tick,0x7ff8e7af1be4,88958817,0,0x0,8
tick,0x7ff8e7af1be4,88974656,0,0x0,8
tick,0x7ff8e7af1be4,88990449,0,0x0,8
tick,0x7ff8e7af1be4,89005927,0,0x0,8
tick,0x7ff8e7af1be4,89021817,0,0x0,8
tick,0x7ff8e7af1be4,89037200,0,0x0,8
tick,0x7ff8e7af1be4,89052850,0,0x0,8
tick,0x7ff8e7af1be4,89069118,0,0x0,8
tick,0x7ff8e7af1be4,89084647,0,0x0,8
tick,0x7ff8e7af1be4,89100739,0,0x0,8
tick,0x7ff8e7af1be4,89115870,0,0x0,8
tick,0x7ff8e7af1be4,89131852,0,0x0,8
tick,0x7ff8e7af1be4,89147425,0,0x0,8
tick,0x7ff8e7af1be4,89163046,0,0x0,8
tick,0x7ff8e7af1be4,89178830,0,0x0,8
tick,0x7ff8e7af1be4,89194635,0,0x0,8
tick,0x7ff8e7af1be4,89210489,0,0x0,8
tick,0x7ff8e7af1be4,89226164,0,0x0,8
tick,0x7ff8e7af1be4,89241891,0,0x0,8
tick,0x7ff8e7af1be4,89257655,0,0x0,8
tick,0x7ff8e7af1be4,89273857,0,0x0,8
tick,0x7ff8e7af1be4,89289496,0,0x0,8
tick,0x7ff8e7af1be4,89304930,0,0x0,8
tick,0x7ff8e7af1be4,89321309,0,0x0,8
tick,0x7ff8e7af1be4,89337097,0,0x0,8
tick,0x7ff8e7af1be4,89353176,0,0x0,8
tick,0x7ff8e7af1be4,89369368,0,0x0,8
tick,0x7ff8e7af1be4,89385530,0,0x0,8
tick,0x7ff8e7af1be4,89401142,0,0x0,8
tick,0x7ff8e7af1be4,89417056,0,0x0,8
tick,0x7ff8e7af1be4,89432957,0,0x0,8
tick,0x7ff8e7af1be4,89448747,0,0x0,8
tick,0x7ff8e7af1be4,89464874,0,0x0,8
tick,0x7ff8e7af1be4,89480600,0,0x0,8
tick,0x7ff8e7af1be4,89496531,0,0x0,8
tick,0x7ff8e7af1be4,89512308,0,0x0,8
tick,0x7ff8e7af1be4,89527957,0,0x0,8
tick,0x7ff8e7af1be4,89543601,0,0x0,8
tick,0x7ff8e7af1be4,89559152,0,0x0,8
tick,0x7ff8e7af1be4,89575532,0,0x0,8
tick,0x7ff8e7af1be4,89590934,0,0x0,8
tick,0x7ff8e7af1be4,89607381,0,0x0,8
tick,0x7ff8e7af1be4,89623691,0,0x0,8
tick,0x7ff8e7af1be4,89639003,0,0x0,8
tick,0x7ff8e7af1be4,89654859,0,0x0,8
tick,0x7ff8e7af1be4,89670973,0,0x0,8
tick,0x7ff8e7af1be4,89686832,0,0x0,8
tick,0x7ff8e7af1be4,89703511,0,0x0,8
tick,0x7ff8e7af1be4,89718176,0,0x0,8
tick,0x7ff8e7af1be4,89734029,0,0x0,8
tick,0x7ff8e7af1be4,89749623,0,0x0,8
tick,0x7ff8e7af1be4,89765182,0,0x0,8
tick,0x7ff8e7af1be4,89780799,0,0x0,8
tick,0x7ff8e7af1be4,89796504,0,0x0,8
tick,0x7ff8e7af1be4,89828876,0,0x0,8
tick,0x7ff8e7af1be4,89828917,0,0x0,8
tick,0x7ff8e7af1be4,89844206,0,0x0,8
tick,0x7ff8e7af1be4,89860408,0,0x0,8
tick,0x7ff8e7af1be4,89889488,0,0x0,8
tick,0x7ff8e7af1be4,89891886,0,0x0,8
tick,0x7ff8e7af1be4,89899989,0,0x0,8
tick,0x7ff8e7af1be4,89908535,0,0x0,8
tick,0x7ff8e7af1be4,89924447,0,0x0,8
tick,0x7ff8e7af1be4,89938845,0,0x0,8
tick,0x7ff8e7af1be4,89949474,0,0x0,8
tick,0x7ff8e7af1be4,89965338,0,0x0,8
tick,0x7ff8e7af1be4,89973781,0,0x0,8
tick,0x7ff8e7af1be4,89990177,0,0x0,8
tick,0x7ff8e7af1be4,89998233,0,0x0,8
tick,0x7ff8e7af1be4,90014189,0,0x0,8
tick,0x7ff8e7af1be4,90022169,0,0x0,8
tick,0x7ff8e7af1be4,90043854,0,0x0,8
tick,0x7ff8e7af1be4,90050774,0,0x0,8
tick,0x7ff8e7af1be4,90062601,0,0x0,8
tick,0x7ff8e7af1be4,90078263,0,0x0,8
tick,0x7ff8e7af1be4,90094082,0,0x0,8
tick,0x7ff8e7af1be4,90109970,0,0x0,8
tick,0x7ff8e7af1be4,90125844,0,0x0,8
tick,0x7ff8e7af1be4,90141603,0,0x0,8
tick,0x7ff8e7af1be4,90157074,0,0x0,8
tick,0x7ff8e7af1be4,90173011,0,0x0,8
tick,0x7ff8e7af1be4,90188900,0,0x0,8
tick,0x7ff8e7af1be4,90205096,0,0x0,8
tick,0x7ff8e7af1be4,90220972,0,0x0,8
tick,0x7ff8e7af1be4,90236637,0,0x0,8
tick,0x7ff8e7af1be4,90252219,0,0x0,8
tick,0x7ff8e7af1be4,90268331,0,0x0,8
tick,0x7ff8e7af1be4,90283982,0,0x0,8
tick,0x7ff8e7af1be4,90299662,0,0x0,8
tick,0x7ff8e7af1be4,90315450,0,0x0,8
tick,0x7ff8e7af1be4,90331383,0,0x0,8
tick,0x7ff8e7af1be4,90347439,0,0x0,8
tick,0x7ff8e7af1be4,90363425,0,0x0,8
tick,0x7ff8e7af1be4,90379143,0,0x0,8
tick,0x7ff8e7af1be4,90395476,0,0x0,8
tick,0x7ff8e7af1be4,90411755,0,0x0,8
tick,0x7ff8e7af1be4,90427101,0,0x0,8
tick,0x7ff8e7af1be4,90442762,0,0x0,8
tick,0x7ff8e7af1be4,90459087,0,0x0,8
tick,0x7ff8e7af1be4,90474900,0,0x0,8
tick,0x7ff8e7af1be4,90491723,0,0x0,8
tick,0x7ff8e7af1be4,90507304,0,0x0,8
tick,0x7ff8e7af1be4,90522675,0,0x0,8
tick,0x7ff8e7af1be4,90538690,0,0x0,8
tick,0x7ff8e7af1be4,90554654,0,0x0,8
tick,0x7ff8e7af1be4,90570577,0,0x0,8
tick,0x7ff8e7af1be4,90586128,0,0x0,8
tick,0x7ff8e7af1be4,90601647,0,0x0,8
tick,0x7ff8e7af1be4,90617319,0,0x0,8
tick,0x7ff8e7af1be4,90633562,0,0x0,8
tick,0x7ff8e7af1be4,90649467,0,0x0,8
tick,0x7ff8e7af1be4,90665043,0,0x0,8
tick,0x7ff8e7af1be4,90681111,0,0x0,8
tick,0x7ff8e7af1be4,90697284,0,0x0,8
tick,0x7ff8e7af1be4,90712993,0,0x0,8
tick,0x7ff8e7af1be4,90728810,0,0x0,8
tick,0x7ff8e7af1be4,90744788,0,0x0,8
tick,0x7ff8e7af1be4,90761133,0,0x0,8
tick,0x7ff8e7af1be4,90776773,0,0x0,8
tick,0x7ff8e7af1be4,90792525,0,0x0,8
tick,0x7ff8e7af1be4,90808228,0,0x0,8
tick,0x7ff8e7af1be4,90823933,0,0x0,8
tick,0x7ff8e7af1be4,90839363,0,0x0,8
tick,0x7ff8e7af1be4,90855193,0,0x0,8
tick,0x7ff8e7af1be4,90871673,0,0x0,8
tick,0x7ff8e7af1be4,90887326,0,0x0,8
tick,0x7ff8e7af1be4,90903360,0,0x0,8
tick,0x7ff8e7af1be4,90919538,0,0x0,8
tick,0x7ff8e7af1be4,90935537,0,0x0,8
tick,0x7ff8e7af1be4,90951504,0,0x0,8
tick,0x7ff8e7af1be4,90967444,0,0x0,8
tick,0x7ff8e7af1be4,90983430,0,0x0,8
tick,0x7ff8e7af1be4,91000011,0,0x0,8
tick,0x7ff8e7af1be4,91015831,0,0x0,8
tick,0x7ff8e7af1be4,91031966,0,0x0,8
tick,0x7ff8e7af1be4,91047929,0,0x0,8
tick,0x7ff8e7af1be4,91063870,0,0x0,8
tick,0x7ff8e7af1be4,91080424,0,0x0,8
tick,0x7ff8e7af1be4,91096380,0,0x0,8
tick,0x7ff8e7af1be4,91112452,0,0x0,8
tick,0x7ff8e7af1be4,91128325,0,0x0,8
tick,0x7ff8e7af1be4,91145288,0,0x0,8
tick,0x7ff8e7af1be4,91161033,0,0x0,8
tick,0x7ff8e7af1be4,91176698,0,0x0,8
tick,0x7ff8e7af1be4,91192633,0,0x0,8
tick,0x7ff8e7af1be4,91208510,0,0x0,8
tick,0x7ff8e7af1be4,91224437,0,0x0,8
tick,0x7ff8e7af1be4,91240394,0,0x0,8
tick,0x7ff8e7af1be4,91256168,0,0x0,8
tick,0x7ff8e7af1be4,91272186,0,0x0,8
tick,0x7ff8e7af1be4,91287963,0,0x0,8
tick,0x7ff8e7af1be4,91304021,0,0x0,8
tick,0x7ff8e7af1be4,91319934,0,0x0,8
tick,0x7ff8e7af1be4,91336060,0,0x0,8
tick,0x7ff8e7af1be4,91351528,0,0x0,8
tick,0x7ff8e7af1be4,91367180,0,0x0,8
tick,0x7ff8e7af1be4,91383082,0,0x0,8
tick,0x7ff8e7af1be4,91400114,0,0x0,8
tick,0x7ff8e7af1be4,91415712,0,0x0,8
tick,0x7ff8e7af1be4,91431796,0,0x0,8
tick,0x7ff8e7af1be4,91446556,0,0x0,8
tick,0x7ff8e7af1be4,91462278,0,0x0,8
tick,0x7ff8e7af1be4,91478416,0,0x0,8
tick,0x7ff8e7af1be4,91494589,0,0x0,8
tick,0x7ff8e7af1be4,91510453,0,0x0,8
tick,0x7ff8e7af1be4,91528128,0,0x0,8
tick,0x7ff8e7af1be4,91542882,0,0x0,8
tick,0x7ff8e7af1be4,91557855,0,0x0,8
tick,0x7ff8e7af1be4,91573769,0,0x0,8
tick,0x7ff8e7af1be4,91589723,0,0x0,8
tick,0x7ff8e7af1be4,91605360,0,0x0,8
tick,0x7ff8e7af1be4,91620758,0,0x0,8
tick,0x7ff8e7af1be4,91636772,0,0x0,8
tick,0x7ff8e7af1be4,91653177,0,0x0,8
tick,0x7ff8e7af1be4,91668587,0,0x0,8
tick,0x7ff8e7af1be4,91684103,0,0x0,8
tick,0x7ff8e7af1be4,91699698,0,0x0,8
tick,0x7ff8e7af1be4,91715494,0,0x0,8
tick,0x7ff8e7af1be4,91731326,0,0x0,8
tick,0x7ff8e7af1be4,91747242,0,0x0,8
tick,0x7ff8e7af1be4,91763470,0,0x0,8
tick,0x7ff8e7af1be4,91779004,0,0x0,8
tick,0x7ff8e7af1be4,91794989,0,0x0,8
tick,0x7ff8e7af1be4,91810493,0,0x0,8
tick,0x7ff8e7af1be4,91826546,0,0x0,8
tick,0x7ff8e7af1be4,91842643,0,0x0,8
tick,0x7ff8e7af1be4,91858317,0,0x0,8
tick,0x7ff8e7af1be4,91875341,0,0x0,8
tick,0x7ff8e7af1be4,91889645,0,0x0,8
tick,0x7ff8e7af1be4,91905354,0,0x0,8
tick,0x7ff8e7af1be4,91921314,0,0x0,8
tick,0x7ff8e7af1be4,91937181,0,0x0,8
tick,0x7ff8e7af1be4,91953410,0,0x0,8
tick,0x7ff8e7af1be4,91969507,0,0x0,8
tick,0x7ff8e7af1be4,91985439,0,0x0,8
tick,0x7ff8e7af1be4,92001560,0,0x0,8
tick,0x7ff8e7af1be4,92017072,0,0x0,8
tick,0x7ff8e7af1be4,92033335,0,0x0,8
tick,0x7ff8e7af1be4,92049588,0,0x0,8
tick,0x7ff8e7af1be4,92065641,0,0x0,8
tick,0x7ff8e7af1be4,92081133,0,0x0,8
tick,0x7ff8e7af1be4,92098086,0,0x0,8
tick,0x7ff8e7af1be4,92113099,0,0x0,8
tick,0x7ff8e7af1be4,92128689,0,0x0,8
tick,0x7ff8e7af1be4,92144741,0,0x0,8
tick,0x7ff8e7af1be4,92161751,0,0x0,8
tick,0x7ff8e7af1be4,92176852,0,0x0,8
tick,0x7ff8e7af1be4,92192685,0,0x0,8
tick,0x7ff8e7af1be4,92195467,0,0x0,8
tick,0x7ff8e7af1be4,92211730,0,0x0,8
tick,0x7ff8e7af1be4,92227245,0,0x0,8
tick,0x7ff8e7af1be4,92245747,0,0x0,8
tick,0x7ff8e7af1be4,92259173,0,0x0,8
tick,0x7ff8e7af1be4,92275268,0,0x0,8
tick,0x7ff8e7af1be4,92291321,0,0x0,8
tick,0x7ff8e7af1be4,92307284,0,0x0,8
tick,0x7ff8e7af1be4,92323383,0,0x0,8
tick,0x7ff8e7af1be4,92340340,0,0x0,8
tick,0x7ff8e7af1be4,92355925,0,0x0,8
tick,0x7ff8e7af1be4,92371092,0,0x0,8
tick,0x7ff8e7af1be4,92387127,0,0x0,8
tick,0x7ff8e7af1be4,92402720,0,0x0,8
tick,0x7ff8e7af1be4,92419035,0,0x0,8
tick,0x7ff8e7af1be4,92434602,0,0x0,8
tick,0x7ff8e7af1be4,92450543,0,0x0,8
tick,0x7ff8e7af1be4,92466627,0,0x0,8
tick,0x7ff8e7af1be4,92482420,0,0x0,8
tick,0x7ff8e7af1be4,92498074,0,0x0,8
tick,0x7ff8e7af1be4,92513920,0,0x0,8
tick,0x7ff8e7af1be4,92529810,0,0x0,8
tick,0x7ff8e7af1be4,92545757,0,0x0,8
tick,0x7ff8e7af1be4,92561752,0,0x0,8
tick,0x7ff8e7af1be4,92577958,0,0x0,8
tick,0x7ff8e7af1be4,92594323,0,0x0,8
tick,0x7ff8e7af1be4,92610255,0,0x0,8
tick,0x7ff8e7af1be4,92627055,0,0x0,8
tick,0x7ff8e7af1be4,92641901,0,0x0,8
tick,0x7ff8e7af1be4,92657974,0,0x0,8
tick,0x7ff8e7af1be4,92674324,0,0x0,8
tick,0x7ff8e7af1be4,92690306,0,0x0,8
tick,0x7ff8e7af1be4,92705636,0,0x0,8
tick,0x7ff8e7af1be4,92721722,0,0x0,8
tick,0x7ff8e7af1be4,92737769,0,0x0,8
tick,0x7ff8e7af1be4,92753537,0,0x0,8
tick,0x7ff8e7af1be4,92769274,0,0x0,8
tick,0x7ff8e7af1be4,92785143,0,0x0,8
tick,0x7ff8e7af1be4,92801048,0,0x0,8
tick,0x7ff8e7af1be4,92817451,0,0x0,8
tick,0x7ff8e7af1be4,92832950,0,0x0,8
tick,0x7ff8e7af1be4,92849216,0,0x0,8
tick,0x7ff8e7af1be4,92865803,0,0x0,8
tick,0x7ff8e7af1be4,92882220,0,0x0,8
tick,0x7ff8e7af1be4,92896993,0,0x0,8
tick,0x7ff8e7af1be4,92913094,0,0x0,8
tick,0x7ff8e7af1be4,92929130,0,0x0,8
tick,0x7ff8e7af1be4,92945130,0,0x0,8
tick,0x7ff8e7af1be4,92961410,0,0x0,8
tick,0x7ff8e7af1be4,92977486,0,0x0,8
tick,0x7ff8e7af1be4,92993266,0,0x0,8
tick,0x7ff8e7af1be4,93009730,0,0x0,8
tick,0x7ff8e7af1be4,93025510,0,0x0,8
tick,0x7ff8e7af1be4,93041819,0,0x0,8
tick,0x7ff8e7af1be4,93057636,0,0x0,8
tick,0x7ff8e7af1be4,93073814,0,0x0,8
tick,0x7ff8e7af1be4,93090010,0,0x0,8
tick,0x7ff8e7af1be4,93105260,0,0x0,8
tick,0x7ff8e7af1be4,93121631,0,0x0,8
tick,0x7ff8e7af1be4,93137223,0,0x0,8
tick,0x7ff8e7af1be4,93153022,0,0x0,8
tick,0x7ff8e7af1be4,93169373,0,0x0,8
tick,0x7ff8e7af1be4,93185186,0,0x0,8
tick,0x7ff8e7af1be4,93200980,0,0x0,8
tick,0x7ff8e7af1be4,93217017,0,0x0,8
tick,0x7ff8e7af1be4,93232504,0,0x0,8
tick,0x7ff8e7af1be4,93248739,0,0x0,8
tick,0x7ff8e7af1be4,93265084,0,0x0,8
tick,0x7ff8e7af1be4,93280932,0,0x0,8
tick,0x7ff8e7af1be4,93296939,0,0x0,8
tick,0x7ff8e7af1be4,93312965,0,0x0,8
tick,0x7ff8e7af1be4,93329057,0,0x0,8
tick,0x7ff8e7af1be4,93346375,0,0x0,8
tick,0x7ff8e7af1be4,93361520,0,0x0,8
tick,0x7ff8e7af1be4,93377742,0,0x0,8
tick,0x7ff8e7af1be4,93393789,0,0x0,8
tick,0x7ff8e7af1be4,93409774,0,0x0,8
tick,0x7ff8e7af1be4,93426548,0,0x0,8
tick,0x7ff8e7af1be4,93441267,0,0x0,8
tick,0x7ff8e7af1be4,93457549,0,0x0,8
tick,0x7ff8e7af1be4,93472655,0,0x0,8
tick,0x7ff8e7af1be4,93489220,0,0x0,8
tick,0x7ff8e7af1be4,93504579,0,0x0,8
tick,0x7ff8e7af1be4,93520352,0,0x0,8
tick,0x7ff8e7af1be4,93535977,0,0x0,8
tick,0x7ff8e7af1be4,93551701,0,0x0,8
tick,0x7ff8e7af1be4,93567558,0,0x0,8
tick,0x7ff8e7af1be4,93583615,0,0x0,8
tick,0x7ff8e7af1be4,93599902,0,0x0,8
tick,0x7ff8e7af1be4,93615504,0,0x0,8
tick,0x7ff8e7af1be4,93631681,0,0x0,8
tick,0x7ff8e7af1be4,93647567,0,0x0,8
tick,0x7ff8e7af1be4,93662989,0,0x0,8
tick,0x7ff8e7af1be4,93678999,0,0x0,8
tick,0x7ff8e7af1be4,93695449,0,0x0,8
tick,0x7ff8e7af1be4,93711554,0,0x0,8
tick,0x7ff8e7af1be4,93727339,0,0x0,8
tick,0x7ff8e7af1be4,93743279,0,0x0,8
tick,0x7ff8e7af1be4,93759310,0,0x0,8
tick,0x7ff8e7af1be4,93775312,0,0x0,8
tick,0x7ff8e7af1be4,93790951,0,0x0,8
tick,0x7ff8e7af1be4,93806836,0,0x0,8
tick,0x7ff8e7af1be4,93822451,0,0x0,8
tick,0x7ff8e7af1be4,93838652,0,0x0,8
tick,0x7ff8e7af1be4,93854348,0,0x0,8
tick,0x7ff8e7af1be4,93871069,0,0x0,8
tick,0x7ff8e7af1be4,93886166,0,0x0,8
tick,0x7ff8e7af1be4,93901819,0,0x0,8
tick,0x7ff8e7af1be4,93917602,0,0x0,8
tick,0x7ff8e7af1be4,93933467,0,0x0,8
tick,0x7ff8e7af1be4,93948985,0,0x0,8
tick,0x7ff8e7af1be4,93964727,0,0x0,8
tick,0x7ff8e7af1be4,93980662,0,0x0,8
tick,0x7ff8e7af1be4,93996161,0,0x0,8
tick,0x7ff8e7af1be4,94012269,0,0x0,8
tick,0x7ff8e7af1be4,94028237,0,0x0,8
tick,0x7ff8e7af1be4,94044184,0,0x0,8
tick,0x7ff8e7af1be4,94059576,0,0x0,8
tick,0x7ff8e7af1be4,94075598,0,0x0,8
tick,0x7ff8e7af1be4,94091324,0,0x0,8
tick,0x7ff8e7af1be4,94107292,0,0x0,8
tick,0x7ff8e7af1be4,94122565,0,0x0,8
tick,0x7ff8e7af1be4,94139755,0,0x0,8
tick,0x7ff8e7af1be4,94155948,0,0x0,8
tick,0x7ff8e7af1be4,94171147,0,0x0,8
tick,0x7ff8e7af1be4,94186684,0,0x0,8
tick,0x7ff8e7af1be4,94202576,0,0x0,8
tick,0x7ff8e7af1be4,94218520,0,0x0,8
tick,0x7ff8e7af1be4,94233769,0,0x0,8
tick,0x7ff8e7af1be4,94249173,0,0x0,8
tick,0x7ff8e7af1be4,94264814,0,0x0,8
tick,0x7ff8e7af1be4,94280824,0,0x0,8
tick,0x7ff8e7af1be4,94296560,0,0x0,8
tick,0x7ff8e7af1be4,94312278,0,0x0,8
tick,0x7ff8e7af1be4,94328279,0,0x0,8
tick,0x7ff8e7af1be4,94344364,0,0x0,8
tick,0x7ff8e7af1be4,94360120,0,0x0,8
tick,0x7ff8e7af1be4,94376417,0,0x0,8
tick,0x7ff8e7af1be4,94392336,0,0x0,8
tick,0x7ff8e7af1be4,94408344,0,0x0,8
tick,0x7ff8e7af1be4,94424483,0,0x0,8
tick,0x7ff8e7af1be4,94440139,0,0x0,8
tick,0x7ff8e7af1be4,94455932,0,0x0,8
tick,0x7ff8e7af1be4,94471990,0,0x0,8
tick,0x7ff8e7af1be4,94488866,0,0x0,8
tick,0x7ff8e7af1be4,94503761,0,0x0,8
tick,0x7ff8e7af1be4,94519274,0,0x0,8
tick,0x7ff8e7af1be4,94534920,0,0x0,8
tick,0x7ff8e7af1be4,94550582,0,0x0,8
tick,0x7ff8e7af1be4,94566141,0,0x0,8
tick,0x7ff8e7af1be4,94582294,0,0x0,8
tick,0x7ff8e7af1be4,94598581,0,0x0,8
tick,0x7ff8e7af1be4,94614826,0,0x0,8
tick,0x7ff8e7af1be4,94630678,0,0x0,8
tick,0x7ff8e7af1be4,94648582,0,0x0,8
tick,0x7ff8e7af1be4,94661949,0,0x0,8
tick,0x7ff8e7af1be4,94677971,0,0x0,8
tick,0x7ff8e7af1be4,94693788,0,0x0,8
tick,0x7ff8e7af1be4,94709549,0,0x0,8
tick,0x7ff8e7af1be4,94725684,0,0x0,8
tick,0x7ff8e7af1be4,94741434,0,0x0,8
tick,0x7ff8e7af1be4,94757550,0,0x0,8
tick,0x7ff8e7af1be4,94773134,0,0x0,8
tick,0x7ff8e7af1be4,94789235,0,0x0,8
tick,0x7ff8e7af1be4,94805337,0,0x0,8
tick,0x7ff8e7af1be4,94821105,0,0x0,8
tick,0x7ff8e7af1be4,94836873,0,0x0,8
tick,0x7ff8e7af1be4,94852539,0,0x0,8
tick,0x7ff8e7af1be4,94868632,0,0x0,8
tick,0x7ff8e7af1be4,94885331,0,0x0,8
tick,0x7ff8e7af1be4,94901254,0,0x0,8
tick,0x7ff8e7af1be4,94915846,0,0x0,8
tick,0x7ff8e7af1be4,94931429,0,0x0,8
tick,0x7ff8e7af1be4,94947471,0,0x0,8
tick,0x7ff8e7af1be4,94963231,0,0x0,8
tick,0x7ff8e7af1be4,94979216,0,0x0,8
tick,0x7ff8e7af1be4,94995541,0,0x0,8
tick,0x7ff8e7af1be4,95011069,0,0x0,8
tick,0x7ff8e7af1be4,95026666,0,0x0,8
tick,0x7ff8e7af1be4,95042268,0,0x0,8
tick,0x7ff8e7af1be4,95058170,0,0x0,8
tick,0x7ff8e7af1be4,95074058,0,0x0,8
tick,0x7ff8e7af1be4,95090100,0,0x0,8
tick,0x7ff8e7af1be4,95105699,0,0x0,8
tick,0x7ff8e7af1be4,95121279,0,0x0,8
tick,0x7ff8e7af1be4,95137034,0,0x0,8
tick,0x7ff8e7af1be4,95152702,0,0x0,8
tick,0x7ff8e7af1be4,95168585,0,0x0,8
tick,0x7ff8e7af1be4,95184442,0,0x0,8
tick,0x7ff8e7af1be4,95200098,0,0x0,8
tick,0x7ff8e7af1be4,95216047,0,0x0,8
tick,0x7ff8e7af1be4,95231423,0,0x0,8
tick,0x7ff8e7af1be4,95246993,0,0x0,8
tick,0x7ff8e7af1be4,95262765,0,0x0,8
tick,0x7ff8e7af1be4,95278714,0,0x0,8
tick,0x7ff8e7af1be4,95294539,0,0x0,8
tick,0x7ff8e7af1be4,95310047,0,0x0,8
tick,0x7ff8e7af1be4,95325986,0,0x0,8
tick,0x7ff8e7af1be4,95341594,0,0x0,8
tick,0x7ff8e7af1be4,95357716,0,0x0,8
tick,0x7ff8e7af1be4,95373776,0,0x0,8
tick,0x7ff8e7af1be4,95389892,0,0x0,8
tick,0x7ff8e7af1be4,95405629,0,0x0,8
tick,0x7ff8e7af1be4,95421738,0,0x0,8
tick,0x7ff8e7af1be4,95437375,0,0x0,8
tick,0x7ff8e7af1be4,95453730,0,0x0,8
tick,0x7ff8e7af1be4,95469761,0,0x0,8
tick,0x7ff8e7af1be4,95485794,0,0x0,8
tick,0x7ff8e7af1be4,95501406,0,0x0,8
tick,0x7ff8e7af1be4,95517193,0,0x0,8
tick,0x7ff8e7af1be4,95532740,0,0x0,8
tick,0x7ff8e7af1be4,95548757,0,0x0,8
tick,0x7ff8e7af1be4,95563853,0,0x0,8
tick,0x7ff8e7af1be4,95579607,0,0x0,8
tick,0x7ff8e7af1be4,95595186,0,0x0,8
tick,0x7ff8e7af1be4,95611067,0,0x0,8
tick,0x7ff8e7af1be4,95626843,0,0x0,8
tick,0x7ff8e7af1be4,95643045,0,0x0,8
tick,0x7ff8e7af1be4,95646731,0,0x0,8
tick,0x7ff8e7af1be4,95662504,0,0x0,8
tick,0x7ff8e7af1be4,95678886,0,0x0,8
tick,0x7ff8e7af1be4,95694225,0,0x0,8
tick,0x7ff8e7af1be4,95710250,0,0x0,8
tick,0x7ff8e7af1be4,95726284,0,0x0,8
tick,0x7ff8e7af1be4,95742139,0,0x0,8
tick,0x7ff8e7af1be4,95757606,0,0x0,8
tick,0x7ff8e7af1be4,95773685,0,0x0,8
tick,0x7ff8e7af1be4,95777051,0,0x0,8
tick,0x7ff8e7af1be4,95778464,0,0x0,8
tick,0x7ff8e7af1be4,95779498,0,0x0,8
tick,0x7ff8e7af1be4,95795663,0,0x0,8
tick,0x7ff8e7af1be4,95811741,0,0x0,8
tick,0x7ff8e7af1be4,95827628,0,0x0,8
tick,0x7ff8e7af1be4,95843360,0,0x0,8
tick,0x7ff8e7af1be4,95858975,0,0x0,8
tick,0x7ff8e7af1be4,95874694,0,0x0,8
tick,0x7ff8e7af1be4,95890807,0,0x0,8
tick,0x7ff8e7af1be4,95907321,0,0x0,8
tick,0x7ff8e7af1be4,95922353,0,0x0,8
tick,0x7ff8e7af1be4,95937906,0,0x0,8
tick,0x7ff8e7af1be4,95953736,0,0x0,8
tick,0x7ff8e7af1be4,95969429,0,0x0,8
tick,0x7ff8e7af1be4,95985566,0,0x0,8
tick,0x7ff8e7af1be4,96001317,0,0x0,8
tick,0x7ff8e7af1be4,96017172,0,0x0,8
tick,0x7ff8e7af1be4,96033483,0,0x0,8
tick,0x7ff8e7af1be4,96049451,0,0x0,8
tick,0x7ff8e7af1be4,96065617,0,0x0,8
tick,0x7ff8e7af1be4,96081703,0,0x0,8
tick,0x7ff8e7af1be4,96097553,0,0x0,8
tick,0x7ff8e7af1be4,96113940,0,0x0,8
tick,0x7ff8e7af1be4,96129373,0,0x0,8
tick,0x7ff8e7af1be4,96145270,0,0x0,8
tick,0x7ff8e7af1be4,96161157,0,0x0,8
tick,0x7ff8e7af1be4,96176450,0,0x0,8
tick,0x7ff8e7af1be4,96192033,0,0x0,8
tick,0x7ff8e7af1be4,96207650,0,0x0,8
tick,0x7ff8e7af1be4,96223753,0,0x0,8
tick,0x7ff8e7af1be4,96239729,0,0x0,8
tick,0x7ff8e7af1be4,96255475,0,0x0,8
tick,0x7ff8e7af1be4,96271651,0,0x0,8
tick,0x7ff8e7af1be4,96287572,0,0x0,8
tick,0x7ff8e7af1be4,96300433,0,0x0,8
tick,0x7ff8e7af1be4,96301535,0,0x0,8
tick,0x7ff8e7af1be4,96317908,0,0x0,8
tick,0x7ff8e7af1be4,96333723,0,0x0,8
tick,0x7ff8e7af1be4,96349248,0,0x0,8
tick,0x7ff8e7af1be4,96364846,0,0x0,8
tick,0x7ff8e7af1be4,96380686,0,0x0,8
tick,0x7ff8e7af1be4,96396625,0,0x0,8
tick,0x7ff8e7af1be4,96412376,0,0x0,8
tick,0x7ff8e7af1be4,96428000,0,0x0,8
tick,0x7ff8e7af1be4,96443948,0,0x0,8
tick,0x7ff8e7af1be4,96459912,0,0x0,8
tick,0x7ff8e7af1be4,96475457,0,0x0,8
tick,0x7ff8e7af1be4,96491275,0,0x0,8
tick,0x7ff8e7af1be4,96507070,0,0x0,8
tick,0x7ff8e7af1be4,96522576,0,0x0,8
tick,0x7ff8e7af1be4,96538760,0,0x0,8
tick,0x7ff8e7af1be4,96554404,0,0x0,8
tick,0x7ff8e7af1be4,96570101,0,0x0,8
tick,0x7ff8e7af1be4,96586040,0,0x0,8
tick,0x7ff8e7af1be4,96601716,0,0x0,8
tick,0x7ff8e7af1be4,96617599,0,0x0,8
tick,0x7ff8e7af1be4,96633405,0,0x0,8
tick,0x7ff8e7af1be4,96649339,0,0x0,8
tick,0x7ff8e7af1be4,96664780,0,0x0,8
tick,0x7ff8e7af1be4,96680848,0,0x0,8
tick,0x7ff8e7af1be4,96696617,0,0x0,8
tick,0x7ff8e7af1be4,96712186,0,0x0,8
tick,0x7ff8e7af1be4,96728338,0,0x0,8
tick,0x7ff8e7af1be4,96743916,0,0x0,8
tick,0x7ff8e7af1be4,96760145,0,0x0,8
tick,0x7ff8e7af1be4,96776215,0,0x0,8
tick,0x7ff8e7af1be4,96791854,0,0x0,8
tick,0x7ff8e7af1be4,96808083,0,0x0,8
tick,0x7ff8e7af1be4,96811348,0,0x0,8
tick,0x7ff8e7af1be4,96813759,0,0x0,8
tick,0x7ff8e7af1be4,96829725,0,0x0,8
tick,0x7ff8e7af1be4,96845941,0,0x0,8
tick,0x7ff8e7af1be4,96861422,0,0x0,8
tick,0x7ff8e7af1be4,96877207,0,0x0,8
tick,0x7ff8e7af1be4,96892939,0,0x0,8
tick,0x7ff8e7af1be4,96909029,0,0x0,8
tick,0x7ff8e7af1be4,96924348,0,0x0,8
tick,0x7ff8e7af1be4,96940446,0,0x0,8
tick,0x7ff8e7af1be4,96957053,0,0x0,8
tick,0x7ff8e7af1be4,96972388,0,0x0,8
tick,0x7ff8e7af1be4,96977784,0,0x0,8
tick,0x7ff8e7af1be4,96988310,0,0x0,8
tick,0x7ff8e7af1be4,97004202,0,0x0,8
tick,0x7ff8e7af1be4,97020697,0,0x0,8
tick,0x7ff8e7af1be4,97036751,0,0x0,8
tick,0x7ff8e7af1be4,97051467,0,0x0,8
tick,0x7ff8e7af1be4,97066957,0,0x0,8
tick,0x7ff8e7af1be4,97082681,0,0x0,8
tick,0x7ff8e7af1be4,97098756,0,0x0,8
tick,0x7ff8e7af1be4,97114771,0,0x0,8
tick,0x7ff8e7af1be4,97131090,0,0x0,8
tick,0x7ff8e7af1be4,97146901,0,0x0,8
tick,0x7ff8e7af1be4,97162595,0,0x0,8
tick,0x7ff8e7af1be4,97178400,0,0x0,8
tick,0x7ff8e7af1be4,97195478,0,0x0,8
tick,0x7ff8e7af1be4,97210578,0,0x0,8
tick,0x7ff8e7af1be4,97226556,0,0x0,8
tick,0x7ff8e7af1be4,97242386,0,0x0,8
tick,0x7ff8e7af1be4,97258091,0,0x0,8
tick,0x7ff8e7af1be4,97274097,0,0x0,8
tick,0x7ff8e7af1be4,97289943,0,0x0,8
tick,0x7ff8e7af1be4,97305780,0,0x0,8
tick,0x7ff8e7af1be4,97321757,0,0x0,8
tick,0x7ff8e7af1be4,97324775,0,0x0,8
tick,0x7ff8e7af1be4,97326254,0,0x0,8
tick,0x7ff8e7af1be4,97342294,0,0x0,8
tick,0x7ff8e7af1be4,97358190,0,0x0,8
tick,0x7ff8e7af1be4,97374221,0,0x0,8
tick,0x7ff8e7af1be4,97390243,0,0x0,8
tick,0x7ff8e7af1be4,97406207,0,0x0,8
tick,0x7ff8e7af1be4,97422340,0,0x0,8
tick,0x7ff8e7af1be4,97438080,0,0x0,8
tick,0x7ff8e7af1be4,97453901,0,0x0,8
tick,0x7ff8e7af1be4,97470033,0,0x0,8
tick,0x7ff8e7af1be4,97485897,0,0x0,8
tick,0x7ff8e7af1be4,97501958,0,0x0,8
tick,0x7ff8e7af1be4,97517694,0,0x0,8
tick,0x7ff8e7af1be4,97533766,0,0x0,8
tick,0x7ff8e7af1be4,97549770,0,0x0,8
tick,0x7ff8e7af1be4,97565487,0,0x0,8
tick,0x7ff8e7af1be4,97581163,0,0x0,8
tick,0x7ff8e7af1be4,97596904,0,0x0,8
tick,0x7ff8e7af1be4,97612730,0,0x0,8
tick,0x7ff8e7af1be4,97628409,0,0x0,8
tick,0x7ff8e7af1be4,97644615,0,0x0,8
tick,0x7ff8e7af1be4,97660536,0,0x0,8
tick,0x7ff8e7af1be4,97676641,0,0x0,8
tick,0x7ff8e7af1be4,97692666,0,0x0,8
tick,0x7ff8e7af1be4,97708518,0,0x0,8
tick,0x7ff8e7af1be4,97724296,0,0x0,8
tick,0x7ff8e7af1be4,97739903,0,0x0,8
tick,0x7ff8e7af1be4,97755827,0,0x0,8
tick,0x7ff8e7af1be4,97771411,0,0x0,8
tick,0x7ff8e7af1be4,97787565,0,0x0,8
tick,0x7ff8e7af1be4,97803007,0,0x0,8
tick,0x7ff8e7af1be4,97818977,0,0x0,8
tick,0x7ff8e7af1be4,97834580,0,0x0,8
tick,0x7ff8e7af1be4,97850649,0,0x0,8
tick,0x7ff8e7af1be4,97866347,0,0x0,8
tick,0x7ff8e7af1be4,97882315,0,0x0,8
tick,0x7ff8e7af1be4,97898456,0,0x0,8
tick,0x7ff8e7af1be4,97914181,0,0x0,8
tick,0x7ff8e7af1be4,97929772,0,0x0,8
tick,0x7ff8e7af1be4,97945583,0,0x0,8
tick,0x7ff8e7af1be4,97961283,0,0x0,8
tick,0x7ff8e7af1be4,97977394,0,0x0,8
tick,0x7ff8e7af1be4,97993458,0,0x0,8
tick,0x7ff8e7af1be4,98009358,0,0x0,8
tick,0x7ff8e7af1be4,98025193,0,0x0,8
tick,0x7ff8e7af1be4,98041418,0,0x0,8
tick,0x7ff8e7af1be4,98056879,0,0x0,8
tick,0x7ff8e7af1be4,98072861,0,0x0,8
tick,0x7ff8e7af1be4,98088840,0,0x0,8
tick,0x7ff8e7af1be4,98104661,0,0x0,8
tick,0x7ff8e7af1be4,98120373,0,0x0,8
tick,0x7ff8e7af1be4,98136184,0,0x0,8
tick,0x7ff8e7af1be4,98151939,0,0x0,8
tick,0x7ff8e7af1be4,98167506,0,0x0,8
tick,0x7ff8e7af1be4,98183722,0,0x0,8
tick,0x7ff8e7af1be4,98199400,0,0x0,8
tick,0x7ff8e7af1be4,98215232,0,0x0,8
tick,0x7ff8e7af1be4,98230907,0,0x0,8
tick,0x7ff8e7af1be4,98246869,0,0x0,8
tick,0x7ff8e7af1be4,98262397,0,0x0,8
tick,0x7ff8e7af1be4,98278426,0,0x0,8
tick,0x7ff8e7af1be4,98294456,0,0x0,8
tick,0x7ff8e7af1be4,98310255,0,0x0,8
tick,0x7ff8e7af1be4,98326274,0,0x0,8
tick,0x7ff8e7af1be4,98344309,0,0x0,8
tick,0x7ff8e7af1be4,98358043,0,0x0,8
tick,0x7ff8e7af1be4,98374800,0,0x0,8
tick,0x7ff8e7af1be4,98390546,0,0x0,8
tick,0x7ff8e7af1be4,98406495,0,0x0,8
tick,0x7ff8e7af1be4,98422329,0,0x0,8
tick,0x7ff8e7af1be4,98438530,0,0x0,8
tick,0x7ff8e7af1be4,98454381,0,0x0,8
tick,0x7ff8e7af1be4,98470303,0,0x0,8
tick,0x7ff8e7af1be4,98486241,0,0x0,8
tick,0x7ff8e7af1be4,98502326,0,0x0,8
tick,0x7ff8e7af1be4,98518343,0,0x0,8
tick,0x7ff8e7af1be4,98534438,0,0x0,8
tick,0x7ff8e7af1be4,98550343,0,0x0,8
tick,0x7ff8e7af1be4,98566176,0,0x0,8
tick,0x7ff8e7af1be4,98581992,0,0x0,8
tick,0x7ff8e7af1be4,98597564,0,0x0,8
tick,0x7ff8e7af1be4,98613292,0,0x0,8
tick,0x7ff8e7af1be4,98628807,0,0x0,8
tick,0x7ff8e7af1be4,98644513,0,0x0,8
tick,0x7ff8e7af1be4,98660842,0,0x0,8
tick,0x7ff8e7af1be4,98676233,0,0x0,8
tick,0x7ff8e7af1be4,98692279,0,0x0,8
tick,0x7ff8e7af1be4,98708126,0,0x0,8
tick,0x7ff8e7af1be4,98723211,0,0x0,8
tick,0x7ff8e7af1be4,98738870,0,0x0,8
tick,0x7ff8e7af1be4,98754773,0,0x0,8
tick,0x7ff8e7af1be4,98770394,0,0x0,8
tick,0x7ff8e7af1be4,98786614,0,0x0,8
tick,0x7ff8e7af1be4,98802291,0,0x0,8
tick,0x7ff8e7af1be4,98818224,0,0x0,8
tick,0x7ff8e7af1be4,98834322,0,0x0,8
tick,0x7ff8e7af1be4,98850674,0,0x0,8
tick,0x7ff8e7af1be4,98866341,0,0x0,8
tick,0x7ff8e7af1be4,98881959,0,0x0,8
tick,0x7ff8e7af1be4,98898124,0,0x0,8
tick,0x7ff8e7af1be4,98913840,0,0x0,8
tick,0x7ff8e7af1be4,98929945,0,0x0,8
tick,0x7ff8e7af1be4,98946026,0,0x0,8
tick,0x7ff8e7af1be4,98961495,0,0x0,8
tick,0x7ff8e7af1be4,98977338,0,0x0,8
tick,0x7ff8e7af1be4,98993393,0,0x0,8
tick,0x7ff8e7af1be4,99009133,0,0x0,8
tick,0x7ff8e7af1be4,99025190,0,0x0,8
tick,0x7ff8e7af1be4,99041326,0,0x0,8
tick,0x7ff8e7af1be4,99057218,0,0x0,8
tick,0x7ff8e7af1be4,99072878,0,0x0,8
tick,0x7ff8e7af1be4,99088714,0,0x0,8
tick,0x7ff8e7af1be4,99104841,0,0x0,8
tick,0x7ff8e7af1be4,99121073,0,0x0,8
tick,0x7ff8e7af1be4,99136460,0,0x0,8
tick,0x7ff8e7af1be4,99152422,0,0x0,8
tick,0x7ff8e7af1be4,99168012,0,0x0,8
tick,0x7ff8e7af1be4,99184066,0,0x0,8
tick,0x7ff8e7af1be4,99199834,0,0x0,8
tick,0x7ff8e7af1be4,99216019,0,0x0,8
tick,0x7ff8e7af1be4,99231982,0,0x0,8
tick,0x7ff8e7af1be4,99247944,0,0x0,8
tick,0x7ff8e7af1be4,99263897,0,0x0,8
tick,0x7ff8e7af1be4,99279642,0,0x0,8
tick,0x7ff8e7af1be4,99295513,0,0x0,8
tick,0x7ff8e7af1be4,99311665,0,0x0,8
tick,0x7ff8e7af1be4,99327366,0,0x0,8
tick,0x7ff8e7af1be4,99343174,0,0x0,8
tick,0x7ff8e7af1be4,99358640,0,0x0,8
tick,0x7ff8e7af1be4,99374578,0,0x0,8
tick,0x7ff8e7af1be4,99390658,0,0x0,8
tick,0x7ff8e7af1be4,99406124,0,0x0,8
tick,0x7ff8e7af1be4,99421777,0,0x0,8
tick,0x7ff8e7af1be4,99437776,0,0x0,8
tick,0x7ff8e7af1be4,99453858,0,0x0,8
tick,0x7ff8e7af1be4,99469748,0,0x0,8
tick,0x7ff8e7af1be4,99485817,0,0x0,8
tick,0x7ff8e7af1be4,99501695,0,0x0,8
tick,0x7ff8e7af1be4,99517492,0,0x0,8
tick,0x7ff8e7af1be4,99533585,0,0x0,8
tick,0x7ff8e7af1be4,99549623,0,0x0,8
tick,0x7ff8e7af1be4,99565495,0,0x0,8
tick,0x7ff8e7af1be4,99581348,0,0x0,8
tick,0x7ff8e7af1be4,99597272,0,0x0,8
tick,0x7ff8e7af1be4,99613330,0,0x0,8
tick,0x7ff8e7af1be4,99629241,0,0x0,8
tick,0x7ff8e7af1be4,99644867,0,0x0,8
tick,0x7ff8e7af1be4,99660534,0,0x0,8
tick,0x7ff8e7af1be4,99676070,0,0x0,8
tick,0x7ff8e7af1be4,99692104,0,0x0,8
tick,0x7ff8e7af1be4,99707653,0,0x0,8
tick,0x7ff8e7af1be4,99723257,0,0x0,8
tick,0x7ff8e7af1be4,99739290,0,0x0,8
tick,0x7ff8e7af1be4,99755055,0,0x0,8
tick,0x7ff8e7af1be4,99771086,0,0x0,8
tick,0x7ff8e7af1be4,99787091,0,0x0,8
tick,0x7ff8e7af1be4,99803246,0,0x0,8
tick,0x7ff8e7af1be4,99818861,0,0x0,8
tick,0x7ff8e7af1be4,99834388,0,0x0,8
tick,0x7ff8e7af1be4,99849990,0,0x0,8
tick,0x7ff8e7af1be4,99868714,0,0x0,8
tick,0x7ff8e7af1be4,99882060,0,0x0,8
tick,0x7ff8e7af1be4,99898631,0,0x0,8
tick,0x7ff8e7af1be4,99914693,0,0x0,8
tick,0x7ff8e7af1be4,99931112,0,0x0,8
tick,0x7ff8e7af1be4,99946583,0,0x0,8
tick,0x7ff8e7af1be4,99962219,0,0x0,8
tick,0x7ff8e7af1be4,99977937,0,0x0,8
tick,0x7ff8e7af1be4,99993075,0,0x0,8
tick,0x7ff8e7af1be4,100009406,0,0x0,8
tick,0x7ff8e7af1be4,100025377,0,0x0,8
tick,0x7ff8e7af1be4,100040924,0,0x0,8
tick,0x7ff8e7af1be4,100056992,0,0x0,8
tick,0x7ff8e7af1be4,100073182,0,0x0,8
tick,0x7ff8e7af1be4,100088833,0,0x0,8
tick,0x7ff8e7af1be4,100104400,0,0x0,8
tick,0x7ff8e7af1be4,100120166,0,0x0,8
tick,0x7ff8e7af1be4,100136120,0,0x0,8
tick,0x7ff8e7af1be4,100151757,0,0x0,8
tick,0x7ff8e7af1be4,100167448,0,0x0,8
tick,0x7ff8e7af1be4,100182772,0,0x0,8
tick,0x7ff8e7af1be4,100198528,0,0x0,8
tick,0x7ff8e7af1be4,100214186,0,0x0,8
tick,0x7ff8e7af1be4,100230126,0,0x0,8
tick,0x7ff8e7af1be4,100245996,0,0x0,8
tick,0x7ff8e7af1be4,100261856,0,0x0,8
tick,0x7ff8e7af1be4,100277798,0,0x0,8
tick,0x7ff8e7af1be4,100293590,0,0x0,8
tick,0x7ff8e7af1be4,100309343,0,0x0,8
tick,0x7ff8e7af1be4,100325476,0,0x0,8
tick,0x7ff8e7af1be4,100340849,0,0x0,8
tick,0x7ff8e7af1be4,100356776,0,0x0,8
tick,0x7ff8e7af1be4,100372716,0,0x0,8
tick,0x7ff8e7af1be4,100388394,0,0x0,8
tick,0x7ff8e7af1be4,100404422,0,0x0,8
tick,0x7ff8e7af1be4,100421710,0,0x0,8
tick,0x7ff8e7af1be4,100436648,0,0x0,8
tick,0x7ff8e7af1be4,100451857,0,0x0,8
tick,0x7ff8e7af1be4,100467576,0,0x0,8
tick,0x7ff8e7af1be4,100483371,0,0x0,8
tick,0x7ff8e7af1be4,100499052,0,0x0,8
tick,0x7ff8e7af1be4,100514860,0,0x0,8
tick,0x7ff8e7af1be4,100531361,0,0x0,8
tick,0x7ff8e7af1be4,100550211,0,0x0,8
tick,0x7ff8e7af1be4,100562825,0,0x0,8
tick,0x7ff8e7af1be4,100579049,0,0x0,8
tick,0x7ff8e7af1be4,100594981,0,0x0,8
tick,0x7ff8e7af1be4,100611006,0,0x0,8
tick,0x7ff8e7af1be4,100626625,0,0x0,8
tick,0x7ff8e7af1be4,100642408,0,0x0,8
tick,0x7ff8e7af1be4,100658473,0,0x0,8
tick,0x7ff8e7af1be4,100674502,0,0x0,8
tick,0x7ff8e7af1be4,100690660,0,0x0,8
tick,0x7ff8e7af1be4,100706662,0,0x0,8
tick,0x7ff8e7af1be4,100722703,0,0x0,8
tick,0x7ff8e7af1be4,100738705,0,0x0,8
tick,0x7ff8e7af1be4,100754627,0,0x0,8
tick,0x7ff8e7af1be4,100770444,0,0x0,8
tick,0x7ff8e7af1be4,100786234,0,0x0,8
tick,0x7ff8e7af1be4,100802082,0,0x0,8
tick,0x7ff8e7af1be4,100817653,0,0x0,8
tick,0x7ff8e7af1be4,100833300,0,0x0,8
tick,0x7ff8e7af1be4,100849278,0,0x0,8
tick,0x7ff8e7af1be4,100865233,0,0x0,8
tick,0x7ff8e7af1be4,100881410,0,0x0,8
tick,0x7ff8e7af1be4,100882878,0,0x0,8
tick,0x7ff8e7af1be4,100898646,0,0x0,8
tick,0x7ff8e7af1be4,100914426,0,0x0,8
tick,0x7ff8e7af1be4,100930020,0,0x0,8
tick,0x7ff8e7af1be4,100946910,0,0x0,8
tick,0x7ff8e7af1be4,100961908,0,0x0,8
tick,0x7ff8e7af1be4,100977909,0,0x0,8
tick,0x7ff8e7af1be4,100993794,0,0x0,8
tick,0x7ff8e7af1be4,101010031,0,0x0,8
tick,0x7ff8e7af1be4,101025539,0,0x0,8
tick,0x7ff8e7af1be4,101041816,0,0x0,8
tick,0x7ff8e7af1be4,101058249,0,0x0,8
tick,0x7ff8e7af1be4,101074286,0,0x0,8
tick,0x7ff8e7af1be4,101090568,0,0x0,8
tick,0x7ff8e7af1be4,101105892,0,0x0,8
tick,0x7ff8e7af1be4,101122302,0,0x0,8
tick,0x7ff8e7af1be4,101138721,0,0x0,8
tick,0x7ff8e7af1be4,101154281,0,0x0,8
tick,0x7ff8e7af1be4,101170437,0,0x0,8
tick,0x7ff8e7af1be4,101186001,0,0x0,8
tick,0x7ff8e7af1be4,101201934,0,0x0,8
tick,0x7ff8e7af1be4,101218382,0,0x0,8
tick,0x7ff8e7af1be4,101234079,0,0x0,8
tick,0x7ff8e7af1be4,101249786,0,0x0,8
tick,0x7ff8e7af1be4,101265959,0,0x0,8
tick,0x7ff8e7af1be4,101282864,0,0x0,8
tick,0x7ff8e7af1be4,101298432,0,0x0,8
tick,0x7ff8e7af1be4,101314348,0,0x0,8
tick,0x7ff8e7af1be4,101335457,0,0x0,8
tick,0x7ff8e7af1be4,101345736,0,0x0,8
tick,0x7ff8e7af1be4,101360455,0,0x0,8
tick,0x7ff8e7af1be4,101376512,0,0x0,8
tick,0x7ff8e7af1be4,101392704,0,0x0,8
tick,0x7ff8e7af1be4,101408568,0,0x0,8
tick,0x7ff8e7af1be4,101424343,0,0x0,8
tick,0x7ff8e7af1be4,101448502,0,0x0,8
tick,0x7ff8e7af1be4,101464237,0,0x0,8
tick,0x7ff8e7af1be4,101480296,0,0x0,8
tick,0x7ff8e7af1be4,101496259,0,0x0,8
tick,0x7ff8e7af1be4,101512131,0,0x0,8
tick,0x7ff8e7af1be4,101528175,0,0x0,8
tick,0x7ff8e7af1be4,101543843,0,0x0,8
tick,0x7ff8e7af1be4,101560186,0,0x0,8
tick,0x7ff8e7af1be4,101576040,0,0x0,8
tick,0x7ff8e7af1be4,101592085,0,0x0,8
tick,0x7ff8e7af1be4,101608050,0,0x0,8
tick,0x7ff8e7af1be4,101623977,0,0x0,8
tick,0x7ff8e7af1be4,101639504,0,0x0,8
tick,0x7ff8e7af1be4,101655389,0,0x0,8
tick,0x7ff8e7af1be4,101671062,0,0x0,8
tick,0x7ff8e7af1be4,101686849,0,0x0,8
tick,0x7ff8e7af1be4,101702648,0,0x0,8
tick,0x7ff8e7af1be4,101718579,0,0x0,8
tick,0x7ff8e7af1be4,101734701,0,0x0,8
tick,0x7ff8e7af1be4,101750272,0,0x0,8
tick,0x7ff8e7af1be4,101766351,0,0x0,8
tick,0x7ff8e7af1be4,101783163,0,0x0,8
tick,0x7ff8e7af1be4,101799329,0,0x0,8
tick,0x7ff8e7af1be4,101816601,0,0x0,8
tick,0x7ff8e7af1be4,101834457,0,0x0,8
tick,0x7ff8e7af1be4,101848314,0,0x0,8
tick,0x7ff8e7af1be4,101864093,0,0x0,8
tick,0x7ff8e7af1be4,101880241,0,0x0,8
tick,0x7ff8e7af1be4,101896243,0,0x0,8
tick,0x7ff8e7af1be4,101912145,0,0x0,8
tick,0x7ff8e7af1be4,101928407,0,0x0,8
tick,0x7ff8e7af1be4,101944557,0,0x0,8
tick,0x7ff8e7af1be4,101961312,0,0x0,8
tick,0x7ff8e7af1be4,101976830,0,0x0,8
tick,0x7ff8e7af1be4,101992939,0,0x0,8
tick,0x7ff8e7af1be4,102009093,0,0x0,8
tick,0x7ff8e7af1be4,102025175,0,0x0,8
tick,0x7ff8e7af1be4,102041217,0,0x0,8
tick,0x7ff8e7af1be4,102056799,0,0x0,8
tick,0x7ff8e7af1be4,102072585,0,0x0,8
tick,0x7ff8e7af1be4,102088416,0,0x0,8
tick,0x7ff8e7af1be4,102104375,0,0x0,8
tick,0x7ff8e7af1be4,102119947,0,0x0,8
tick,0x7ff8e7af1be4,102136069,0,0x0,8
tick,0x7ff8e7af1be4,102151709,0,0x0,8
tick,0x7ff8e7af1be4,102167703,0,0x0,8
tick,0x7ff8e7af1be4,102183965,0,0x0,8
tick,0x7ff8e7af1be4,102199677,0,0x0,8
tick,0x7ff8e7af1be4,102215312,0,0x0,8
tick,0x7ff8e7af1be4,102230952,0,0x0,8
tick,0x7ff8e7af1be4,102246641,0,0x0,8
tick,0x7ff8e7af1be4,102262284,0,0x0,8
tick,0x7ff8e7af1be4,102278103,0,0x0,8
tick,0x7ff8e7af1be4,102293836,0,0x0,8
tick,0x7ff8e7af1be4,102309768,0,0x0,8
tick,0x7ff8e7af1be4,102325148,0,0x0,8
tick,0x7ff8e7af1be4,102341212,0,0x0,8
tick,0x7ff8e7af1be4,102357312,0,0x0,8
tick,0x7ff8e7af1be4,102373115,0,0x0,8
tick,0x7ff8e7af1be4,102388991,0,0x0,8
tick,0x7ff8e7af1be4,102406281,0,0x0,8
tick,0x7ff8e7af1be4,102422564,0,0x0,8
tick,0x7ff8e7af1be4,102440043,0,0x0,8
tick,0x7ff8e7af1be4,102454699,0,0x0,8
tick,0x7ff8e7af1be4,102470508,0,0x0,8
tick,0x7ff8e7af1be4,102486271,0,0x0,8
tick,0x7ff8e7af1be4,102502688,0,0x0,8
tick,0x7ff8e7af1be4,102519427,0,0x0,8
tick,0x7ff8e7af1be4,102534796,0,0x0,8
tick,0x7ff8e7af1be4,102549809,0,0x0,8
tick,0x7ff8e7af1be4,102565397,0,0x0,8
tick,0x7ff8e7af1be4,102581294,0,0x0,8
tick,0x7ff8e7af1be4,102597316,0,0x0,8
tick,0x7ff8e7af1be4,102613639,0,0x0,8
tick,0x7ff8e7af1be4,102629842,0,0x0,8
tick,0x7ff8e7af1be4,102645614,0,0x0,8
tick,0x7ff8e7af1be4,102661879,0,0x0,8
tick,0x7ff8e7af1be4,102678276,0,0x0,8
tick,0x7ff8e7af1be4,102694153,0,0x0,8
tick,0x7ff8e7af1be4,102709955,0,0x0,8
tick,0x7ff8e7af1be4,102725695,0,0x0,8
tick,0x7ff8e7af1be4,102741559,0,0x0,8
tick,0x7ff8e7af1be4,102757845,0,0x0,8
tick,0x7ff8e7af1be4,102773887,0,0x0,8
tick,0x7ff8e7af1be4,102789967,0,0x0,8
tick,0x7ff8e7af1be4,102805810,0,0x0,8
tick,0x7ff8e7af1be4,102821378,0,0x0,8
tick,0x7ff8e7af1be4,102837376,0,0x0,8
tick,0x7ff8e7af1be4,102853251,0,0x0,8
tick,0x7ff8e7af1be4,102868767,0,0x0,8
tick,0x7ff8e7af1be4,102884640,0,0x0,8
tick,0x7ff8e7af1be4,102900418,0,0x0,8
tick,0x7ff8e7af1be4,102917486,0,0x0,8
tick,0x7ff8e7af1be4,102932648,0,0x0,8
tick,0x7ff8e7af1be4,102948393,0,0x0,8
tick,0x7ff8e7af1be4,102964270,0,0x0,8
tick,0x7ff8e7af1be4,102979720,0,0x0,8
tick,0x7ff8e7af1be4,102995707,0,0x0,8
tick,0x7ff8e7af1be4,103011459,0,0x0,8
tick,0x7ff8e7af1be4,103027239,0,0x0,8
tick,0x7ff8e7af1be4,103043038,0,0x0,8
tick,0x7ff8e7af1be4,103059477,0,0x0,8
tick,0x7ff8e7af1be4,103075421,0,0x0,8
tick,0x7ff8e7af1be4,103091465,0,0x0,8
tick,0x7ff8e7af1be4,103108023,0,0x0,8
tick,0x7ff8e7af1be4,103124758,0,0x0,8
tick,0x7ff8e7af1be4,103139845,0,0x0,8
tick,0x7ff8e7af1be4,103155457,0,0x0,8
tick,0x7ff8e7af1be4,103171277,0,0x0,8
tick,0x7ff8e7af1be4,103186766,0,0x0,8
tick,0x7ff8e7af1be4,103202539,0,0x0,8
tick,0x7ff8e7af1be4,103218626,0,0x0,8
tick,0x7ff8e7af1be4,103234828,0,0x0,8
tick,0x7ff8e7af1be4,103251174,0,0x0,8
tick,0x7ff8e7af1be4,103267282,0,0x0,8
tick,0x7ff8e7af1be4,103283086,0,0x0,8
tick,0x7ff8e7af1be4,103298822,0,0x0,8
tick,0x7ff8e7af1be4,103314942,0,0x0,8
tick,0x7ff8e7af1be4,103331399,0,0x0,8
tick,0x7ff8e7af1be4,103346554,0,0x0,8
tick,0x7ff8e7af1be4,103363209,0,0x0,8
tick,0x7ff8e7af1be4,103378847,0,0x0,8
tick,0x7ff8e7af1be4,103394232,0,0x0,8
tick,0x7ff8e7af1be4,103410901,0,0x0,8
tick,0x7ff8e7af1be4,103428441,0,0x0,8
tick,0x7ff8e7af1be4,103445473,0,0x0,8
tick,0x7ff8e7af1be4,103459992,0,0x0,8
tick,0x7ff8e7af1be4,103475834,0,0x0,8
tick,0x7ff8e7af1be4,103491295,0,0x0,8
tick,0x7ff8e7af1be4,103506985,0,0x0,8
tick,0x7ff8e7af1be4,103522814,0,0x0,8
tick,0x7ff8e7af1be4,103538957,0,0x0,8
tick,0x7ff8e7af1be4,103555434,0,0x0,8
tick,0x7ff8e7af1be4,103571096,0,0x0,8
tick,0x7ff8e7af1be4,103587404,0,0x0,8
tick,0x7ff8e7af1be4,103603419,0,0x0,8
tick,0x7ff8e7af1be4,103619031,0,0x0,8
tick,0x7ff8e7af1be4,103634917,0,0x0,8
tick,0x7ff8e7af1be4,103651313,0,0x0,8
tick,0x7ff8e7af1be4,103666944,0,0x0,8
tick,0x7ff8e7af1be4,103682925,0,0x0,8
tick,0x7ff8e7af1be4,103698744,0,0x0,8
tick,0x7ff8e7af1be4,103714991,0,0x0,8
tick,0x7ff8e7af1be4,103730379,0,0x0,8
tick,0x7ff8e7af1be4,103746115,0,0x0,8
tick,0x7ff8e7af1be4,103762486,0,0x0,8
tick,0x7ff8e7af1be4,103778358,0,0x0,8
tick,0x7ff8e7af1be4,103794457,0,0x0,8
tick,0x7ff8e7af1be4,103811093,0,0x0,8
tick,0x7ff8e7af1be4,103826594,0,0x0,8
tick,0x7ff8e7af1be4,103842327,0,0x0,8
tick,0x7ff8e7af1be4,103858669,0,0x0,8
tick,0x7ff8e7af1be4,103874568,0,0x0,8
tick,0x7ff8e7af1be4,103890575,0,0x0,8
tick,0x7ff8e7af1be4,103906040,0,0x0,8
tick,0x7ff8e7af1be4,103921857,0,0x0,8
tick,0x7ff8e7af1be4,103939602,0,0x0,8
tick,0x7ff8e7af1be4,103954713,0,0x0,8
tick,0x7ff8e7af1be4,103970679,0,0x0,8
tick,0x7ff8e7af1be4,103982531,0,0x0,8
tick,0x7ff8e7af1be4,103986326,0,0x0,8
tick,0x7ff8e7af1be4,104002131,0,0x0,8
tick,0x7ff8e7af1be4,104018176,0,0x0,8
tick,0x7ff8e7af1be4,104034435,0,0x0,8
tick,0x7ff8e7af1be4,104050565,0,0x0,8
tick,0x7ff8e7af1be4,104066844,0,0x0,8
tick,0x7ff8e7af1be4,104082715,0,0x0,8
tick,0x7ff8e7af1be4,104099171,0,0x0,8
tick,0x7ff8e7af1be4,104114197,0,0x0,8
tick,0x7ff8e7af1be4,104130248,0,0x0,8
tick,0x7ff8e7af1be4,104146457,0,0x0,8
tick,0x7ff8e7af1be4,104162442,0,0x0,8
tick,0x7ff8e7af1be4,104178546,0,0x0,8
tick,0x7ff8e7af1be4,104194337,0,0x0,8
tick,0x7ff8e7af1be4,104210843,0,0x0,8
tick,0x7ff8e7af1be4,104226339,0,0x0,8
tick,0x7ff8e7af1be4,104242180,0,0x0,8
tick,0x7ff8e7af1be4,104257600,0,0x0,8
tick,0x7ff8e7af1be4,104273338,0,0x0,8
tick,0x7ff8e7af1be4,104290097,0,0x0,8
tick,0x7ff8e7af1be4,104305547,0,0x0,8
tick,0x7ff8e7af1be4,104321343,0,0x0,8
tick,0x7ff8e7af1be4,104337575,0,0x0,8
tick,0x7ff8e7af1be4,104353286,0,0x0,8
tick,0x7ff8e7af1be4,104369187,0,0x0,8
tick,0x7ff8e7af1be4,104385548,0,0x0,8
tick,0x7ff8e7af1be4,104401039,0,0x0,8
tick,0x7ff8e7af1be4,104416469,0,0x0,8
tick,0x7ff8e7af1be4,104432263,0,0x0,8
tick,0x7ff8e7af1be4,104449026,0,0x0,8
tick,0x7ff8e7af1be4,104465823,0,0x0,8
tick,0x7ff8e7af1be4,104482003,0,0x0,8
tick,0x7ff8e7af1be4,104497731,0,0x0,8
tick,0x7ff8e7af1be4,104513758,0,0x0,8
tick,0x7ff8e7af1be4,104529643,0,0x0,8
tick,0x7ff8e7af1be4,104545767,0,0x0,8
tick,0x7ff8e7af1be4,104561676,0,0x0,8
tick,0x7ff8e7af1be4,104577520,0,0x0,8
tick,0x7ff8e7af1be4,104594073,0,0x0,8
tick,0x7ff8e7af1be4,104609490,0,0x0,8
tick,0x7ff8e7af1be4,104625078,0,0x0,8
tick,0x7ff8e7af1be4,104640925,0,0x0,8
tick,0x7ff8e7af1be4,104656369,0,0x0,8
tick,0x7ff8e7af1be4,104671956,0,0x0,8
tick,0x7ff8e7af1be4,104687989,0,0x0,8
tick,0x7ff8e7af1be4,104703507,0,0x0,8
tick,0x7ff8e7af1be4,104719620,0,0x0,8
tick,0x7ff8e7af1be4,104735279,0,0x0,8
tick,0x7ff8e7af1be4,104750879,0,0x0,8
tick,0x7ff8e7af1be4,104766944,0,0x0,8
tick,0x7ff8e7af1be4,104783153,0,0x0,8
tick,0x7ff8e7af1be4,104799361,0,0x0,8
tick,0x7ff8e7af1be4,104814657,0,0x0,8
tick,0x7ff8e7af1be4,104830291,0,0x0,8
tick,0x7ff8e7af1be4,104847200,0,0x0,8
tick,0x7ff8e7af1be4,104863959,0,0x0,8
tick,0x7ff8e7af1be4,104878525,0,0x0,8
tick,0x7ff8e7af1be4,104894752,0,0x0,8
tick,0x7ff8e7af1be4,104911217,0,0x0,8
tick,0x7ff8e7af1be4,104926600,0,0x0,8
tick,0x7ff8e7af1be4,104941960,0,0x0,8
tick,0x7ff8e7af1be4,104957309,0,0x0,8
tick,0x7ff8e7af1be4,104974120,0,0x0,8
tick,0x7ff8e7af1be4,104990228,0,0x0,8
tick,0x7ff8e7af1be4,105006036,0,0x0,8
tick,0x7ff8e7af1be4,105022218,0,0x0,8
tick,0x7ff8e7af1be4,105037845,0,0x0,8
tick,0x7ff8e7af1be4,105053639,0,0x0,8
tick,0x7ff8e7af1be4,105069416,0,0x0,8
tick,0x7ff8e7af1be4,105085500,0,0x0,8
tick,0x7ff8e7af1be4,105100827,0,0x0,8
tick,0x7ff8e7af1be4,105116629,0,0x0,8
tick,0x7ff8e7af1be4,105132329,0,0x0,8
tick,0x7ff8e7af1be4,105148294,0,0x0,8
tick,0x7ff8e7af1be4,105163762,0,0x0,8
tick,0x7ff8e7af1be4,105179831,0,0x0,8
tick,0x7ff8e7af1be4,105196121,0,0x0,8
tick,0x7ff8e7af1be4,105211746,0,0x0,8
tick,0x7ff8e7af1be4,105227340,0,0x0,8
tick,0x7ff8e7af1be4,105243975,0,0x0,8
tick,0x7ff8e7af1be4,105259063,0,0x0,8
tick,0x7ff8e7af1be4,105274542,0,0x0,8
tick,0x7ff8e7af1be4,105289978,0,0x0,8
tick,0x7ff8e7af1be4,105305765,0,0x0,8
tick,0x7ff8e7af1be4,105321931,0,0x0,8
tick,0x7ff8e7af1be4,105337858,0,0x0,8
tick,0x7ff8e7af1be4,105353296,0,0x0,8
tick,0x7ff8e7af1be4,105369032,0,0x0,8
tick,0x7ff8e7af1be4,105384891,0,0x0,8
tick,0x7ff8e7af1be4,105400797,0,0x0,8
tick,0x7ff8e7af1be4,105416410,0,0x0,8
tick,0x7ff8e7af1be4,105432475,0,0x0,8
tick,0x7ff8e7af1be4,105448890,0,0x0,8
tick,0x7ff8e7af1be4,105465074,0,0x0,8
tick,0x7ff8e7af1be4,105480340,0,0x0,8
tick,0x7ff8e7af1be4,105496277,0,0x0,8
tick,0x7ff8e7af1be4,105512363,0,0x0,8
tick,0x7ff8e7af1be4,105529375,0,0x0,8
tick,0x7ff8e7af1be4,105544629,0,0x0,8
tick,0x7ff8e7af1be4,105561276,0,0x0,8
tick,0x7ff8e7af1be4,105576565,0,0x0,8
tick,0x7ff8e7af1be4,105593192,0,0x0,8
tick,0x7ff8e7af1be4,105608553,0,0x0,8
tick,0x7ff8e7af1be4,105624486,0,0x0,8
tick,0x7ff8e7af1be4,105639487,0,0x0,8
tick,0x7ff8e7af1be4,105655948,0,0x0,8
tick,0x7ff8e7af1be4,105671431,0,0x0,8
tick,0x7ff8e7af1be4,105687575,0,0x0,8
tick,0x7ff8e7af1be4,105702721,0,0x0,8
tick,0x7ff8e7af1be4,105718824,0,0x0,8
tick,0x7ff8e7af1be4,105734574,0,0x0,8
tick,0x7ff8e7af1be4,105750749,0,0x0,8
tick,0x7ff8e7af1be4,105766530,0,0x0,8
tick,0x7ff8e7af1be4,105782157,0,0x0,8
tick,0x7ff8e7af1be4,105798553,0,0x0,8
tick,0x7ff8e7af1be4,105814816,0,0x0,8
tick,0x7ff8e7af1be4,105830291,0,0x0,8
tick,0x7ff8e7af1be4,105846372,0,0x0,8
tick,0x7ff8e7af1be4,105862235,0,0x0,8
tick,0x7ff8e7af1be4,105877556,0,0x0,8
tick,0x7ff8e7af1be4,105893007,0,0x0,8
tick,0x7ff8e7af1be4,105908765,0,0x0,8
tick,0x7ff8e7af1be4,105924561,0,0x0,8
tick,0x7ff8e7af1be4,105939807,0,0x0,8
tick,0x7ff8e7af1be4,105956092,0,0x0,8
tick,0x7ff8e7af1be4,105971337,0,0x0,8
tick,0x7ff8e7af1be4,105987626,0,0x0,8
tick,0x7ff8e7af1be4,106003062,0,0x0,8
tick,0x7ff8e7af1be4,106018829,0,0x0,8
tick,0x7ff8e7af1be4,106034490,0,0x0,8
tick,0x7ff8e7af1be4,106050254,0,0x0,8
tick,0x7ff8e7af1be4,106066184,0,0x0,8
tick,0x7ff8e7af1be4,106082300,0,0x0,8
tick,0x7ff8e7af1be4,106098318,0,0x0,8
tick,0x7ff8e7af1be4,106114318,0,0x0,8
tick,0x7ff8e7af1be4,106130071,0,0x0,8
tick,0x7ff8e7af1be4,106146060,0,0x0,8
tick,0x7ff8e7af1be4,106163795,0,0x0,8
tick,0x7ff8e7af1be4,106177538,0,0x0,8
tick,0x7ff8e7af1be4,106193104,0,0x0,8
tick,0x7ff8e7af1be4,106208749,0,0x0,8
tick,0x7ff8e7af1be4,106224694,0,0x0,8
tick,0x7ff8e7af1be4,106240779,0,0x0,8
tick,0x7ff8e7af1be4,106256287,0,0x0,8
tick,0x7ff8e7af1be4,106272070,0,0x0,8
tick,0x7ff8e7af1be4,106287838,0,0x0,8
tick,0x7ff8e7af1be4,106303651,0,0x0,8
tick,0x7ff8e7af1be4,106319469,0,0x0,8
tick,0x7ff8e7af1be4,106334905,0,0x0,8
tick,0x7ff8e7af1be4,106350667,0,0x0,8
tick,0x7ff8e7af1be4,106366214,0,0x0,8
tick,0x7ff8e7af1be4,106382150,0,0x0,8
tick,0x7ff8e7af1be4,106398252,0,0x0,8
tick,0x7ff8e7af1be4,106414205,0,0x0,8
tick,0x7ff8e7af1be4,106430261,0,0x0,8
tick,0x7ff8e7af1be4,106445901,0,0x0,8
tick,0x7ff8e7af1be4,106460998,0,0x0,8
tick,0x7ff8e7af1be4,106477755,0,0x0,8
tick,0x7ff8e7af1be4,106492967,0,0x0,8
tick,0x7ff8e7af1be4,106508920,0,0x0,8
tick,0x7ff8e7af1be4,106525136,0,0x0,8
tick,0x7ff8e7af1be4,106541114,0,0x0,8
tick,0x7ff8e7af1be4,106556905,0,0x0,8
tick,0x7ff8e7af1be4,106573047,0,0x0,8
tick,0x7ff8e7af1be4,106588963,0,0x0,8
tick,0x7ff8e7af1be4,106604139,0,0x0,8
tick,0x7ff8e7af1be4,106620586,0,0x0,8
tick,0x7ff8e7af1be4,106636111,0,0x0,8
tick,0x7ff8e7af1be4,106651823,0,0x0,8
tick,0x7ff8e7af1be4,106667392,0,0x0,8
tick,0x7ff8e7af1be4,106682926,0,0x0,8
tick,0x7ff8e7af1be4,106699087,0,0x0,8
tick,0x7ff8e7af1be4,106714908,0,0x0,8
tick,0x7ff8e7af1be4,106729846,0,0x0,8
tick,0x7ff8e7af1be4,106745608,0,0x0,8
tick,0x7ff8e7af1be4,106761759,0,0x0,8
tick,0x7ff8e7af1be4,106777119,0,0x0,8
tick,0x7ff8e7af1be4,106793096,0,0x0,8
tick,0x7ff8e7af1be4,106809465,0,0x0,8
tick,0x7ff8e7af1be4,106826075,0,0x0,8
tick,0x7ff8e7af1be4,106841497,0,0x0,8
tick,0x7ff8e7af1be4,106856979,0,0x0,8
tick,0x7ff8e7af1be4,106872576,0,0x0,8
tick,0x7ff8e7af1be4,106888341,0,0x0,8
tick,0x7ff8e7af1be4,106904604,0,0x0,8
tick,0x7ff8e7af1be4,106920169,0,0x0,8
tick,0x7ff8e7af1be4,106935829,0,0x0,8
tick,0x7ff8e7af1be4,106951603,0,0x0,8
tick,0x7ff8e7af1be4,106966529,0,0x0,8
tick,0x7ff8e7af1be4,106982694,0,0x0,8
tick,0x7ff8e7af1be4,107000625,0,0x0,8
tick,0x7ff8e7af1be4,107014729,0,0x0,8
tick,0x7ff8e7af1be4,107030166,0,0x0,8
tick,0x7ff8e7af1be4,107045902,0,0x0,8
tick,0x7ff8e7af1be4,107061607,0,0x0,8
tick,0x7ff8e7af1be4,107076968,0,0x0,8
tick,0x7ff8e7af1be4,107092785,0,0x0,8
tick,0x7ff8e7af1be4,107108827,0,0x0,8
tick,0x7ff8e7af1be4,107124915,0,0x0,8
tick,0x7ff8e7af1be4,107140874,0,0x0,8
tick,0x7ff8e7af1be4,107156490,0,0x0,8
tick,0x7ff8e7af1be4,107171784,0,0x0,8
tick,0x7ff8e7af1be4,107187757,0,0x0,8
tick,0x7ff8e7af1be4,107204091,0,0x0,8
tick,0x7ff8e7af1be4,107219124,0,0x0,8
tick,0x7ff8e7af1be4,107235536,0,0x0,8
tick,0x7ff8e7af1be4,107250878,0,0x0,8
tick,0x7ff8e7af1be4,107266727,0,0x0,8
tick,0x7ff8e7af1be4,107282337,0,0x0,8
tick,0x7ff8e7af1be4,107297812,0,0x0,8
tick,0x7ff8e7af1be4,107314071,0,0x0,8
tick,0x7ff8e7af1be4,107329917,0,0x0,8
tick,0x7ff8e7af1be4,107345721,0,0x0,8
tick,0x7ff8e7af1be4,107361732,0,0x0,8
tick,0x7ff8e7af1be4,107377394,0,0x0,8
tick,0x7ff8e7af1be4,107392700,0,0x0,8
tick,0x7ff8e7af1be4,107408432,0,0x0,8
tick,0x7ff8e7af1be4,107424550,0,0x0,8
tick,0x7ff8e7af1be4,107440144,0,0x0,8
tick,0x7ff8e7af1be4,107455226,0,0x0,8
tick,0x7ff8e7af1be4,107470743,0,0x0,8
tick,0x7ff8e7af1be4,107486556,0,0x0,8
tick,0x7ff8e7af1be4,107503506,0,0x0,8
tick,0x7ff8e7af1be4,107519619,0,0x0,8
tick,0x7ff8e7af1be4,107535208,0,0x0,8
tick,0x7ff8e7af1be4,107550450,0,0x0,8
tick,0x7ff8e7af1be4,107566552,0,0x0,8
tick,0x7ff8e7af1be4,107582628,0,0x0,8
tick,0x7ff8e7af1be4,107598714,0,0x0,8
tick,0x7ff8e7af1be4,107614403,0,0x0,8
tick,0x7ff8e7af1be4,107630090,0,0x0,8
tick,0x7ff8e7af1be4,107646304,0,0x0,8
tick,0x7ff8e7af1be4,107662177,0,0x0,8
tick,0x7ff8e7af1be4,107678259,0,0x0,8
tick,0x7ff8e7af1be4,107693808,0,0x0,8
tick,0x7ff8e7af1be4,107710103,0,0x0,8
tick,0x7ff8e7af1be4,107725479,0,0x0,8
tick,0x7ff8e7af1be4,107740932,0,0x0,8
tick,0x7ff8e7af1be4,107756792,0,0x0,8
tick,0x7ff8e7af1be4,107772341,0,0x0,8
tick,0x7ff8e7af1be4,107787971,0,0x0,8
tick,0x7ff8e7af1be4,107804333,0,0x0,8
tick,0x7ff8e7af1be4,107819532,0,0x0,8
tick,0x7ff8e7af1be4,107835378,0,0x0,8
tick,0x7ff8e7af1be4,107851326,0,0x0,8
tick,0x7ff8e7af1be4,107866903,0,0x0,8
tick,0x7ff8e7af1be4,107882820,0,0x0,8
tick,0x7ff8e7af1be4,107897937,0,0x0,8
tick,0x7ff8e7af1be4,107913552,0,0x0,8
tick,0x7ff8e7af1be4,107929345,0,0x0,8
tick,0x7ff8e7af1be4,107945101,0,0x0,8
tick,0x7ff8e7af1be4,107960723,0,0x0,8
tick,0x7ff8e7af1be4,107975730,0,0x0,8
tick,0x7ff8e7af1be4,107991892,0,0x0,8
tick,0x7ff8e7af1be4,108007746,0,0x0,8
tick,0x7ff8e7af1be4,108022935,0,0x0,8
tick,0x7ff8e7af1be4,108038510,0,0x0,8
tick,0x7ff8e7af1be4,108054216,0,0x0,8
tick,0x7ff8e7af1be4,108069666,0,0x0,8
tick,0x7ff8e7af1be4,108085476,0,0x0,8
tick,0x7ff8e7af1be4,108101558,0,0x0,8
tick,0x7ff8e7af1be4,108117854,0,0x0,8
tick,0x7ff8e7af1be4,108133467,0,0x0,8
tick,0x7ff8e7af1be4,108148925,0,0x0,8
tick,0x7ff8e7af1be4,108164311,0,0x0,8
tick,0x7ff8e7af1be4,108180134,0,0x0,8
tick,0x7ff8e7af1be4,108195510,0,0x0,8
tick,0x7ff8e7af1be4,108211594,0,0x0,8
tick,0x7ff8e7af1be4,108227275,0,0x0,8
tick,0x7ff8e7af1be4,108242930,0,0x0,8
tick,0x7ff8e7af1be4,108258326,0,0x0,8
tick,0x7ff8e7af1be4,108274082,0,0x0,8
tick,0x7ff8e7af1be4,108289519,0,0x0,8
tick,0x7ff8e7af1be4,108305617,0,0x0,8
tick,0x7ff8e7af1be4,108321023,0,0x0,8
tick,0x7ff8e7af1be4,108337687,0,0x0,8
tick,0x7ff8e7af1be4,108353585,0,0x0,8
tick,0x7ff8e7af1be4,108369709,0,0x0,8
tick,0x7ff8e7af1be4,108386079,0,0x0,8
tick,0x7ff8e7af1be4,108401385,0,0x0,8
tick,0x7ff8e7af1be4,108417151,0,0x0,8
tick,0x7ff8e7af1be4,108433361,0,0x0,8
tick,0x7ff8e7af1be4,108450257,0,0x0,8
tick,0x7ff8e7af1be4,108465857,0,0x0,8
tick,0x7ff8e7af1be4,108481289,0,0x0,8
tick,0x7ff8e7af1be4,108498995,0,0x0,8
tick,0x7ff8e7af1be4,108515929,0,0x0,8
tick,0x7ff8e7af1be4,108532103,0,0x0,8
tick,0x7ff8e7af1be4,108548133,0,0x0,8
tick,0x7ff8e7af1be4,108563927,0,0x0,8
tick,0x7ff8e7af1be4,108580116,0,0x0,8
tick,0x7ff8e7af1be4,108595877,0,0x0,8
tick,0x7ff8e7af1be4,108611555,0,0x0,8
tick,0x7ff8e7af1be4,108627331,0,0x0,8
tick,0x7ff8e7af1be4,108643754,0,0x0,8
tick,0x7ff8e7af1be4,108660057,0,0x0,8
tick,0x7ff8e7af1be4,108675551,0,0x0,8
tick,0x7ff8e7af1be4,108691328,0,0x0,8
tick,0x7ff8e7af1be4,108709406,0,0x0,8
tick,0x7ff8e7af1be4,108722719,0,0x0,8
tick,0x7ff8e7af1be4,108738581,0,0x0,8
tick,0x7ff8e7af1be4,108755195,0,0x0,8
tick,0x7ff8e7af1be4,108770642,0,0x0,8
tick,0x7ff8e7af1be4,108786500,0,0x0,8
tick,0x7ff8e7af1be4,108802341,0,0x0,8
tick,0x7ff8e7af1be4,108818378,0,0x0,8
tick,0x7ff8e7af1be4,108834357,0,0x0,8
tick,0x7ff8e7af1be4,108850250,0,0x0,8
tick,0x7ff8e7af1be4,108866184,0,0x0,8
tick,0x7ff8e7af1be4,108882406,0,0x0,8
tick,0x7ff8e7af1be4,108898763,0,0x0,8
tick,0x7ff8e7af1be4,108914528,0,0x0,8
tick,0x7ff8e7af1be4,108930008,0,0x0,8
tick,0x7ff8e7af1be4,108945969,0,0x0,8
tick,0x7ff8e7af1be4,108962581,0,0x0,8
tick,0x7ff8e7af1be4,108978199,0,0x0,8
tick,0x7ff8e7af1be4,108994312,0,0x0,8
tick,0x7ff8e7af1be4,109009342,0,0x0,8
tick,0x7ff8e7af1be4,109024291,0,0x0,8
tick,0x7ff8e7af1be4,109039777,0,0x0,8
tick,0x7ff8e7af1be4,109055870,0,0x0,8
tick,0x7ff8e7af1be4,109071419,0,0x0,8
tick,0x7ff8e7af1be4,109087725,0,0x0,8
tick,0x7ff8e7af1be4,109103657,0,0x0,8
tick,0x7ff8e7af1be4,109119540,0,0x0,8
tick,0x7ff8e7af1be4,109135182,0,0x0,8
tick,0x7ff8e7af1be4,109151027,0,0x0,8
tick,0x7ff8e7af1be4,109166885,0,0x0,8
tick,0x7ff8e7af1be4,109182733,0,0x0,8
tick,0x7ff8e7af1be4,109198799,0,0x0,8
tick,0x7ff8e7af1be4,109214738,0,0x0,8
tick,0x7ff8e7af1be4,109230383,0,0x0,8
tick,0x7ff8e7af1be4,109246489,0,0x0,8
tick,0x7ff8e7af1be4,109262330,0,0x0,8
tick,0x7ff8e7af1be4,109277963,0,0x0,8
tick,0x7ff8e7af1be4,109293876,0,0x0,8
tick,0x7ff8e7af1be4,109310023,0,0x0,8
tick,0x7ff8e7af1be4,109325423,0,0x0,8
tick,0x7ff8e7af1be4,109341549,0,0x0,8
tick,0x7ff8e7af1be4,109357210,0,0x0,8
tick,0x7ff8e7af1be4,109373404,0,0x0,8
tick,0x7ff8e7af1be4,109388778,0,0x0,8
tick,0x7ff8e7af1be4,109404953,0,0x0,8
tick,0x7ff8e7af1be4,109420521,0,0x0,8
tick,0x7ff8e7af1be4,109436409,0,0x0,8
tick,0x7ff8e7af1be4,109452053,0,0x0,8
tick,0x7ff8e7af1be4,109468439,0,0x0,8
tick,0x7ff8e7af1be4,109484411,0,0x0,8
tick,0x7ff8e7af1be4,109500284,0,0x0,8
tick,0x7ff8e7af1be4,109516312,0,0x0,8
tick,0x7ff8e7af1be4,109532469,0,0x0,8
tick,0x7ff8e7af1be4,109547806,0,0x0,8
tick,0x7ff8e7af1be4,109563294,0,0x0,8
tick,0x7ff8e7af1be4,109579445,0,0x0,8
tick,0x7ff8e7af1be4,109595395,0,0x0,8
tick,0x7ff8e7af1be4,109611553,0,0x0,8
tick,0x7ff8e7af1be4,109627206,0,0x0,8
tick,0x7ff8e7af1be4,109642755,0,0x0,8
tick,0x7ff8e7af1be4,109658631,0,0x0,8
tick,0x7ff8e7af1be4,109674399,0,0x0,8
tick,0x7ff8e7af1be4,109690415,0,0x0,8
tick,0x7ff8e7af1be4,109706886,0,0x0,8
tick,0x7ff8e7af1be4,109722991,0,0x0,8
tick,0x7ff8e7af1be4,109737919,0,0x0,8
tick,0x7ff8e7af1be4,109753581,0,0x0,8
tick,0x7ff8e7af1be4,109769678,0,0x0,8
tick,0x7ff8e7af1be4,109785495,0,0x0,8
tick,0x7ff8e7af1be4,109801656,0,0x0,8
tick,0x7ff8e7af1be4,109817708,0,0x0,8
tick,0x7ff8e7af1be4,109833569,0,0x0,8
tick,0x7ff8e7af1be4,109849819,0,0x0,8
tick,0x7ff8e7af1be4,109865668,0,0x0,8
tick,0x7ff8e7af1be4,109881387,0,0x0,8
tick,0x7ff8e7af1be4,109896825,0,0x0,8
tick,0x7ff8e7af1be4,109912556,0,0x0,8
tick,0x7ff8e7af1be4,109928628,0,0x0,8
tick,0x7ff8e7af1be4,109944816,0,0x0,8
tick,0x7ff8e7af1be4,109960235,0,0x0,8
tick,0x7ff8e7af1be4,109975547,0,0x0,8
tick,0x7ff8e7af1be4,109992367,0,0x0,8
tick,0x7ff8e7af1be4,110008519,0,0x0,8
tick,0x7ff8e7af1be4,110024214,0,0x0,8
tick,0x7ff8e7af1be4,110025951,0,0x0,8
tick,0x7ff8e7af1be4,110027466,0,0x0,8
tick,0x7ff8e7af1be4,110029050,0,0x0,8
tick,0x7ff8e7af1be4,110044503,0,0x0,8
tick,0x7ff8e7af1be4,110060305,0,0x0,8
tick,0x7ff8e7af1be4,110075930,0,0x0,8
tick,0x7ff8e7af1be4,110092001,0,0x0,8
tick,0x7ff8e7af1be4,110108146,0,0x0,8
tick,0x7ff8e7af1be4,110124174,0,0x0,8
tick,0x7ff8e7af1be4,110140301,0,0x0,8
tick,0x7ff8e7af1be4,110156208,0,0x0,8
tick,0x7ff8e7af1be4,110172354,0,0x0,8
tick,0x7ff8e7af1be4,110188766,0,0x0,8
tick,0x7ff8e7af1be4,110203071,0,0x0,8
tick,0x7ff8e7af1be4,110219939,0,0x0,8
tick,0x7ff8e7af1be4,110234577,0,0x0,8
tick,0x7ff8e7af1be4,110250786,0,0x0,8
tick,0x7ff8e7af1be4,110266520,0,0x0,8
tick,0x7ff8e7af1be4,110282159,0,0x0,8
tick,0x7ff8e7af1be4,110298215,0,0x0,8
tick,0x7ff8e7af1be4,110314333,0,0x0,8
tick,0x7ff8e7af1be4,110330337,0,0x0,8
tick,0x7ff8e7af1be4,110346420,0,0x0,8
tick,0x7ff8e7af1be4,110362831,0,0x0,8
tick,0x7ff8e7af1be4,110378341,0,0x0,8
tick,0x7ff8e7af1be4,110395488,0,0x0,8
tick,0x7ff8e7af1be4,110410519,0,0x0,8
tick,0x7ff8e7af1be4,110426610,0,0x0,8
tick,0x7ff8e7af1be4,110442356,0,0x0,8
tick,0x7ff8e7af1be4,110457835,0,0x0,8
tick,0x7ff8e7af1be4,110474435,0,0x0,8
tick,0x7ff8e7af1be4,110490491,0,0x0,8
tick,0x7ff8e7af1be4,110507581,0,0x0,8
tick,0x7ff8e7af1be4,110521848,0,0x0,8
tick,0x7ff8e7af1be4,110538424,0,0x0,8
tick,0x7ff8e7af1be4,110540839,0,0x0,8
tick,0x7ff8e7af1be4,110556503,0,0x0,8
tick,0x7ff8e7af1be4,110572377,0,0x0,8
tick,0x7ff8e7af1be4,110587974,0,0x0,8
tick,0x7ff8e7af1be4,110604092,0,0x0,8
tick,0x7ff8e7af1be4,110619415,0,0x0,8
tick,0x7ff8e7af1be4,110634975,0,0x0,8
tick,0x7ff8e7af1be4,110651367,0,0x0,8
tick,0x7ff8e7af1be4,110667815,0,0x0,8
tick,0x7ff8e7af1be4,110682962,0,0x0,8
tick,0x7ff8e7af1be4,110699007,0,0x0,8
tick,0x7ff8e7af1be4,110715263,0,0x0,8
tick,0x7ff8e7af1be4,110730717,0,0x0,8
tick,0x7ff8e7af1be4,110746652,0,0x0,8
tick,0x7ff8e7af1be4,110762585,0,0x0,8
tick,0x7ff8e7af1be4,110778764,0,0x0,8
tick,0x7ff8e7af1be4,110794878,0,0x0,8
tick,0x7ff8e7af1be4,110810682,0,0x0,8
tick,0x7ff8e7af1be4,110826645,0,0x0,8
tick,0x7ff8e7af1be4,110842181,0,0x0,8
tick,0x7ff8e7af1be4,110858214,0,0x0,8
tick,0x7ff8e7af1be4,110874479,0,0x0,8
tick,0x7ff8e7af1be4,110890734,0,0x0,8
tick,0x7ff8e7af1be4,110907219,0,0x0,8
tick,0x7ff8e7af1be4,110922677,0,0x0,8
tick,0x7ff8e7af1be4,110938846,0,0x0,8
tick,0x7ff8e7af1be4,110954769,0,0x0,8
tick,0x7ff8e7af1be4,110970328,0,0x0,8
tick,0x7ff8e7af1be4,110986756,0,0x0,8
tick,0x7ff8e7af1be4,111002570,0,0x0,8
tick,0x7ff8e7af1be4,111018718,0,0x0,8
tick,0x7ff8e7af1be4,111035079,0,0x0,8
tick,0x7ff8e7af1be4,111051475,0,0x0,8
tick,0x7ff8e7af1be4,111054066,0,0x0,8
tick,0x7ff8e7af1be4,111069657,0,0x0,8
tick,0x7ff8e7af1be4,111085067,0,0x0,8
tick,0x7ff8e7af1be4,111102228,0,0x0,8
tick,0x7ff8e7af1be4,111117646,0,0x0,8
tick,0x7ff8e7af1be4,111133825,0,0x0,8
tick,0x7ff8e7af1be4,111149246,0,0x0,8
tick,0x7ff8e7af1be4,111165464,0,0x0,8
tick,0x7ff8e7af1be4,111181168,0,0x0,8
tick,0x7ff8e7af1be4,111197343,0,0x0,8
tick,0x7ff8e7af1be4,111213147,0,0x0,8
tick,0x7ff8e7af1be4,111228683,0,0x0,8
tick,0x7ff8e7af1be4,111244318,0,0x0,8
tick,0x7ff8e7af1be4,111260153,0,0x0,8
tick,0x7ff8e7af1be4,111275942,0,0x0,8
tick,0x7ff8e7af1be4,111291620,0,0x0,8
tick,0x7ff8e7af1be4,111307724,0,0x0,8
tick,0x7ff8e7af1be4,111323495,0,0x0,8
tick,0x7ff8e7af1be4,111340210,0,0x0,8
tick,0x7ff8e7af1be4,111355621,0,0x0,8
tick,0x7ff8e7af1be4,111371446,0,0x0,8
tick,0x7ff8e7af1be4,111387683,0,0x0,8
tick,0x7ff8e7af1be4,111402440,0,0x0,8
tick,0x7ff8e7af1be4,111420040,0,0x0,8
tick,0x7ff8e7af1be4,111434710,0,0x0,8
tick,0x7ff8e7af1be4,111450902,0,0x0,8
tick,0x7ff8e7af1be4,111465673,0,0x0,8
tick,0x7ff8e7af1be4,111481822,0,0x0,8
tick,0x7ff8e7af1be4,111497858,0,0x0,8
tick,0x7ff8e7af1be4,111513307,0,0x0,8
tick,0x7ff8e7af1be4,111528628,0,0x0,8
tick,0x7ff8e7af1be4,111544158,0,0x0,8
tick,0x7ff8e7af1be4,111561068,0,0x0,8
tick,0x7ff8e7af1be4,111575227,0,0x0,8
tick,0x7ff8e7af1be4,111591528,0,0x0,8
tick,0x7ff8e7af1be4,111607440,0,0x0,8
tick,0x7ff8e7af1be4,111623738,0,0x0,8
tick,0x7ff8e7af1be4,111638637,0,0x0,8
tick,0x7ff8e7af1be4,111653696,0,0x0,8
tick,0x7ff8e7af1be4,111669369,0,0x0,8
tick,0x7ff8e7af1be4,111684491,0,0x0,8
tick,0x7ff8e7af1be4,111700090,0,0x0,8
tick,0x7ff8e7af1be4,111716338,0,0x0,8
tick,0x7ff8e7af1be4,111732280,0,0x0,8
tick,0x7ff8e7af1be4,111748067,0,0x0,8
tick,0x7ff8e7af1be4,111764043,0,0x0,8
tick,0x7ff8e7af1be4,111779901,0,0x0,8
tick,0x7ff8e7af1be4,111795522,0,0x0,8
tick,0x7ff8e7af1be4,111811631,0,0x0,8
tick,0x7ff8e7af1be4,111827326,0,0x0,8
tick,0x7ff8e7af1be4,111843067,0,0x0,8
tick,0x7ff8e7af1be4,111858663,0,0x0,8
tick,0x7ff8e7af1be4,111874588,0,0x0,8
tick,0x7ff8e7af1be4,111890339,0,0x0,8
tick,0x7ff8e7af1be4,111906193,0,0x0,8
tick,0x7ff8e7af1be4,111922524,0,0x0,8
tick,0x7ff8e7af1be4,111938440,0,0x0,8
tick,0x7ff8e7af1be4,111954420,0,0x0,8
tick,0x7ff8e7af1be4,111969953,0,0x0,8
tick,0x7ff8e7af1be4,111985695,0,0x0,8
tick,0x7ff8e7af1be4,112001270,0,0x0,8
tick,0x7ff8e7af1be4,112017046,0,0x0,8
tick,0x7ff8e7af1be4,112033418,0,0x0,8
tick,0x7ff8e7af1be4,112049368,0,0x0,8
tick,0x7ff8e7af1be4,112064815,0,0x0,8
tick,0x7ff8e7af1be4,112065964,0,0x0,8
tick,0x7ff8e7af1be4,112081975,0,0x0,8
tick,0x7ff8e7af1be4,112097696,0,0x0,8
tick,0x7ff8e7af1be4,112113632,0,0x0,8
tick,0x7ff8e7af1be4,112129498,0,0x0,8
tick,0x7ff8e7af1be4,112145535,0,0x0,8
tick,0x7ff8e7af1be4,112161382,0,0x0,8
tick,0x7ff8e7af1be4,112177283,0,0x0,8
tick,0x7ff8e7af1be4,112193202,0,0x0,8
tick,0x7ff8e7af1be4,112209213,0,0x0,8
tick,0x7ff8e7af1be4,112224923,0,0x0,8
tick,0x7ff8e7af1be4,112241228,0,0x0,8
tick,0x7ff8e7af1be4,112256595,0,0x0,8
tick,0x7ff8e7af1be4,112273904,0,0x0,8
tick,0x7ff8e7af1be4,112288444,0,0x0,8
tick,0x7ff8e7af1be4,112303886,0,0x0,8
tick,0x7ff8e7af1be4,112320096,0,0x0,8
tick,0x7ff8e7af1be4,112335814,0,0x0,8
tick,0x7ff8e7af1be4,112351097,0,0x0,8
tick,0x7ff8e7af1be4,112366852,0,0x0,8
tick,0x7ff8e7af1be4,112382816,0,0x0,8
tick,0x7ff8e7af1be4,112398494,0,0x0,8
tick,0x7ff8e7af1be4,112414193,0,0x0,8
tick,0x7ff8e7af1be4,112430487,0,0x0,8
tick,0x7ff8e7af1be4,112447907,0,0x0,8
tick,0x7ff8e7af1be4,112463756,0,0x0,8
tick,0x7ff8e7af1be4,112479084,0,0x0,8
tick,0x7ff8e7af1be4,112494754,0,0x0,8
tick,0x7ff8e7af1be4,112511309,0,0x0,8
tick,0x7ff8e7af1be4,112526651,0,0x0,8
tick,0x7ff8e7af1be4,112542596,0,0x0,8
tick,0x7ff8e7af1be4,112559033,0,0x0,8
tick,0x7ff8e7af1be4,112574367,0,0x0,8
tick,0x7ff8e7af1be4,112590403,0,0x0,8
tick,0x7ff8e7af1be4,112606123,0,0x0,8
tick,0x7ff8e7af1be4,112622255,0,0x0,8
tick,0x7ff8e7af1be4,112638201,0,0x0,8
tick,0x7ff8e7af1be4,112653656,0,0x0,8
tick,0x7ff8e7af1be4,112669411,0,0x0,8
tick,0x7ff8e7af1be4,112677568,0,0x0,8
tick,0x7ff8e7af1be4,112693923,0,0x0,8
tick,0x7ff8e7af1be4,112702559,0,0x0,8
tick,0x7ff8e7af1be4,112718399,0,0x0,8
tick,0x7ff8e7af1be4,112734892,0,0x0,8
tick,0x7ff8e7af1be4,112743710,0,0x0,8
tick,0x7ff8e7af1be4,112767925,0,0x0,8
tick,0x7ff8e7af1be4,112784830,0,0x0,8
tick,0x7ff8e7af1be4,112799555,0,0x0,8
tick,0x7ff8e7af1be4,112815413,0,0x0,8
tick,0x7ff8e7af1be4,112831625,0,0x0,8
tick,0x7ff8e7af1be4,112847463,0,0x0,8
tick,0x7ff8e7af1be4,112863546,0,0x0,8
tick,0x7ff8e7af1be4,112879767,0,0x0,8
tick,0x7ff8e7af1be4,112895141,0,0x0,8
tick,0x7ff8e7af1be4,112911271,0,0x0,8
tick,0x7ff8e7af1be4,112927077,0,0x0,8
tick,0x7ff8e7af1be4,112942733,0,0x0,8
tick,0x7ff8e7af1be4,112958529,0,0x0,8
tick,0x7ff8e7af1be4,112974837,0,0x0,8
tick,0x7ff8e7af1be4,112991236,0,0x0,8
tick,0x7ff8e7af1be4,113007332,0,0x0,8
tick,0x7ff8e7af1be4,113022597,0,0x0,8
tick,0x7ff8e7af1be4,113038347,0,0x0,8
tick,0x7ff8e7af1be4,113054248,0,0x0,8
tick,0x7ff8e7af1be4,113069666,0,0x0,8
tick,0x7ff8e7af1be4,113085710,0,0x0,8
tick,0x7ff8e7af1be4,113086750,0,0x0,8
tick,0x7ff8e7af1be4,113102770,0,0x0,8
tick,0x7ff8e7af1be4,113118768,0,0x0,8
tick,0x7ff8e7af1be4,113135123,0,0x0,8
tick,0x7ff8e7af1be4,113150835,0,0x0,8
tick,0x7ff8e7af1be4,113167755,0,0x0,8
tick,0x7ff8e7af1be4,113182959,0,0x0,8
tick,0x7ff8e7af1be4,113198946,0,0x0,8
tick,0x7ff8e7af1be4,113214558,0,0x0,8
tick,0x7ff8e7af1be4,113230776,0,0x0,8
tick,0x7ff8e7af1be4,113246674,0,0x0,8
tick,0x7ff8e7af1be4,113262538,0,0x0,8
tick,0x7ff8e7af1be4,113278239,0,0x0,8
tick,0x7ff8e7af1be4,113293898,0,0x0,8
tick,0x7ff8e7af1be4,113309927,0,0x0,8
tick,0x7ff8e7af1be4,113325963,0,0x0,8
tick,0x7ff8e7af1be4,113341946,0,0x0,8
tick,0x7ff8e7af1be4,113357431,0,0x0,8
tick,0x7ff8e7af1be4,113373595,0,0x0,8
tick,0x7ff8e7af1be4,113389669,0,0x0,8
tick,0x7ff8e7af1be4,113405234,0,0x0,8
tick,0x7ff8e7af1be4,113420792,0,0x0,8
tick,0x7ff8e7af1be4,113437375,0,0x0,8
tick,0x7ff8e7af1be4,113453957,0,0x0,8
tick,0x7ff8e7af1be4,113468778,0,0x0,8
tick,0x7ff8e7af1be4,113484572,0,0x0,8
tick,0x7ff8e7af1be4,113500794,0,0x0,8
tick,0x7ff8e7af1be4,113516016,0,0x0,8
tick,0x7ff8e7af1be4,113532167,0,0x0,8
tick,0x7ff8e7af1be4,113547871,0,0x0,8
tick,0x7ff8e7af1be4,113564336,0,0x0,8
tick,0x7ff8e7af1be4,113580554,0,0x0,8
tick,0x7ff8e7af1be4,113595989,0,0x0,8
tick,0x7ff8e7af1be4,113599332,0,0x0,8
tick,0x7ff8e7af1be4,113615554,0,0x0,8
tick,0x7ff8e7af1be4,113632040,0,0x0,8
tick,0x7ff8e7af1be4,113647829,0,0x0,8
tick,0x7ff8e7af1be4,113664342,0,0x0,8
tick,0x7ff8e7af1be4,113679600,0,0x0,8
tick,0x7ff8e7af1be4,113696058,0,0x0,8
tick,0x7ff8e7af1be4,113711649,0,0x0,8
tick,0x7ff8e7af1be4,113727283,0,0x0,8
tick,0x7ff8e7af1be4,113743187,0,0x0,8
tick,0x7ff8e7af1be4,113758884,0,0x0,8
tick,0x7ff8e7af1be4,113774496,0,0x0,8
tick,0x7ff8e7af1be4,113790326,0,0x0,8
tick,0x7ff8e7af1be4,113806630,0,0x0,8
tick,0x7ff8e7af1be4,113823852,0,0x0,8
tick,0x7ff8e7af1be4,113838613,0,0x0,8
tick,0x7ff8e7af1be4,113854235,0,0x0,8
tick,0x7ff8e7af1be4,113870535,0,0x0,8
tick,0x7ff8e7af1be4,113886523,0,0x0,8
tick,0x7ff8e7af1be4,113902432,0,0x0,8
tick,0x7ff8e7af1be4,113918416,0,0x0,8
tick,0x7ff8e7af1be4,113934360,0,0x0,8
tick,0x7ff8e7af1be4,113949902,0,0x0,8
tick,0x7ff8e7af1be4,113965619,0,0x0,8
tick,0x7ff8e7af1be4,113981569,0,0x0,8
tick,0x7ff8e7af1be4,113998004,0,0x0,8
tick,0x7ff8e7af1be4,114013584,0,0x0,8
tick,0x7ff8e7af1be4,114029122,0,0x0,8
tick,0x7ff8e7af1be4,114045384,0,0x0,8
tick,0x7ff8e7af1be4,114061777,0,0x0,8
tick,0x7ff8e7af1be4,114076521,0,0x0,8
tick,0x7ff8e7af1be4,114092454,0,0x0,8
tick,0x7ff8e7af1be4,114108442,0,0x0,8
tick,0x7ff8e7af1be4,114109872,0,0x0,8
tick,0x7ff8e7af1be4,114125476,0,0x0,8
tick,0x7ff8e7af1be4,114141178,0,0x0,8
tick,0x7ff8e7af1be4,114157016,0,0x0,8
tick,0x7ff8e7af1be4,114173006,0,0x0,8
tick,0x7ff8e7af1be4,114189690,0,0x0,8
tick,0x7ff8e7af1be4,114205041,0,0x0,8
tick,0x7ff8e7af1be4,114220220,0,0x0,8
tick,0x7ff8e7af1be4,114236883,0,0x0,8
tick,0x7ff8e7af1be4,114251956,0,0x0,8
tick,0x7ff8e7af1be4,114268104,0,0x0,8
tick,0x7ff8e7af1be4,114285152,0,0x0,8
tick,0x7ff8e7af1be4,114300307,0,0x0,8
tick,0x7ff8e7af1be4,114316613,0,0x0,8
tick,0x7ff8e7af1be4,114331740,0,0x0,8
tick,0x7ff8e7af1be4,114348045,0,0x0,8
tick,0x7ff8e7af1be4,114363889,0,0x0,8
tick,0x7ff8e7af1be4,114379244,0,0x0,8
tick,0x7ff8e7af1be4,114395357,0,0x0,8
tick,0x7ff8e7af1be4,114411183,0,0x0,8
tick,0x7ff8e7af1be4,114427267,0,0x0,8
tick,0x7ff8e7af1be4,114442927,0,0x0,8
tick,0x7ff8e7af1be4,114459869,0,0x0,8
tick,0x7ff8e7af1be4,114475031,0,0x0,8
tick,0x7ff8e7af1be4,114491649,0,0x0,8
tick,0x7ff8e7af1be4,114508775,0,0x0,8
tick,0x7ff8e7af1be4,114523264,0,0x0,8
tick,0x7ff8e7af1be4,114539126,0,0x0,8
tick,0x7ff8e7af1be4,114554552,0,0x0,8
tick,0x7ff8e7af1be4,114570918,0,0x0,8
tick,0x7ff8e7af1be4,114586960,0,0x0,8
tick,0x7ff8e7af1be4,114602579,0,0x0,8
tick,0x7ff8e7af1be4,114618687,0,0x0,8
tick,0x7ff8e7af1be4,114635084,0,0x0,8
tick,0x7ff8e7af1be4,114650553,0,0x0,8
tick,0x7ff8e7af1be4,114666572,0,0x0,8
tick,0x7ff8e7af1be4,114682314,0,0x0,8
tick,0x7ff8e7af1be4,114698280,0,0x0,8
tick,0x7ff8e7af1be4,114714400,0,0x0,8
tick,0x7ff8e7af1be4,114730364,0,0x0,8
tick,0x7ff8e7af1be4,114746201,0,0x0,8
tick,0x7ff8e7af1be4,114762099,0,0x0,8
tick,0x7ff8e7af1be4,114778235,0,0x0,8
tick,0x7ff8e7af1be4,114793679,0,0x0,8
tick,0x7ff8e7af1be4,114809467,0,0x0,8
tick,0x7ff8e7af1be4,114825493,0,0x0,8
tick,0x7ff8e7af1be4,114841291,0,0x0,8
tick,0x7ff8e7af1be4,114856977,0,0x0,8
tick,0x7ff8e7af1be4,114872815,0,0x0,8
tick,0x7ff8e7af1be4,114888631,0,0x0,8
tick,0x7ff8e7af1be4,114905399,0,0x0,8
tick,0x7ff8e7af1be4,114922092,0,0x0,8
tick,0x7ff8e7af1be4,114937266,0,0x0,8
tick,0x7ff8e7af1be4,114952832,0,0x0,8
tick,0x7ff8e7af1be4,114968978,0,0x0,8
tick,0x7ff8e7af1be4,114984978,0,0x0,8
tick,0x7ff8e7af1be4,115001141,0,0x0,8
tick,0x7ff8e7af1be4,115018504,0,0x0,8
tick,0x7ff8e7af1be4,115032869,0,0x0,8
tick,0x7ff8e7af1be4,115048962,0,0x0,8
tick,0x7ff8e7af1be4,115065196,0,0x0,8
tick,0x7ff8e7af1be4,115081406,0,0x0,8
tick,0x7ff8e7af1be4,115096827,0,0x0,8
tick,0x7ff8e7af1be4,115113209,0,0x0,8
tick,0x7ff8e7af1be4,115130732,0,0x0,8
tick,0x7ff8e7af1be4,115133647,0,0x0,8
tick,0x7ff8e7af1be4,115150018,0,0x0,8
tick,0x7ff8e7af1be4,115166550,0,0x0,8
tick,0x7ff8e7af1be4,115181902,0,0x0,8
tick,0x7ff8e7af1be4,115198669,0,0x0,8
tick,0x7ff8e7af1be4,115213861,0,0x0,8
tick,0x7ff8e7af1be4,115230025,0,0x0,8
tick,0x7ff8e7af1be4,115246382,0,0x0,8
tick,0x7ff8e7af1be4,115262658,0,0x0,8
tick,0x7ff8e7af1be4,115278150,0,0x0,8
tick,0x7ff8e7af1be4,115294265,0,0x0,8
tick,0x7ff8e7af1be4,115309985,0,0x0,8
tick,0x7ff8e7af1be4,115325140,0,0x0,8
tick,0x7ff8e7af1be4,115341002,0,0x0,8
tick,0x7ff8e7af1be4,115357131,0,0x0,8
tick,0x7ff8e7af1be4,115372890,0,0x0,8
tick,0x7ff8e7af1be4,115388767,0,0x0,8
tick,0x7ff8e7af1be4,115404979,0,0x0,8
tick,0x7ff8e7af1be4,115420583,0,0x0,8
tick,0x7ff8e7af1be4,115436378,0,0x0,8
tick,0x7ff8e7af1be4,115452630,0,0x0,8
tick,0x7ff8e7af1be4,115469222,0,0x0,8
tick,0x7ff8e7af1be4,115485121,0,0x0,8
tick,0x7ff8e7af1be4,115500153,0,0x0,8
tick,0x7ff8e7af1be4,115515716,0,0x0,8
tick,0x7ff8e7af1be4,115531531,0,0x0,8
tick,0x7ff8e7af1be4,115547513,0,0x0,8
tick,0x7ff8e7af1be4,115563377,0,0x0,8
tick,0x7ff8e7af1be4,115579250,0,0x0,8
tick,0x7ff8e7af1be4,115595284,0,0x0,8
tick,0x7ff8e7af1be4,115611314,0,0x0,8
tick,0x7ff8e7af1be4,115626845,0,0x0,8
tick,0x7ff8e7af1be4,115643015,0,0x0,8
tick,0x7ff8e7af1be4,115644242,0,0x0,8
tick,0x7ff8e7af1be4,115660092,0,0x0,8
tick,0x7ff8e7af1be4,115676289,0,0x0,8
tick,0x7ff8e7af1be4,115692276,0,0x0,8
tick,0x7ff8e7af1be4,115708282,0,0x0,8
tick,0x7ff8e7af1be4,115723828,0,0x0,8
tick,0x7ff8e7af1be4,115740470,0,0x0,8
tick,0x7ff8e7af1be4,115756729,0,0x0,8
tick,0x7ff8e7af1be4,115773422,0,0x0,8
tick,0x7ff8e7af1be4,115788286,0,0x0,8
tick,0x7ff8e7af1be4,115803711,0,0x0,8
tick,0x7ff8e7af1be4,115819449,0,0x0,8
tick,0x7ff8e7af1be4,115835665,0,0x0,8
tick,0x7ff8e7af1be4,115851093,0,0x0,8
tick,0x7ff8e7af1be4,115867010,0,0x0,8
tick,0x7ff8e7af1be4,115882813,0,0x0,8
tick,0x7ff8e7af1be4,115898717,0,0x0,8
tick,0x7ff8e7af1be4,115914361,0,0x0,8
tick,0x7ff8e7af1be4,115931322,0,0x0,8
tick,0x7ff8e7af1be4,115948916,0,0x0,8
tick,0x7ff8e7af1be4,115962645,0,0x0,8
tick,0x7ff8e7af1be4,115978554,0,0x0,8
tick,0x7ff8e7af1be4,115994939,0,0x0,8
tick,0x7ff8e7af1be4,116010766,0,0x0,8
tick,0x7ff8e7af1be4,116026883,0,0x0,8
tick,0x7ff8e7af1be4,116043892,0,0x0,8
tick,0x7ff8e7af1be4,116059684,0,0x0,8
tick,0x7ff8e7af1be4,116077609,0,0x0,8
tick,0x7ff8e7af1be4,116090826,0,0x0,8
tick,0x7ff8e7af1be4,116106242,0,0x0,8
tick,0x7ff8e7af1be4,116122058,0,0x0,8
tick,0x7ff8e7af1be4,116138175,0,0x0,8
tick,0x7ff8e7af1be4,116154357,0,0x0,8
tick,0x7ff8e7af1be4,116170393,0,0x0,8
tick,0x7ff8e7af1be4,116185929,0,0x0,8
tick,0x7ff8e7af1be4,116202289,0,0x0,8
tick,0x7ff8e7af1be4,116219013,0,0x0,8
tick,0x7ff8e7af1be4,116234343,0,0x0,8
tick,0x7ff8e7af1be4,116249801,0,0x0,8
tick,0x7ff8e7af1be4,116265887,0,0x0,8
tick,0x7ff8e7af1be4,116281801,0,0x0,8
tick,0x7ff8e7af1be4,116297515,0,0x0,8
tick,0x7ff8e7af1be4,116313040,0,0x0,8
tick,0x7ff8e7af1be4,116329071,0,0x0,8
tick,0x7ff8e7af1be4,116344805,0,0x0,8
tick,0x7ff8e7af1be4,116360588,0,0x0,8
tick,0x7ff8e7af1be4,116376921,0,0x0,8
tick,0x7ff8e7af1be4,116392625,0,0x0,8
tick,0x7ff8e7af1be4,116408879,0,0x0,8
tick,0x7ff8e7af1be4,116424738,0,0x0,8
tick,0x7ff8e7af1be4,116440906,0,0x0,8
tick,0x7ff8e7af1be4,116456780,0,0x0,8
tick,0x7ff8e7af1be4,116472347,0,0x0,8
tick,0x7ff8e7af1be4,116487965,0,0x0,8
tick,0x7ff8e7af1be4,116503929,0,0x0,8
tick,0x7ff8e7af1be4,116520522,0,0x0,8
tick,0x7ff8e7af1be4,116536090,0,0x0,8
tick,0x7ff8e7af1be4,116551714,0,0x0,8
tick,0x7ff8e7af1be4,116567593,0,0x0,8
tick,0x7ff8e7af1be4,116583535,0,0x0,8
tick,0x7ff8e7af1be4,116599145,0,0x0,8
tick,0x7ff8e7af1be4,116614933,0,0x0,8
tick,0x7ff8e7af1be4,116630814,0,0x0,8
tick,0x7ff8e7af1be4,116647278,0,0x0,8
tick,0x7ff8e7af1be4,116663015,0,0x0,8
tick,0x7ff8e7af1be4,116678833,0,0x0,8
tick,0x7ff8e7af1be4,116694579,0,0x0,8
tick,0x7ff8e7af1be4,116710732,0,0x0,8
tick,0x7ff8e7af1be4,116726663,0,0x0,8
tick,0x7ff8e7af1be4,116742719,0,0x0,8
tick,0x7ff8e7af1be4,116760272,0,0x0,8
tick,0x7ff8e7af1be4,116777273,0,0x0,8
tick,0x7ff8e7af1be4,116791831,0,0x0,8
tick,0x7ff8e7af1be4,116807572,0,0x0,8
tick,0x7ff8e7af1be4,116823498,0,0x0,8
tick,0x7ff8e7af1be4,116839432,0,0x0,8
tick,0x7ff8e7af1be4,116855056,0,0x0,8
tick,0x7ff8e7af1be4,116870822,0,0x0,8
tick,0x7ff8e7af1be4,116887042,0,0x0,8
tick,0x7ff8e7af1be4,116902772,0,0x0,8
tick,0x7ff8e7af1be4,116918996,0,0x0,8
tick,0x7ff8e7af1be4,116934653,0,0x0,8
tick,0x7ff8e7af1be4,116950593,0,0x0,8
tick,0x7ff8e7af1be4,116966607,0,0x0,8
tick,0x7ff8e7af1be4,116982346,0,0x0,8
tick,0x7ff8e7af1be4,116997881,0,0x0,8
tick,0x7ff8e7af1be4,117013969,0,0x0,8
tick,0x7ff8e7af1be4,117029893,0,0x0,8
tick,0x7ff8e7af1be4,117046770,0,0x0,8
tick,0x7ff8e7af1be4,117062887,0,0x0,8
tick,0x7ff8e7af1be4,117079367,0,0x0,8
tick,0x7ff8e7af1be4,117094967,0,0x0,8
tick,0x7ff8e7af1be4,117110727,0,0x0,8
tick,0x7ff8e7af1be4,117127550,0,0x0,8
tick,0x7ff8e7af1be4,117142792,0,0x0,8
tick,0x7ff8e7af1be4,117158327,0,0x0,8
tick,0x7ff8e7af1be4,117174808,0,0x0,8
tick,0x7ff8e7af1be4,117176795,0,0x0,8
tick,0x7ff8e7af1be4,117192682,0,0x0,8
tick,0x7ff8e7af1be4,117208762,0,0x0,8
tick,0x7ff8e7af1be4,117224772,0,0x0,8
tick,0x7ff8e7af1be4,117240442,0,0x0,8
tick,0x7ff8e7af1be4,117256133,0,0x0,8
tick,0x7ff8e7af1be4,117273169,0,0x0,8
tick,0x7ff8e7af1be4,117287967,0,0x0,8
tick,0x7ff8e7af1be4,117304174,0,0x0,8
tick,0x7ff8e7af1be4,117319635,0,0x0,8
tick,0x7ff8e7af1be4,117335593,0,0x0,8
tick,0x7ff8e7af1be4,117351577,0,0x0,8
tick,0x7ff8e7af1be4,117367753,0,0x0,8
tick,0x7ff8e7af1be4,117383737,0,0x0,8
tick,0x7ff8e7af1be4,117399562,0,0x0,8
tick,0x7ff8e7af1be4,117415453,0,0x0,8
tick,0x7ff8e7af1be4,117431382,0,0x0,8
tick,0x7ff8e7af1be4,117447513,0,0x0,8
tick,0x7ff8e7af1be4,117463193,0,0x0,8
tick,0x7ff8e7af1be4,117479169,0,0x0,8
tick,0x7ff8e7af1be4,117496112,0,0x0,8
tick,0x7ff8e7af1be4,117511948,0,0x0,8
tick,0x7ff8e7af1be4,117527243,0,0x0,8
tick,0x7ff8e7af1be4,117543045,0,0x0,8
tick,0x7ff8e7af1be4,117558812,0,0x0,8
tick,0x7ff8e7af1be4,117574778,0,0x0,8
tick,0x7ff8e7af1be4,117590604,0,0x0,8
tick,0x7ff8e7af1be4,117606714,0,0x0,8
tick,0x7ff8e7af1be4,117622860,0,0x0,8
tick,0x7ff8e7af1be4,117639071,0,0x0,8
tick,0x7ff8e7af1be4,117654917,0,0x0,8
tick,0x7ff8e7af1be4,117670089,0,0x0,8
tick,0x7ff8e7af1be4,117686440,0,0x0,8
tick,0x7ff8e7af1be4,117687652,0,0x0,8
tick,0x7ff8e7af1be4,117703693,0,0x0,8
tick,0x7ff8e7af1be4,117719616,0,0x0,8
tick,0x7ff8e7af1be4,117735221,0,0x0,8
tick,0x7ff8e7af1be4,117751225,0,0x0,8
tick,0x7ff8e7af1be4,117767107,0,0x0,8
tick,0x7ff8e7af1be4,117783479,0,0x0,8
tick,0x7ff8e7af1be4,117799228,0,0x0,8
tick,0x7ff8e7af1be4,117814760,0,0x0,8
tick,0x7ff8e7af1be4,117831102,0,0x0,8
tick,0x7ff8e7af1be4,117847072,0,0x0,8
tick,0x7ff8e7af1be4,117863023,0,0x0,8
tick,0x7ff8e7af1be4,117878364,0,0x0,8
tick,0x7ff8e7af1be4,117895385,0,0x0,8
tick,0x7ff8e7af1be4,117910746,0,0x0,8
tick,0x7ff8e7af1be4,117926986,0,0x0,8
tick,0x7ff8e7af1be4,117943029,0,0x0,8
tick,0x7ff8e7af1be4,117958954,0,0x0,8
tick,0x7ff8e7af1be4,117974830,0,0x0,8
tick,0x7ff8e7af1be4,117990369,0,0x0,8
tick,0x7ff8e7af1be4,118006410,0,0x0,8
tick,0x7ff8e7af1be4,118022009,0,0x0,8
tick,0x7ff8e7af1be4,118037753,0,0x0,8
tick,0x7ff8e7af1be4,118053554,0,0x0,8
tick,0x7ff8e7af1be4,118069362,0,0x0,8
tick,0x7ff8e7af1be4,118086187,0,0x0,8
tick,0x7ff8e7af1be4,118101273,0,0x0,8
tick,0x7ff8e7af1be4,118117467,0,0x0,8
tick,0x7ff8e7af1be4,118133692,0,0x0,8
tick,0x7ff8e7af1be4,118149328,0,0x0,8
tick,0x7ff8e7af1be4,118165262,0,0x0,8
tick,0x7ff8e7af1be4,118180839,0,0x0,8
tick,0x7ff8e7af1be4,118196401,0,0x0,8
tick,0x7ff8e7af1be4,118197782,0,0x0,8
tick,0x7ff8e7af1be4,118213829,0,0x0,8
tick,0x7ff8e7af1be4,118229652,0,0x0,8
tick,0x7ff8e7af1be4,118245762,0,0x0,8
tick,0x7ff8e7af1be4,118261889,0,0x0,8
tick,0x7ff8e7af1be4,118277717,0,0x0,8
tick,0x7ff8e7af1be4,118293299,0,0x0,8
tick,0x7ff8e7af1be4,118309001,0,0x0,8
tick,0x7ff8e7af1be4,118324742,0,0x0,8
tick,0x7ff8e7af1be4,118340753,0,0x0,8
tick,0x7ff8e7af1be4,118356910,0,0x0,8
tick,0x7ff8e7af1be4,118372734,0,0x0,8
tick,0x7ff8e7af1be4,118388215,0,0x0,8
tick,0x7ff8e7af1be4,118404392,0,0x0,8
tick,0x7ff8e7af1be4,118421108,0,0x0,8
tick,0x7ff8e7af1be4,118436831,0,0x0,8
tick,0x7ff8e7af1be4,118452475,0,0x0,8
tick,0x7ff8e7af1be4,118468673,0,0x0,8
tick,0x7ff8e7af1be4,118483916,0,0x0,8
tick,0x7ff8e7af1be4,118499828,0,0x0,8
tick,0x7ff8e7af1be4,118516189,0,0x0,8
tick,0x7ff8e7af1be4,118532331,0,0x0,8
tick,0x7ff8e7af1be4,118548501,0,0x0,8
tick,0x7ff8e7af1be4,118564281,0,0x0,8
tick,0x7ff8e7af1be4,118579879,0,0x0,8
tick,0x7ff8e7af1be4,118595819,0,0x0,8
tick,0x7ff8e7af1be4,118611840,0,0x0,8
tick,0x7ff8e7af1be4,118628029,0,0x0,8
tick,0x7ff8e7af1be4,118644177,0,0x0,8
tick,0x7ff8e7af1be4,118660506,0,0x0,8
tick,0x7ff8e7af1be4,118676572,0,0x0,8
tick,0x7ff8e7af1be4,118692298,0,0x0,8
tick,0x7ff8e7af1be4,118708572,0,0x0,8
tick,0x7ff8e7af1be4,118711583,0,0x0,8
tick,0x7ff8e7af1be4,118725645,0,0x0,8
tick,0x7ff8e7af1be4,118742474,0,0x0,8
tick,0x7ff8e7af1be4,118757917,0,0x0,8
tick,0x7ff8e7af1be4,118773655,0,0x0,8
tick,0x7ff8e7af1be4,118790361,0,0x0,8
tick,0x7ff8e7af1be4,118805883,0,0x0,8
tick,0x7ff8e7af1be4,118821031,0,0x0,8
tick,0x7ff8e7af1be4,118837509,0,0x0,8
tick,0x7ff8e7af1be4,118853120,0,0x0,8
tick,0x7ff8e7af1be4,118868719,0,0x0,8
tick,0x7ff8e7af1be4,118884232,0,0x0,8
tick,0x7ff8e7af1be4,118899707,0,0x0,8
tick,0x7ff8e7af1be4,118916092,0,0x0,8
tick,0x7ff8e7af1be4,118933315,0,0x0,8
tick,0x7ff8e7af1be4,118947564,0,0x0,8
tick,0x7ff8e7af1be4,118963120,0,0x0,8
tick,0x7ff8e7af1be4,118978577,0,0x0,8
tick,0x7ff8e7af1be4,118994283,0,0x0,8
tick,0x7ff8e7af1be4,119009912,0,0x0,8
tick,0x7ff8e7af1be4,119026156,0,0x0,8
tick,0x7ff8e7af1be4,119042045,0,0x0,8
tick,0x7ff8e7af1be4,119057678,0,0x0,8
tick,0x7ff8e7af1be4,119073620,0,0x0,8
tick,0x7ff8e7af1be4,119089339,0,0x0,8
tick,0x7ff8e7af1be4,119104228,0,0x0,8
tick,0x7ff8e7af1be4,119120125,0,0x0,8
tick,0x7ff8e7af1be4,119136355,0,0x0,8
tick,0x7ff8e7af1be4,119151898,0,0x0,8
tick,0x7ff8e7af1be4,119167701,0,0x0,8
tick,0x7ff8e7af1be4,119185173,0,0x0,8
tick,0x7ff8e7af1be4,119200186,0,0x0,8
tick,0x7ff8e7af1be4,119214861,0,0x0,8
tick,0x7ff8e7af1be4,119216831,0,0x0,8
tick,0x7ff8e7af1be4,119233979,0,0x0,8
tick,0x7ff8e7af1be4,119249254,0,0x0,8
tick,0x7ff8e7af1be4,119264347,0,0x0,8
tick,0x7ff8e7af1be4,119279716,0,0x0,8
tick,0x7ff8e7af1be4,119296763,0,0x0,8
tick,0x7ff8e7af1be4,119311381,0,0x0,8
tick,0x7ff8e7af1be4,119327267,0,0x0,8
tick,0x7ff8e7af1be4,119343251,0,0x0,8
tick,0x7ff8e7af1be4,119359273,0,0x0,8
tick,0x7ff8e7af1be4,119374874,0,0x0,8
tick,0x7ff8e7af1be4,119389921,0,0x0,8
tick,0x7ff8e7af1be4,119405598,0,0x0,8
tick,0x7ff8e7af1be4,119421088,0,0x0,8
tick,0x7ff8e7af1be4,119437514,0,0x0,8
tick,0x7ff8e7af1be4,119452898,0,0x0,8
tick,0x7ff8e7af1be4,119468808,0,0x0,8
tick,0x7ff8e7af1be4,119483998,0,0x0,8
tick,0x7ff8e7af1be4,119499858,0,0x0,8
tick,0x7ff8e7af1be4,119515437,0,0x0,8
tick,0x7ff8e7af1be4,119531241,0,0x0,8
tick,0x7ff8e7af1be4,119547520,0,0x0,8
tick,0x7ff8e7af1be4,119563353,0,0x0,8
tick,0x7ff8e7af1be4,119579044,0,0x0,8
tick,0x7ff8e7af1be4,119589388,0,0x0,8
tick,0x7ff8e7af1be4,119598758,0,0x0,8
tick,0x7ff8e7af1be4,119606636,0,0x0,8
tick,0x7ff8e7af1be4,119622745,0,0x0,8
tick,0x7ff8e7af1be4,119638893,0,0x0,8
tick,0x7ff8e7af1be4,119654811,0,0x0,8
tick,0x7ff8e7af1be4,119671428,0,0x0,8
tick,0x7ff8e7af1be4,119686416,0,0x0,8
tick,0x7ff8e7af1be4,119701982,0,0x0,8
tick,0x7ff8e7af1be4,119717901,0,0x0,8
tick,0x7ff8e7af1be4,119733040,0,0x0,8
tick,0x7ff8e7af1be4,119749252,0,0x0,8
tick,0x7ff8e7af1be4,119764937,0,0x0,8
tick,0x7ff8e7af1be4,119781198,0,0x0,8
tick,0x7ff8e7af1be4,119797031,0,0x0,8
tick,0x7ff8e7af1be4,119812928,0,0x0,8
tick,0x7ff8e7af1be4,119828602,0,0x0,8
tick,0x7ff8e7af1be4,119844696,0,0x0,8
tick,0x7ff8e7af1be4,119862178,0,0x0,8
tick,0x7ff8e7af1be4,119876690,0,0x0,8
tick,0x7ff8e7af1be4,119891937,0,0x0,8
tick,0x7ff8e7af1be4,119907903,0,0x0,8
tick,0x7ff8e7af1be4,119923608,0,0x0,8
tick,0x7ff8e7af1be4,119939569,0,0x0,8
tick,0x7ff8e7af1be4,119955438,0,0x0,8
tick,0x7ff8e7af1be4,119971259,0,0x0,8
tick,0x7ff8e7af1be4,119986971,0,0x0,8
tick,0x7ff8e7af1be4,120002697,0,0x0,8
tick,0x7ff8e7af1be4,120017969,0,0x0,8
tick,0x7ff8e7af1be4,120034123,0,0x0,8
tick,0x7ff8e7af1be4,120050338,0,0x0,8
tick,0x7ff8e7af1be4,120066484,0,0x0,8
tick,0x7ff8e7af1be4,120082198,0,0x0,8
tick,0x7ff8e7af1be4,120098467,0,0x0,8
tick,0x7ff8e7af1be4,120114027,0,0x0,8
tick,0x7ff8e7af1be4,120130033,0,0x0,8
tick,0x7ff8e7af1be4,120145411,0,0x0,8
tick,0x7ff8e7af1be4,120161592,0,0x0,8
tick,0x7ff8e7af1be4,120177570,0,0x0,8
tick,0x7ff8e7af1be4,120193217,0,0x0,8
tick,0x7ff8e7af1be4,120208935,0,0x0,8
tick,0x7ff8e7af1be4,120224286,0,0x0,8
tick,0x7ff8e7af1be4,120226362,0,0x0,8
tick,0x7ff8e7af1be4,120242534,0,0x0,8
tick,0x7ff8e7af1be4,120258662,0,0x0,8
tick,0x7ff8e7af1be4,120274955,0,0x0,8
tick,0x7ff8e7af1be4,120290871,0,0x0,8
tick,0x7ff8e7af1be4,120306641,0,0x0,8
tick,0x7ff8e7af1be4,120322317,0,0x0,8
tick,0x7ff8e7af1be4,120339056,0,0x0,8
tick,0x7ff8e7af1be4,120354285,0,0x0,8
tick,0x7ff8e7af1be4,120369527,0,0x0,8
tick,0x7ff8e7af1be4,120384987,0,0x0,8
tick,0x7ff8e7af1be4,120401115,0,0x0,8
tick,0x7ff8e7af1be4,120417318,0,0x0,8
tick,0x7ff8e7af1be4,120432488,0,0x0,8
tick,0x7ff8e7af1be4,120448914,0,0x0,8
tick,0x7ff8e7af1be4,120465836,0,0x0,8
tick,0x7ff8e7af1be4,120480719,0,0x0,8
tick,0x7ff8e7af1be4,120496524,0,0x0,8
tick,0x7ff8e7af1be4,120512467,0,0x0,8
tick,0x7ff8e7af1be4,120528454,0,0x0,8
tick,0x7ff8e7af1be4,120544617,0,0x0,8
tick,0x7ff8e7af1be4,120560264,0,0x0,8
tick,0x7ff8e7af1be4,120575766,0,0x0,8
tick,0x7ff8e7af1be4,120591518,0,0x0,8
tick,0x7ff8e7af1be4,120608176,0,0x0,8
tick,0x7ff8e7af1be4,120624049,0,0x0,8
tick,0x7ff8e7af1be4,120640557,0,0x0,8
tick,0x7ff8e7af1be4,120655518,0,0x0,8
tick,0x7ff8e7af1be4,120671892,0,0x0,8
tick,0x7ff8e7af1be4,120687778,0,0x0,8
tick,0x7ff8e7af1be4,120704232,0,0x0,8
tick,0x7ff8e7af1be4,120719810,0,0x0,8
tick,0x7ff8e7af1be4,120736104,0,0x0,8
tick,0x7ff8e7af1be4,120754617,0,0x0,8
tick,0x7ff8e7af1be4,120769057,0,0x0,8
tick,0x7ff8e7af1be4,120784929,0,0x0,8
tick,0x7ff8e7af1be4,120802780,0,0x0,8
tick,0x7ff8e7af1be4,120817921,0,0x0,8
tick,0x7ff8e7af1be4,120832869,0,0x0,8
tick,0x7ff8e7af1be4,120848779,0,0x0,8
tick,0x7ff8e7af1be4,120865253,0,0x0,8
tick,0x7ff8e7af1be4,120881421,0,0x0,8
tick,0x7ff8e7af1be4,120897531,0,0x0,8
tick,0x7ff8e7af1be4,120913201,0,0x0,8
tick,0x7ff8e7af1be4,120928835,0,0x0,8
tick,0x7ff8e7af1be4,120945588,0,0x0,8
tick,0x7ff8e7af1be4,120960756,0,0x0,8
tick,0x7ff8e7af1be4,120978209,0,0x0,8
tick,0x7ff8e7af1be4,120993205,0,0x0,8
tick,0x7ff8e7af1be4,121008504,0,0x0,8
tick,0x7ff8e7af1be4,121024545,0,0x0,8
tick,0x7ff8e7af1be4,121040456,0,0x0,8
tick,0x7ff8e7af1be4,121056204,0,0x0,8
tick,0x7ff8e7af1be4,121072089,0,0x0,8
tick,0x7ff8e7af1be4,121089381,0,0x0,8
tick,0x7ff8e7af1be4,121105061,0,0x0,8
tick,0x7ff8e7af1be4,121120658,0,0x0,8
tick,0x7ff8e7af1be4,121136421,0,0x0,8
tick,0x7ff8e7af1be4,121152651,0,0x0,8
tick,0x7ff8e7af1be4,121168577,0,0x0,8
tick,0x7ff8e7af1be4,121186460,0,0x0,8
tick,0x7ff8e7af1be4,121201202,0,0x0,8
tick,0x7ff8e7af1be4,121216347,0,0x0,8
tick,0x7ff8e7af1be4,121232453,0,0x0,8
tick,0x7ff8e7af1be4,121248569,0,0x0,8
tick,0x7ff8e7af1be4,121265313,0,0x0,8
tick,0x7ff8e7af1be4,121281457,0,0x0,8
tick,0x7ff8e7af1be4,121297963,0,0x0,8
tick,0x7ff8e7af1be4,121313661,0,0x0,8
tick,0x7ff8e7af1be4,121329546,0,0x0,8
tick,0x7ff8e7af1be4,121345856,0,0x0,8
tick,0x7ff8e7af1be4,121362313,0,0x0,8
tick,0x7ff8e7af1be4,121377825,0,0x0,8
tick,0x7ff8e7af1be4,121394253,0,0x0,8
tick,0x7ff8e7af1be4,121410236,0,0x0,8
tick,0x7ff8e7af1be4,121426261,0,0x0,8
tick,0x7ff8e7af1be4,121441996,0,0x0,8
tick,0x7ff8e7af1be4,121459017,0,0x0,8
tick,0x7ff8e7af1be4,121474580,0,0x0,8
tick,0x7ff8e7af1be4,121490044,0,0x0,8
tick,0x7ff8e7af1be4,121506475,0,0x0,8
tick,0x7ff8e7af1be4,121522148,0,0x0,8
tick,0x7ff8e7af1be4,121538635,0,0x0,8
tick,0x7ff8e7af1be4,121554390,0,0x0,8
tick,0x7ff8e7af1be4,121569574,0,0x0,8
tick,0x7ff8e7af1be4,121586170,0,0x0,8
tick,0x7ff8e7af1be4,121609996,0,0x0,8
tick,0x7ff8e7af1be4,121625835,0,0x0,8
tick,0x7ff8e7af1be4,121642076,0,0x0,8
tick,0x7ff8e7af1be4,121658086,0,0x0,8
tick,0x7ff8e7af1be4,121674776,0,0x0,8
tick,0x7ff8e7af1be4,121690173,0,0x0,8
tick,0x7ff8e7af1be4,121706915,0,0x0,8
tick,0x7ff8e7af1be4,121722258,0,0x0,8
tick,0x7ff8e7af1be4,121738344,0,0x0,8
tick,0x7ff8e7af1be4,121754508,0,0x0,8
tick,0x7ff8e7af1be4,121756612,0,0x0,8
tick,0x7ff8e7af1be4,121775147,0,0x0,8
tick,0x7ff8e7af1be4,121787337,0,0x0,8
tick,0x7ff8e7af1be4,121803954,0,0x0,8
tick,0x7ff8e7af1be4,121819428,0,0x0,8
tick,0x7ff8e7af1be4,121837692,0,0x0,8
tick,0x7ff8e7af1be4,121851553,0,0x0,8
tick,0x7ff8e7af1be4,121868085,0,0x0,8
tick,0x7ff8e7af1be4,121884570,0,0x0,8
tick,0x7ff8e7af1be4,121900105,0,0x0,8
tick,0x7ff8e7af1be4,121916043,0,0x0,8
tick,0x7ff8e7af1be4,121932225,0,0x0,8
tick,0x7ff8e7af1be4,121947825,0,0x0,8
tick,0x7ff8e7af1be4,121964054,0,0x0,8
tick,0x7ff8e7af1be4,121979996,0,0x0,8
tick,0x7ff8e7af1be4,121995649,0,0x0,8
tick,0x7ff8e7af1be4,122011258,0,0x0,8
tick,0x7ff8e7af1be4,122026921,0,0x0,8
tick,0x7ff8e7af1be4,122042702,0,0x0,8
tick,0x7ff8e7af1be4,122059025,0,0x0,8
tick,0x7ff8e7af1be4,122075162,0,0x0,8
tick,0x7ff8e7af1be4,122091469,0,0x0,8
tick,0x7ff8e7af1be4,122107661,0,0x0,8
tick,0x7ff8e7af1be4,122123818,0,0x0,8
tick,0x7ff8e7af1be4,122138933,0,0x0,8
tick,0x7ff8e7af1be4,122155864,0,0x0,8
tick,0x7ff8e7af1be4,122171299,0,0x0,8
tick,0x7ff8e7af1be4,122187549,0,0x0,8
tick,0x7ff8e7af1be4,122204814,0,0x0,8
tick,0x7ff8e7af1be4,122220158,0,0x0,8
tick,0x7ff8e7af1be4,122235217,0,0x0,8
tick,0x7ff8e7af1be4,122251504,0,0x0,8
tick,0x7ff8e7af1be4,122268513,0,0x0,8
tick,0x7ff8e7af1be4,122284996,0,0x0,8
tick,0x7ff8e7af1be4,122301179,0,0x0,8
tick,0x7ff8e7af1be4,122317032,0,0x0,8
tick,0x7ff8e7af1be4,122332979,0,0x0,8
tick,0x7ff8e7af1be4,122348888,0,0x0,8
tick,0x7ff8e7af1be4,122364706,0,0x0,8
tick,0x7ff8e7af1be4,122380987,0,0x0,8
tick,0x7ff8e7af1be4,122396315,0,0x0,8
tick,0x7ff8e7af1be4,122412689,0,0x0,8
tick,0x7ff8e7af1be4,122428606,0,0x0,8
tick,0x7ff8e7af1be4,122444461,0,0x0,8
tick,0x7ff8e7af1be4,122460332,0,0x0,8
tick,0x7ff8e7af1be4,122476979,0,0x0,8
tick,0x7ff8e7af1be4,122492460,0,0x0,8
tick,0x7ff8e7af1be4,122508941,0,0x0,8
tick,0x7ff8e7af1be4,122524994,0,0x0,8
tick,0x7ff8e7af1be4,122541228,0,0x0,8
tick,0x7ff8e7af1be4,122556840,0,0x0,8
tick,0x7ff8e7af1be4,122574105,0,0x0,8
tick,0x7ff8e7af1be4,122588839,0,0x0,8
tick,0x7ff8e7af1be4,122604907,0,0x0,8
tick,0x7ff8e7af1be4,122620367,0,0x0,8
tick,0x7ff8e7af1be4,122636926,0,0x0,8
tick,0x7ff8e7af1be4,122653379,0,0x0,8
tick,0x7ff8e7af1be4,122668652,0,0x0,8
tick,0x7ff8e7af1be4,122684741,0,0x0,8
tick,0x7ff8e7af1be4,122700157,0,0x0,8
tick,0x7ff8e7af1be4,122716104,0,0x0,8
tick,0x7ff8e7af1be4,122732810,0,0x0,8
tick,0x7ff8e7af1be4,122749500,0,0x0,8
tick,0x7ff8e7af1be4,122765251,0,0x0,8
tick,0x7ff8e7af1be4,122781353,0,0x0,8
tick,0x7ff8e7af1be4,122797341,0,0x0,8
tick,0x7ff8e7af1be4,122812776,0,0x0,8
tick,0x7ff8e7af1be4,122828730,0,0x0,8
tick,0x7ff8e7af1be4,122844659,0,0x0,8
tick,0x7ff8e7af1be4,122860282,0,0x0,8
tick,0x7ff8e7af1be4,122876176,0,0x0,8
tick,0x7ff8e7af1be4,122892456,0,0x0,8
tick,0x7ff8e7af1be4,122908979,0,0x0,8
tick,0x7ff8e7af1be4,122924634,0,0x0,8
tick,0x7ff8e7af1be4,122940735,0,0x0,8
tick,0x7ff8e7af1be4,122956266,0,0x0,8
tick,0x7ff8e7af1be4,122972625,0,0x0,8
tick,0x7ff8e7af1be4,122988896,0,0x0,8
tick,0x7ff8e7af1be4,123004271,0,0x0,8
tick,0x7ff8e7af1be4,123020013,0,0x0,8
tick,0x7ff8e7af1be4,123036166,0,0x0,8
tick,0x7ff8e7af1be4,123052277,0,0x0,8
tick,0x7ff8e7af1be4,123068424,0,0x0,8
tick,0x7ff8e7af1be4,123083976,0,0x0,8
tick,0x7ff8e7af1be4,123100918,0,0x0,8
tick,0x7ff8e7af1be4,123117358,0,0x0,8
tick,0x7ff8e7af1be4,123132473,0,0x0,8
tick,0x7ff8e7af1be4,123147883,0,0x0,8
tick,0x7ff8e7af1be4,123164902,0,0x0,8
tick,0x7ff8e7af1be4,123180237,0,0x0,8
tick,0x7ff8e7af1be4,123196131,0,0x0,8
tick,0x7ff8e7af1be4,123212234,0,0x0,8
tick,0x7ff8e7af1be4,123228032,0,0x0,8
tick,0x7ff8e7af1be4,123244360,0,0x0,8
tick,0x7ff8e7af1be4,123259950,0,0x0,8
tick,0x7ff8e7af1be4,123276069,0,0x0,8
tick,0x7ff8e7af1be4,123292689,0,0x0,8
tick,0x7ff8e7af1be4,123294401,0,0x0,8
tick,0x7ff8e7af1be4,123310339,0,0x0,8
tick,0x7ff8e7af1be4,123326001,0,0x0,8
tick,0x7ff8e7af1be4,123334219,0,0x0,8
tick,0x7ff8e7af1be4,123350271,0,0x0,8
tick,0x7ff8e7af1be4,123358609,0,0x0,8
tick,0x7ff8e7af1be4,123374901,0,0x0,8
tick,0x7ff8e7af1be4,123391230,0,0x0,8
tick,0x7ff8e7af1be4,123398999,0,0x0,8
tick,0x7ff8e7af1be4,123409722,0,0x0,8
tick,0x7ff8e7af1be4,123423009,0,0x0,8
tick,0x7ff8e7af1be4,123447196,0,0x0,8
tick,0x7ff8e7af1be4,123463435,0,0x0,8
tick,0x7ff8e7af1be4,123480357,0,0x0,8
tick,0x7ff8e7af1be4,123496523,0,0x0,8
tick,0x7ff8e7af1be4,123512001,0,0x0,8
tick,0x7ff8e7af1be4,123527451,0,0x0,8
tick,0x7ff8e7af1be4,123543380,0,0x0,8
tick,0x7ff8e7af1be4,123551531,0,0x0,8
tick,0x7ff8e7af1be4,123567612,0,0x0,8
tick,0x7ff8e7af1be4,123583442,0,0x0,8
tick,0x7ff8e7af1be4,123592096,0,0x0,8
tick,0x7ff8e7af1be4,123599955,0,0x0,8
tick,0x7ff8e7af1be4,123616050,0,0x0,8
tick,0x7ff8e7af1be4,123631981,0,0x0,8
tick,0x7ff8e7af1be4,123648117,0,0x0,8
tick,0x7ff8e7af1be4,123664461,0,0x0,8
tick,0x7ff8e7af1be4,123679731,0,0x0,8
tick,0x7ff8e7af1be4,123695821,0,0x0,8
tick,0x7ff8e7af1be4,123711877,0,0x0,8
tick,0x7ff8e7af1be4,123720547,0,0x0,8
tick,0x7ff8e7af1be4,123736302,0,0x0,8
tick,0x7ff8e7af1be4,123752388,0,0x0,8
tick,0x7ff8e7af1be4,123768135,0,0x0,8
tick,0x7ff8e7af1be4,123784012,0,0x0,8
tick,0x7ff8e7af1be4,123798102,0,0x0,8
tick,0x7ff8e7af1be4,123808288,0,0x0,8
tick,0x7ff8e7af1be4,123832441,0,0x0,8
tick,0x7ff8e7af1be4,123849150,0,0x0,8
tick,0x7ff8e7af1be4,123867814,0,0x0,8
tick,0x7ff8e7af1be4,123880578,0,0x0,8
tick,0x7ff8e7af1be4,123896758,0,0x0,8
tick,0x7ff8e7af1be4,123912558,0,0x0,8
tick,0x7ff8e7af1be4,123928271,0,0x0,8
tick,0x7ff8e7af1be4,123944204,0,0x0,8
tick,0x7ff8e7af1be4,123960731,0,0x0,8
tick,0x7ff8e7af1be4,123975486,0,0x0,8
tick,0x7ff8e7af1be4,123991111,0,0x0,8
tick,0x7ff8e7af1be4,124007149,0,0x0,8
tick,0x7ff8e7af1be4,124023637,0,0x0,8
tick,0x7ff8e7af1be4,124039547,0,0x0,8
tick,0x7ff8e7af1be4,124055317,0,0x0,8
tick,0x7ff8e7af1be4,124071471,0,0x0,8
tick,0x7ff8e7af1be4,124087470,0,0x0,8
tick,0x7ff8e7af1be4,124103533,0,0x0,8
tick,0x7ff8e7af1be4,124120950,0,0x0,8
tick,0x7ff8e7af1be4,124135895,0,0x0,8
tick,0x7ff8e7af1be4,124151392,0,0x0,8
tick,0x7ff8e7af1be4,124167377,0,0x0,8
tick,0x7ff8e7af1be4,124183457,0,0x0,8
tick,0x7ff8e7af1be4,124191613,0,0x0,8
tick,0x7ff8e7af1be4,124207893,0,0x0,8
tick,0x7ff8e7af1be4,124223427,0,0x0,8
tick,0x7ff8e7af1be4,124239446,0,0x0,8
tick,0x7ff8e7af1be4,124255319,0,0x0,8
tick,0x7ff8e7af1be4,124271587,0,0x0,8
tick,0x7ff8e7af1be4,124287172,0,0x0,8
tick,0x7ff8e7af1be4,124303075,0,0x0,8
tick,0x7ff8e7af1be4,124304983,0,0x0,8
tick,0x7ff8e7af1be4,124320850,0,0x0,8
tick,0x7ff8e7af1be4,124336878,0,0x0,8
tick,0x7ff8e7af1be4,124353023,0,0x0,8
tick,0x7ff8e7af1be4,124369170,0,0x0,8
tick,0x7ff8e7af1be4,124385117,0,0x0,8
tick,0x7ff8e7af1be4,124401027,0,0x0,8
tick,0x7ff8e7af1be4,124417087,0,0x0,8
tick,0x7ff8e7af1be4,124433121,0,0x0,8
tick,0x7ff8e7af1be4,124449071,0,0x0,8
tick,0x7ff8e7af1be4,124464833,0,0x0,8
tick,0x7ff8e7af1be4,124480356,0,0x0,8
tick,0x7ff8e7af1be4,124496419,0,0x0,8
tick,0x7ff8e7af1be4,124512345,0,0x0,8
tick,0x7ff8e7af1be4,124528074,0,0x0,8
tick,0x7ff8e7af1be4,124544012,0,0x0,8
tick,0x7ff8e7af1be4,124560066,0,0x0,8
tick,0x7ff8e7af1be4,124575614,0,0x0,8
tick,0x7ff8e7af1be4,124591179,0,0x0,8
tick,0x7ff8e7af1be4,124607201,0,0x0,8
tick,0x7ff8e7af1be4,124623215,0,0x0,8
tick,0x7ff8e7af1be4,124638731,0,0x0,8
tick,0x7ff8e7af1be4,124654790,0,0x0,8
tick,0x7ff8e7af1be4,124670396,0,0x0,8
tick,0x7ff8e7af1be4,124686210,0,0x0,8
tick,0x7ff8e7af1be4,124702172,0,0x0,8
tick,0x7ff8e7af1be4,124718197,0,0x0,8
tick,0x7ff8e7af1be4,124734077,0,0x0,8
tick,0x7ff8e7af1be4,124749542,0,0x0,8
tick,0x7ff8e7af1be4,124765717,0,0x0,8
tick,0x7ff8e7af1be4,124781416,0,0x0,8
tick,0x7ff8e7af1be4,124796975,0,0x0,8
tick,0x7ff8e7af1be4,124812744,0,0x0,8
tick,0x7ff8e7af1be4,124828552,0,0x0,8
tick,0x7ff8e7af1be4,124844631,0,0x0,8
tick,0x7ff8e7af1be4,124860560,0,0x0,8
tick,0x7ff8e7af1be4,124876357,0,0x0,8
tick,0x7ff8e7af1be4,124886071,0,0x0,8
tick,0x7ff8e7af1be4,124900267,0,0x0,8
tick,0x7ff8e7af1be4,124916160,0,0x0,8
tick,0x7ff8e7af1be4,124931848,0,0x0,8
tick,0x7ff8e7af1be4,124948676,0,0x0,8
tick,0x7ff8e7af1be4,124963689,0,0x0,8
tick,0x7ff8e7af1be4,124979423,0,0x0,8
tick,0x7ff8e7af1be4,124995420,0,0x0,8
tick,0x7ff8e7af1be4,125011248,0,0x0,8
tick,0x7ff8e7af1be4,125026766,0,0x0,8
tick,0x7ff8e7af1be4,125042385,0,0x0,8
tick,0x7ff8e7af1be4,125058071,0,0x0,8
tick,0x7ff8e7af1be4,125069105,0,0x0,8
tick,0x7ff8e7af1be4,125082105,0,0x0,8
tick,0x7ff8e7af1be4,125098357,0,0x0,8
tick,0x7ff8e7af1be4,125114662,0,0x0,8
tick,0x7ff8e7af1be4,125131010,0,0x0,8
tick,0x7ff8e7af1be4,125146302,0,0x0,8
tick,0x7ff8e7af1be4,125162251,0,0x0,8
tick,0x7ff8e7af1be4,125177936,0,0x0,8
tick,0x7ff8e7af1be4,125186226,0,0x0,8
tick,0x7ff8e7af1be4,125202598,0,0x0,8
tick,0x7ff8e7af1be4,125218601,0,0x0,8
tick,0x7ff8e7af1be4,125234362,0,0x0,8
tick,0x7ff8e7af1be4,125250579,0,0x0,8
tick,0x7ff8e7af1be4,125266059,0,0x0,8
tick,0x7ff8e7af1be4,125282075,0,0x0,8
tick,0x7ff8e7af1be4,125298527,0,0x0,8
tick,0x7ff8e7af1be4,125314620,0,0x0,8
tick,0x7ff8e7af1be4,125320066,0,0x0,8
tick,0x7ff8e7af1be4,125332787,0,0x0,8
tick,0x7ff8e7af1be4,125348673,0,0x0,8
tick,0x7ff8e7af1be4,125364747,0,0x0,8
tick,0x7ff8e7af1be4,125373078,0,0x0,8
tick,0x7ff8e7af1be4,125389417,0,0x0,8
tick,0x7ff8e7af1be4,125406044,0,0x0,8
tick,0x7ff8e7af1be4,125413952,0,0x0,8
tick,0x7ff8e7af1be4,125422440,0,0x0,8
tick,0x7ff8e7af1be4,125435807,0,0x0,8
tick,0x7ff8e7af1be4,125442571,0,0x0,8
tick,0x7ff8e7af1be4,125454182,0,0x0,8
tick,0x7ff8e7af1be4,125470361,0,0x0,8
tick,0x7ff8e7af1be4,125478309,0,0x0,8
tick,0x7ff8e7af1be4,125494471,0,0x0,8
tick,0x7ff8e7af1be4,125510214,0,0x0,8
tick,0x7ff8e7af1be4,125526115,0,0x0,8
tick,0x7ff8e7af1be4,125542372,0,0x0,8
tick,0x7ff8e7af1be4,125558150,0,0x0,8
tick,0x7ff8e7af1be4,125573715,0,0x0,8
tick,0x7ff8e7af1be4,125589793,0,0x0,8
tick,0x7ff8e7af1be4,125605370,0,0x0,8
tick,0x7ff8e7af1be4,125621517,0,0x0,8
tick,0x7ff8e7af1be4,125637425,0,0x0,8
tick,0x7ff8e7af1be4,125661877,0,0x0,8
tick,0x7ff8e7af1be4,125677890,0,0x0,8
tick,0x7ff8e7af1be4,125694077,0,0x0,8
tick,0x7ff8e7af1be4,125710119,0,0x0,8
tick,0x7ff8e7af1be4,125725892,0,0x0,8
tick,0x7ff8e7af1be4,125742090,0,0x0,8
tick,0x7ff8e7af1be4,125751211,0,0x0,8
tick,0x7ff8e7af1be4,125766409,0,0x0,8
tick,0x7ff8e7af1be4,125781990,0,0x0,8
tick,0x7ff8e7af1be4,125797954,0,0x0,8
tick,0x7ff8e7af1be4,125813871,0,0x0,8
tick,0x7ff8e7af1be4,125829766,0,0x0,8
tick,0x7ff8e7af1be4,125835116,0,0x0,8
tick,0x7ff8e7af1be4,125848303,0,0x0,8
tick,0x7ff8e7af1be4,125864174,0,0x0,8
tick,0x7ff8e7af1be4,125879874,0,0x0,8
tick,0x7ff8e7af1be4,125895478,0,0x0,8
tick,0x7ff8e7af1be4,125911606,0,0x0,8
tick,0x7ff8e7af1be4,125927893,0,0x0,8
tick,0x7ff8e7af1be4,125943621,0,0x0,8
tick,0x7ff8e7af1be4,125951926,0,0x0,8
tick,0x7ff8e7af1be4,125967714,0,0x0,8
tick,0x7ff8e7af1be4,125983371,0,0x0,8
tick,0x7ff8e7af1be4,125999426,0,0x0,8
tick,0x7ff8e7af1be4,126015068,0,0x0,8
tick,0x7ff8e7af1be4,126031203,0,0x0,8
tick,0x7ff8e7af1be4,126046991,0,0x0,8
tick,0x7ff8e7af1be4,126063021,0,0x0,8
tick,0x7ff8e7af1be4,126078664,0,0x0,8
tick,0x7ff8e7af1be4,126094552,0,0x0,8
tick,0x7ff8e7af1be4,126110289,0,0x0,8
tick,0x7ff8e7af1be4,126126349,0,0x0,8
tick,0x7ff8e7af1be4,126142972,0,0x0,8
tick,0x7ff8e7af1be4,126158779,0,0x0,8
tick,0x7ff8e7af1be4,126174856,0,0x0,8
tick,0x7ff8e7af1be4,126190674,0,0x0,8
tick,0x7ff8e7af1be4,126201003,0,0x0,8
tick,0x7ff8e7af1be4,126214956,0,0x0,8
tick,0x7ff8e7af1be4,126230994,0,0x0,8
tick,0x7ff8e7af1be4,126246592,0,0x0,8
tick,0x7ff8e7af1be4,126262479,0,0x0,8
tick,0x7ff8e7af1be4,126278484,0,0x0,8
tick,0x7ff8e7af1be4,126293920,0,0x0,8
tick,0x7ff8e7af1be4,126309393,0,0x0,8
tick,0x7ff8e7af1be4,126325053,0,0x0,8
tick,0x7ff8e7af1be4,126341024,0,0x0,8
tick,0x7ff8e7af1be4,126356787,0,0x0,8
tick,0x7ff8e7af1be4,126372845,0,0x0,8
tick,0x7ff8e7af1be4,126388633,0,0x0,8
tick,0x7ff8e7af1be4,126404490,0,0x0,8
tick,0x7ff8e7af1be4,126420633,0,0x0,8
tick,0x7ff8e7af1be4,126436665,0,0x0,8
tick,0x7ff8e7af1be4,126452477,0,0x0,8
tick,0x7ff8e7af1be4,126467602,0,0x0,8
tick,0x7ff8e7af1be4,126483664,0,0x0,8
tick,0x7ff8e7af1be4,126499716,0,0x0,8
tick,0x7ff8e7af1be4,126515102,0,0x0,8
tick,0x7ff8e7af1be4,126531119,0,0x0,8
tick,0x7ff8e7af1be4,126547024,0,0x0,8
tick,0x7ff8e7af1be4,126563144,0,0x0,8
tick,0x7ff8e7af1be4,126578809,0,0x0,8
tick,0x7ff8e7af1be4,126594591,0,0x0,8
tick,0x7ff8e7af1be4,126610402,0,0x0,8
tick,0x7ff8e7af1be4,126626136,0,0x0,8
tick,0x7ff8e7af1be4,126642012,0,0x0,8
tick,0x7ff8e7af1be4,126657600,0,0x0,8
tick,0x7ff8e7af1be4,126673821,0,0x0,8
tick,0x7ff8e7af1be4,126689578,0,0x0,8
tick,0x7ff8e7af1be4,126705287,0,0x0,8
tick,0x7ff8e7af1be4,126721393,0,0x0,8
tick,0x7ff8e7af1be4,126737235,0,0x0,8
tick,0x7ff8e7af1be4,126753110,0,0x0,8
tick,0x7ff8e7af1be4,126769033,0,0x0,8
tick,0x7ff8e7af1be4,126785517,0,0x0,8
tick,0x7ff8e7af1be4,126800963,0,0x0,8
tick,0x7ff8e7af1be4,126816896,0,0x0,8
tick,0x7ff8e7af1be4,126832422,0,0x0,8
tick,0x7ff8e7af1be4,126848534,0,0x0,8
tick,0x7ff8e7af1be4,126862051,0,0x0,8
tick,0x7ff8e7af1be4,126877425,0,0x0,8
tick,0x7ff8e7af1be4,126892987,0,0x0,8
tick,0x7ff8e7af1be4,126909093,0,0x0,8
tick,0x7ff8e7af1be4,126920060,0,0x0,8
tick,0x7ff8e7af1be4,126933492,0,0x0,8
tick,0x7ff8e7af1be4,126949412,0,0x0,8
tick,0x7ff8e7af1be4,126966035,0,0x0,8
tick,0x7ff8e7af1be4,126981263,0,0x0,8
tick,0x7ff8e7af1be4,126997564,0,0x0,8
tick,0x7ff8e7af1be4,127012920,0,0x0,8
tick,0x7ff8e7af1be4,127028797,0,0x0,8
tick,0x7ff8e7af1be4,127044554,0,0x0,8
tick,0x7ff8e7af1be4,127060776,0,0x0,8
tick,0x7ff8e7af1be4,127076462,0,0x0,8
tick,0x7ff8e7af1be4,127092670,0,0x0,8
tick,0x7ff8e7af1be4,127108460,0,0x0,8
tick,0x7ff8e7af1be4,127124313,0,0x0,8
tick,0x7ff8e7af1be4,127140402,0,0x0,8
tick,0x7ff8e7af1be4,127149105,0,0x0,8
tick,0x7ff8e7af1be4,127165202,0,0x0,8
tick,0x7ff8e7af1be4,127180743,0,0x0,8
tick,0x7ff8e7af1be4,127196559,0,0x0,8
tick,0x7ff8e7af1be4,127212518,0,0x0,8
tick,0x7ff8e7af1be4,127228312,0,0x0,8
tick,0x7ff8e7af1be4,127244307,0,0x0,8
tick,0x7ff8e7af1be4,127260263,0,0x0,8
tick,0x7ff8e7af1be4,127275871,0,0x0,8
tick,0x7ff8e7af1be4,127291777,0,0x0,8
tick,0x7ff8e7af1be4,127307453,0,0x0,8
tick,0x7ff8e7af1be4,127316488,0,0x0,8
tick,0x7ff8e7af1be4,127332212,0,0x0,8
tick,0x7ff8e7af1be4,127348209,0,0x0,8
tick,0x7ff8e7af1be4,127364166,0,0x0,8
tick,0x7ff8e7af1be4,127373508,0,0x0,8
tick,0x7ff8e7af1be4,127389533,0,0x0,8
tick,0x7ff8e7af1be4,127414214,0,0x0,8
tick,0x7ff8e7af1be4,127423065,0,0x0,8
tick,0x7ff8e7af1be4,127438952,0,0x0,8
tick,0x7ff8e7af1be4,127454945,0,0x0,8
tick,0x7ff8e7af1be4,127470850,0,0x0,8
tick,0x7ff8e7af1be4,127486521,0,0x0,8
tick,0x7ff8e7af1be4,127503100,0,0x0,8
tick,0x7ff8e7af1be4,127518454,0,0x0,8
tick,0x7ff8e7af1be4,127534342,0,0x0,8
tick,0x7ff8e7af1be4,127550388,0,0x0,8
tick,0x7ff8e7af1be4,127566315,0,0x0,8
tick,0x7ff8e7af1be4,127582466,0,0x0,8
tick,0x7ff8e7af1be4,127598554,0,0x0,8
tick,0x7ff8e7af1be4,127614484,0,0x0,8
tick,0x7ff8e7af1be4,127630154,0,0x0,8
tick,0x7ff8e7af1be4,127638352,0,0x0,8
tick,0x7ff8e7af1be4,127654894,0,0x0,8
tick,0x7ff8e7af1be4,127666046,0,0x0,8
tick,0x7ff8e7af1be4,127679701,0,0x0,8
tick,0x7ff8e7af1be4,127694912,0,0x0,8
tick,0x7ff8e7af1be4,127711918,0,0x0,8
tick,0x7ff8e7af1be4,127726806,0,0x0,8
tick,0x7ff8e7af1be4,127743076,0,0x0,8
tick,0x7ff8e7af1be4,127759121,0,0x0,8
tick,0x7ff8e7af1be4,127775469,0,0x0,8
tick,0x7ff8e7af1be4,127790621,0,0x0,8
tick,0x7ff8e7af1be4,127807027,0,0x0,8
tick,0x7ff8e7af1be4,127822488,0,0x0,8
tick,0x7ff8e7af1be4,127838400,0,0x0,8
tick,0x7ff8e7af1be4,127854666,0,0x0,8
tick,0x7ff8e7af1be4,127870638,0,0x0,8
tick,0x7ff8e7af1be4,127875976,0,0x0,8
tick,0x7ff8e7af1be4,127891938,0,0x0,8
tick,0x7ff8e7af1be4,127907743,0,0x0,8
tick,0x7ff8e7af1be4,127923886,0,0x0,8
tick,0x7ff8e7af1be4,127939261,0,0x0,8
tick,0x7ff8e7af1be4,127955041,0,0x0,8
tick,0x7ff8e7af1be4,127970639,0,0x0,8
tick,0x7ff8e7af1be4,127986915,0,0x0,8
tick,0x7ff8e7af1be4,128003112,0,0x0,8
tick,0x7ff8e7af1be4,128019189,0,0x0,8
tick,0x7ff8e7af1be4,128035163,0,0x0,8
tick,0x7ff8e7af1be4,128051045,0,0x0,8
tick,0x7ff8e7af1be4,128066821,0,0x0,8
tick,0x7ff8e7af1be4,128082994,0,0x0,8
tick,0x7ff8e7af1be4,128098819,0,0x0,8
tick,0x7ff8e7af1be4,128114958,0,0x0,8
tick,0x7ff8e7af1be4,128130804,0,0x0,8
tick,0x7ff8e7af1be4,128146771,0,0x0,8
tick,0x7ff8e7af1be4,128163777,0,0x0,8
tick,0x7ff8e7af1be4,128178691,0,0x0,8
tick,0x7ff8e7af1be4,128194278,0,0x0,8
tick,0x7ff8e7af1be4,128209989,0,0x0,8
tick,0x7ff8e7af1be4,128225885,0,0x0,8
tick,0x7ff8e7af1be4,128242057,0,0x0,8
tick,0x7ff8e7af1be4,128258405,0,0x0,8
tick,0x7ff8e7af1be4,128274397,0,0x0,8
tick,0x7ff8e7af1be4,128290168,0,0x0,8
tick,0x7ff8e7af1be4,128306215,0,0x0,8
tick,0x7ff8e7af1be4,128321999,0,0x0,8
tick,0x7ff8e7af1be4,128337724,0,0x0,8
tick,0x7ff8e7af1be4,128353682,0,0x0,8
tick,0x7ff8e7af1be4,128369384,0,0x0,8
tick,0x7ff8e7af1be4,128385070,0,0x0,8
tick,0x7ff8e7af1be4,128401069,0,0x0,8
tick,0x7ff8e7af1be4,128409367,0,0x0,8
tick,0x7ff8e7af1be4,128425554,0,0x0,8
tick,0x7ff8e7af1be4,128441861,0,0x0,8
tick,0x7ff8e7af1be4,128457982,0,0x0,8
tick,0x7ff8e7af1be4,128473888,0,0x0,8
tick,0x7ff8e7af1be4,128489946,0,0x0,8
tick,0x7ff8e7af1be4,128505268,0,0x0,8
tick,0x7ff8e7af1be4,128521237,0,0x0,8
tick,0x7ff8e7af1be4,128537326,0,0x0,8
tick,0x7ff8e7af1be4,128553408,0,0x0,8
tick,0x7ff8e7af1be4,128569244,0,0x0,8
tick,0x7ff8e7af1be4,128585388,0,0x0,8
tick,0x7ff8e7af1be4,128600951,0,0x0,8
tick,0x7ff8e7af1be4,128616899,0,0x0,8
tick,0x7ff8e7af1be4,128632774,0,0x0,8
tick,0x7ff8e7af1be4,128640688,0,0x0,8
tick,0x7ff8e7af1be4,128664996,0,0x0,8
tick,0x7ff8e7af1be4,128681094,0,0x0,8
tick,0x7ff8e7af1be4,128689126,0,0x0,8
tick,0x7ff8e7af1be4,128713073,0,0x0,8
tick,0x7ff8e7af1be4,128729442,0,0x0,8
tick,0x7ff8e7af1be4,128745277,0,0x0,8
tick,0x7ff8e7af1be4,128760991,0,0x0,8
tick,0x7ff8e7af1be4,128768622,0,0x0,8
tick,0x7ff8e7af1be4,128777555,0,0x0,8
tick,0x7ff8e7af1be4,128793521,0,0x0,8
tick,0x7ff8e7af1be4,128809429,0,0x0,8
tick,0x7ff8e7af1be4,128825241,0,0x0,8
tick,0x7ff8e7af1be4,128841129,0,0x0,8
tick,0x7ff8e7af1be4,128856833,0,0x0,8
tick,0x7ff8e7af1be4,128865154,0,0x0,8
tick,0x7ff8e7af1be4,128881880,0,0x0,8
tick,0x7ff8e7af1be4,128898041,0,0x0,8
tick,0x7ff8e7af1be4,128903607,0,0x0,8
tick,0x7ff8e7af1be4,128914660,0,0x0,8
tick,0x7ff8e7af1be4,128930509,0,0x0,8
tick,0x7ff8e7af1be4,128946399,0,0x0,8
tick,0x7ff8e7af1be4,128962515,0,0x0,8
tick,0x7ff8e7af1be4,128978352,0,0x0,8
tick,0x7ff8e7af1be4,128994204,0,0x0,8
tick,0x7ff8e7af1be4,129009933,0,0x0,8
tick,0x7ff8e7af1be4,129025710,0,0x0,8
tick,0x7ff8e7af1be4,129042004,0,0x0,8
tick,0x7ff8e7af1be4,129057826,0,0x0,8
tick,0x7ff8e7af1be4,129074250,0,0x0,8
tick,0x7ff8e7af1be4,129090080,0,0x0,8
tick,0x7ff8e7af1be4,129106274,0,0x0,8
tick,0x7ff8e7af1be4,129122404,0,0x0,8
tick,0x7ff8e7af1be4,129140407,0,0x0,8
tick,0x7ff8e7af1be4,129153675,0,0x0,8
tick,0x7ff8e7af1be4,129170024,0,0x0,8
tick,0x7ff8e7af1be4,129185331,0,0x0,8
tick,0x7ff8e7af1be4,129201186,0,0x0,8
tick,0x7ff8e7af1be4,129217726,0,0x0,8
tick,0x7ff8e7af1be4,129233784,0,0x0,8
tick,0x7ff8e7af1be4,129249674,0,0x0,8
tick,0x7ff8e7af1be4,129265791,0,0x0,8
tick,0x7ff8e7af1be4,129281903,0,0x0,8
tick,0x7ff8e7af1be4,129297354,0,0x0,8
tick,0x7ff8e7af1be4,129313186,0,0x0,8
tick,0x7ff8e7af1be4,129329279,0,0x0,8
tick,0x7ff8e7af1be4,129344320,0,0x0,8
tick,0x7ff8e7af1be4,129360424,0,0x0,8
tick,0x7ff8e7af1be4,129376038,0,0x0,8
tick,0x7ff8e7af1be4,129391640,0,0x0,8
tick,0x7ff8e7af1be4,129407211,0,0x0,8
tick,0x7ff8e7af1be4,129422990,0,0x0,8
tick,0x7ff8e7af1be4,129438618,0,0x0,8
tick,0x7ff8e7af1be4,129454600,0,0x0,8
tick,0x7ff8e7af1be4,129470299,0,0x0,8
tick,0x7ff8e7af1be4,129486038,0,0x0,8
tick,0x7ff8e7af1be4,129501460,0,0x0,8
tick,0x7ff8e7af1be4,129517182,0,0x0,8
tick,0x7ff8e7af1be4,129532976,0,0x0,8
tick,0x7ff8e7af1be4,129548819,0,0x0,8
tick,0x7ff8e7af1be4,129564637,0,0x0,8
tick,0x7ff8e7af1be4,129580567,0,0x0,8
tick,0x7ff8e7af1be4,129596358,0,0x0,8
tick,0x7ff8e7af1be4,129612572,0,0x0,8
tick,0x7ff8e7af1be4,129628519,0,0x0,8
tick,0x7ff8e7af1be4,129643772,0,0x0,8
tick,0x7ff8e7af1be4,129659354,0,0x0,8
tick,0x7ff8e7af1be4,129675164,0,0x0,8
tick,0x7ff8e7af1be4,129690849,0,0x0,8
tick,0x7ff8e7af1be4,129706427,0,0x0,8
tick,0x7ff8e7af1be4,129722019,0,0x0,8
tick,0x7ff8e7af1be4,129738304,0,0x0,8
tick,0x7ff8e7af1be4,129753912,0,0x0,8
tick,0x7ff8e7af1be4,129769568,0,0x0,8
tick,0x7ff8e7af1be4,129785493,0,0x0,8
tick,0x7ff8e7af1be4,129801249,0,0x0,8
tick,0x7ff8e7af1be4,129817306,0,0x0,8
tick,0x7ff8e7af1be4,129833083,0,0x0,8
tick,0x7ff8e7af1be4,129848947,0,0x0,8
tick,0x7ff8e7af1be4,129864697,0,0x0,8
tick,0x7ff8e7af1be4,129880610,0,0x0,8
tick,0x7ff8e7af1be4,129896733,0,0x0,8
tick,0x7ff8e7af1be4,129904892,0,0x0,8
tick,0x7ff8e7af1be4,129920939,0,0x0,8
tick,0x7ff8e7af1be4,129929080,0,0x0,8
tick,0x7ff8e7af1be4,129938559,0,0x0,8
tick,0x7ff8e7af1be4,129946824,0,0x0,8
tick,0x7ff8e7af1be4,129955126,0,0x0,8
tick,0x7ff8e7af1be4,129963551,0,0x0,8
tick,0x7ff8e7af1be4,129979318,0,0x0,8
tick,0x7ff8e7af1be4,129995563,0,0x0,8
tick,0x7ff8e7af1be4,130003281,0,0x0,8
tick,0x7ff8e7af1be4,130019606,0,0x0,8
tick,0x7ff8e7af1be4,130035755,0,0x0,8
tick,0x7ff8e7af1be4,130051799,0,0x0,8
tick,0x7ff8e7af1be4,130060035,0,0x0,8
tick,0x7ff8e7af1be4,130076264,0,0x0,8
tick,0x7ff8e7af1be4,130093243,0,0x0,8
tick,0x7ff8e7af1be4,130108607,0,0x0,8
tick,0x7ff8e7af1be4,130124820,0,0x0,8
tick,0x7ff8e7af1be4,130143334,0,0x0,8
tick,0x7ff8e7af1be4,130152225,0,0x0,8
tick,0x7ff8e7af1be4,130176683,0,0x0,8
tick,0x7ff8e7af1be4,130186176,0,0x0,8
tick,0x7ff8e7af1be4,130200296,0,0x0,8
tick,0x7ff8e7af1be4,130216706,0,0x0,8
tick,0x7ff8e7af1be4,130224507,0,0x0,8
tick,0x7ff8e7af1be4,130232408,0,0x0,8
tick,0x7ff8e7af1be4,130248256,0,0x0,8
tick,0x7ff8e7af1be4,130264145,0,0x0,8
tick,0x7ff8e7af1be4,130279904,0,0x0,8
tick,0x7ff8e7af1be4,130296285,0,0x0,8
tick,0x7ff8e7af1be4,130312085,0,0x0,8
tick,0x7ff8e7af1be4,130327333,0,0x0,8
tick,0x7ff8e7af1be4,130343857,0,0x0,8
tick,0x7ff8e7af1be4,130359228,0,0x0,8
tick,0x7ff8e7af1be4,130374842,0,0x0,8
tick,0x7ff8e7af1be4,130390666,0,0x0,8
tick,0x7ff8e7af1be4,130406371,0,0x0,8
tick,0x7ff8e7af1be4,130422022,0,0x0,8
tick,0x7ff8e7af1be4,130437651,0,0x0,8
tick,0x7ff8e7af1be4,130453911,0,0x0,8
tick,0x7ff8e7af1be4,130470943,0,0x0,8
tick,0x7ff8e7af1be4,130486550,0,0x0,8
tick,0x7ff8e7af1be4,130502225,0,0x0,8
tick,0x7ff8e7af1be4,130517561,0,0x0,8
tick,0x7ff8e7af1be4,130533269,0,0x0,8
tick,0x7ff8e7af1be4,130543739,0,0x0,8
tick,0x7ff8e7af1be4,130555176,0,0x0,8
tick,0x7ff8e7af1be4,130564643,0,0x0,8
tick,0x7ff8e7af1be4,130572621,0,0x0,8
tick,0x7ff8e7af1be4,130589330,0,0x0,8
tick,0x7ff8e7af1be4,130597338,0,0x0,8
tick,0x7ff8e7af1be4,130613595,0,0x0,8
tick,0x7ff8e7af1be4,130657867,0,0x0,8
tick,0x7ff8e7af1be4,130663222,0,0x0,8
tick,0x7ff8e7af1be4,130678165,0,0x0,8
tick,0x7ff8e7af1be4,130694148,0,0x0,8
tick,0x7ff8e7af1be4,130709435,0,0x0,8
tick,0x7ff8e7af1be4,130725477,0,0x0,8
tick,0x7ff8e7af1be4,130741489,0,0x0,8
tick,0x7ff8e7af1be4,130757429,0,0x0,8
tick,0x7ff8e7af1be4,130773154,0,0x0,8
tick,0x7ff8e7af1be4,130788935,0,0x0,8
tick,0x7ff8e7af1be4,130804823,0,0x0,8
tick,0x7ff8e7af1be4,130820636,0,0x0,8
tick,0x7ff8e7af1be4,130836433,0,0x0,8
tick,0x7ff8e7af1be4,130852282,0,0x0,8
tick,0x7ff8e7af1be4,130868053,0,0x0,8
tick,0x7ff8e7af1be4,130883806,0,0x0,8
tick,0x7ff8e7af1be4,130899606,0,0x0,8
tick,0x7ff8e7af1be4,130915347,0,0x0,8
tick,0x7ff8e7af1be4,130931252,0,0x0,8
tick,0x7ff8e7af1be4,130947508,0,0x0,8
tick,0x7ff8e7af1be4,130963756,0,0x0,8
tick,0x7ff8e7af1be4,130980121,0,0x0,8
tick,0x7ff8e7af1be4,130996006,0,0x0,8
tick,0x7ff8e7af1be4,131011555,0,0x0,8
tick,0x7ff8e7af1be4,131027380,0,0x0,8
tick,0x7ff8e7af1be4,131059798,0,0x0,8
tick,0x7ff8e7af1be4,131074939,0,0x0,8
tick,0x7ff8e7af1be4,131106417,0,0x0,8
tick,0x7ff8e7af1be4,131122370,0,0x0,8
tick,0x7ff8e7af1be4,131139582,0,0x0,8
tick,0x7ff8e7af1be4,131154783,0,0x0,8
tick,0x7ff8e7af1be4,131170616,0,0x0,8
tick,0x7ff8e7af1be4,131187298,0,0x0,8
tick,0x7ff8e7af1be4,131200739,0,0x0,8
tick,0x7ff8e7af1be4,131216174,0,0x0,8
tick,0x7ff8e7af1be4,131231943,0,0x0,8
tick,0x7ff8e7af1be4,131247491,0,0x0,8
tick,0x7ff8e7af1be4,131263604,0,0x0,8
tick,0x7ff8e7af1be4,131279875,0,0x0,8
tick,0x7ff8e7af1be4,131295815,0,0x0,8
tick,0x7ff8e7af1be4,131311573,0,0x0,8
tick,0x7ff8e7af1be4,131322346,0,0x0,8
tick,0x7ff8e7af1be4,131330380,0,0x0,8
tick,0x7ff8e7af1be4,131341526,0,0x0,8
tick,0x7ff8e7af1be4,131351343,0,0x0,8
tick,0x7ff8e7af1be4,131361472,0,0x0,8
tick,0x7ff8e7af1be4,131371371,0,0x0,8
tick,0x7ff8e7af1be4,131386761,0,0x0,8
tick,0x7ff8e7af1be4,131396211,0,0x0,8
tick,0x7ff8e7af1be4,131404432,0,0x0,8
tick,0x7ff8e7af1be4,131421233,0,0x0,8
tick,0x7ff8e7af1be4,131429808,0,0x0,8
tick,0x7ff8e7af1be4,131445617,0,0x0,8
tick,0x7ff8e7af1be4,131461594,0,0x0,8
tick,0x7ff8e7af1be4,131477487,0,0x0,8
tick,0x7ff8e7af1be4,131494199,0,0x0,8
tick,0x7ff8e7af1be4,131510191,0,0x0,8
tick,0x7ff8e7af1be4,131526390,0,0x0,8
tick,0x7ff8e7af1be4,131542313,0,0x0,8
tick,0x7ff8e7af1be4,131558463,0,0x0,8
tick,0x7ff8e7af1be4,131574488,0,0x0,8
tick,0x7ff8e7af1be4,131590234,0,0x0,8
tick,0x7ff8e7af1be4,131605930,0,0x0,8
tick,0x7ff8e7af1be4,131623295,0,0x0,8
tick,0x7ff8e7af1be4,131638064,0,0x0,8
tick,0x7ff8e7af1be4,131653640,0,0x0,8
tick,0x7ff8e7af1be4,131670200,0,0x0,8
tick,0x7ff8e7af1be4,131685896,0,0x0,8
tick,0x7ff8e7af1be4,131702169,0,0x0,8
tick,0x7ff8e7af1be4,131718029,0,0x0,8
tick,0x7ff8e7af1be4,131734316,0,0x0,8
tick,0x7ff8e7af1be4,131750777,0,0x0,8
tick,0x7ff8e7af1be4,131766802,0,0x0,8
tick,0x7ff8e7af1be4,131781729,0,0x0,8
tick,0x7ff8e7af1be4,131797265,0,0x0,8
tick,0x7ff8e7af1be4,131805453,0,0x0,8
tick,0x7ff8e7af1be4,131821911,0,0x0,8
tick,0x7ff8e7af1be4,131830113,0,0x0,8
tick,0x7ff8e7af1be4,131847081,0,0x0,8
tick,0x7ff8e7af1be4,131863419,0,0x0,8
tick,0x7ff8e7af1be4,131871805,0,0x0,8
tick,0x7ff8e7af1be4,131888743,0,0x0,8
tick,0x7ff8e7af1be4,131905585,0,0x0,8
tick,0x7ff8e7af1be4,131922149,0,0x0,8
tick,0x7ff8e7af1be4,131930528,0,0x0,8
tick,0x7ff8e7af1be4,131947014,0,0x0,8
tick,0x7ff8e7af1be4,131955281,0,0x0,8
tick,0x7ff8e7af1be4,131963374,0,0x0,8
tick,0x7ff8e7af1be4,131971960,0,0x0,8
tick,0x7ff8e7af1be4,131988432,0,0x0,8
tick,0x7ff8e7af1be4,131999361,0,0x0,8
tick,0x7ff8e7af1be4,132015126,0,0x0,8
tick,0x7ff8e7af1be4,132031798,0,0x0,8
tick,0x7ff8e7af1be4,132048443,0,0x0,8
tick,0x7ff8e7af1be4,132065524,0,0x0,8
tick,0x7ff8e7af1be4,132082157,0,0x0,8
tick,0x7ff8e7af1be4,132100595,0,0x0,8
tick,0x7ff8e7af1be4,132120355,0,0x0,8
tick,0x7ff8e7af1be4,132136649,0,0x0,8
tick,0x7ff8e7af1be4,132152323,0,0x0,8
tick,0x7ff8e7af1be4,132161841,0,0x0,8
tick,0x7ff8e7af1be4,132178718,0,0x0,8
tick,0x7ff8e7af1be4,132195092,0,0x0,8
tick,0x7ff8e7af1be4,132211975,0,0x0,8
tick,0x7ff8e7af1be4,132221894,0,0x0,8
tick,0x7ff8e7af1be4,132231628,0,0x0,8
tick,0x7ff8e7af1be4,132241757,0,0x0,8
tick,0x7ff8e7af1be4,132251801,0,0x0,8
tick,0x7ff8e7af1be4,132268087,0,0x0,8
tick,0x7ff8e7af1be4,132284590,0,0x0,8
tick,0x7ff8e7af1be4,132300723,0,0x0,8
tick,0x7ff8e7af1be4,132317476,0,0x0,8
tick,0x7ff8e7af1be4,132325765,0,0x0,8
tick,0x7ff8e7af1be4,132342211,0,0x0,8
tick,0x7ff8e7af1be4,132352062,0,0x0,8
tick,0x7ff8e7af1be4,132369731,0,0x0,8
tick,0x7ff8e7af1be4,132383935,0,0x0,8
tick,0x7ff8e7af1be4,132400256,0,0x0,8
tick,0x7ff8e7af1be4,132417147,0,0x0,8
tick,0x7ff8e7af1be4,132433980,0,0x0,8
tick,0x7ff8e7af1be4,132452014,0,0x0,8
tick,0x7ff8e7af1be4,132468689,0,0x0,8
tick,0x7ff8e7af1be4,132484858,0,0x0,8
tick,0x7ff8e7af1be4,132501944,0,0x0,8
tick,0x7ff8e7af1be4,132510105,0,0x0,8
tick,0x7ff8e7af1be4,132518362,0,0x0,8
tick,0x7ff8e7af1be4,132534889,0,0x0,8
tick,0x7ff8e7af1be4,132551729,0,0x0,8
tick,0x7ff8e7af1be4,132560244,0,0x0,8
tick,0x7ff8e7af1be4,132568143,0,0x0,8
tick,0x7ff8e7af1be4,132584917,0,0x0,8
tick,0x7ff8e7af1be4,132593391,0,0x0,8
tick,0x7ff8e7af1be4,132610158,0,0x0,8
tick,0x7ff8e7af1be4,132621842,0,0x0,8
tick,0x7ff8e7af1be4,132631826,0,0x0,8
tick,0x7ff8e7af1be4,132641669,0,0x0,8
tick,0x7ff8e7af1be4,132652104,0,0x0,8
tick,0x7ff8e7af1be4,132668683,0,0x0,8
tick,0x7ff8e7af1be4,132686323,0,0x0,8
tick,0x7ff8e7af1be4,132702193,0,0x0,8
tick,0x7ff8e7af1be4,132710570,0,0x0,8
tick,0x7ff8e7af1be4,132719557,0,0x0,8
tick,0x7ff8e7af1be4,132734594,0,0x0,8
tick,0x7ff8e7af1be4,132742942,0,0x0,8
tick,0x7ff8e7af1be4,132760924,0,0x0,8
tick,0x7ff8e7af1be4,132769199,0,0x0,8
tick,0x7ff8e7af1be4,132785992,0,0x0,8
tick,0x7ff8e7af1be4,132801820,0,0x0,8
tick,0x7ff8e7af1be4,132810762,0,0x0,8
tick,0x7ff8e7af1be4,132827439,0,0x0,8
tick,0x7ff8e7af1be4,132841893,0,0x0,8
tick,0x7ff8e7af1be4,132851867,0,0x0,8
tick,0x7ff8e7af1be4,132859987,0,0x0,8
tick,0x7ff8e7af1be4,132871784,0,0x0,8
tick,0x7ff8e7af1be4,132881788,0,0x0,8
tick,0x7ff8e7af1be4,132892120,0,0x0,8
tick,0x7ff8e7af1be4,132901686,0,0x0,8
tick,0x7ff8e7af1be4,132910102,0,0x0,8
tick,0x7ff8e7af1be4,132918472,0,0x0,8
tick,0x7ff8e7af1be4,132926900,0,0x0,8
tick,0x7ff8e7af1be4,132942033,0,0x0,8
tick,0x7ff8e7af1be4,132951527,0,0x0,8
tick,0x7ff8e7af1be4,132966993,0,0x0,8
tick,0x7ff8e7af1be4,132976150,0,0x0,8
tick,0x7ff8e7af1be4,132991572,0,0x0,8
tick,0x7ff8e7af1be4,133000868,0,0x0,8
tick,0x7ff8e7af1be4,133017525,0,0x0,8
tick,0x7ff8e7af1be4,133026775,0,0x0,8
tick,0x7ff8e7af1be4,133040794,0,0x0,8
tick,0x7ff8e7af1be4,133051366,0,0x0,8
tick,0x7ff8e7af1be4,133059907,0,0x0,8
tick,0x7ff8e7af1be4,133068299,0,0x0,8
tick,0x7ff8e7af1be4,133084662,0,0x0,8
tick,0x7ff8e7af1be4,133092925,0,0x0,8
tick,0x7ff8e7af1be4,133101307,0,0x0,8
tick,0x7ff8e7af1be4,133117981,0,0x0,8
tick,0x7ff8e7af1be4,133127038,0,0x0,8
tick,0x7ff8e7af1be4,133135217,0,0x0,8
tick,0x7ff8e7af1be4,133152141,0,0x0,8
tick,0x7ff8e7af1be4,133168735,0,0x0,8
tick,0x7ff8e7af1be4,133184785,0,0x0,8
tick,0x7ff8e7af1be4,133192836,0,0x0,8
tick,0x7ff8e7af1be4,133209459,0,0x0,8
tick,0x7ff8e7af1be4,133221977,0,0x0,8
tick,0x7ff8e7af1be4,133233349,0,0x0,8
tick,0x7ff8e7af1be4,133249992,0,0x0,8
tick,0x7ff8e7af1be4,133261973,0,0x0,8
tick,0x7ff8e7af1be4,133271980,0,0x0,8
tick,0x7ff8e7af1be4,133281598,0,0x0,8
tick,0x7ff8e7af1be4,133291755,0,0x0,8
tick,0x7ff8e7af1be4,133301625,0,0x0,8
tick,0x7ff8e7af1be4,133310198,0,0x0,8
tick,0x7ff8e7af1be4,133321966,0,0x0,8
tick,0x7ff8e7af1be4,133334790,0,0x0,8
tick,0x7ff8e7af1be4,133352327,0,0x0,8
tick,0x7ff8e7af1be4,133368779,0,0x0,8
tick,0x7ff8e7af1be4,133385628,0,0x0,8
tick,0x7ff8e7af1be4,133402190,0,0x0,8
tick,0x7ff8e7af1be4,133410486,0,0x0,8
tick,0x7ff8e7af1be4,133426929,0,0x0,8
tick,0x7ff8e7af1be4,133436331,0,0x0,8
tick,0x7ff8e7af1be4,133446740,0,0x0,8
tick,0x7ff8e7af1be4,133461691,0,0x0,8
tick,0x7ff8e7af1be4,133478303,0,0x0,8
tick,0x7ff8e7af1be4,133494821,0,0x0,8
tick,0x7ff8e7af1be4,133511913,0,0x0,8
tick,0x7ff8e7af1be4,133527837,0,0x0,8
tick,0x7ff8e7af1be4,133537881,0,0x0,8
tick,0x7ff8e7af1be4,133546880,0,0x0,8
tick,0x7ff8e7af1be4,133562149,0,0x0,8
tick,0x7ff8e7af1be4,133577433,0,0x0,8
tick,0x7ff8e7af1be4,133586945,0,0x0,8
tick,0x7ff8e7af1be4,133602085,0,0x0,8
tick,0x7ff8e7af1be4,133611848,0,0x0,8
tick,0x7ff8e7af1be4,133620053,0,0x0,8
tick,0x7ff8e7af1be4,133631805,0,0x0,8
tick,0x7ff8e7af1be4,133645247,0,0x0,8
tick,0x7ff8e7af1be4,133661877,0,0x0,8
tick,0x7ff8e7af1be4,133678770,0,0x0,8
tick,0x7ff8e7af1be4,133695217,0,0x0,8
tick,0x7ff8e7af1be4,133712073,0,0x0,8
tick,0x7ff8e7af1be4,133729080,0,0x0,8
tick,0x7ff8e7af1be4,133745637,0,0x0,8
tick,0x7ff8e7af1be4,133761907,0,0x0,8
tick,0x7ff8e7af1be4,133777699,0,0x0,8
tick,0x7ff8e7af1be4,133787407,0,0x0,8
tick,0x7ff8e7af1be4,133798714,0,0x0,8
tick,0x7ff8e7af1be4,133814535,0,0x0,8
tick,0x7ff8e7af1be4,133831174,0,0x0,8
tick,0x7ff8e7af1be4,133847378,0,0x0,8
tick,0x7ff8e7af1be4,133857057,0,0x0,8
tick,0x7ff8e7af1be4,133866496,0,0x0,8
tick,0x7ff8e7af1be4,133882406,0,0x0,8
tick,0x7ff8e7af1be4,133894883,0,0x0,8
tick,0x7ff8e7af1be4,133909254,0,0x0,8
tick,0x7ff8e7af1be4,133919875,0,0x0,8
tick,0x7ff8e7af1be4,133932121,0,0x0,8
tick,0x7ff8e7af1be4,133942133,0,0x0,8
tick,0x7ff8e7af1be4,133951832,0,0x0,8
tick,0x7ff8e7af1be4,133968403,0,0x0,8
tick,0x7ff8e7af1be4,133985306,0,0x0,8
tick,0x7ff8e7af1be4,134001943,0,0x0,8
tick,0x7ff8e7af1be4,134019052,0,0x0,8
tick,0x7ff8e7af1be4,134036792,0,0x0,8
tick,0x7ff8e7af1be4,134048002,0,0x0,8
tick,0x7ff8e7af1be4,134055041,0,0x0,8
tick,0x7ff8e7af1be4,134068545,0,0x0,8
tick,0x7ff8e7af1be4,134079341,0,0x0,8
tick,0x7ff8e7af1be4,134096116,0,0x0,8
tick,0x7ff8e7af1be4,134111597,0,0x0,8
tick,0x7ff8e7af1be4,134119833,0,0x0,8
tick,0x7ff8e7af1be4,134132193,0,0x0,8
tick,0x7ff8e7af1be4,134144843,0,0x0,8
tick,0x7ff8e7af1be4,134161991,0,0x0,8
tick,0x7ff8e7af1be4,134170153,0,0x0,8
tick,0x7ff8e7af1be4,134181670,0,0x0,8
tick,0x7ff8e7af1be4,134199288,0,0x0,8
tick,0x7ff8e7af1be4,134206159,0,0x0,8
tick,0x7ff8e7af1be4,134222235,0,0x0,8
tick,0x7ff8e7af1be4,134230155,0,0x0,8
tick,0x7ff8e7af1be4,134247538,0,0x0,8
tick,0x7ff8e7af1be4,134255965,0,0x0,8
tick,0x7ff8e7af1be4,134271850,0,0x0,8
tick,0x7ff8e7af1be4,134281604,0,0x0,8
tick,0x7ff8e7af1be4,134296186,0,0x0,8
tick,0x7ff8e7af1be4,134311871,0,0x0,8
tick,0x7ff8e7af1be4,134320397,0,0x0,8
tick,0x7ff8e7af1be4,134329688,0,0x0,8
tick,0x7ff8e7af1be4,134347473,0,0x0,8
tick,0x7ff8e7af1be4,134355703,0,0x0,8
tick,0x7ff8e7af1be4,134366806,0,0x0,8
tick,0x7ff8e7af1be4,134382122,0,0x0,8
tick,0x7ff8e7af1be4,134391447,0,0x0,8
tick,0x7ff8e7af1be4,134401566,0,0x0,8
tick,0x7ff8e7af1be4,134416115,0,0x0,8
tick,0x7ff8e7af1be4,134424693,0,0x0,8
tick,0x7ff8e7af1be4,134440796,0,0x0,8
tick,0x7ff8e7af1be4,134451950,0,0x0,8
tick,0x7ff8e7af1be4,134461233,0,0x0,8
tick,0x7ff8e7af1be4,134476658,0,0x0,8
tick,0x7ff8e7af1be4,134485600,0,0x0,8
tick,0x7ff8e7af1be4,134493748,0,0x0,8
tick,0x7ff8e7af1be4,134509929,0,0x0,8
tick,0x7ff8e7af1be4,134521527,0,0x0,8
tick,0x7ff8e7af1be4,134531957,0,0x0,8
tick,0x7ff8e7af1be4,134543505,0,0x0,8
tick,0x7ff8e7af1be4,134552496,0,0x0,8
tick,0x7ff8e7af1be4,134561693,0,0x0,8
tick,0x7ff8e7af1be4,134580478,0,0x0,8
tick,0x7ff8e7af1be4,134600239,0,0x0,8
tick,0x7ff8e7af1be4,134617231,0,0x0,8
tick,0x7ff8e7af1be4,134632681,0,0x0,8
tick,0x7ff8e7af1be4,134642700,0,0x0,8
tick,0x7ff8e7af1be4,134651491,0,0x0,8
tick,0x7ff8e7af1be4,134668497,0,0x0,8
tick,0x7ff8e7af1be4,134680009,0,0x0,8
tick,0x7ff8e7af1be4,134701266,0,0x0,8
tick,0x7ff8e7af1be4,134718560,0,0x0,8
tick,0x7ff8e7af1be4,134731999,0,0x0,8
tick,0x7ff8e7af1be4,134742931,0,0x0,8
tick,0x7ff8e7af1be4,134760260,0,0x0,8
tick,0x7ff8e7af1be4,134777103,0,0x0,8
tick,0x7ff8e7af1be4,134792897,0,0x0,8
tick,0x7ff8e7af1be4,134801092,0,0x0,8
tick,0x7ff8e7af1be4,134818678,0,0x0,8
tick,0x7ff8e7af1be4,134830296,0,0x0,8
tick,0x7ff8e7af1be4,134847094,0,0x0,8
tick,0x7ff8e7af1be4,134862415,0,0x0,8
tick,0x7ff8e7af1be4,134871363,0,0x0,8
tick,0x7ff8e7af1be4,134880259,0,0x0,8
tick,0x7ff8e7af1be4,134889684,0,0x0,8
tick,0x7ff8e7af1be4,134900263,0,0x0,8
tick,0x7ff8e7af1be4,134908740,0,0x0,8
tick,0x7ff8e7af1be4,134916777,0,0x0,8
tick,0x7ff8e7af1be4,134941146,0,0x0,8
tick,0x7ff8e7af1be4,134958315,0,0x0,8
tick,0x7ff8e7af1be4,134973994,0,0x0,8
tick,0x7ff8e7af1be4,134989182,0,0x0,8
tick,0x7ff8e7af1be4,135004155,0,0x0,8
tick,0x7ff8e7af1be4,135020236,0,0x0,8
tick,0x7ff8e7af1be4,135036574,0,0x0,8
tick,0x7ff8e7af1be4,135052258,0,0x0,8
tick,0x7ff8e7af1be4,135068018,0,0x0,8
tick,0x7ff8e7af1be4,135083709,0,0x0,8
tick,0x7ff8e7af1be4,135101399,0,0x0,8
tick,0x7ff8e7af1be4,135116180,0,0x0,8
tick,0x7ff8e7af1be4,135132052,0,0x0,8
tick,0x7ff8e7af1be4,135148522,0,0x0,8
tick,0x7ff8e7af1be4,135164363,0,0x0,8
tick,0x7ff8e7af1be4,135180230,0,0x0,8
tick,0x7ff8e7af1be4,135196371,0,0x0,8
tick,0x7ff8e7af1be4,135212175,0,0x0,8
tick,0x7ff8e7af1be4,135227787,0,0x0,8
tick,0x7ff8e7af1be4,135243633,0,0x0,8
tick,0x7ff8e7af1be4,135259667,0,0x0,8
tick,0x7ff8e7af1be4,135274958,0,0x0,8
tick,0x7ff8e7af1be4,135291214,0,0x0,8
tick,0x7ff8e7af1be4,135307427,0,0x0,8
tick,0x7ff8e7af1be4,135323120,0,0x0,8
tick,0x7ff8e7af1be4,135339129,0,0x0,8
tick,0x7ff8e7af1be4,135355038,0,0x0,8
tick,0x7ff8e7af1be4,135371137,0,0x0,8
tick,0x7ff8e7af1be4,135387016,0,0x0,8
tick,0x7ff8e7af1be4,135403495,0,0x0,8
tick,0x7ff8e7af1be4,135419507,0,0x0,8
tick,0x7ff8e7af1be4,135435759,0,0x0,8
tick,0x7ff8e7af1be4,135451540,0,0x0,8
tick,0x7ff8e7af1be4,135467387,0,0x0,8
tick,0x7ff8e7af1be4,135483200,0,0x0,8
tick,0x7ff8e7af1be4,135499420,0,0x0,8
tick,0x7ff8e7af1be4,135515528,0,0x0,8
tick,0x7ff8e7af1be4,135531185,0,0x0,8
tick,0x7ff8e7af1be4,135547278,0,0x0,8
tick,0x7ff8e7af1be4,135562237,0,0x0,8
tick,0x7ff8e7af1be4,135578576,0,0x0,8
tick,0x7ff8e7af1be4,135594626,0,0x0,8
tick,0x7ff8e7af1be4,135610594,0,0x0,8
tick,0x7ff8e7af1be4,135626970,0,0x0,8
tick,0x7ff8e7af1be4,135642502,0,0x0,8
tick,0x7ff8e7af1be4,135658272,0,0x0,8
tick,0x7ff8e7af1be4,135674091,0,0x0,8
tick,0x7ff8e7af1be4,135690154,0,0x0,8
tick,0x7ff8e7af1be4,135706377,0,0x0,8
tick,0x7ff8e7af1be4,135722131,0,0x0,8
tick,0x7ff8e7af1be4,135738245,0,0x0,8
tick,0x7ff8e7af1be4,135754940,0,0x0,8
tick,0x7ff8e7af1be4,135770314,0,0x0,8
tick,0x7ff8e7af1be4,135786123,0,0x0,8
tick,0x7ff8e7af1be4,135802196,0,0x0,8
tick,0x7ff8e7af1be4,135818171,0,0x0,8
tick,0x7ff8e7af1be4,135834434,0,0x0,8
tick,0x7ff8e7af1be4,135850841,0,0x0,8
tick,0x7ff8e7af1be4,135866251,0,0x0,8
tick,0x7ff8e7af1be4,135881866,0,0x0,8
tick,0x7ff8e7af1be4,135898652,0,0x0,8
tick,0x7ff8e7af1be4,135914102,0,0x0,8
tick,0x7ff8e7af1be4,135930414,0,0x0,8
tick,0x7ff8e7af1be4,135946620,0,0x0,8
tick,0x7ff8e7af1be4,135962321,0,0x0,8
tick,0x7ff8e7af1be4,135978221,0,0x0,8
tick,0x7ff8e7af1be4,135994180,0,0x0,8
tick,0x7ff8e7af1be4,136010089,0,0x0,8
tick,0x7ff8e7af1be4,136026122,0,0x0,8
tick,0x7ff8e7af1be4,136041990,0,0x0,8
tick,0x7ff8e7af1be4,136058318,0,0x0,8
tick,0x7ff8e7af1be4,136073942,0,0x0,8
tick,0x7ff8e7af1be4,136090397,0,0x0,8
tick,0x7ff8e7af1be4,136105991,0,0x0,8
tick,0x7ff8e7af1be4,136122637,0,0x0,8
tick,0x7ff8e7af1be4,136138274,0,0x0,8
tick,0x7ff8e7af1be4,136154589,0,0x0,8
tick,0x7ff8e7af1be4,136171254,0,0x0,8
tick,0x7ff8e7af1be4,136186658,0,0x0,8
tick,0x7ff8e7af1be4,136202777,0,0x0,8
tick,0x7ff8e7af1be4,136218393,0,0x0,8
tick,0x7ff8e7af1be4,136234613,0,0x0,8
tick,0x7ff8e7af1be4,136250279,0,0x0,8
tick,0x7ff8e7af1be4,136266354,0,0x0,8
tick,0x7ff8e7af1be4,136282063,0,0x0,8
tick,0x7ff8e7af1be4,136298371,0,0x0,8
tick,0x7ff8e7af1be4,136313998,0,0x0,8
tick,0x7ff8e7af1be4,136330429,0,0x0,8
tick,0x7ff8e7af1be4,136346501,0,0x0,8
tick,0x7ff8e7af1be4,136362597,0,0x0,8
tick,0x7ff8e7af1be4,136379024,0,0x0,8
tick,0x7ff8e7af1be4,136394941,0,0x0,8
tick,0x7ff8e7af1be4,136411657,0,0x0,8
tick,0x7ff8e7af1be4,136427171,0,0x0,8
tick,0x7ff8e7af1be4,136442555,0,0x0,8
tick,0x7ff8e7af1be4,136458430,0,0x0,8
tick,0x7ff8e7af1be4,136474191,0,0x0,8
tick,0x7ff8e7af1be4,136490673,0,0x0,8
tick,0x7ff8e7af1be4,136506172,0,0x0,8
tick,0x7ff8e7af1be4,136522809,0,0x0,8
tick,0x7ff8e7af1be4,136537990,0,0x0,8
tick,0x7ff8e7af1be4,136554084,0,0x0,8
tick,0x7ff8e7af1be4,136569818,0,0x0,8
tick,0x7ff8e7af1be4,136585725,0,0x0,8
tick,0x7ff8e7af1be4,136602286,0,0x0,8
tick,0x7ff8e7af1be4,136617748,0,0x0,8
tick,0x7ff8e7af1be4,136620262,0,0x0,8
tick,0x7ff8e7af1be4,136636415,0,0x0,8
tick,0x7ff8e7af1be4,136651892,0,0x0,8
tick,0x7ff8e7af1be4,136667684,0,0x0,8
tick,0x7ff8e7af1be4,136683346,0,0x0,8
tick,0x7ff8e7af1be4,136699673,0,0x0,8
tick,0x7ff8e7af1be4,136715852,0,0x0,8
tick,0x7ff8e7af1be4,136732095,0,0x0,8
tick,0x7ff8e7af1be4,136741818,0,0x0,8
tick,0x7ff8e7af1be4,136751381,0,0x0,8
tick,0x7ff8e7af1be4,136764682,0,0x0,8
tick,0x7ff8e7af1be4,136780947,0,0x0,8
tick,0x7ff8e7af1be4,136796582,0,0x0,8
tick,0x7ff8e7af1be4,136812240,0,0x0,8
tick,0x7ff8e7af1be4,136828008,0,0x0,8
tick,0x7ff8e7af1be4,136844679,0,0x0,8
tick,0x7ff8e7af1be4,136860566,0,0x0,8
tick,0x7ff8e7af1be4,136876406,0,0x0,8
tick,0x7ff8e7af1be4,136892643,0,0x0,8
tick,0x7ff8e7af1be4,136908511,0,0x0,8
tick,0x7ff8e7af1be4,136924819,0,0x0,8
tick,0x7ff8e7af1be4,136932597,0,0x0,8
tick,0x7ff8e7af1be4,136941302,0,0x0,8
tick,0x7ff8e7af1be4,136957972,0,0x0,8
tick,0x7ff8e7af1be4,136973472,0,0x0,8
tick,0x7ff8e7af1be4,136989711,0,0x0,8
tick,0x7ff8e7af1be4,137005654,0,0x0,8
tick,0x7ff8e7af1be4,137021686,0,0x0,8
tick,0x7ff8e7af1be4,137037704,0,0x0,8
tick,0x7ff8e7af1be4,137052837,0,0x0,8
tick,0x7ff8e7af1be4,137069409,0,0x0,8
tick,0x7ff8e7af1be4,137085134,0,0x0,8
tick,0x7ff8e7af1be4,137101098,0,0x0,8
tick,0x7ff8e7af1be4,137116775,0,0x0,8
tick,0x7ff8e7af1be4,137132479,0,0x0,8
tick,0x7ff8e7af1be4,137134353,0,0x0,8
tick,0x7ff8e7af1be4,137150463,0,0x0,8
tick,0x7ff8e7af1be4,137166343,0,0x0,8
tick,0x7ff8e7af1be4,137181758,0,0x0,8
tick,0x7ff8e7af1be4,137197837,0,0x0,8
tick,0x7ff8e7af1be4,137214062,0,0x0,8
tick,0x7ff8e7af1be4,137229972,0,0x0,8
tick,0x7ff8e7af1be4,137246229,0,0x0,8
tick,0x7ff8e7af1be4,137261910,0,0x0,8
tick,0x7ff8e7af1be4,137277974,0,0x0,8
tick,0x7ff8e7af1be4,137293718,0,0x0,8
tick,0x7ff8e7af1be4,137309833,0,0x0,8
tick,0x7ff8e7af1be4,137326129,0,0x0,8
tick,0x7ff8e7af1be4,137343549,0,0x0,8
tick,0x7ff8e7af1be4,137358425,0,0x0,8
tick,0x7ff8e7af1be4,137374068,0,0x0,8
tick,0x7ff8e7af1be4,137389583,0,0x0,8
tick,0x7ff8e7af1be4,137405942,0,0x0,8
tick,0x7ff8e7af1be4,137422008,0,0x0,8
tick,0x7ff8e7af1be4,137437726,0,0x0,8
tick,0x7ff8e7af1be4,137454604,0,0x0,8
tick,0x7ff8e7af1be4,137469351,0,0x0,8
tick,0x7ff8e7af1be4,137485417,0,0x0,8
tick,0x7ff8e7af1be4,137501362,0,0x0,8
tick,0x7ff8e7af1be4,137517087,0,0x0,8
tick,0x7ff8e7af1be4,137532451,0,0x0,8
tick,0x7ff8e7af1be4,137548499,0,0x0,8
tick,0x7ff8e7af1be4,137564677,0,0x0,8
tick,0x7ff8e7af1be4,137580043,0,0x0,8
tick,0x7ff8e7af1be4,137596384,0,0x0,8
tick,0x7ff8e7af1be4,137612638,0,0x0,8
tick,0x7ff8e7af1be4,137628491,0,0x0,8
tick,0x7ff8e7af1be4,137643975,0,0x0,8
tick,0x7ff8e7af1be4,137661063,0,0x0,8
tick,0x7ff8e7af1be4,137677402,0,0x0,8
tick,0x7ff8e7af1be4,137692906,0,0x0,8
tick,0x7ff8e7af1be4,137709005,0,0x0,8
tick,0x7ff8e7af1be4,137724641,0,0x0,8
tick,0x7ff8e7af1be4,137740782,0,0x0,8
tick,0x7ff8e7af1be4,137756401,0,0x0,8
tick,0x7ff8e7af1be4,137771685,0,0x0,8
tick,0x7ff8e7af1be4,137787857,0,0x0,8
tick,0x7ff8e7af1be4,137803841,0,0x0,8
tick,0x7ff8e7af1be4,137819578,0,0x0,8
tick,0x7ff8e7af1be4,137835502,0,0x0,8
tick,0x7ff8e7af1be4,137852108,0,0x0,8
tick,0x7ff8e7af1be4,137867990,0,0x0,8
tick,0x7ff8e7af1be4,137884148,0,0x0,8
tick,0x7ff8e7af1be4,137900022,0,0x0,8
tick,0x7ff8e7af1be4,137916082,0,0x0,8
tick,0x7ff8e7af1be4,137932472,0,0x0,8
tick,0x7ff8e7af1be4,137948715,0,0x0,8
tick,0x7ff8e7af1be4,137965344,0,0x0,8
tick,0x7ff8e7af1be4,137980096,0,0x0,8
tick,0x7ff8e7af1be4,137996087,0,0x0,8
tick,0x7ff8e7af1be4,138012353,0,0x0,8
tick,0x7ff8e7af1be4,138028423,0,0x0,8
tick,0x7ff8e7af1be4,138044022,0,0x0,8
tick,0x7ff8e7af1be4,138060433,0,0x0,8
tick,0x7ff8e7af1be4,138077347,0,0x0,8
tick,0x7ff8e7af1be4,138093611,0,0x0,8
tick,0x7ff8e7af1be4,138108932,0,0x0,8
tick,0x7ff8e7af1be4,138124872,0,0x0,8
tick,0x7ff8e7af1be4,138140678,0,0x0,8
tick,0x7ff8e7af1be4,138157339,0,0x0,8
tick,0x7ff8e7af1be4,138174714,0,0x0,8
tick,0x7ff8e7af1be4,138190474,0,0x0,8
tick,0x7ff8e7af1be4,138206422,0,0x0,8
tick,0x7ff8e7af1be4,138223279,0,0x0,8
tick,0x7ff8e7af1be4,138238987,0,0x0,8
tick,0x7ff8e7af1be4,138254073,0,0x0,8
tick,0x7ff8e7af1be4,138269913,0,0x0,8
tick,0x7ff8e7af1be4,138285692,0,0x0,8
tick,0x7ff8e7af1be4,138301235,0,0x0,8
tick,0x7ff8e7af1be4,138317290,0,0x0,8
tick,0x7ff8e7af1be4,138333306,0,0x0,8
tick,0x7ff8e7af1be4,138348140,0,0x0,8
tick,0x7ff8e7af1be4,138364236,0,0x0,8
tick,0x7ff8e7af1be4,138379936,0,0x0,8
tick,0x7ff8e7af1be4,138396069,0,0x0,8
tick,0x7ff8e7af1be4,138412111,0,0x0,8
tick,0x7ff8e7af1be4,138427895,0,0x0,8
tick,0x7ff8e7af1be4,138442967,0,0x0,8
tick,0x7ff8e7af1be4,138458963,0,0x0,8
tick,0x7ff8e7af1be4,138474894,0,0x0,8
tick,0x7ff8e7af1be4,138490889,0,0x0,8
tick,0x7ff8e7af1be4,138506615,0,0x0,8
tick,0x7ff8e7af1be4,138522151,0,0x0,8
tick,0x7ff8e7af1be4,138538511,0,0x0,8
tick,0x7ff8e7af1be4,138554082,0,0x0,8
tick,0x7ff8e7af1be4,138571274,0,0x0,8
tick,0x7ff8e7af1be4,138586083,0,0x0,8
tick,0x7ff8e7af1be4,138603985,0,0x0,8
tick,0x7ff8e7af1be4,138618220,0,0x0,8
tick,0x7ff8e7af1be4,138634178,0,0x0,8
tick,0x7ff8e7af1be4,138650003,0,0x0,8
tick,0x7ff8e7af1be4,138666494,0,0x0,8
tick,0x7ff8e7af1be4,138668253,0,0x0,8
tick,0x7ff8e7af1be4,138686114,0,0x0,8
tick,0x7ff8e7af1be4,138703113,0,0x0,8
tick,0x7ff8e7af1be4,138717893,0,0x0,8
tick,0x7ff8e7af1be4,138734581,0,0x0,8
tick,0x7ff8e7af1be4,138750474,0,0x0,8
tick,0x7ff8e7af1be4,138766897,0,0x0,8
tick,0x7ff8e7af1be4,138782997,0,0x0,8
tick,0x7ff8e7af1be4,138798128,0,0x0,8
tick,0x7ff8e7af1be4,138814517,0,0x0,8
tick,0x7ff8e7af1be4,138830779,0,0x0,8
tick,0x7ff8e7af1be4,138846101,0,0x0,8
tick,0x7ff8e7af1be4,138862307,0,0x0,8
tick,0x7ff8e7af1be4,138878412,0,0x0,8
tick,0x7ff8e7af1be4,138894393,0,0x0,8
tick,0x7ff8e7af1be4,138910643,0,0x0,8
tick,0x7ff8e7af1be4,138926473,0,0x0,8
tick,0x7ff8e7af1be4,138943122,0,0x0,8
tick,0x7ff8e7af1be4,138958667,0,0x0,8
tick,0x7ff8e7af1be4,138974686,0,0x0,8
tick,0x7ff8e7af1be4,138990401,0,0x0,8
tick,0x7ff8e7af1be4,139006614,0,0x0,8
tick,0x7ff8e7af1be4,139022734,0,0x0,8
tick,0x7ff8e7af1be4,139038072,0,0x0,8
tick,0x7ff8e7af1be4,139054600,0,0x0,8
tick,0x7ff8e7af1be4,139069882,0,0x0,8
tick,0x7ff8e7af1be4,139086179,0,0x0,8
tick,0x7ff8e7af1be4,139102621,0,0x0,8
tick,0x7ff8e7af1be4,139119374,0,0x0,8
tick,0x7ff8e7af1be4,139134342,0,0x0,8
tick,0x7ff8e7af1be4,139150557,0,0x0,8
tick,0x7ff8e7af1be4,139166105,0,0x0,8
tick,0x7ff8e7af1be4,139185882,0,0x0,8
tick,0x7ff8e7af1be4,139202102,0,0x0,8
tick,0x7ff8e7af1be4,139218457,0,0x0,8
tick,0x7ff8e7af1be4,139234121,0,0x0,8
tick,0x7ff8e7af1be4,139250031,0,0x0,8
tick,0x7ff8e7af1be4,139266767,0,0x0,8
tick,0x7ff8e7af1be4,139282211,0,0x0,8
tick,0x7ff8e7af1be4,139298408,0,0x0,8
tick,0x7ff8e7af1be4,139313887,0,0x0,8
tick,0x7ff8e7af1be4,139330279,0,0x0,8
tick,0x7ff8e7af1be4,139346589,0,0x0,8
tick,0x7ff8e7af1be4,139362954,0,0x0,8
tick,0x7ff8e7af1be4,139378239,0,0x0,8
tick,0x7ff8e7af1be4,139394293,0,0x0,8
tick,0x7ff8e7af1be4,139410654,0,0x0,8
tick,0x7ff8e7af1be4,139426018,0,0x0,8
tick,0x7ff8e7af1be4,139442869,0,0x0,8
tick,0x7ff8e7af1be4,139458238,0,0x0,8
tick,0x7ff8e7af1be4,139474282,0,0x0,8
tick,0x7ff8e7af1be4,139490430,0,0x0,8
tick,0x7ff8e7af1be4,139506480,0,0x0,8
tick,0x7ff8e7af1be4,139523279,0,0x0,8
tick,0x7ff8e7af1be4,139538479,0,0x0,8
tick,0x7ff8e7af1be4,139554567,0,0x0,8
tick,0x7ff8e7af1be4,139570248,0,0x0,8
tick,0x7ff8e7af1be4,139586311,0,0x0,8
tick,0x7ff8e7af1be4,139601781,0,0x0,8
tick,0x7ff8e7af1be4,139617393,0,0x0,8
tick,0x7ff8e7af1be4,139632947,0,0x0,8
tick,0x7ff8e7af1be4,139648894,0,0x0,8
tick,0x7ff8e7af1be4,139664939,0,0x0,8
tick,0x7ff8e7af1be4,139681117,0,0x0,8
tick,0x7ff8e7af1be4,139696963,0,0x0,8
tick,0x7ff8e7af1be4,139713443,0,0x0,8
tick,0x7ff8e7af1be4,139729563,0,0x0,8
tick,0x7ff8e7af1be4,139745580,0,0x0,8
tick,0x7ff8e7af1be4,139761070,0,0x0,8
tick,0x7ff8e7af1be4,139776845,0,0x0,8
tick,0x7ff8e7af1be4,139792832,0,0x0,8
tick,0x7ff8e7af1be4,139808736,0,0x0,8
tick,0x7ff8e7af1be4,139824724,0,0x0,8
tick,0x7ff8e7af1be4,139840611,0,0x0,8
tick,0x7ff8e7af1be4,139856679,0,0x0,8
tick,0x7ff8e7af1be4,139871734,0,0x0,8
tick,0x7ff8e7af1be4,139887514,0,0x0,8
tick,0x7ff8e7af1be4,139903349,0,0x0,8
tick,0x7ff8e7af1be4,139919346,0,0x0,8
tick,0x7ff8e7af1be4,139935272,0,0x0,8
tick,0x7ff8e7af1be4,139951208,0,0x0,8
tick,0x7ff8e7af1be4,139967119,0,0x0,8
tick,0x7ff8e7af1be4,139983692,0,0x0,8
tick,0x7ff8e7af1be4,139999508,0,0x0,8
tick,0x7ff8e7af1be4,140015829,0,0x0,8
tick,0x7ff8e7af1be4,140031757,0,0x0,8
tick,0x7ff8e7af1be4,140047621,0,0x0,8
tick,0x7ff8e7af1be4,140063674,0,0x0,8
tick,0x7ff8e7af1be4,140079544,0,0x0,8
tick,0x7ff8e7af1be4,140096156,0,0x0,8
tick,0x7ff8e7af1be4,140112266,0,0x0,8
tick,0x7ff8e7af1be4,140128935,0,0x0,8
tick,0x7ff8e7af1be4,140130599,0,0x0,8
tick,0x7ff8e7af1be4,140145029,0,0x0,8
tick,0x7ff8e7af1be4,140161546,0,0x0,8
tick,0x7ff8e7af1be4,140177680,0,0x0,8
tick,0x7ff8e7af1be4,140193658,0,0x0,8
tick,0x7ff8e7af1be4,140209874,0,0x0,8
tick,0x7ff8e7af1be4,140225102,0,0x0,8
tick,0x7ff8e7af1be4,140241319,0,0x0,8
tick,0x7ff8e7af1be4,140257032,0,0x0,8
tick,0x7ff8e7af1be4,140272804,0,0x0,8
tick,0x7ff8e7af1be4,140288370,0,0x0,8
tick,0x7ff8e7af1be4,140304459,0,0x0,8
tick,0x7ff8e7af1be4,140320390,0,0x0,8
tick,0x7ff8e7af1be4,140336400,0,0x0,8
tick,0x7ff8e7af1be4,140352076,0,0x0,8
tick,0x7ff8e7af1be4,140367782,0,0x0,8
tick,0x7ff8e7af1be4,140383923,0,0x0,8
tick,0x7ff8e7af1be4,140400499,0,0x0,8
tick,0x7ff8e7af1be4,140416716,0,0x0,8
tick,0x7ff8e7af1be4,140433102,0,0x0,8
tick,0x7ff8e7af1be4,140449259,0,0x0,8
tick,0x7ff8e7af1be4,140465100,0,0x0,8
tick,0x7ff8e7af1be4,140481411,0,0x0,8
tick,0x7ff8e7af1be4,140496883,0,0x0,8
tick,0x7ff8e7af1be4,140512626,0,0x0,8
tick,0x7ff8e7af1be4,140528498,0,0x0,8
tick,0x7ff8e7af1be4,140544792,0,0x0,8
tick,0x7ff8e7af1be4,140559977,0,0x0,8
tick,0x7ff8e7af1be4,140576177,0,0x0,8
tick,0x7ff8e7af1be4,140591759,0,0x0,8
tick,0x7ff8e7af1be4,140608038,0,0x0,8
tick,0x7ff8e7af1be4,140624110,0,0x0,8
tick,0x7ff8e7af1be4,140640398,0,0x0,8
tick,0x7ff8e7af1be4,140656177,0,0x0,8
tick,0x7ff8e7af1be4,140672220,0,0x0,8
tick,0x7ff8e7af1be4,140687478,0,0x0,8
tick,0x7ff8e7af1be4,140703245,0,0x0,8
tick,0x7ff8e7af1be4,140719022,0,0x0,8
tick,0x7ff8e7af1be4,140735095,0,0x0,8
tick,0x7ff8e7af1be4,140744147,0,0x0,8
tick,0x7ff8e7af1be4,140760054,0,0x0,8
tick,0x7ff8e7af1be4,140775902,0,0x0,8
tick,0x7ff8e7af1be4,140791910,0,0x0,8
tick,0x7ff8e7af1be4,140807879,0,0x0,8
tick,0x7ff8e7af1be4,140823459,0,0x0,8
tick,0x7ff8e7af1be4,140839643,0,0x0,8
tick,0x7ff8e7af1be4,140855509,0,0x0,8
tick,0x7ff8e7af1be4,140871216,0,0x0,8
tick,0x7ff8e7af1be4,140887021,0,0x0,8
tick,0x7ff8e7af1be4,140903379,0,0x0,8
tick,0x7ff8e7af1be4,140918975,0,0x0,8
tick,0x7ff8e7af1be4,140934734,0,0x0,8
tick,0x7ff8e7af1be4,140950827,0,0x0,8
tick,0x7ff8e7af1be4,140967028,0,0x0,8
tick,0x7ff8e7af1be4,140983411,0,0x0,8
tick,0x7ff8e7af1be4,140998453,0,0x0,8
tick,0x7ff8e7af1be4,141014069,0,0x0,8
tick,0x7ff8e7af1be4,141030072,0,0x0,8
tick,0x7ff8e7af1be4,141046059,0,0x0,8
tick,0x7ff8e7af1be4,141061995,0,0x0,8
tick,0x7ff8e7af1be4,141078135,0,0x0,8
tick,0x7ff8e7af1be4,141094698,0,0x0,8
tick,0x7ff8e7af1be4,141110494,0,0x0,8
tick,0x7ff8e7af1be4,141126702,0,0x0,8
tick,0x7ff8e7af1be4,141142345,0,0x0,8
tick,0x7ff8e7af1be4,141159352,0,0x0,8
tick,0x7ff8e7af1be4,141174621,0,0x0,8
tick,0x7ff8e7af1be4,141190502,0,0x0,8
tick,0x7ff8e7af1be4,141208504,0,0x0,8
tick,0x7ff8e7af1be4,141221944,0,0x0,8
tick,0x7ff8e7af1be4,141237943,0,0x0,8
tick,0x7ff8e7af1be4,141253641,0,0x0,8
tick,0x7ff8e7af1be4,141269280,0,0x0,8
tick,0x7ff8e7af1be4,141285633,0,0x0,8
tick,0x7ff8e7af1be4,141301653,0,0x0,8
tick,0x7ff8e7af1be4,141317724,0,0x0,8
tick,0x7ff8e7af1be4,141333545,0,0x0,8
tick,0x7ff8e7af1be4,141349234,0,0x0,8
tick,0x7ff8e7af1be4,141365617,0,0x0,8
tick,0x7ff8e7af1be4,141381935,0,0x0,8
tick,0x7ff8e7af1be4,141397815,0,0x0,8
tick,0x7ff8e7af1be4,141413516,0,0x0,8
tick,0x7ff8e7af1be4,141429761,0,0x0,8
tick,0x7ff8e7af1be4,141445698,0,0x0,8
tick,0x7ff8e7af1be4,141462584,0,0x0,8
tick,0x7ff8e7af1be4,141478176,0,0x0,8
tick,0x7ff8e7af1be4,141493950,0,0x0,8
tick,0x7ff8e7af1be4,141510283,0,0x0,8
tick,0x7ff8e7af1be4,141525855,0,0x0,8
tick,0x7ff8e7af1be4,141542622,0,0x0,8
tick,0x7ff8e7af1be4,141558249,0,0x0,8
tick,0x7ff8e7af1be4,141574316,0,0x0,8
tick,0x7ff8e7af1be4,141589926,0,0x0,8
tick,0x7ff8e7af1be4,141605857,0,0x0,8
tick,0x7ff8e7af1be4,141622275,0,0x0,8
tick,0x7ff8e7af1be4,141638289,0,0x0,8
tick,0x7ff8e7af1be4,141653966,0,0x0,8
tick,0x7ff8e7af1be4,141670079,0,0x0,8
tick,0x7ff8e7af1be4,141686110,0,0x0,8
tick,0x7ff8e7af1be4,141702000,0,0x0,8
tick,0x7ff8e7af1be4,141718118,0,0x0,8
tick,0x7ff8e7af1be4,141734083,0,0x0,8
tick,0x7ff8e7af1be4,141751554,0,0x0,8
tick,0x7ff8e7af1be4,141766919,0,0x0,8
tick,0x7ff8e7af1be4,141776313,0,0x0,8
tick,0x7ff8e7af1be4,141791940,0,0x0,8
tick,0x7ff8e7af1be4,141808045,0,0x0,8
tick,0x7ff8e7af1be4,141824105,0,0x0,8
tick,0x7ff8e7af1be4,141839864,0,0x0,8
tick,0x7ff8e7af1be4,141855867,0,0x0,8
tick,0x7ff8e7af1be4,141872491,0,0x0,8
tick,0x7ff8e7af1be4,141887982,0,0x0,8
tick,0x7ff8e7af1be4,141903675,0,0x0,8
tick,0x7ff8e7af1be4,141919702,0,0x0,8
tick,0x7ff8e7af1be4,141935739,0,0x0,8
tick,0x7ff8e7af1be4,141951771,0,0x0,8
tick,0x7ff8e7af1be4,141968094,0,0x0,8
tick,0x7ff8e7af1be4,141983935,0,0x0,8
tick,0x7ff8e7af1be4,142000333,0,0x0,8
tick,0x7ff8e7af1be4,142015033,0,0x0,8
tick,0x7ff8e7af1be4,142034332,0,0x0,8
tick,0x7ff8e7af1be4,142047951,0,0x0,8
tick,0x7ff8e7af1be4,142064242,0,0x0,8
tick,0x7ff8e7af1be4,142080007,0,0x0,8
tick,0x7ff8e7af1be4,142095341,0,0x0,8
tick,0x7ff8e7af1be4,142111745,0,0x0,8
tick,0x7ff8e7af1be4,142127651,0,0x0,8
tick,0x7ff8e7af1be4,142142850,0,0x0,8
tick,0x7ff8e7af1be4,142158947,0,0x0,8
tick,0x7ff8e7af1be4,142175905,0,0x0,8
tick,0x7ff8e7af1be4,142191005,0,0x0,8
tick,0x7ff8e7af1be4,142206856,0,0x0,8
tick,0x7ff8e7af1be4,142222242,0,0x0,8
tick,0x7ff8e7af1be4,142238501,0,0x0,8
tick,0x7ff8e7af1be4,142254245,0,0x0,8
tick,0x7ff8e7af1be4,142270314,0,0x0,8
tick,0x7ff8e7af1be4,142287854,0,0x0,8
tick,0x7ff8e7af1be4,142304441,0,0x0,8
tick,0x7ff8e7af1be4,142320155,0,0x0,8
tick,0x7ff8e7af1be4,142336701,0,0x0,8
tick,0x7ff8e7af1be4,142351833,0,0x0,8
tick,0x7ff8e7af1be4,142367725,0,0x0,8
tick,0x7ff8e7af1be4,142383690,0,0x0,8
tick,0x7ff8e7af1be4,142399762,0,0x0,8
tick,0x7ff8e7af1be4,142415582,0,0x0,8
tick,0x7ff8e7af1be4,142431824,0,0x0,8
tick,0x7ff8e7af1be4,142447673,0,0x0,8
tick,0x7ff8e7af1be4,142463590,0,0x0,8
tick,0x7ff8e7af1be4,142479617,0,0x0,8
tick,0x7ff8e7af1be4,142495590,0,0x0,8
tick,0x7ff8e7af1be4,142513012,0,0x0,8
tick,0x7ff8e7af1be4,142527735,0,0x0,8
tick,0x7ff8e7af1be4,142544155,0,0x0,8
tick,0x7ff8e7af1be4,142560262,0,0x0,8
tick,0x7ff8e7af1be4,142576182,0,0x0,8
tick,0x7ff8e7af1be4,142592277,0,0x0,8
tick,0x7ff8e7af1be4,142607629,0,0x0,8
tick,0x7ff8e7af1be4,142623562,0,0x0,8
tick,0x7ff8e7af1be4,142639448,0,0x0,8
tick,0x7ff8e7af1be4,142655115,0,0x0,8
tick,0x7ff8e7af1be4,142671265,0,0x0,8
tick,0x7ff8e7af1be4,142687300,0,0x0,8
tick,0x7ff8e7af1be4,142703381,0,0x0,8
tick,0x7ff8e7af1be4,142719097,0,0x0,8
tick,0x7ff8e7af1be4,142734466,0,0x0,8
tick,0x7ff8e7af1be4,142750434,0,0x0,8
tick,0x7ff8e7af1be4,142766259,0,0x0,8
tick,0x7ff8e7af1be4,142782219,0,0x0,8
tick,0x7ff8e7af1be4,142798272,0,0x0,8
tick,0x7ff8e7af1be4,142800308,0,0x0,8
tick,0x7ff8e7af1be4,142801840,0,0x0,8
tick,0x7ff8e7af1be4,142817087,0,0x0,8
tick,0x7ff8e7af1be4,142833188,0,0x0,8
tick,0x7ff8e7af1be4,142848778,0,0x0,8
tick,0x7ff8e7af1be4,142864987,0,0x0,8
tick,0x7ff8e7af1be4,142881057,0,0x0,8
tick,0x7ff8e7af1be4,142897106,0,0x0,8
tick,0x7ff8e7af1be4,142912997,0,0x0,8
tick,0x7ff8e7af1be4,142930174,0,0x0,8
tick,0x7ff8e7af1be4,142945435,0,0x0,8
tick,0x7ff8e7af1be4,142960618,0,0x0,8
tick,0x7ff8e7af1be4,142976636,0,0x0,8
tick,0x7ff8e7af1be4,142991774,0,0x0,8
tick,0x7ff8e7af1be4,143007736,0,0x0,8
tick,0x7ff8e7af1be4,143023777,0,0x0,8
tick,0x7ff8e7af1be4,143039892,0,0x0,8
tick,0x7ff8e7af1be4,143055803,0,0x0,8
tick,0x7ff8e7af1be4,143072366,0,0x0,8
tick,0x7ff8e7af1be4,143087957,0,0x0,8
tick,0x7ff8e7af1be4,143103873,0,0x0,8
tick,0x7ff8e7af1be4,143119872,0,0x0,8
tick,0x7ff8e7af1be4,143135563,0,0x0,8
tick,0x7ff8e7af1be4,143151494,0,0x0,8
tick,0x7ff8e7af1be4,143166991,0,0x0,8
tick,0x7ff8e7af1be4,143183255,0,0x0,8
tick,0x7ff8e7af1be4,143199267,0,0x0,8
tick,0x7ff8e7af1be4,143215166,0,0x0,8
tick,0x7ff8e7af1be4,143230851,0,0x0,8
tick,0x7ff8e7af1be4,143253879,0,0x0,8
tick,0x7ff8e7af1be4,143268925,0,0x0,8
tick,0x7ff8e7af1be4,143284807,0,0x0,8
tick,0x7ff8e7af1be4,143300624,0,0x0,8
tick,0x7ff8e7af1be4,143316445,0,0x0,8
tick,0x7ff8e7af1be4,143317498,0,0x0,8
tick,0x7ff8e7af1be4,143333482,0,0x0,8
tick,0x7ff8e7af1be4,143349658,0,0x0,8
tick,0x7ff8e7af1be4,143365438,0,0x0,8
tick,0x7ff8e7af1be4,143381114,0,0x0,8
tick,0x7ff8e7af1be4,143396971,0,0x0,8
tick,0x7ff8e7af1be4,143413156,0,0x0,8
tick,0x7ff8e7af1be4,143428445,0,0x0,8
tick,0x7ff8e7af1be4,143445145,0,0x0,8
tick,0x7ff8e7af1be4,143459675,0,0x0,8
tick,0x7ff8e7af1be4,143475926,0,0x0,8
tick,0x7ff8e7af1be4,143491149,0,0x0,8
tick,0x7ff8e7af1be4,143506826,0,0x0,8
tick,0x7ff8e7af1be4,143522525,0,0x0,8
tick,0x7ff8e7af1be4,143538039,0,0x0,8
tick,0x7ff8e7af1be4,143553984,0,0x0,8
tick,0x7ff8e7af1be4,143569668,0,0x0,8
tick,0x7ff8e7af1be4,143585402,0,0x0,8
tick,0x7ff8e7af1be4,143601663,0,0x0,8
tick,0x7ff8e7af1be4,143617094,0,0x0,8
tick,0x7ff8e7af1be4,143632654,0,0x0,8
tick,0x7ff8e7af1be4,143648360,0,0x0,8
tick,0x7ff8e7af1be4,143663956,0,0x0,8
tick,0x7ff8e7af1be4,143679685,0,0x0,8
tick,0x7ff8e7af1be4,143695265,0,0x0,8
tick,0x7ff8e7af1be4,143711251,0,0x0,8
tick,0x7ff8e7af1be4,143727421,0,0x0,8
tick,0x7ff8e7af1be4,143743457,0,0x0,8
tick,0x7ff8e7af1be4,143759479,0,0x0,8
tick,0x7ff8e7af1be4,143775267,0,0x0,8
tick,0x7ff8e7af1be4,143791624,0,0x0,8
tick,0x7ff8e7af1be4,143807557,0,0x0,8
tick,0x7ff8e7af1be4,143824297,0,0x0,8
tick,0x7ff8e7af1be4,143839286,0,0x0,8
tick,0x7ff8e7af1be4,143855971,0,0x0,8
tick,0x7ff8e7af1be4,143872563,0,0x0,8
tick,0x7ff8e7af1be4,143888531,0,0x0,8
tick,0x7ff8e7af1be4,143903545,0,0x0,8
tick,0x7ff8e7af1be4,143920029,0,0x0,8
tick,0x7ff8e7af1be4,143935495,0,0x0,8
tick,0x7ff8e7af1be4,143951793,0,0x0,8
tick,0x7ff8e7af1be4,143967595,0,0x0,8
tick,0x7ff8e7af1be4,143983512,0,0x0,8
tick,0x7ff8e7af1be4,143999337,0,0x0,8
tick,0x7ff8e7af1be4,144015568,0,0x0,8
tick,0x7ff8e7af1be4,144031528,0,0x0,8
tick,0x7ff8e7af1be4,144047161,0,0x0,8
tick,0x7ff8e7af1be4,144063267,0,0x0,8
tick,0x7ff8e7af1be4,144078937,0,0x0,8
tick,0x7ff8e7af1be4,144094710,0,0x0,8
tick,0x7ff8e7af1be4,144110414,0,0x0,8
tick,0x7ff8e7af1be4,144126557,0,0x0,8
tick,0x7ff8e7af1be4,144142029,0,0x0,8
tick,0x7ff8e7af1be4,144158285,0,0x0,8
tick,0x7ff8e7af1be4,144174311,0,0x0,8
tick,0x7ff8e7af1be4,144190039,0,0x0,8
tick,0x7ff8e7af1be4,144205586,0,0x0,8
tick,0x7ff8e7af1be4,144221287,0,0x0,8
tick,0x7ff8e7af1be4,144238023,0,0x0,8
tick,0x7ff8e7af1be4,144252572,0,0x0,8
tick,0x7ff8e7af1be4,144269253,0,0x0,8
tick,0x7ff8e7af1be4,144284744,0,0x0,8
tick,0x7ff8e7af1be4,144300442,0,0x0,8
tick,0x7ff8e7af1be4,144316756,0,0x0,8
tick,0x7ff8e7af1be4,144333163,0,0x0,8
tick,0x7ff8e7af1be4,144335084,0,0x0,8
tick,0x7ff8e7af1be4,144350877,0,0x0,8
tick,0x7ff8e7af1be4,144367033,0,0x0,8
tick,0x7ff8e7af1be4,144382968,0,0x0,8
tick,0x7ff8e7af1be4,144398793,0,0x0,8
tick,0x7ff8e7af1be4,144415348,0,0x0,8
tick,0x7ff8e7af1be4,144430821,0,0x0,8
tick,0x7ff8e7af1be4,144446405,0,0x0,8
tick,0x7ff8e7af1be4,144462316,0,0x0,8
tick,0x7ff8e7af1be4,144477966,0,0x0,8
tick,0x7ff8e7af1be4,144493838,0,0x0,8
tick,0x7ff8e7af1be4,144510074,0,0x0,8
tick,0x7ff8e7af1be4,144525652,0,0x0,8
tick,0x7ff8e7af1be4,144542044,0,0x0,8
tick,0x7ff8e7af1be4,144557811,0,0x0,8
tick,0x7ff8e7af1be4,144573572,0,0x0,8
tick,0x7ff8e7af1be4,144589359,0,0x0,8
tick,0x7ff8e7af1be4,144605310,0,0x0,8
tick,0x7ff8e7af1be4,144621305,0,0x0,8
tick,0x7ff8e7af1be4,144637402,0,0x0,8
tick,0x7ff8e7af1be4,144653340,0,0x0,8
tick,0x7ff8e7af1be4,144669882,0,0x0,8
tick,0x7ff8e7af1be4,144685669,0,0x0,8
tick,0x7ff8e7af1be4,144702010,0,0x0,8
tick,0x7ff8e7af1be4,144718176,0,0x0,8
tick,0x7ff8e7af1be4,144733810,0,0x0,8
tick,0x7ff8e7af1be4,144749700,0,0x0,8
tick,0x7ff8e7af1be4,144765512,0,0x0,8
tick,0x7ff8e7af1be4,144781329,0,0x0,8
tick,0x7ff8e7af1be4,144797452,0,0x0,8
tick,0x7ff8e7af1be4,144812928,0,0x0,8
tick,0x7ff8e7af1be4,144828594,0,0x0,8
tick,0x7ff8e7af1be4,144845912,0,0x0,8
tick,0x7ff8e7af1be4,144847408,0,0x0,8
tick,0x7ff8e7af1be4,144865440,0,0x0,8
tick,0x7ff8e7af1be4,144879788,0,0x0,8
tick,0x7ff8e7af1be4,144895921,0,0x0,8
tick,0x7ff8e7af1be4,144911548,0,0x0,8
tick,0x7ff8e7af1be4,144927363,0,0x0,8
tick,0x7ff8e7af1be4,144943209,0,0x0,8
tick,0x7ff8e7af1be4,144959170,0,0x0,8
tick,0x7ff8e7af1be4,144974574,0,0x0,8
tick,0x7ff8e7af1be4,144990374,0,0x0,8
tick,0x7ff8e7af1be4,145006302,0,0x0,8
tick,0x7ff8e7af1be4,145022321,0,0x0,8
tick,0x7ff8e7af1be4,145037987,0,0x0,8
tick,0x7ff8e7af1be4,145054041,0,0x0,8
tick,0x7ff8e7af1be4,145070011,0,0x0,8
tick,0x7ff8e7af1be4,145086104,0,0x0,8
tick,0x7ff8e7af1be4,145102170,0,0x0,8
tick,0x7ff8e7af1be4,145117878,0,0x0,8
tick,0x7ff8e7af1be4,145134352,0,0x0,8
tick,0x7ff8e7af1be4,145150368,0,0x0,8
tick,0x7ff8e7af1be4,145166799,0,0x0,8
tick,0x7ff8e7af1be4,145182551,0,0x0,8
tick,0x7ff8e7af1be4,145198619,0,0x0,8
tick,0x7ff8e7af1be4,145214741,0,0x0,8
tick,0x7ff8e7af1be4,145230465,0,0x0,8
tick,0x7ff8e7af1be4,145246805,0,0x0,8
tick,0x7ff8e7af1be4,145262115,0,0x0,8
tick,0x7ff8e7af1be4,145277717,0,0x0,8
tick,0x7ff8e7af1be4,145293969,0,0x0,8
tick,0x7ff8e7af1be4,145310135,0,0x0,8
tick,0x7ff8e7af1be4,145326853,0,0x0,8
tick,0x7ff8e7af1be4,145342010,0,0x0,8
tick,0x7ff8e7af1be4,145358751,0,0x0,8
tick,0x7ff8e7af1be4,145360918,0,0x0,8
tick,0x7ff8e7af1be4,145376955,0,0x0,8
tick,0x7ff8e7af1be4,145393172,0,0x0,8
tick,0x7ff8e7af1be4,145409085,0,0x0,8
tick,0x7ff8e7af1be4,145425412,0,0x0,8
tick,0x7ff8e7af1be4,145441411,0,0x0,8
tick,0x7ff8e7af1be4,145457913,0,0x0,8
tick,0x7ff8e7af1be4,145473572,0,0x0,8
tick,0x7ff8e7af1be4,145489659,0,0x0,8
tick,0x7ff8e7af1be4,145505601,0,0x0,8
tick,0x7ff8e7af1be4,145521246,0,0x0,8
tick,0x7ff8e7af1be4,145537355,0,0x0,8
tick,0x7ff8e7af1be4,145553230,0,0x0,8
tick,0x7ff8e7af1be4,145569001,0,0x0,8
tick,0x7ff8e7af1be4,145584491,0,0x0,8
tick,0x7ff8e7af1be4,145600278,0,0x0,8
tick,0x7ff8e7af1be4,145616424,0,0x0,8
tick,0x7ff8e7af1be4,145632175,0,0x0,8
tick,0x7ff8e7af1be4,145648230,0,0x0,8
tick,0x7ff8e7af1be4,145664636,0,0x0,8
tick,0x7ff8e7af1be4,145680650,0,0x0,8
tick,0x7ff8e7af1be4,145696923,0,0x0,8
tick,0x7ff8e7af1be4,145712455,0,0x0,8
tick,0x7ff8e7af1be4,145729067,0,0x0,8
tick,0x7ff8e7af1be4,145743543,0,0x0,8
tick,0x7ff8e7af1be4,145759498,0,0x0,8
tick,0x7ff8e7af1be4,145775171,0,0x0,8
tick,0x7ff8e7af1be4,145791462,0,0x0,8
tick,0x7ff8e7af1be4,145807303,0,0x0,8
tick,0x7ff8e7af1be4,145823363,0,0x0,8
tick,0x7ff8e7af1be4,145838867,0,0x0,8
tick,0x7ff8e7af1be4,145854826,0,0x0,8
tick,0x7ff8e7af1be4,145871427,0,0x0,8
tick,0x7ff8e7af1be4,145873993,0,0x0,8
tick,0x7ff8e7af1be4,145889951,0,0x0,8
tick,0x7ff8e7af1be4,145906098,0,0x0,8
tick,0x7ff8e7af1be4,145922759,0,0x0,8
tick,0x7ff8e7af1be4,145936866,0,0x0,8
tick,0x7ff8e7af1be4,145953423,0,0x0,8
tick,0x7ff8e7af1be4,145969346,0,0x0,8
tick,0x7ff8e7af1be4,145985336,0,0x0,8
tick,0x7ff8e7af1be4,146001212,0,0x0,8
tick,0x7ff8e7af1be4,146017763,0,0x0,8
tick,0x7ff8e7af1be4,146033785,0,0x0,8
tick,0x7ff8e7af1be4,146049307,0,0x0,8
tick,0x7ff8e7af1be4,146065698,0,0x0,8
tick,0x7ff8e7af1be4,146081293,0,0x0,8
tick,0x7ff8e7af1be4,146097739,0,0x0,8
tick,0x7ff8e7af1be4,146113051,0,0x0,8
tick,0x7ff8e7af1be4,146128979,0,0x0,8
tick,0x7ff8e7af1be4,146146407,0,0x0,8
tick,0x7ff8e7af1be4,146163193,0,0x0,8
tick,0x7ff8e7af1be4,146178643,0,0x0,8
tick,0x7ff8e7af1be4,146194776,0,0x0,8
tick,0x7ff8e7af1be4,146211163,0,0x0,8
tick,0x7ff8e7af1be4,146226364,0,0x0,8
tick,0x7ff8e7af1be4,146242071,0,0x0,8
tick,0x7ff8e7af1be4,146257974,0,0x0,8
tick,0x7ff8e7af1be4,146275329,0,0x0,8
tick,0x7ff8e7af1be4,146290474,0,0x0,8
tick,0x7ff8e7af1be4,146306580,0,0x0,8
tick,0x7ff8e7af1be4,146323332,0,0x0,8
tick,0x7ff8e7af1be4,146339601,0,0x0,8
tick,0x7ff8e7af1be4,146354132,0,0x0,8
tick,0x7ff8e7af1be4,146369961,0,0x0,8
tick,0x7ff8e7af1be4,146385626,0,0x0,8
tick,0x7ff8e7af1be4,146401425,0,0x0,8
tick,0x7ff8e7af1be4,146417580,0,0x0,8
tick,0x7ff8e7af1be4,146433434,0,0x0,8
tick,0x7ff8e7af1be4,146449319,0,0x0,8
tick,0x7ff8e7af1be4,146465625,0,0x0,8
tick,0x7ff8e7af1be4,146481279,0,0x0,8
tick,0x7ff8e7af1be4,146497563,0,0x0,8
tick,0x7ff8e7af1be4,146513799,0,0x0,8
tick,0x7ff8e7af1be4,146529468,0,0x0,8
tick,0x7ff8e7af1be4,146545023,0,0x0,8
tick,0x7ff8e7af1be4,146560742,0,0x0,8
tick,0x7ff8e7af1be4,146576710,0,0x0,8
tick,0x7ff8e7af1be4,146592798,0,0x0,8
tick,0x7ff8e7af1be4,146608390,0,0x0,8
tick,0x7ff8e7af1be4,146624178,0,0x0,8
tick,0x7ff8e7af1be4,146641576,0,0x0,8
tick,0x7ff8e7af1be4,146656940,0,0x0,8
tick,0x7ff8e7af1be4,146673536,0,0x0,8
tick,0x7ff8e7af1be4,146689564,0,0x0,8
tick,0x7ff8e7af1be4,146705165,0,0x0,8
tick,0x7ff8e7af1be4,146721031,0,0x0,8
tick,0x7ff8e7af1be4,146736948,0,0x0,8
tick,0x7ff8e7af1be4,146753069,0,0x0,8
tick,0x7ff8e7af1be4,146769872,0,0x0,8
tick,0x7ff8e7af1be4,146785430,0,0x0,8
tick,0x7ff8e7af1be4,146801053,0,0x0,8
tick,0x7ff8e7af1be4,146817675,0,0x0,8
tick,0x7ff8e7af1be4,146833370,0,0x0,8
tick,0x7ff8e7af1be4,146849585,0,0x0,8
tick,0x7ff8e7af1be4,146865301,0,0x0,8
tick,0x7ff8e7af1be4,146881095,0,0x0,8
tick,0x7ff8e7af1be4,146896153,0,0x0,8
tick,0x7ff8e7af1be4,146897639,0,0x0,8
tick,0x7ff8e7af1be4,146913603,0,0x0,8
tick,0x7ff8e7af1be4,146929209,0,0x0,8
tick,0x7ff8e7af1be4,146945480,0,0x0,8
tick,0x7ff8e7af1be4,146961328,0,0x0,8
tick,0x7ff8e7af1be4,146976797,0,0x0,8
tick,0x7ff8e7af1be4,146992222,0,0x0,8
tick,0x7ff8e7af1be4,147008610,0,0x0,8
tick,0x7ff8e7af1be4,147025336,0,0x0,8
tick,0x7ff8e7af1be4,147039956,0,0x0,8
tick,0x7ff8e7af1be4,147056100,0,0x0,8
tick,0x7ff8e7af1be4,147071648,0,0x0,8
tick,0x7ff8e7af1be4,147088170,0,0x0,8
tick,0x7ff8e7af1be4,147103483,0,0x0,8
tick,0x7ff8e7af1be4,147119575,0,0x0,8
tick,0x7ff8e7af1be4,147135370,0,0x0,8
tick,0x7ff8e7af1be4,147150596,0,0x0,8
tick,0x7ff8e7af1be4,147166519,0,0x0,8
tick,0x7ff8e7af1be4,147182635,0,0x0,8
tick,0x7ff8e7af1be4,147198797,0,0x0,8
tick,0x7ff8e7af1be4,147214617,0,0x0,8
tick,0x7ff8e7af1be4,147230202,0,0x0,8
tick,0x7ff8e7af1be4,147246758,0,0x0,8
tick,0x7ff8e7af1be4,147262328,0,0x0,8
tick,0x7ff8e7af1be4,147277760,0,0x0,8
tick,0x7ff8e7af1be4,147293766,0,0x0,8
tick,0x7ff8e7af1be4,147309031,0,0x0,8
tick,0x7ff8e7af1be4,147324405,0,0x0,8
tick,0x7ff8e7af1be4,147342048,0,0x0,8
tick,0x7ff8e7af1be4,147356762,0,0x0,8
tick,0x7ff8e7af1be4,147372740,0,0x0,8
tick,0x7ff8e7af1be4,147388723,0,0x0,8
tick,0x7ff8e7af1be4,147404552,0,0x0,8
tick,0x7ff8e7af1be4,147420401,0,0x0,8
tick,0x7ff8e7af1be4,147421753,0,0x0,8
tick,0x7ff8e7af1be4,147437455,0,0x0,8
tick,0x7ff8e7af1be4,147453588,0,0x0,8
tick,0x7ff8e7af1be4,147469109,0,0x0,8
tick,0x7ff8e7af1be4,147485069,0,0x0,8
tick,0x7ff8e7af1be4,147500843,0,0x0,8
tick,0x7ff8e7af1be4,147516927,0,0x0,8
tick,0x7ff8e7af1be4,147532974,0,0x0,8
tick,0x7ff8e7af1be4,147549002,0,0x0,8
tick,0x7ff8e7af1be4,147565031,0,0x0,8
tick,0x7ff8e7af1be4,147581065,0,0x0,8
tick,0x7ff8e7af1be4,147596545,0,0x0,8
tick,0x7ff8e7af1be4,147612931,0,0x0,8
tick,0x7ff8e7af1be4,147628920,0,0x0,8
tick,0x7ff8e7af1be4,147643859,0,0x0,8
tick,0x7ff8e7af1be4,147660853,0,0x0,8
tick,0x7ff8e7af1be4,147676769,0,0x0,8
tick,0x7ff8e7af1be4,147692782,0,0x0,8
tick,0x7ff8e7af1be4,147707958,0,0x0,8
tick,0x7ff8e7af1be4,147724079,0,0x0,8
tick,0x7ff8e7af1be4,147738986,0,0x0,8
tick,0x7ff8e7af1be4,147754881,0,0x0,8
tick,0x7ff8e7af1be4,147770740,0,0x0,8
tick,0x7ff8e7af1be4,147786590,0,0x0,8
tick,0x7ff8e7af1be4,147802179,0,0x0,8
tick,0x7ff8e7af1be4,147818339,0,0x0,8
tick,0x7ff8e7af1be4,147834329,0,0x0,8
tick,0x7ff8e7af1be4,147850379,0,0x0,8
tick,0x7ff8e7af1be4,147866309,0,0x0,8
tick,0x7ff8e7af1be4,147881852,0,0x0,8
tick,0x7ff8e7af1be4,147897865,0,0x0,8
tick,0x7ff8e7af1be4,147913923,0,0x0,8
tick,0x7ff8e7af1be4,147930281,0,0x0,8
tick,0x7ff8e7af1be4,147946083,0,0x0,8
tick,0x7ff8e7af1be4,147961958,0,0x0,8
tick,0x7ff8e7af1be4,147978229,0,0x0,8
tick,0x7ff8e7af1be4,147995049,0,0x0,8
tick,0x7ff8e7af1be4,148010471,0,0x0,8
tick,0x7ff8e7af1be4,148026456,0,0x0,8
tick,0x7ff8e7af1be4,148042484,0,0x0,8
tick,0x7ff8e7af1be4,148058883,0,0x0,8
tick,0x7ff8e7af1be4,148074177,0,0x0,8
tick,0x7ff8e7af1be4,148090548,0,0x0,8
tick,0x7ff8e7af1be4,148105950,0,0x0,8
tick,0x7ff8e7af1be4,148121588,0,0x0,8
tick,0x7ff8e7af1be4,148137786,0,0x0,8
tick,0x7ff8e7af1be4,148154024,0,0x0,8
tick,0x7ff8e7af1be4,148170379,0,0x0,8
tick,0x7ff8e7af1be4,148186022,0,0x0,8
tick,0x7ff8e7af1be4,148201287,0,0x0,8
tick,0x7ff8e7af1be4,148217353,0,0x0,8
tick,0x7ff8e7af1be4,148233157,0,0x0,8
tick,0x7ff8e7af1be4,148248340,0,0x0,8
tick,0x7ff8e7af1be4,148263795,0,0x0,8
tick,0x7ff8e7af1be4,148279860,0,0x0,8
tick,0x7ff8e7af1be4,148295925,0,0x0,8
tick,0x7ff8e7af1be4,148311618,0,0x0,8
tick,0x7ff8e7af1be4,148327605,0,0x0,8
tick,0x7ff8e7af1be4,148344109,0,0x0,8
tick,0x7ff8e7af1be4,148358477,0,0x0,8
tick,0x7ff8e7af1be4,148373535,0,0x0,8
tick,0x7ff8e7af1be4,148389412,0,0x0,8
tick,0x7ff8e7af1be4,148404989,0,0x0,8
tick,0x7ff8e7af1be4,148420978,0,0x0,8
tick,0x7ff8e7af1be4,148436443,0,0x0,8
tick,0x7ff8e7af1be4,148452538,0,0x0,8
tick,0x7ff8e7af1be4,148469401,0,0x0,8
tick,0x7ff8e7af1be4,148484839,0,0x0,8
tick,0x7ff8e7af1be4,148500765,0,0x0,8
tick,0x7ff8e7af1be4,148516780,0,0x0,8
tick,0x7ff8e7af1be4,148533491,0,0x0,8
tick,0x7ff8e7af1be4,148548695,0,0x0,8
tick,0x7ff8e7af1be4,148565245,0,0x0,8
tick,0x7ff8e7af1be4,148581370,0,0x0,8
tick,0x7ff8e7af1be4,148597882,0,0x0,8
tick,0x7ff8e7af1be4,148613234,0,0x0,8
tick,0x7ff8e7af1be4,148629946,0,0x0,8
tick,0x7ff8e7af1be4,148645455,0,0x0,8
tick,0x7ff8e7af1be4,148661635,0,0x0,8
tick,0x7ff8e7af1be4,148677564,0,0x0,8
tick,0x7ff8e7af1be4,148693113,0,0x0,8
tick,0x7ff8e7af1be4,148708834,0,0x0,8
tick,0x7ff8e7af1be4,148724824,0,0x0,8
tick,0x7ff8e7af1be4,148740929,0,0x0,8
tick,0x7ff8e7af1be4,148756647,0,0x0,8
tick,0x7ff8e7af1be4,148772517,0,0x0,8
tick,0x7ff8e7af1be4,148788111,0,0x0,8
tick,0x7ff8e7af1be4,148804081,0,0x0,8
tick,0x7ff8e7af1be4,148819677,0,0x0,8
tick,0x7ff8e7af1be4,148834871,0,0x0,8
tick,0x7ff8e7af1be4,148850616,0,0x0,8
tick,0x7ff8e7af1be4,148866420,0,0x0,8
tick,0x7ff8e7af1be4,148882236,0,0x0,8
tick,0x7ff8e7af1be4,148898305,0,0x0,8
tick,0x7ff8e7af1be4,148913844,0,0x0,8
tick,0x7ff8e7af1be4,148929962,0,0x0,8
tick,0x7ff8e7af1be4,148945730,0,0x0,8
tick,0x7ff8e7af1be4,148961469,0,0x0,8
tick,0x7ff8e7af1be4,148977021,0,0x0,8
tick,0x7ff8e7af1be4,148979196,0,0x0,8
tick,0x7ff8e7af1be4,148994453,0,0x0,8
tick,0x7ff8e7af1be4,149010593,0,0x0,8
tick,0x7ff8e7af1be4,149026265,0,0x0,8
tick,0x7ff8e7af1be4,149041725,0,0x0,8
tick,0x7ff8e7af1be4,149057583,0,0x0,8
tick,0x7ff8e7af1be4,149073178,0,0x0,8
tick,0x7ff8e7af1be4,149089140,0,0x0,8
tick,0x7ff8e7af1be4,149104580,0,0x0,8
tick,0x7ff8e7af1be4,149120122,0,0x0,8
tick,0x7ff8e7af1be4,149136639,0,0x0,8
tick,0x7ff8e7af1be4,149151842,0,0x0,8
tick,0x7ff8e7af1be4,149167629,0,0x0,8
tick,0x7ff8e7af1be4,149183729,0,0x0,8
tick,0x7ff8e7af1be4,149199830,0,0x0,8
tick,0x7ff8e7af1be4,149215193,0,0x0,8
tick,0x7ff8e7af1be4,149232129,0,0x0,8
tick,0x7ff8e7af1be4,149246791,0,0x0,8
tick,0x7ff8e7af1be4,149263147,0,0x0,8
tick,0x7ff8e7af1be4,149278410,0,0x0,8
tick,0x7ff8e7af1be4,149294237,0,0x0,8
tick,0x7ff8e7af1be4,149310124,0,0x0,8
tick,0x7ff8e7af1be4,149325337,0,0x0,8
tick,0x7ff8e7af1be4,149341576,0,0x0,8
tick,0x7ff8e7af1be4,149358444,0,0x0,8
tick,0x7ff8e7af1be4,149373271,0,0x0,8
tick,0x7ff8e7af1be4,149388762,0,0x0,8
tick,0x7ff8e7af1be4,149404537,0,0x0,8
tick,0x7ff8e7af1be4,149420775,0,0x0,8
tick,0x7ff8e7af1be4,149436262,0,0x0,8
tick,0x7ff8e7af1be4,149452151,0,0x0,8
tick,0x7ff8e7af1be4,149468574,0,0x0,8
tick,0x7ff8e7af1be4,149484890,0,0x0,8
tick,0x7ff8e7af1be4,149500029,0,0x0,8
tick,0x7ff8e7af1be4,149515559,0,0x0,8
tick,0x7ff8e7af1be4,149531685,0,0x0,8
tick,0x7ff8e7af1be4,149547640,0,0x0,8
tick,0x7ff8e7af1be4,149563427,0,0x0,8
tick,0x7ff8e7af1be4,149579736,0,0x0,8
tick,0x7ff8e7af1be4,149595649,0,0x0,8
tick,0x7ff8e7af1be4,149611452,0,0x0,8
tick,0x7ff8e7af1be4,149627088,0,0x0,8
tick,0x7ff8e7af1be4,149643764,0,0x0,8
tick,0x7ff8e7af1be4,149658639,0,0x0,8
tick,0x7ff8e7af1be4,149674387,0,0x0,8
tick,0x7ff8e7af1be4,149689849,0,0x0,8
tick,0x7ff8e7af1be4,149705747,0,0x0,8
tick,0x7ff8e7af1be4,149721421,0,0x0,8
tick,0x7ff8e7af1be4,149737051,0,0x0,8
tick,0x7ff8e7af1be4,149752860,0,0x0,8
tick,0x7ff8e7af1be4,149768501,0,0x0,8
tick,0x7ff8e7af1be4,149784296,0,0x0,8
tick,0x7ff8e7af1be4,149800235,0,0x0,8
tick,0x7ff8e7af1be4,149815839,0,0x0,8
tick,0x7ff8e7af1be4,149831891,0,0x0,8
tick,0x7ff8e7af1be4,149848169,0,0x0,8
tick,0x7ff8e7af1be4,149863360,0,0x0,8
tick,0x7ff8e7af1be4,149878947,0,0x0,8
tick,0x7ff8e7af1be4,149896626,0,0x0,8
tick,0x7ff8e7af1be4,149911005,0,0x0,8
tick,0x7ff8e7af1be4,149926933,0,0x0,8
tick,0x7ff8e7af1be4,149943257,0,0x0,8
tick,0x7ff8e7af1be4,149958892,0,0x0,8
tick,0x7ff8e7af1be4,149974343,0,0x0,8
tick,0x7ff8e7af1be4,149989690,0,0x0,8
tick,0x7ff8e7af1be4,150005333,0,0x0,8
tick,0x7ff8e7af1be4,150021219,0,0x0,8
tick,0x7ff8e7af1be4,150027068,0,0x0,8
tick,0x7ff8e7af1be4,150042904,0,0x0,8
tick,0x7ff8e7af1be4,150059596,0,0x0,8
tick,0x7ff8e7af1be4,150074886,0,0x0,8
tick,0x7ff8e7af1be4,150091855,0,0x0,8
tick,0x7ff8e7af1be4,150107563,0,0x0,8
tick,0x7ff8e7af1be4,150123618,0,0x0,8
tick,0x7ff8e7af1be4,150139517,0,0x0,8
tick,0x7ff8e7af1be4,150156040,0,0x0,8
tick,0x7ff8e7af1be4,150171953,0,0x0,8
tick,0x7ff8e7af1be4,150188241,0,0x0,8
tick,0x7ff8e7af1be4,150204276,0,0x0,8
tick,0x7ff8e7af1be4,150219296,0,0x0,8
tick,0x7ff8e7af1be4,150236150,0,0x0,8
tick,0x7ff8e7af1be4,150251733,0,0x0,8
tick,0x7ff8e7af1be4,150268063,0,0x0,8
tick,0x7ff8e7af1be4,150283619,0,0x0,8
tick,0x7ff8e7af1be4,150299595,0,0x0,8
tick,0x7ff8e7af1be4,150316079,0,0x0,8
tick,0x7ff8e7af1be4,150331533,0,0x0,8
tick,0x7ff8e7af1be4,150347367,0,0x0,8
tick,0x7ff8e7af1be4,150364764,0,0x0,8
tick,0x7ff8e7af1be4,150381695,0,0x0,8
tick,0x7ff8e7af1be4,150396710,0,0x0,8
tick,0x7ff8e7af1be4,150412311,0,0x0,8
tick,0x7ff8e7af1be4,150428222,0,0x0,8
tick,0x7ff8e7af1be4,150444110,0,0x0,8
tick,0x7ff8e7af1be4,150459540,0,0x0,8
tick,0x7ff8e7af1be4,150476070,0,0x0,8
tick,0x7ff8e7af1be4,150491725,0,0x0,8
tick,0x7ff8e7af1be4,150507378,0,0x0,8
tick,0x7ff8e7af1be4,150523007,0,0x0,8
tick,0x7ff8e7af1be4,150538983,0,0x0,8
tick,0x7ff8e7af1be4,150540653,0,0x0,8
tick,0x7ff8e7af1be4,150556251,0,0x0,8
tick,0x7ff8e7af1be4,150571812,0,0x0,8
tick,0x7ff8e7af1be4,150587943,0,0x0,8
tick,0x7ff8e7af1be4,150604087,0,0x0,8
tick,0x7ff8e7af1be4,150619867,0,0x0,8
tick,0x7ff8e7af1be4,150635946,0,0x0,8
tick,0x7ff8e7af1be4,150657733,0,0x0,8
tick,0x7ff8e7af1be4,150667940,0,0x0,8
tick,0x7ff8e7af1be4,150683724,0,0x0,8
tick,0x7ff8e7af1be4,150699536,0,0x0,8
tick,0x7ff8e7af1be4,150715218,0,0x0,8
tick,0x7ff8e7af1be4,150731327,0,0x0,8
tick,0x7ff8e7af1be4,150747238,0,0x0,8
tick,0x7ff8e7af1be4,150763099,0,0x0,8
tick,0x7ff8e7af1be4,150779328,0,0x0,8
tick,0x7ff8e7af1be4,150795197,0,0x0,8
tick,0x7ff8e7af1be4,150811231,0,0x0,8
tick,0x7ff8e7af1be4,150827384,0,0x0,8
tick,0x7ff8e7af1be4,150843106,0,0x0,8
tick,0x7ff8e7af1be4,150859006,0,0x0,8
tick,0x7ff8e7af1be4,150874711,0,0x0,8
tick,0x7ff8e7af1be4,150890268,0,0x0,8
tick,0x7ff8e7af1be4,150906838,0,0x0,8
tick,0x7ff8e7af1be4,150922223,0,0x0,8
tick,0x7ff8e7af1be4,150938296,0,0x0,8
tick,0x7ff8e7af1be4,150953979,0,0x0,8
tick,0x7ff8e7af1be4,150969919,0,0x0,8
tick,0x7ff8e7af1be4,150985964,0,0x0,8
tick,0x7ff8e7af1be4,151001376,0,0x0,8
tick,0x7ff8e7af1be4,151017392,0,0x0,8
tick,0x7ff8e7af1be4,151033646,0,0x0,8
tick,0x7ff8e7af1be4,151049545,0,0x0,8
tick,0x7ff8e7af1be4,151064956,0,0x0,8
tick,0x7ff8e7af1be4,151080878,0,0x0,8
tick,0x7ff8e7af1be4,151096564,0,0x0,8
tick,0x7ff8e7af1be4,151111873,0,0x0,8
tick,0x7ff8e7af1be4,151128229,0,0x0,8
tick,0x7ff8e7af1be4,151143355,0,0x0,8
tick,0x7ff8e7af1be4,151159316,0,0x0,8
tick,0x7ff8e7af1be4,151175346,0,0x0,8
tick,0x7ff8e7af1be4,151191359,0,0x0,8
tick,0x7ff8e7af1be4,151207404,0,0x0,8
tick,0x7ff8e7af1be4,151223125,0,0x0,8
tick,0x7ff8e7af1be4,151238711,0,0x0,8
tick,0x7ff8e7af1be4,151254655,0,0x0,8
tick,0x7ff8e7af1be4,151270682,0,0x0,8
tick,0x7ff8e7af1be4,151286244,0,0x0,8
tick,0x7ff8e7af1be4,151301892,0,0x0,8
tick,0x7ff8e7af1be4,151317607,0,0x0,8
tick,0x7ff8e7af1be4,151333556,0,0x0,8
tick,0x7ff8e7af1be4,151349053,0,0x0,8
tick,0x7ff8e7af1be4,151365171,0,0x0,8
tick,0x7ff8e7af1be4,151380806,0,0x0,8
tick,0x7ff8e7af1be4,151396456,0,0x0,8
tick,0x7ff8e7af1be4,151412023,0,0x0,8
tick,0x7ff8e7af1be4,151429360,0,0x0,8
tick,0x7ff8e7af1be4,151444040,0,0x0,8
tick,0x7ff8e7af1be4,151460081,0,0x0,8
tick,0x7ff8e7af1be4,151475765,0,0x0,8
tick,0x7ff8e7af1be4,151491446,0,0x0,8
tick,0x7ff8e7af1be4,151507127,0,0x0,8
tick,0x7ff8e7af1be4,151523026,0,0x0,8
tick,0x7ff8e7af1be4,151539284,0,0x0,8
tick,0x7ff8e7af1be4,151555179,0,0x0,8
tick,0x7ff8e7af1be4,151570312,0,0x0,8
tick,0x7ff8e7af1be4,151586335,0,0x0,8
tick,0x7ff8e7af1be4,151602074,0,0x0,8
tick,0x7ff8e7af1be4,151606900,0,0x0,8
tick,0x7ff8e7af1be4,151610673,0,0x0,8
tick,0x7ff8e7af1be4,151627061,0,0x0,8
tick,0x7ff8e7af1be4,151642728,0,0x0,8
tick,0x7ff8e7af1be4,151659288,0,0x0,8
tick,0x7ff8e7af1be4,151674289,0,0x0,8
tick,0x7ff8e7af1be4,151689841,0,0x0,8
tick,0x7ff8e7af1be4,151705476,0,0x0,8
tick,0x7ff8e7af1be4,151721075,0,0x0,8
tick,0x7ff8e7af1be4,151737130,0,0x0,8
tick,0x7ff8e7af1be4,151753026,0,0x0,8
tick,0x7ff8e7af1be4,151769013,0,0x0,8
tick,0x7ff8e7af1be4,151784705,0,0x0,8
tick,0x7ff8e7af1be4,151800273,0,0x0,8
tick,0x7ff8e7af1be4,151816314,0,0x0,8
tick,0x7ff8e7af1be4,151831637,0,0x0,8
tick,0x7ff8e7af1be4,151847324,0,0x0,8
tick,0x7ff8e7af1be4,151863504,0,0x0,8
tick,0x7ff8e7af1be4,151879678,0,0x0,8
tick,0x7ff8e7af1be4,151895623,0,0x0,8
tick,0x7ff8e7af1be4,151911683,0,0x0,8
tick,0x7ff8e7af1be4,151927426,0,0x0,8
tick,0x7ff8e7af1be4,151943165,0,0x0,8
tick,0x7ff8e7af1be4,151958994,0,0x0,8
tick,0x7ff8e7af1be4,151975210,0,0x0,8
tick,0x7ff8e7af1be4,151992106,0,0x0,8
tick,0x7ff8e7af1be4,152000259,0,0x0,8
tick,0x7ff8e7af1be4,152001329,0,0x0,8
tick,0x7ff8e7af1be4,152010498,0,0x0,8
tick,0x7ff8e7af1be4,152026587,0,0x0,8
tick,0x7ff8e7af1be4,152042409,0,0x0,8
tick,0x7ff8e7af1be4,152058510,0,0x0,8
tick,0x7ff8e7af1be4,152063914,0,0x0,8
tick,0x7ff8e7af1be4,152065486,0,0x0,8
tick,0x7ff8e7af1be4,152081059,0,0x0,8
tick,0x7ff8e7af1be4,152096691,0,0x0,8
tick,0x7ff8e7af1be4,152112877,0,0x0,8
tick,0x7ff8e7af1be4,152129398,0,0x0,8
tick,0x7ff8e7af1be4,152144996,0,0x0,8
tick,0x7ff8e7af1be4,152161050,0,0x0,8
tick,0x7ff8e7af1be4,152176892,0,0x0,8
tick,0x7ff8e7af1be4,152192603,0,0x0,8
tick,0x7ff8e7af1be4,152208392,0,0x0,8
tick,0x7ff8e7af1be4,152224598,0,0x0,8
tick,0x7ff8e7af1be4,152239709,0,0x0,8
tick,0x7ff8e7af1be4,152255619,0,0x0,8
tick,0x7ff8e7af1be4,152271514,0,0x0,8
tick,0x7ff8e7af1be4,152287002,0,0x0,8
tick,0x7ff8e7af1be4,152303382,0,0x0,8
tick,0x7ff8e7af1be4,152318927,0,0x0,8
tick,0x7ff8e7af1be4,152334585,0,0x0,8
tick,0x7ff8e7af1be4,152350191,0,0x0,8
tick,0x7ff8e7af1be4,152366061,0,0x0,8
tick,0x7ff8e7af1be4,152381871,0,0x0,8
tick,0x7ff8e7af1be4,152385886,0,0x0,8
tick,0x7ff8e7af1be4,152402404,0,0x0,8
tick,0x7ff8e7af1be4,152418195,0,0x0,8
tick,0x7ff8e7af1be4,152433853,0,0x0,8
tick,0x7ff8e7af1be4,152449405,0,0x0,8
tick,0x7ff8e7af1be4,152465478,0,0x0,8
tick,0x7ff8e7af1be4,152481483,0,0x0,8
tick,0x7ff8e7af1be4,152497457,0,0x0,8
tick,0x7ff8e7af1be4,152513528,0,0x0,8
tick,0x7ff8e7af1be4,152529580,0,0x0,8
tick,0x7ff8e7af1be4,152545535,0,0x0,8
tick,0x7ff8e7af1be4,152561607,0,0x0,8
tick,0x7ff8e7af1be4,152577265,0,0x0,8
tick,0x7ff8e7af1be4,152579312,0,0x0,8
tick,0x7ff8e7af1be4,152582509,0,0x0,8
tick,0x7ff8e7af1be4,152599800,0,0x0,8
tick,0x7ff8e7af1be4,152615926,0,0x0,8
tick,0x7ff8e7af1be4,152631256,0,0x0,8
tick,0x7ff8e7af1be4,152647465,0,0x0,8
tick,0x7ff8e7af1be4,152663398,0,0x0,8
tick,0x7ff8e7af1be4,152679351,0,0x0,8
tick,0x7ff8e7af1be4,152695215,0,0x0,8
tick,0x7ff8e7af1be4,152711308,0,0x0,8
tick,0x7ff8e7af1be4,152726933,0,0x0,8
tick,0x7ff8e7af1be4,152743211,0,0x0,8
tick,0x7ff8e7af1be4,152758555,0,0x0,8
tick,0x7ff8e7af1be4,152774346,0,0x0,8
tick,0x7ff8e7af1be4,152789977,0,0x0,8
tick,0x7ff8e7af1be4,152805787,0,0x0,8
tick,0x7ff8e7af1be4,152821517,0,0x0,8
tick,0x7ff8e7af1be4,152837057,0,0x0,8
tick,0x7ff8e7af1be4,152852985,0,0x0,8
tick,0x7ff8e7af1be4,152869036,0,0x0,8
tick,0x7ff8e7af1be4,152884707,0,0x0,8
tick,0x7ff8e7af1be4,152900044,0,0x0,8
tick,0x7ff8e7af1be4,152915737,0,0x0,8
tick,0x7ff8e7af1be4,152931896,0,0x0,8
tick,0x7ff8e7af1be4,152947893,0,0x0,8
tick,0x7ff8e7af1be4,152963710,0,0x0,8
tick,0x7ff8e7af1be4,152980060,0,0x0,8
tick,0x7ff8e7af1be4,152995651,0,0x0,8
tick,0x7ff8e7af1be4,153011475,0,0x0,8
tick,0x7ff8e7af1be4,153026796,0,0x0,8
tick,0x7ff8e7af1be4,153043050,0,0x0,8
tick,0x7ff8e7af1be4,153058763,0,0x0,8
tick,0x7ff8e7af1be4,153074522,0,0x0,8
tick,0x7ff8e7af1be4,153092019,0,0x0,8
tick,0x7ff8e7af1be4,153096989,0,0x0,8
tick,0x7ff8e7af1be4,153113953,0,0x0,8
tick,0x7ff8e7af1be4,153129516,0,0x0,8
tick,0x7ff8e7af1be4,153145184,0,0x0,8
tick,0x7ff8e7af1be4,153160973,0,0x0,8
tick,0x7ff8e7af1be4,153176791,0,0x0,8
tick,0x7ff8e7af1be4,153192318,0,0x0,8
tick,0x7ff8e7af1be4,153208510,0,0x0,8
tick,0x7ff8e7af1be4,153224019,0,0x0,8
tick,0x7ff8e7af1be4,153239347,0,0x0,8
tick,0x7ff8e7af1be4,153254858,0,0x0,8
tick,0x7ff8e7af1be4,153270915,0,0x0,8
tick,0x7ff8e7af1be4,153286730,0,0x0,8
tick,0x7ff8e7af1be4,153302305,0,0x0,8
tick,0x7ff8e7af1be4,153318078,0,0x0,8
tick,0x7ff8e7af1be4,153334240,0,0x0,8
tick,0x7ff8e7af1be4,153349789,0,0x0,8
tick,0x7ff8e7af1be4,153365849,0,0x0,8
tick,0x7ff8e7af1be4,153383110,0,0x0,8
tick,0x7ff8e7af1be4,153397293,0,0x0,8
tick,0x7ff8e7af1be4,153413291,0,0x0,8
tick,0x7ff8e7af1be4,153429351,0,0x0,8
tick,0x7ff8e7af1be4,153445719,0,0x0,8
tick,0x7ff8e7af1be4,153461798,0,0x0,8
tick,0x7ff8e7af1be4,153477956,0,0x0,8
tick,0x7ff8e7af1be4,153494124,0,0x0,8
tick,0x7ff8e7af1be4,153509962,0,0x0,8
tick,0x7ff8e7af1be4,153524805,0,0x0,8
tick,0x7ff8e7af1be4,153540449,0,0x0,8
tick,0x7ff8e7af1be4,153556240,0,0x0,8
tick,0x7ff8e7af1be4,153572361,0,0x0,8
tick,0x7ff8e7af1be4,153588581,0,0x0,8
tick,0x7ff8e7af1be4,153604319,0,0x0,8
tick,0x7ff8e7af1be4,153605977,0,0x0,8
tick,0x7ff8e7af1be4,153610028,0,0x0,8
tick,0x7ff8e7af1be4,153626294,0,0x0,8
tick,0x7ff8e7af1be4,153642499,0,0x0,8
tick,0x7ff8e7af1be4,153658776,0,0x0,8
tick,0x7ff8e7af1be4,153674780,0,0x0,8
tick,0x7ff8e7af1be4,153690200,0,0x0,8
tick,0x7ff8e7af1be4,153705572,0,0x0,8
tick,0x7ff8e7af1be4,153721861,0,0x0,8
tick,0x7ff8e7af1be4,153737310,0,0x0,8
tick,0x7ff8e7af1be4,153753012,0,0x0,8
tick,0x7ff8e7af1be4,153768618,0,0x0,8
tick,0x7ff8e7af1be4,153784857,0,0x0,8
tick,0x7ff8e7af1be4,153801237,0,0x0,8
tick,0x7ff8e7af1be4,153813969,0,0x0,8
tick,0x7ff8e7af1be4,153828003,0,0x0,8
tick,0x7ff8e7af1be4,153838169,0,0x0,8
tick,0x7ff8e7af1be4,153854324,0,0x0,8
tick,0x7ff8e7af1be4,153866692,0,0x0,8
tick,0x7ff8e7af1be4,153880187,0,0x0,8
tick,0x7ff8e7af1be4,153884347,0,0x0,8
tick,0x7ff8e7af1be4,153897241,0,0x0,8
tick,0x7ff8e7af1be4,153912984,0,0x0,8
tick,0x7ff8e7af1be4,153928972,0,0x0,8
tick,0x7ff8e7af1be4,153944818,0,0x0,8
tick,0x7ff8e7af1be4,153961197,0,0x0,8
tick,0x7ff8e7af1be4,153977128,0,0x0,8
tick,0x7ff8e7af1be4,153993741,0,0x0,8
tick,0x7ff8e7af1be4,154009099,0,0x0,8
tick,0x7ff8e7af1be4,154025160,0,0x0,8
tick,0x7ff8e7af1be4,154040789,0,0x0,8
tick,0x7ff8e7af1be4,154056893,0,0x0,8
tick,0x7ff8e7af1be4,154072157,0,0x0,8
tick,0x7ff8e7af1be4,154080793,0,0x0,8
tick,0x7ff8e7af1be4,154096670,0,0x0,8
tick,0x7ff8e7af1be4,154121390,0,0x0,8
tick,0x7ff8e7af1be4,154127068,0,0x0,8
tick,0x7ff8e7af1be4,154141172,0,0x0,8
tick,0x7ff8e7af1be4,154157974,0,0x0,8
tick,0x7ff8e7af1be4,154172968,0,0x0,8
tick,0x7ff8e7af1be4,154189623,0,0x0,8
tick,0x7ff8e7af1be4,154197710,0,0x0,8
tick,0x7ff8e7af1be4,154205966,0,0x0,8
tick,0x7ff8e7af1be4,154221606,0,0x0,8
tick,0x7ff8e7af1be4,154237600,0,0x0,8
tick,0x7ff8e7af1be4,154253273,0,0x0,8
tick,0x7ff8e7af1be4,154263096,0,0x0,8
tick,0x7ff8e7af1be4,154277512,0,0x0,8
tick,0x7ff8e7af1be4,154292885,0,0x0,8
tick,0x7ff8e7af1be4,154308763,0,0x0,8
tick,0x7ff8e7af1be4,154324365,0,0x0,8
tick,0x7ff8e7af1be4,154340388,0,0x0,8
tick,0x7ff8e7af1be4,154356192,0,0x0,8
tick,0x7ff8e7af1be4,154372551,0,0x0,8
tick,0x7ff8e7af1be4,154389698,0,0x0,8
tick,0x7ff8e7af1be4,154404457,0,0x0,8
tick,0x7ff8e7af1be4,154420112,0,0x0,8
tick,0x7ff8e7af1be4,154436150,0,0x0,8
tick,0x7ff8e7af1be4,154451904,0,0x0,8
tick,0x7ff8e7af1be4,154467867,0,0x0,8
tick,0x7ff8e7af1be4,154483648,0,0x0,8
tick,0x7ff8e7af1be4,154499691,0,0x0,8
tick,0x7ff8e7af1be4,154515435,0,0x0,8
tick,0x7ff8e7af1be4,154531493,0,0x0,8
tick,0x7ff8e7af1be4,154547214,0,0x0,8
tick,0x7ff8e7af1be4,154563569,0,0x0,8
tick,0x7ff8e7af1be4,154579550,0,0x0,8
tick,0x7ff8e7af1be4,154596179,0,0x0,8
tick,0x7ff8e7af1be4,154611753,0,0x0,8
tick,0x7ff8e7af1be4,154627757,0,0x0,8
tick,0x7ff8e7af1be4,154643716,0,0x0,8
tick,0x7ff8e7af1be4,154659650,0,0x0,8
tick,0x7ff8e7af1be4,154675413,0,0x0,8
tick,0x7ff8e7af1be4,154690875,0,0x0,8
tick,0x7ff8e7af1be4,154706870,0,0x0,8
tick,0x7ff8e7af1be4,154722834,0,0x0,8
tick,0x7ff8e7af1be4,154738907,0,0x0,8
tick,0x7ff8e7af1be4,154754352,0,0x0,8
tick,0x7ff8e7af1be4,154770581,0,0x0,8
tick,0x7ff8e7af1be4,154786635,0,0x0,8
tick,0x7ff8e7af1be4,154802171,0,0x0,8
tick,0x7ff8e7af1be4,154818299,0,0x0,8
tick,0x7ff8e7af1be4,154834470,0,0x0,8
tick,0x7ff8e7af1be4,154850507,0,0x0,8
tick,0x7ff8e7af1be4,154866712,0,0x0,8
tick,0x7ff8e7af1be4,154882274,0,0x0,8
tick,0x7ff8e7af1be4,154891191,0,0x0,8
tick,0x7ff8e7af1be4,154900076,0,0x0,8
tick,0x7ff8e7af1be4,154915517,0,0x0,8
tick,0x7ff8e7af1be4,154931150,0,0x0,8
tick,0x7ff8e7af1be4,154946923,0,0x0,8
tick,0x7ff8e7af1be4,154963065,0,0x0,8
tick,0x7ff8e7af1be4,154966001,0,0x0,8
tick,0x7ff8e7af1be4,154981765,0,0x0,8
tick,0x7ff8e7af1be4,154997625,0,0x0,8
tick,0x7ff8e7af1be4,155013550,0,0x0,8
tick,0x7ff8e7af1be4,155029176,0,0x0,8
tick,0x7ff8e7af1be4,155045558,0,0x0,8
tick,0x7ff8e7af1be4,155061455,0,0x0,8
tick,0x7ff8e7af1be4,155077789,0,0x0,8
tick,0x7ff8e7af1be4,155093279,0,0x0,8
tick,0x7ff8e7af1be4,155108793,0,0x0,8
tick,0x7ff8e7af1be4,155124271,0,0x0,8
tick,0x7ff8e7af1be4,155140150,0,0x0,8
tick,0x7ff8e7af1be4,155156603,0,0x0,8
tick,0x7ff8e7af1be4,155162470,0,0x0,8
tick,0x7ff8e7af1be4,155164150,0,0x0,8
tick,0x7ff8e7af1be4,155181133,0,0x0,8
tick,0x7ff8e7af1be4,155196501,0,0x0,8
tick,0x7ff8e7af1be4,155212288,0,0x0,8
tick,0x7ff8e7af1be4,155228035,0,0x0,8
tick,0x7ff8e7af1be4,155243673,0,0x0,8
tick,0x7ff8e7af1be4,155259570,0,0x0,8
tick,0x7ff8e7af1be4,155275353,0,0x0,8
tick,0x7ff8e7af1be4,155291566,0,0x0,8
tick,0x7ff8e7af1be4,155307309,0,0x0,8
tick,0x7ff8e7af1be4,155323747,0,0x0,8
tick,0x7ff8e7af1be4,155339710,0,0x0,8
tick,0x7ff8e7af1be4,155355610,0,0x0,8
tick,0x7ff8e7af1be4,155372010,0,0x0,8
tick,0x7ff8e7af1be4,155387576,0,0x0,8
tick,0x7ff8e7af1be4,155403961,0,0x0,8
tick,0x7ff8e7af1be4,155419203,0,0x0,8
tick,0x7ff8e7af1be4,155435107,0,0x0,8
tick,0x7ff8e7af1be4,155450929,0,0x0,8
tick,0x7ff8e7af1be4,155466868,0,0x0,8
tick,0x7ff8e7af1be4,155482330,0,0x0,8
tick,0x7ff8e7af1be4,155498368,0,0x0,8
tick,0x7ff8e7af1be4,155514159,0,0x0,8
tick,0x7ff8e7af1be4,155529858,0,0x0,8
tick,0x7ff8e7af1be4,155545786,0,0x0,8
tick,0x7ff8e7af1be4,155561740,0,0x0,8
tick,0x7ff8e7af1be4,155577806,0,0x0,8
tick,0x7ff8e7af1be4,155586110,0,0x0,8
tick,0x7ff8e7af1be4,155602159,0,0x0,8
tick,0x7ff8e7af1be4,155626833,0,0x0,8
tick,0x7ff8e7af1be4,155642577,0,0x0,8
tick,0x7ff8e7af1be4,155658556,0,0x0,8
tick,0x7ff8e7af1be4,155664274,0,0x0,8
tick,0x7ff8e7af1be4,155670043,0,0x0,8
tick,0x7ff8e7af1be4,155671428,0,0x0,8
tick,0x7ff8e7af1be4,155688063,0,0x0,8
tick,0x7ff8e7af1be4,155704167,0,0x0,8
tick,0x7ff8e7af1be4,155720515,0,0x0,8
tick,0x7ff8e7af1be4,155736400,0,0x0,8
tick,0x7ff8e7af1be4,155752438,0,0x0,8
tick,0x7ff8e7af1be4,155768207,0,0x0,8
tick,0x7ff8e7af1be4,155784114,0,0x0,8
tick,0x7ff8e7af1be4,155800315,0,0x0,8
tick,0x7ff8e7af1be4,155816164,0,0x0,8
tick,0x7ff8e7af1be4,155824386,0,0x0,8
tick,0x7ff8e7af1be4,155840222,0,0x0,8
tick,0x7ff8e7af1be4,155856486,0,0x0,8
tick,0x7ff8e7af1be4,155872082,0,0x0,8
tick,0x7ff8e7af1be4,155888403,0,0x0,8
tick,0x7ff8e7af1be4,155903989,0,0x0,8
tick,0x7ff8e7af1be4,155912051,0,0x0,8
tick,0x7ff8e7af1be4,155928099,0,0x0,8
tick,0x7ff8e7af1be4,155943812,0,0x0,8
tick,0x7ff8e7af1be4,155959712,0,0x0,8
tick,0x7ff8e7af1be4,155975659,0,0x0,8
tick,0x7ff8e7af1be4,155991336,0,0x0,8
tick,0x7ff8e7af1be4,156007574,0,0x0,8
tick,0x7ff8e7af1be4,156023029,0,0x0,8
tick,0x7ff8e7af1be4,156039230,0,0x0,8
tick,0x7ff8e7af1be4,156055858,0,0x0,8
tick,0x7ff8e7af1be4,156070738,0,0x0,8
tick,0x7ff8e7af1be4,156086881,0,0x0,8
tick,0x7ff8e7af1be4,156102866,0,0x0,8
tick,0x7ff8e7af1be4,156118686,0,0x0,8
tick,0x7ff8e7af1be4,156134350,0,0x0,8
tick,0x7ff8e7af1be4,156150547,0,0x0,8
tick,0x7ff8e7af1be4,156166786,0,0x0,8
tick,0x7ff8e7af1be4,156172867,0,0x0,8
tick,0x7ff8e7af1be4,156175045,0,0x0,8
tick,0x7ff8e7af1be4,156177176,0,0x0,8
tick,0x7ff8e7af1be4,156193293,0,0x0,8
tick,0x7ff8e7af1be4,156209024,0,0x0,8
tick,0x7ff8e7af1be4,156224933,0,0x0,8
tick,0x7ff8e7af1be4,156240685,0,0x0,8
tick,0x7ff8e7af1be4,156256453,0,0x0,8
tick,0x7ff8e7af1be4,156273313,0,0x0,8
tick,0x7ff8e7af1be4,156288435,0,0x0,8
tick,0x7ff8e7af1be4,156304279,0,0x0,8
tick,0x7ff8e7af1be4,156320512,0,0x0,8
tick,0x7ff8e7af1be4,156336595,0,0x0,8
tick,0x7ff8e7af1be4,156351874,0,0x0,8
tick,0x7ff8e7af1be4,156368235,0,0x0,8
tick,0x7ff8e7af1be4,156383529,0,0x0,8
tick,0x7ff8e7af1be4,156399355,0,0x0,8
tick,0x7ff8e7af1be4,156415241,0,0x0,8
tick,0x7ff8e7af1be4,156430740,0,0x0,8
tick,0x7ff8e7af1be4,156446470,0,0x0,8
tick,0x7ff8e7af1be4,156462316,0,0x0,8
tick,0x7ff8e7af1be4,156478237,0,0x0,8
tick,0x7ff8e7af1be4,156494433,0,0x0,8
tick,0x7ff8e7af1be4,156510241,0,0x0,8
tick,0x7ff8e7af1be4,156525712,0,0x0,8
tick,0x7ff8e7af1be4,156541727,0,0x0,8
tick,0x7ff8e7af1be4,156557799,0,0x0,8
tick,0x7ff8e7af1be4,156573788,0,0x0,8
tick,0x7ff8e7af1be4,156589778,0,0x0,8
tick,0x7ff8e7af1be4,156605721,0,0x0,8
tick,0x7ff8e7af1be4,156622437,0,0x0,8
tick,0x7ff8e7af1be4,156637529,0,0x0,8
tick,0x7ff8e7af1be4,156652758,0,0x0,8
tick,0x7ff8e7af1be4,156668825,0,0x0,8
tick,0x7ff8e7af1be4,156684661,0,0x0,8
tick,0x7ff8e7af1be4,156689812,0,0x0,8
tick,0x7ff8e7af1be4,156705832,0,0x0,8
tick,0x7ff8e7af1be4,156721703,0,0x0,8
tick,0x7ff8e7af1be4,156737673,0,0x0,8
tick,0x7ff8e7af1be4,156753294,0,0x0,8
tick,0x7ff8e7af1be4,156769330,0,0x0,8
tick,0x7ff8e7af1be4,156785059,0,0x0,8
tick,0x7ff8e7af1be4,156800528,0,0x0,8
tick,0x7ff8e7af1be4,156816343,0,0x0,8
tick,0x7ff8e7af1be4,156832229,0,0x0,8
tick,0x7ff8e7af1be4,156847942,0,0x0,8
tick,0x7ff8e7af1be4,156856263,0,0x0,8
tick,0x7ff8e7af1be4,156872515,0,0x0,8
tick,0x7ff8e7af1be4,156888162,0,0x0,8
tick,0x7ff8e7af1be4,156904504,0,0x0,8
tick,0x7ff8e7af1be4,156919862,0,0x0,8
tick,0x7ff8e7af1be4,156928405,0,0x0,8
tick,0x7ff8e7af1be4,156944164,0,0x0,8
tick,0x7ff8e7af1be4,156959634,0,0x0,8
tick,0x7ff8e7af1be4,156976049,0,0x0,8
tick,0x7ff8e7af1be4,156991968,0,0x0,8
tick,0x7ff8e7af1be4,157007299,0,0x0,8
tick,0x7ff8e7af1be4,157023301,0,0x0,8
tick,0x7ff8e7af1be4,157039506,0,0x0,8
tick,0x7ff8e7af1be4,157055689,0,0x0,8
tick,0x7ff8e7af1be4,157072197,0,0x0,8
tick,0x7ff8e7af1be4,157088550,0,0x0,8
tick,0x7ff8e7af1be4,157104655,0,0x0,8
tick,0x7ff8e7af1be4,157112239,0,0x0,8
tick,0x7ff8e7af1be4,157128490,0,0x0,8
tick,0x7ff8e7af1be4,157144503,0,0x0,8
tick,0x7ff8e7af1be4,157160293,0,0x0,8
tick,0x7ff8e7af1be4,157176258,0,0x0,8
tick,0x7ff8e7af1be4,157191893,0,0x0,8
tick,0x7ff8e7af1be4,157200252,0,0x0,8
tick,0x7ff8e7af1be4,157214694,0,0x0,8
tick,0x7ff8e7af1be4,157230761,0,0x0,8
tick,0x7ff8e7af1be4,157247143,0,0x0,8
tick,0x7ff8e7af1be4,157262978,0,0x0,8
tick,0x7ff8e7af1be4,157278835,0,0x0,8
tick,0x7ff8e7af1be4,157294527,0,0x0,8
tick,0x7ff8e7af1be4,157310315,0,0x0,8
tick,0x7ff8e7af1be4,157325862,0,0x0,8
tick,0x7ff8e7af1be4,157341913,0,0x0,8
tick,0x7ff8e7af1be4,157357191,0,0x0,8
tick,0x7ff8e7af1be4,157373276,0,0x0,8
tick,0x7ff8e7af1be4,157388631,0,0x0,8
tick,0x7ff8e7af1be4,157405149,0,0x0,8
tick,0x7ff8e7af1be4,157422267,0,0x0,8
tick,0x7ff8e7af1be4,157437337,0,0x0,8
tick,0x7ff8e7af1be4,157453367,0,0x0,8
tick,0x7ff8e7af1be4,157469443,0,0x0,8
tick,0x7ff8e7af1be4,157485704,0,0x0,8
tick,0x7ff8e7af1be4,157501946,0,0x0,8
tick,0x7ff8e7af1be4,157518031,0,0x0,8
tick,0x7ff8e7af1be4,157533224,0,0x0,8
tick,0x7ff8e7af1be4,157549631,0,0x0,8
tick,0x7ff8e7af1be4,157564898,0,0x0,8
tick,0x7ff8e7af1be4,157580545,0,0x0,8
tick,0x7ff8e7af1be4,157596266,0,0x0,8
tick,0x7ff8e7af1be4,157612351,0,0x0,8
tick,0x7ff8e7af1be4,157624051,0,0x0,8
tick,0x7ff8e7af1be4,157636635,0,0x0,8
tick,0x7ff8e7af1be4,157652841,0,0x0,8
tick,0x7ff8e7af1be4,157665371,0,0x0,8
tick,0x7ff8e7af1be4,157677167,0,0x0,8
tick,0x7ff8e7af1be4,157685393,0,0x0,8
tick,0x7ff8e7af1be4,157705290,0,0x0,8
tick,0x7ff8e7af1be4,157709523,0,0x0,8
tick,0x7ff8e7af1be4,157716515,0,0x0,8
tick,0x7ff8e7af1be4,157729600,0,0x0,8
tick,0x7ff8e7af1be4,157739051,0,0x0,8
tick,0x7ff8e7af1be4,157755104,0,0x0,8
tick,0x7ff8e7af1be4,157771167,0,0x0,8
tick,0x7ff8e7af1be4,157786975,0,0x0,8
tick,0x7ff8e7af1be4,157802621,0,0x0,8
tick,0x7ff8e7af1be4,157818533,0,0x0,8
tick,0x7ff8e7af1be4,157834619,0,0x0,8
tick,0x7ff8e7af1be4,157849929,0,0x0,8
tick,0x7ff8e7af1be4,157865574,0,0x0,8
tick,0x7ff8e7af1be4,157881821,0,0x0,8
tick,0x7ff8e7af1be4,157897326,0,0x0,8
tick,0x7ff8e7af1be4,157913544,0,0x0,8
tick,0x7ff8e7af1be4,157929062,0,0x0,8
tick,0x7ff8e7af1be4,157938129,0,0x0,8
tick,0x7ff8e7af1be4,157949784,0,0x0,8
tick,0x7ff8e7af1be4,157962098,0,0x0,8
tick,0x7ff8e7af1be4,157974041,0,0x0,8
tick,0x7ff8e7af1be4,157986280,0,0x0,8
tick,0x7ff8e7af1be4,158002197,0,0x0,8
tick,0x7ff8e7af1be4,158018344,0,0x0,8
tick,0x7ff8e7af1be4,158034847,0,0x0,8
tick,0x7ff8e7af1be4,158049686,0,0x0,8
tick,0x7ff8e7af1be4,158065336,0,0x0,8
tick,0x7ff8e7af1be4,158081266,0,0x0,8
tick,0x7ff8e7af1be4,158096885,0,0x0,8
tick,0x7ff8e7af1be4,158112478,0,0x0,8
tick,0x7ff8e7af1be4,158128764,0,0x0,8
tick,0x7ff8e7af1be4,158144861,0,0x0,8
tick,0x7ff8e7af1be4,158160373,0,0x0,8
tick,0x7ff8e7af1be4,158176759,0,0x0,8
tick,0x7ff8e7af1be4,158192183,0,0x0,8
tick,0x7ff8e7af1be4,158207852,0,0x0,8
tick,0x7ff8e7af1be4,158223912,0,0x0,8
tick,0x7ff8e7af1be4,158228760,0,0x0,8
tick,0x7ff8e7af1be4,158230383,0,0x0,8
tick,0x7ff8e7af1be4,158231803,0,0x0,8
tick,0x7ff8e7af1be4,158248876,0,0x0,8
tick,0x7ff8e7af1be4,158264480,0,0x0,8
tick,0x7ff8e7af1be4,158280436,0,0x0,8
tick,0x7ff8e7af1be4,158295974,0,0x0,8
tick,0x7ff8e7af1be4,158312058,0,0x0,8
tick,0x7ff8e7af1be4,158328090,0,0x0,8
tick,0x7ff8e7af1be4,158344100,0,0x0,8
tick,0x7ff8e7af1be4,158359557,0,0x0,8
tick,0x7ff8e7af1be4,158375608,0,0x0,8
tick,0x7ff8e7af1be4,158391395,0,0x0,8
tick,0x7ff8e7af1be4,158407394,0,0x0,8
tick,0x7ff8e7af1be4,158423472,0,0x0,8
tick,0x7ff8e7af1be4,158439454,0,0x0,8
tick,0x7ff8e7af1be4,158455555,0,0x0,8
tick,0x7ff8e7af1be4,158471458,0,0x0,8
tick,0x7ff8e7af1be4,158487775,0,0x0,8
tick,0x7ff8e7af1be4,158504526,0,0x0,8
tick,0x7ff8e7af1be4,158519217,0,0x0,8
tick,0x7ff8e7af1be4,158534999,0,0x0,8
tick,0x7ff8e7af1be4,158550871,0,0x0,8
tick,0x7ff8e7af1be4,158567130,0,0x0,8
tick,0x7ff8e7af1be4,158582429,0,0x0,8
tick,0x7ff8e7af1be4,158598710,0,0x0,8
tick,0x7ff8e7af1be4,158614596,0,0x0,8
tick,0x7ff8e7af1be4,158630287,0,0x0,8
tick,0x7ff8e7af1be4,158646052,0,0x0,8
tick,0x7ff8e7af1be4,158662346,0,0x0,8
tick,0x7ff8e7af1be4,158677885,0,0x0,8
tick,0x7ff8e7af1be4,158693492,0,0x0,8
tick,0x7ff8e7af1be4,158709429,0,0x0,8
tick,0x7ff8e7af1be4,158726014,0,0x0,8
tick,0x7ff8e7af1be4,158741792,0,0x0,8
tick,0x7ff8e7af1be4,158746588,0,0x0,8
tick,0x7ff8e7af1be4,158749160,0,0x0,8
tick,0x7ff8e7af1be4,158766240,0,0x0,8
tick,0x7ff8e7af1be4,158782230,0,0x0,8
tick,0x7ff8e7af1be4,158798121,0,0x0,8
tick,0x7ff8e7af1be4,158813765,0,0x0,8
tick,0x7ff8e7af1be4,158829575,0,0x0,8
tick,0x7ff8e7af1be4,158845904,0,0x0,8
tick,0x7ff8e7af1be4,158861333,0,0x0,8
tick,0x7ff8e7af1be4,158876957,0,0x0,8
tick,0x7ff8e7af1be4,158893420,0,0x0,8
tick,0x7ff8e7af1be4,158908761,0,0x0,8
tick,0x7ff8e7af1be4,158925018,0,0x0,8
tick,0x7ff8e7af1be4,158940970,0,0x0,8
tick,0x7ff8e7af1be4,158956651,0,0x0,8
tick,0x7ff8e7af1be4,158965003,0,0x0,8
tick,0x7ff8e7af1be4,158981383,0,0x0,8
tick,0x7ff8e7af1be4,159005785,0,0x0,8
tick,0x7ff8e7af1be4,159021818,0,0x0,8
tick,0x7ff8e7af1be4,159038199,0,0x0,8
tick,0x7ff8e7af1be4,159054049,0,0x0,8
tick,0x7ff8e7af1be4,159067248,0,0x0,8
tick,0x7ff8e7af1be4,159078748,0,0x0,8
tick,0x7ff8e7af1be4,159102788,0,0x0,8
tick,0x7ff8e7af1be4,159119154,0,0x0,8
tick,0x7ff8e7af1be4,159135116,0,0x0,8
tick,0x7ff8e7af1be4,159151130,0,0x0,8
tick,0x7ff8e7af1be4,159167480,0,0x0,8
tick,0x7ff8e7af1be4,159183034,0,0x0,8
tick,0x7ff8e7af1be4,159191520,0,0x0,8
tick,0x7ff8e7af1be4,159199845,0,0x0,8
tick,0x7ff8e7af1be4,159215832,0,0x0,8
tick,0x7ff8e7af1be4,159224253,0,0x0,8
tick,0x7ff8e7af1be4,159240407,0,0x0,8
tick,0x7ff8e7af1be4,159256635,0,0x0,8
tick,0x7ff8e7af1be4,159261392,0,0x0,8
tick,0x7ff8e7af1be4,159262758,0,0x0,8
tick,0x7ff8e7af1be4,159264331,0,0x0,8
tick,0x7ff8e7af1be4,159280875,0,0x0,8
tick,0x7ff8e7af1be4,159296152,0,0x0,8
tick,0x7ff8e7af1be4,159311473,0,0x0,8
tick,0x7ff8e7af1be4,159327591,0,0x0,8
tick,0x7ff8e7af1be4,159343005,0,0x0,8
tick,0x7ff8e7af1be4,159359320,0,0x0,8
tick,0x7ff8e7af1be4,159375859,0,0x0,8
tick,0x7ff8e7af1be4,159391144,0,0x0,8
tick,0x7ff8e7af1be4,159406413,0,0x0,8
tick,0x7ff8e7af1be4,159422129,0,0x0,8
tick,0x7ff8e7af1be4,159438953,0,0x0,8
tick,0x7ff8e7af1be4,159454277,0,0x0,8
tick,0x7ff8e7af1be4,159470466,0,0x0,8
tick,0x7ff8e7af1be4,159486671,0,0x0,8
tick,0x7ff8e7af1be4,159502188,0,0x0,8
tick,0x7ff8e7af1be4,159518408,0,0x0,8
tick,0x7ff8e7af1be4,159534198,0,0x0,8
tick,0x7ff8e7af1be4,159549833,0,0x0,8
tick,0x7ff8e7af1be4,159565913,0,0x0,8
tick,0x7ff8e7af1be4,159581873,0,0x0,8
tick,0x7ff8e7af1be4,159598418,0,0x0,8
tick,0x7ff8e7af1be4,159614189,0,0x0,8
tick,0x7ff8e7af1be4,159629958,0,0x0,8
tick,0x7ff8e7af1be4,159646277,0,0x0,8
tick,0x7ff8e7af1be4,159662476,0,0x0,8
tick,0x7ff8e7af1be4,159678167,0,0x0,8
tick,0x7ff8e7af1be4,159694917,0,0x0,8
tick,0x7ff8e7af1be4,159709853,0,0x0,8
tick,0x7ff8e7af1be4,159726093,0,0x0,8
tick,0x7ff8e7af1be4,159742158,0,0x0,8
tick,0x7ff8e7af1be4,159757438,0,0x0,8
tick,0x7ff8e7af1be4,159759336,0,0x0,8
tick,0x7ff8e7af1be4,159762590,0,0x0,8
tick,0x7ff8e7af1be4,159765053,0,0x0,8
tick,0x7ff8e7af1be4,159766457,0,0x0,8
tick,0x7ff8e7af1be4,159782428,0,0x0,8
tick,0x7ff8e7af1be4,159798638,0,0x0,8
tick,0x7ff8e7af1be4,159814678,0,0x0,8
tick,0x7ff8e7af1be4,159830258,0,0x0,8
tick,0x7ff8e7af1be4,159845990,0,0x0,8
tick,0x7ff8e7af1be4,159862304,0,0x0,8
tick,0x7ff8e7af1be4,159878669,0,0x0,8
tick,0x7ff8e7af1be4,159894648,0,0x0,8
tick,0x7ff8e7af1be4,159910172,0,0x0,8
tick,0x7ff8e7af1be4,159926624,0,0x0,8
tick,0x7ff8e7af1be4,159942404,0,0x0,8
tick,0x7ff8e7af1be4,159950624,0,0x0,8
tick,0x7ff8e7af1be4,159966434,0,0x0,8
tick,0x7ff8e7af1be4,159982714,0,0x0,8
tick,0x7ff8e7af1be4,159998405,0,0x0,8
tick,0x7ff8e7af1be4,160014585,0,0x0,8
tick,0x7ff8e7af1be4,160030745,0,0x0,8
tick,0x7ff8e7af1be4,160047089,0,0x0,8
tick,0x7ff8e7af1be4,160062581,0,0x0,8
tick,0x7ff8e7af1be4,160078668,0,0x0,8
tick,0x7ff8e7af1be4,160094493,0,0x0,8
tick,0x7ff8e7af1be4,160110357,0,0x0,8
tick,0x7ff8e7af1be4,160126283,0,0x0,8
tick,0x7ff8e7af1be4,160142362,0,0x0,8
tick,0x7ff8e7af1be4,160158668,0,0x0,8
tick,0x7ff8e7af1be4,160174637,0,0x0,8
tick,0x7ff8e7af1be4,160190967,0,0x0,8
tick,0x7ff8e7af1be4,160206638,0,0x0,8
tick,0x7ff8e7af1be4,160222316,0,0x0,8
tick,0x7ff8e7af1be4,160238449,0,0x0,8
tick,0x7ff8e7af1be4,160254467,0,0x0,8
tick,0x7ff8e7af1be4,160270418,0,0x0,8
tick,0x7ff8e7af1be4,160274050,0,0x0,8
tick,0x7ff8e7af1be4,160275857,0,0x0,8
tick,0x7ff8e7af1be4,160292318,0,0x0,8
tick,0x7ff8e7af1be4,160307576,0,0x0,8
tick,0x7ff8e7af1be4,160323302,0,0x0,8
tick,0x7ff8e7af1be4,160338850,0,0x0,8
tick,0x7ff8e7af1be4,160354695,0,0x0,8
tick,0x7ff8e7af1be4,160370721,0,0x0,8
tick,0x7ff8e7af1be4,160386401,0,0x0,8
tick,0x7ff8e7af1be4,160402823,0,0x0,8
tick,0x7ff8e7af1be4,160419101,0,0x0,8
tick,0x7ff8e7af1be4,160435523,0,0x0,8
tick,0x7ff8e7af1be4,160451765,0,0x0,8
tick,0x7ff8e7af1be4,160467627,0,0x0,8
tick,0x7ff8e7af1be4,160475599,0,0x0,8
tick,0x7ff8e7af1be4,160492036,0,0x0,8
tick,0x7ff8e7af1be4,160501506,0,0x0,8
tick,0x7ff8e7af1be4,160513980,0,0x0,8
tick,0x7ff8e7af1be4,160527789,0,0x0,8
tick,0x7ff8e7af1be4,160544264,0,0x0,8
tick,0x7ff8e7af1be4,160557109,0,0x0,8
tick,0x7ff8e7af1be4,160565373,0,0x0,8
tick,0x7ff8e7af1be4,160581160,0,0x0,8
tick,0x7ff8e7af1be4,160589327,0,0x0,8
tick,0x7ff8e7af1be4,160605376,0,0x0,8
tick,0x7ff8e7af1be4,160621606,0,0x0,8
tick,0x7ff8e7af1be4,160629612,0,0x0,8
tick,0x7ff8e7af1be4,160637674,0,0x0,8
tick,0x7ff8e7af1be4,160653689,0,0x0,8
tick,0x7ff8e7af1be4,160661671,0,0x0,8
tick,0x7ff8e7af1be4,160669684,0,0x0,8
tick,0x7ff8e7af1be4,160685770,0,0x0,8
tick,0x7ff8e7af1be4,160694255,0,0x0,8
tick,0x7ff8e7af1be4,160710412,0,0x0,8
tick,0x7ff8e7af1be4,160726329,0,0x0,8
tick,0x7ff8e7af1be4,160742367,0,0x0,8
tick,0x7ff8e7af1be4,160759184,0,0x0,8
tick,0x7ff8e7af1be4,160770309,0,0x0,8
tick,0x7ff8e7af1be4,160786203,0,0x0,8
tick,0x7ff8e7af1be4,160810790,0,0x0,8
tick,0x7ff8e7af1be4,160825793,0,0x0,8
tick,0x7ff8e7af1be4,160827606,0,0x0,8
tick,0x7ff8e7af1be4,160828837,0,0x0,8
tick,0x7ff8e7af1be4,160845592,0,0x0,8
tick,0x7ff8e7af1be4,160861479,0,0x0,8
tick,0x7ff8e7af1be4,160869013,0,0x0,8
tick,0x7ff8e7af1be4,160885261,0,0x0,8
tick,0x7ff8e7af1be4,160894064,0,0x0,8
tick,0x7ff8e7af1be4,160910409,0,0x0,8
tick,0x7ff8e7af1be4,160927308,0,0x0,8
tick,0x7ff8e7af1be4,160943483,0,0x0,8
tick,0x7ff8e7af1be4,160968910,0,0x0,8
tick,0x7ff8e7af1be4,160981704,0,0x0,8
tick,0x7ff8e7af1be4,160998286,0,0x0,8
tick,0x7ff8e7af1be4,161013887,0,0x0,8
tick,0x7ff8e7af1be4,161030377,0,0x0,8
tick,0x7ff8e7af1be4,161038471,0,0x0,8
tick,0x7ff8e7af1be4,161054923,0,0x0,8
tick,0x7ff8e7af1be4,161070026,0,0x0,8
tick,0x7ff8e7af1be4,161080091,0,0x0,8
tick,0x7ff8e7af1be4,161088211,0,0x0,8
tick,0x7ff8e7af1be4,161104743,0,0x0,8
tick,0x7ff8e7af1be4,161113143,0,0x0,8
tick,0x7ff8e7af1be4,161129175,0,0x0,8
tick,0x7ff8e7af1be4,161137679,0,0x0,8
tick,0x7ff8e7af1be4,161145781,0,0x0,8
tick,0x7ff8e7af1be4,161162294,0,0x0,8
tick,0x7ff8e7af1be4,161179307,0,0x0,8
tick,0x7ff8e7af1be4,161195402,0,0x0,8
tick,0x7ff8e7af1be4,161203480,0,0x0,8
tick,0x7ff8e7af1be4,161212290,0,0x0,8
tick,0x7ff8e7af1be4,161228583,0,0x0,8
tick,0x7ff8e7af1be4,161245317,0,0x0,8
tick,0x7ff8e7af1be4,161255414,0,0x0,8
tick,0x7ff8e7af1be4,161279897,0,0x0,8
tick,0x7ff8e7af1be4,161295921,0,0x0,8
tick,0x7ff8e7af1be4,161297771,0,0x0,8
tick,0x7ff8e7af1be4,161305606,0,0x0,8
tick,0x7ff8e7af1be4,161307268,0,0x0,8
tick,0x7ff8e7af1be4,161308712,0,0x0,8
tick,0x7ff8e7af1be4,161310530,0,0x0,8
tick,0x7ff8e7af1be4,161327398,0,0x0,8
tick,0x7ff8e7af1be4,161343028,0,0x0,8
tick,0x7ff8e7af1be4,161358975,0,0x0,8
tick,0x7ff8e7af1be4,161374672,0,0x0,8
tick,0x7ff8e7af1be4,161390995,0,0x0,8
tick,0x7ff8e7af1be4,161406664,0,0x0,8
tick,0x7ff8e7af1be4,161423011,0,0x0,8
tick,0x7ff8e7af1be4,161438593,0,0x0,8
tick,0x7ff8e7af1be4,161456912,0,0x0,8
tick,0x7ff8e7af1be4,161470725,0,0x0,8
tick,0x7ff8e7af1be4,161487122,0,0x0,8
tick,0x7ff8e7af1be4,161502858,0,0x0,8
tick,0x7ff8e7af1be4,161519159,0,0x0,8
tick,0x7ff8e7af1be4,161534998,0,0x0,8
tick,0x7ff8e7af1be4,161550770,0,0x0,8
tick,0x7ff8e7af1be4,161567449,0,0x0,8
tick,0x7ff8e7af1be4,161591215,0,0x0,8
tick,0x7ff8e7af1be4,161606624,0,0x0,8
tick,0x7ff8e7af1be4,161622177,0,0x0,8
tick,0x7ff8e7af1be4,161637970,0,0x0,8
tick,0x7ff8e7af1be4,161654204,0,0x0,8
tick,0x7ff8e7af1be4,161669886,0,0x0,8
tick,0x7ff8e7af1be4,161686325,0,0x0,8
tick,0x7ff8e7af1be4,161701694,0,0x0,8
tick,0x7ff8e7af1be4,161717426,0,0x0,8
tick,0x7ff8e7af1be4,161733484,0,0x0,8
tick,0x7ff8e7af1be4,161749330,0,0x0,8
tick,0x7ff8e7af1be4,161765120,0,0x0,8
tick,0x7ff8e7af1be4,161780940,0,0x0,8
tick,0x7ff8e7af1be4,161796767,0,0x0,8
tick,0x7ff8e7af1be4,161812656,0,0x0,8
tick,0x7ff8e7af1be4,161823357,0,0x0,8
tick,0x7ff8e7af1be4,161825011,0,0x0,8
tick,0x7ff8e7af1be4,161826581,0,0x0,8
tick,0x7ff8e7af1be4,161828361,0,0x0,8
tick,0x7ff8e7af1be4,161844831,0,0x0,8
tick,0x7ff8e7af1be4,161860973,0,0x0,8
tick,0x7ff8e7af1be4,161876855,0,0x0,8
tick,0x7ff8e7af1be4,161892072,0,0x0,8
tick,0x7ff8e7af1be4,161908163,0,0x0,8
tick,0x7ff8e7af1be4,161924271,0,0x0,8
tick,0x7ff8e7af1be4,161940361,0,0x0,8
tick,0x7ff8e7af1be4,161956479,0,0x0,8
tick,0x7ff8e7af1be4,161964279,0,0x0,8
tick,0x7ff8e7af1be4,161980141,0,0x0,8
tick,0x7ff8e7af1be4,161995685,0,0x0,8
tick,0x7ff8e7af1be4,162011517,0,0x0,8
tick,0x7ff8e7af1be4,162027384,0,0x0,8
tick,0x7ff8e7af1be4,162037530,0,0x0,8
tick,0x7ff8e7af1be4,162051308,0,0x0,8
tick,0x7ff8e7af1be4,162067664,0,0x0,8
tick,0x7ff8e7af1be4,162083308,0,0x0,8
tick,0x7ff8e7af1be4,162098861,0,0x0,8
tick,0x7ff8e7af1be4,162114663,0,0x0,8
tick,0x7ff8e7af1be4,162130994,0,0x0,8
tick,0x7ff8e7af1be4,162146711,0,0x0,8
tick,0x7ff8e7af1be4,162156461,0,0x0,8
tick,0x7ff8e7af1be4,162166377,0,0x0,8
tick,0x7ff8e7af1be4,162182956,0,0x0,8
tick,0x7ff8e7af1be4,162198621,0,0x0,8
tick,0x7ff8e7af1be4,162214504,0,0x0,8
tick,0x7ff8e7af1be4,162230307,0,0x0,8
tick,0x7ff8e7af1be4,162238967,0,0x0,8
tick,0x7ff8e7af1be4,162254763,0,0x0,8
tick,0x7ff8e7af1be4,162270575,0,0x0,8
tick,0x7ff8e7af1be4,162286526,0,0x0,8
tick,0x7ff8e7af1be4,162302657,0,0x0,8
tick,0x7ff8e7af1be4,162318419,0,0x0,8
tick,0x7ff8e7af1be4,162326598,0,0x0,8
tick,0x7ff8e7af1be4,162338697,0,0x0,8
tick,0x7ff8e7af1be4,162348609,0,0x0,8
tick,0x7ff8e7af1be4,162364187,0,0x0,8
tick,0x7ff8e7af1be4,162379955,0,0x0,8
tick,0x7ff8e7af1be4,162396329,0,0x0,8
tick,0x7ff8e7af1be4,162412412,0,0x0,8
tick,0x7ff8e7af1be4,162429514,0,0x0,8
tick,0x7ff8e7af1be4,162445396,0,0x0,8
tick,0x7ff8e7af1be4,162462349,0,0x0,8
tick,0x7ff8e7af1be4,162471973,0,0x0,8
tick,0x7ff8e7af1be4,162486570,0,0x0,8
tick,0x7ff8e7af1be4,162495080,0,0x0,8
tick,0x7ff8e7af1be4,162511019,0,0x0,8
tick,0x7ff8e7af1be4,162527842,0,0x0,8
tick,0x7ff8e7af1be4,162543697,0,0x0,8
tick,0x7ff8e7af1be4,162559863,0,0x0,8
tick,0x7ff8e7af1be4,162575963,0,0x0,8
tick,0x7ff8e7af1be4,162592252,0,0x0,8
tick,0x7ff8e7af1be4,162608630,0,0x0,8
tick,0x7ff8e7af1be4,162617045,0,0x0,8
tick,0x7ff8e7af1be4,162633621,0,0x0,8
tick,0x7ff8e7af1be4,162649705,0,0x0,8
tick,0x7ff8e7af1be4,162665727,0,0x0,8
tick,0x7ff8e7af1be4,162682248,0,0x0,8
tick,0x7ff8e7af1be4,162690407,0,0x0,8
tick,0x7ff8e7af1be4,162706709,0,0x0,8
tick,0x7ff8e7af1be4,162722847,0,0x0,8
tick,0x7ff8e7af1be4,162739099,0,0x0,8
tick,0x7ff8e7af1be4,162755621,0,0x0,8
tick,0x7ff8e7af1be4,162772259,0,0x0,8
tick,0x7ff8e7af1be4,162779189,0,0x0,8
tick,0x7ff8e7af1be4,162795100,0,0x0,8
tick,0x7ff8e7af1be4,162811056,0,0x0,8
tick,0x7ff8e7af1be4,162833928,0,0x0,8
tick,0x7ff8e7af1be4,162843092,0,0x0,8
tick,0x7ff8e7af1be4,162858935,0,0x0,8
tick,0x7ff8e7af1be4,162874681,0,0x0,8
tick,0x7ff8e7af1be4,162890334,0,0x0,8
tick,0x7ff8e7af1be4,162905921,0,0x0,8
tick,0x7ff8e7af1be4,162921787,0,0x0,8
tick,0x7ff8e7af1be4,162937885,0,0x0,8
tick,0x7ff8e7af1be4,162953474,0,0x0,8
tick,0x7ff8e7af1be4,162969874,0,0x0,8
tick,0x7ff8e7af1be4,162985433,0,0x0,8
tick,0x7ff8e7af1be4,163001627,0,0x0,8
tick,0x7ff8e7af1be4,163018484,0,0x0,8
tick,0x7ff8e7af1be4,163034036,0,0x0,8
tick,0x7ff8e7af1be4,163049754,0,0x0,8
tick,0x7ff8e7af1be4,163066548,0,0x0,8
tick,0x7ff8e7af1be4,163082466,0,0x0,8
tick,0x7ff8e7af1be4,163097817,0,0x0,8
tick,0x7ff8e7af1be4,163113053,0,0x0,8
tick,0x7ff8e7af1be4,163129816,0,0x0,8
tick,0x7ff8e7af1be4,163144898,0,0x0,8
tick,0x7ff8e7af1be4,163164225,0,0x0,8
tick,0x7ff8e7af1be4,163169026,0,0x0,8
tick,0x7ff8e7af1be4,163185326,0,0x0,8
tick,0x7ff8e7af1be4,163200933,0,0x0,8
tick,0x7ff8e7af1be4,163209276,0,0x0,8
tick,0x7ff8e7af1be4,163217217,0,0x0,8
tick,0x7ff8e7af1be4,163226371,0,0x0,8
tick,0x7ff8e7af1be4,163250739,0,0x0,8
tick,0x7ff8e7af1be4,163266197,0,0x0,8
tick,0x7ff8e7af1be4,163283702,0,0x0,8
tick,0x7ff8e7af1be4,163299826,0,0x0,8
tick,0x7ff8e7af1be4,163315612,0,0x0,8
tick,0x7ff8e7af1be4,163331165,0,0x0,8
tick,0x7ff8e7af1be4,163347972,0,0x0,8
tick,0x7ff8e7af1be4,163349788,0,0x0,8
tick,0x7ff8e7af1be4,163363108,0,0x0,8
tick,0x7ff8e7af1be4,163367110,0,0x0,8
tick,0x7ff8e7af1be4,163368683,0,0x0,8
tick,0x7ff8e7af1be4,163371268,0,0x0,8
tick,0x7ff8e7af1be4,163387487,0,0x0,8
tick,0x7ff8e7af1be4,163403012,0,0x0,8
tick,0x7ff8e7af1be4,163419103,0,0x0,8
tick,0x7ff8e7af1be4,163435120,0,0x0,8
tick,0x7ff8e7af1be4,163450783,0,0x0,8
tick,0x7ff8e7af1be4,163466701,0,0x0,8
tick,0x7ff8e7af1be4,163482388,0,0x0,8
tick,0x7ff8e7af1be4,163498254,0,0x0,8
tick,0x7ff8e7af1be4,163514377,0,0x0,8
tick,0x7ff8e7af1be4,163529963,0,0x0,8
tick,0x7ff8e7af1be4,163545595,0,0x0,8
tick,0x7ff8e7af1be4,163562106,0,0x0,8
tick,0x7ff8e7af1be4,163577745,0,0x0,8
tick,0x7ff8e7af1be4,163593521,0,0x0,8
tick,0x7ff8e7af1be4,163609579,0,0x0,8
tick,0x7ff8e7af1be4,163625733,0,0x0,8
tick,0x7ff8e7af1be4,163641403,0,0x0,8
tick,0x7ff8e7af1be4,163657360,0,0x0,8
tick,0x7ff8e7af1be4,163673203,0,0x0,8
tick,0x7ff8e7af1be4,163689025,0,0x0,8
tick,0x7ff8e7af1be4,163705072,0,0x0,8
tick,0x7ff8e7af1be4,163721040,0,0x0,8
tick,0x7ff8e7af1be4,163737121,0,0x0,8
tick,0x7ff8e7af1be4,163753090,0,0x0,8
tick,0x7ff8e7af1be4,163768874,0,0x0,8
tick,0x7ff8e7af1be4,163784754,0,0x0,8
tick,0x7ff8e7af1be4,163800685,0,0x0,8
tick,0x7ff8e7af1be4,163816156,0,0x0,8
tick,0x7ff8e7af1be4,163831876,0,0x0,8
tick,0x7ff8e7af1be4,163847575,0,0x0,8
tick,0x7ff8e7af1be4,163849438,0,0x0,8
tick,0x7ff8e7af1be4,163858561,0,0x0,8
tick,0x7ff8e7af1be4,163859831,0,0x0,8
tick,0x7ff8e7af1be4,163862079,0,0x0,8
tick,0x7ff8e7af1be4,163864015,0,0x0,8
tick,0x7ff8e7af1be4,163865487,0,0x0,8
tick,0x7ff8e7af1be4,163882673,0,0x0,8
tick,0x7ff8e7af1be4,163898351,0,0x0,8
tick,0x7ff8e7af1be4,163914378,0,0x0,8
tick,0x7ff8e7af1be4,163930073,0,0x0,8
tick,0x7ff8e7af1be4,163946231,0,0x0,8
tick,0x7ff8e7af1be4,163962422,0,0x0,8
tick,0x7ff8e7af1be4,163978306,0,0x0,8
tick,0x7ff8e7af1be4,163993795,0,0x0,8
tick,0x7ff8e7af1be4,164009473,0,0x0,8
tick,0x7ff8e7af1be4,164025340,0,0x0,8
tick,0x7ff8e7af1be4,164041093,0,0x0,8
tick,0x7ff8e7af1be4,164056984,0,0x0,8
tick,0x7ff8e7af1be4,164072618,0,0x0,8
tick,0x7ff8e7af1be4,164088638,0,0x0,8
tick,0x7ff8e7af1be4,164104528,0,0x0,8
tick,0x7ff8e7af1be4,164120376,0,0x0,8
tick,0x7ff8e7af1be4,164135847,0,0x0,8
tick,0x7ff8e7af1be4,164151580,0,0x0,8
tick,0x7ff8e7af1be4,164168288,0,0x0,8
tick,0x7ff8e7af1be4,164183157,0,0x0,8
tick,0x7ff8e7af1be4,164198817,0,0x0,8
tick,0x7ff8e7af1be4,164214646,0,0x0,8
tick,0x7ff8e7af1be4,164230416,0,0x0,8
tick,0x7ff8e7af1be4,164246315,0,0x0,8
tick,0x7ff8e7af1be4,164261911,0,0x0,8
tick,0x7ff8e7af1be4,164277583,0,0x0,8
tick,0x7ff8e7af1be4,164293639,0,0x0,8
tick,0x7ff8e7af1be4,164309517,0,0x0,8
tick,0x7ff8e7af1be4,164325485,0,0x0,8
tick,0x7ff8e7af1be4,164341412,0,0x0,8
tick,0x7ff8e7af1be4,164357356,0,0x0,8
tick,0x7ff8e7af1be4,164373466,0,0x0,8
tick,0x7ff8e7af1be4,164376960,0,0x0,8
tick,0x7ff8e7af1be4,164378403,0,0x0,8
tick,0x7ff8e7af1be4,164380065,0,0x0,8
tick,0x7ff8e7af1be4,164381443,0,0x0,8
tick,0x7ff8e7af1be4,164397641,0,0x0,8
tick,0x7ff8e7af1be4,164413422,0,0x0,8
tick,0x7ff8e7af1be4,164429036,0,0x0,8
tick,0x7ff8e7af1be4,164444576,0,0x0,8
tick,0x7ff8e7af1be4,164460291,0,0x0,8
tick,0x7ff8e7af1be4,164477111,0,0x0,8
tick,0x7ff8e7af1be4,164492195,0,0x0,8
tick,0x7ff8e7af1be4,164508245,0,0x0,8
tick,0x7ff8e7af1be4,164524139,0,0x0,8
tick,0x7ff8e7af1be4,164540610,0,0x0,8
tick,0x7ff8e7af1be4,164556514,0,0x0,8
tick,0x7ff8e7af1be4,164565195,0,0x0,8
tick,0x7ff8e7af1be4,164574956,0,0x0,8
tick,0x7ff8e7af1be4,164589871,0,0x0,8
tick,0x7ff8e7af1be4,164606756,0,0x0,8
tick,0x7ff8e7af1be4,164623039,0,0x0,8
tick,0x7ff8e7af1be4,164647137,0,0x0,8
tick,0x7ff8e7af1be4,164662781,0,0x0,8
tick,0x7ff8e7af1be4,164678429,0,0x0,8
tick,0x7ff8e7af1be4,164694248,0,0x0,8
tick,0x7ff8e7af1be4,164710437,0,0x0,8
tick,0x7ff8e7af1be4,164726257,0,0x0,8
tick,0x7ff8e7af1be4,164742262,0,0x0,8
tick,0x7ff8e7af1be4,164758032,0,0x0,8
tick,0x7ff8e7af1be4,164773616,0,0x0,8
tick,0x7ff8e7af1be4,164789742,0,0x0,8
tick,0x7ff8e7af1be4,164805695,0,0x0,8
tick,0x7ff8e7af1be4,164821571,0,0x0,8
tick,0x7ff8e7af1be4,164837862,0,0x0,8
tick,0x7ff8e7af1be4,164853588,0,0x0,8
tick,0x7ff8e7af1be4,164869751,0,0x0,8
tick,0x7ff8e7af1be4,164885827,0,0x0,8
tick,0x7ff8e7af1be4,164895182,0,0x0,8
tick,0x7ff8e7af1be4,164897776,0,0x0,8
tick,0x7ff8e7af1be4,164899488,0,0x0,8
tick,0x7ff8e7af1be4,164900967,0,0x0,8
tick,0x7ff8e7af1be4,164917932,0,0x0,8
tick,0x7ff8e7af1be4,164933513,0,0x0,8
tick,0x7ff8e7af1be4,164949442,0,0x0,8
tick,0x7ff8e7af1be4,164965730,0,0x0,8
tick,0x7ff8e7af1be4,164981669,0,0x0,8
tick,0x7ff8e7af1be4,164989869,0,0x0,8
tick,0x7ff8e7af1be4,165005484,0,0x0,8
tick,0x7ff8e7af1be4,165021172,0,0x0,8
tick,0x7ff8e7af1be4,165037109,0,0x0,8
tick,0x7ff8e7af1be4,165053267,0,0x0,8
tick,0x7ff8e7af1be4,165069160,0,0x0,8
tick,0x7ff8e7af1be4,165085165,0,0x0,8
tick,0x7ff8e7af1be4,165101023,0,0x0,8
tick,0x7ff8e7af1be4,165116942,0,0x0,8
tick,0x7ff8e7af1be4,165132612,0,0x0,8
tick,0x7ff8e7af1be4,165148432,0,0x0,8
tick,0x7ff8e7af1be4,165164331,0,0x0,8
tick,0x7ff8e7af1be4,165180297,0,0x0,8
tick,0x7ff8e7af1be4,165195994,0,0x0,8
tick,0x7ff8e7af1be4,165211688,0,0x0,8
tick,0x7ff8e7af1be4,165227419,0,0x0,8
tick,0x7ff8e7af1be4,165243422,0,0x0,8
tick,0x7ff8e7af1be4,165259353,0,0x0,8
tick,0x7ff8e7af1be4,165274979,0,0x0,8
tick,0x7ff8e7af1be4,165291255,0,0x0,8
tick,0x7ff8e7af1be4,165307028,0,0x0,8
tick,0x7ff8e7af1be4,165322755,0,0x0,8
tick,0x7ff8e7af1be4,165338784,0,0x0,8
tick,0x7ff8e7af1be4,165354451,0,0x0,8
tick,0x7ff8e7af1be4,165370125,0,0x0,8
tick,0x7ff8e7af1be4,165386124,0,0x0,8
tick,0x7ff8e7af1be4,165401892,0,0x0,8
tick,0x7ff8e7af1be4,165403255,0,0x0,8
tick,0x7ff8e7af1be4,165408703,0,0x0,8
tick,0x7ff8e7af1be4,165409883,0,0x0,8
tick,0x7ff8e7af1be4,165410980,0,0x0,8
tick,0x7ff8e7af1be4,165427359,0,0x0,8
tick,0x7ff8e7af1be4,165443357,0,0x0,8
tick,0x7ff8e7af1be4,165458813,0,0x0,8
tick,0x7ff8e7af1be4,165474675,0,0x0,8
tick,0x7ff8e7af1be4,165491018,0,0x0,8
tick,0x7ff8e7af1be4,165506657,0,0x0,8
tick,0x7ff8e7af1be4,165522060,0,0x0,8
tick,0x7ff8e7af1be4,165538021,0,0x0,8
tick,0x7ff8e7af1be4,165554109,0,0x0,8
tick,0x7ff8e7af1be4,165570035,0,0x0,8
tick,0x7ff8e7af1be4,165585939,0,0x0,8
tick,0x7ff8e7af1be4,165601679,0,0x0,8
tick,0x7ff8e7af1be4,165617357,0,0x0,8
tick,0x7ff8e7af1be4,165626097,0,0x0,8
tick,0x7ff8e7af1be4,165642286,0,0x0,8
tick,0x7ff8e7af1be4,165650302,0,0x0,8
tick,0x7ff8e7af1be4,165666930,0,0x0,8
tick,0x7ff8e7af1be4,165677419,0,0x0,8
tick,0x7ff8e7af1be4,165691161,0,0x0,8
tick,0x7ff8e7af1be4,165715527,0,0x0,8
tick,0x7ff8e7af1be4,165731289,0,0x0,8
tick,0x7ff8e7af1be4,165747053,0,0x0,8
tick,0x7ff8e7af1be4,165762815,0,0x0,8
tick,0x7ff8e7af1be4,165778762,0,0x0,8
tick,0x7ff8e7af1be4,165794763,0,0x0,8
tick,0x7ff8e7af1be4,165810511,0,0x0,8
tick,0x7ff8e7af1be4,165826444,0,0x0,8
tick,0x7ff8e7af1be4,165842206,0,0x0,8
tick,0x7ff8e7af1be4,165857999,0,0x0,8
tick,0x7ff8e7af1be4,165874230,0,0x0,8
tick,0x7ff8e7af1be4,165890084,0,0x0,8
tick,0x7ff8e7af1be4,165906090,0,0x0,8
tick,0x7ff8e7af1be4,165921943,0,0x0,8
tick,0x7ff8e7af1be4,165937410,0,0x0,8
tick,0x7ff8e7af1be4,165939484,0,0x0,8
tick,0x7ff8e7af1be4,165943183,0,0x0,8
tick,0x7ff8e7af1be4,165945893,0,0x0,8
tick,0x7ff8e7af1be4,165947814,0,0x0,8
tick,0x7ff8e7af1be4,165948844,0,0x0,8
tick,0x7ff8e7af1be4,165965576,0,0x0,8
tick,0x7ff8e7af1be4,165981508,0,0x0,8
tick,0x7ff8e7af1be4,165997699,0,0x0,8
tick,0x7ff8e7af1be4,166013627,0,0x0,8
tick,0x7ff8e7af1be4,166029780,0,0x0,8
tick,0x7ff8e7af1be4,166045257,0,0x0,8
tick,0x7ff8e7af1be4,166061378,0,0x0,8
tick,0x7ff8e7af1be4,166077005,0,0x0,8
tick,0x7ff8e7af1be4,166092749,0,0x0,8
tick,0x7ff8e7af1be4,166108585,0,0x0,8
tick,0x7ff8e7af1be4,166124573,0,0x0,8
tick,0x7ff8e7af1be4,166140369,0,0x0,8
tick,0x7ff8e7af1be4,166156104,0,0x0,8
tick,0x7ff8e7af1be4,166172085,0,0x0,8
tick,0x7ff8e7af1be4,166187841,0,0x0,8
tick,0x7ff8e7af1be4,166203859,0,0x0,8
tick,0x7ff8e7af1be4,166219442,0,0x0,8
tick,0x7ff8e7af1be4,166235435,0,0x0,8
tick,0x7ff8e7af1be4,166250944,0,0x0,8
tick,0x7ff8e7af1be4,166266878,0,0x0,8
tick,0x7ff8e7af1be4,166282458,0,0x0,8
tick,0x7ff8e7af1be4,166298230,0,0x0,8
tick,0x7ff8e7af1be4,166314323,0,0x0,8
tick,0x7ff8e7af1be4,166330215,0,0x0,8
tick,0x7ff8e7af1be4,166345958,0,0x0,8
tick,0x7ff8e7af1be4,166361694,0,0x0,8
tick,0x7ff8e7af1be4,166377465,0,0x0,8
tick,0x7ff8e7af1be4,166393212,0,0x0,8
tick,0x7ff8e7af1be4,166409066,0,0x0,8
tick,0x7ff8e7af1be4,166424453,0,0x0,8
tick,0x7ff8e7af1be4,166440492,0,0x0,8
tick,0x7ff8e7af1be4,166441683,0,0x0,8
tick,0x7ff8e7af1be4,166446011,0,0x0,8
tick,0x7ff8e7af1be4,166447987,0,0x0,8
tick,0x7ff8e7af1be4,166455184,0,0x0,8
tick,0x7ff8e7af1be4,166469011,0,0x0,8
tick,0x7ff8e7af1be4,166471612,0,0x0,8
tick,0x7ff8e7af1be4,166487804,0,0x0,8
tick,0x7ff8e7af1be4,166503739,0,0x0,8
tick,0x7ff8e7af1be4,166519486,0,0x0,8
tick,0x7ff8e7af1be4,166535015,0,0x0,8
tick,0x7ff8e7af1be4,166550670,0,0x0,8
tick,0x7ff8e7af1be4,166566344,0,0x0,8
tick,0x7ff8e7af1be4,166582412,0,0x0,8
tick,0x7ff8e7af1be4,166597998,0,0x0,8
tick,0x7ff8e7af1be4,166613700,0,0x0,8
tick,0x7ff8e7af1be4,166629233,0,0x0,8
tick,0x7ff8e7af1be4,166645081,0,0x0,8
tick,0x7ff8e7af1be4,166660794,0,0x0,8
tick,0x7ff8e7af1be4,166676520,0,0x0,8
tick,0x7ff8e7af1be4,166692088,0,0x0,8
tick,0x7ff8e7af1be4,166707456,0,0x0,8
tick,0x7ff8e7af1be4,166723763,0,0x0,8
tick,0x7ff8e7af1be4,166739373,0,0x0,8
tick,0x7ff8e7af1be4,166755036,0,0x0,8
tick,0x7ff8e7af1be4,166770672,0,0x0,8
tick,0x7ff8e7af1be4,166786563,0,0x0,8
tick,0x7ff8e7af1be4,166802639,0,0x0,8
tick,0x7ff8e7af1be4,166818485,0,0x0,8
tick,0x7ff8e7af1be4,166834515,0,0x0,8
tick,0x7ff8e7af1be4,166850348,0,0x0,8
tick,0x7ff8e7af1be4,166866188,0,0x0,8
tick,0x7ff8e7af1be4,166882290,0,0x0,8
tick,0x7ff8e7af1be4,166897962,0,0x0,8
tick,0x7ff8e7af1be4,166913446,0,0x0,8
tick,0x7ff8e7af1be4,166929692,0,0x0,8
tick,0x7ff8e7af1be4,166945832,0,0x0,8
tick,0x7ff8e7af1be4,166946804,0,0x0,8
tick,0x7ff8e7af1be4,166952297,0,0x0,8
tick,0x7ff8e7af1be4,166953587,0,0x0,8
tick,0x7ff8e7af1be4,166955342,0,0x0,8
tick,0x7ff8e7af1be4,166971406,0,0x0,8
tick,0x7ff8e7af1be4,166987831,0,0x0,8
tick,0x7ff8e7af1be4,167003320,0,0x0,8
tick,0x7ff8e7af1be4,167019004,0,0x0,8
tick,0x7ff8e7af1be4,167034583,0,0x0,8
tick,0x7ff8e7af1be4,167050550,0,0x0,8
tick,0x7ff8e7af1be4,167066555,0,0x0,8
tick,0x7ff8e7af1be4,167082610,0,0x0,8
tick,0x7ff8e7af1be4,167098704,0,0x0,8
tick,0x7ff8e7af1be4,167114512,0,0x0,8
tick,0x7ff8e7af1be4,167130518,0,0x0,8
tick,0x7ff8e7af1be4,167144894,0,0x0,8
tick,0x7ff8e7af1be4,167146510,0,0x0,8
tick,0x7ff8e7af1be4,167162176,0,0x0,8
tick,0x7ff8e7af1be4,167178219,0,0x0,8
tick,0x7ff8e7af1be4,167194222,0,0x0,8
tick,0x7ff8e7af1be4,167209990,0,0x0,8
tick,0x7ff8e7af1be4,167225923,0,0x0,8
tick,0x7ff8e7af1be4,167241219,0,0x0,8
tick,0x7ff8e7af1be4,167256964,0,0x0,8
tick,0x7ff8e7af1be4,167273121,0,0x0,8
tick,0x7ff8e7af1be4,167289277,0,0x0,8
tick,0x7ff8e7af1be4,167304653,0,0x0,8
tick,0x7ff8e7af1be4,167320770,0,0x0,8
tick,0x7ff8e7af1be4,167336638,0,0x0,8
tick,0x7ff8e7af1be4,167352323,0,0x0,8
tick,0x7ff8e7af1be4,167368483,0,0x0,8
tick,0x7ff8e7af1be4,167384419,0,0x0,8
tick,0x7ff8e7af1be4,167400683,0,0x0,8
tick,0x7ff8e7af1be4,167416535,0,0x0,8
tick,0x7ff8e7af1be4,167432830,0,0x0,8
tick,0x7ff8e7af1be4,167449047,0,0x0,8
tick,0x7ff8e7af1be4,167458135,0,0x0,8
tick,0x7ff8e7af1be4,167460723,0,0x0,8
tick,0x7ff8e7af1be4,167462175,0,0x0,8
tick,0x7ff8e7af1be4,167467216,0,0x0,8
tick,0x7ff8e7af1be4,167479688,0,0x0,8
tick,0x7ff8e7af1be4,167483334,0,0x0,8
tick,0x7ff8e7af1be4,167499123,0,0x0,8
tick,0x7ff8e7af1be4,167514595,0,0x0,8
tick,0x7ff8e7af1be4,167530689,0,0x0,8
tick,0x7ff8e7af1be4,167546527,0,0x0,8
tick,0x7ff8e7af1be4,167562279,0,0x0,8
tick,0x7ff8e7af1be4,167578268,0,0x0,8
tick,0x7ff8e7af1be4,167594126,0,0x0,8
tick,0x7ff8e7af1be4,167610029,0,0x0,8
tick,0x7ff8e7af1be4,167626681,0,0x0,8
tick,0x7ff8e7af1be4,167642435,0,0x0,8
tick,0x7ff8e7af1be4,167650604,0,0x0,8
tick,0x7ff8e7af1be4,167666391,0,0x0,8
tick,0x7ff8e7af1be4,167682051,0,0x0,8
tick,0x7ff8e7af1be4,167697698,0,0x0,8
tick,0x7ff8e7af1be4,167713342,0,0x0,8
tick,0x7ff8e7af1be4,167729332,0,0x0,8
tick,0x7ff8e7af1be4,167744901,0,0x0,8
tick,0x7ff8e7af1be4,167760556,0,0x0,8
tick,0x7ff8e7af1be4,167776196,0,0x0,8
tick,0x7ff8e7af1be4,167792257,0,0x0,8
tick,0x7ff8e7af1be4,167808042,0,0x0,8
tick,0x7ff8e7af1be4,167823757,0,0x0,8
tick,0x7ff8e7af1be4,167839727,0,0x0,8
tick,0x7ff8e7af1be4,167855937,0,0x0,8
tick,0x7ff8e7af1be4,167871849,0,0x0,8
tick,0x7ff8e7af1be4,167895956,0,0x0,8
tick,0x7ff8e7af1be4,167912063,0,0x0,8
tick,0x7ff8e7af1be4,167928160,0,0x0,8
tick,0x7ff8e7af1be4,167944063,0,0x0,8
tick,0x7ff8e7af1be4,167960030,0,0x0,8
tick,0x7ff8e7af1be4,167975807,0,0x0,8
tick,0x7ff8e7af1be4,167981684,0,0x0,8
tick,0x7ff8e7af1be4,167983288,0,0x0,8
tick,0x7ff8e7af1be4,167985255,0,0x0,8
tick,0x7ff8e7af1be4,167999903,0,0x0,8
tick,0x7ff8e7af1be4,168015579,0,0x0,8
tick,0x7ff8e7af1be4,168031589,0,0x0,8
tick,0x7ff8e7af1be4,168046874,0,0x0,8
tick,0x7ff8e7af1be4,168062915,0,0x0,8
tick,0x7ff8e7af1be4,168078595,0,0x0,8
tick,0x7ff8e7af1be4,168094601,0,0x0,8
tick,0x7ff8e7af1be4,168110786,0,0x0,8
tick,0x7ff8e7af1be4,168126484,0,0x0,8
tick,0x7ff8e7af1be4,168142342,0,0x0,8
tick,0x7ff8e7af1be4,168158019,0,0x0,8
tick,0x7ff8e7af1be4,168173588,0,0x0,8
tick,0x7ff8e7af1be4,168189634,0,0x0,8
tick,0x7ff8e7af1be4,168205814,0,0x0,8
tick,0x7ff8e7af1be4,168221574,0,0x0,8
tick,0x7ff8e7af1be4,168237584,0,0x0,8
tick,0x7ff8e7af1be4,168253521,0,0x0,8
tick,0x7ff8e7af1be4,168269292,0,0x0,8
tick,0x7ff8e7af1be4,168285321,0,0x0,8
tick,0x7ff8e7af1be4,168301341,0,0x0,8
tick,0x7ff8e7af1be4,168316896,0,0x0,8
tick,0x7ff8e7af1be4,168332442,0,0x0,8
tick,0x7ff8e7af1be4,168348109,0,0x0,8
tick,0x7ff8e7af1be4,168364189,0,0x0,8
tick,0x7ff8e7af1be4,168380294,0,0x0,8
tick,0x7ff8e7af1be4,168396260,0,0x0,8
tick,0x7ff8e7af1be4,168412006,0,0x0,8
tick,0x7ff8e7af1be4,168428194,0,0x0,8
tick,0x7ff8e7af1be4,168444317,0,0x0,8
tick,0x7ff8e7af1be4,168459523,0,0x0,8
tick,0x7ff8e7af1be4,168475572,0,0x0,8
tick,0x7ff8e7af1be4,168484426,0,0x0,8
tick,0x7ff8e7af1be4,168486329,0,0x0,8
tick,0x7ff8e7af1be4,168488085,0,0x0,8
tick,0x7ff8e7af1be4,168489663,0,0x0,8
tick,0x7ff8e7af1be4,168491061,0,0x0,8
tick,0x7ff8e7af1be4,168493414,0,0x0,8
tick,0x7ff8e7af1be4,168509263,0,0x0,8
tick,0x7ff8e7af1be4,168525588,0,0x0,8
tick,0x7ff8e7af1be4,168541226,0,0x0,8
tick,0x7ff8e7af1be4,168556892,0,0x0,8
tick,0x7ff8e7af1be4,168572825,0,0x0,8
tick,0x7ff8e7af1be4,168589047,0,0x0,8
tick,0x7ff8e7af1be4,168604847,0,0x0,8
tick,0x7ff8e7af1be4,168620482,0,0x0,8
tick,0x7ff8e7af1be4,168629342,0,0x0,8
tick,0x7ff8e7af1be4,168644698,0,0x0,8
tick,0x7ff8e7af1be4,168661127,0,0x0,8
tick,0x7ff8e7af1be4,168676945,0,0x0,8
tick,0x7ff8e7af1be4,168693064,0,0x0,8
tick,0x7ff8e7af1be4,168707730,0,0x0,8
tick,0x7ff8e7af1be4,168723372,0,0x0,8
tick,0x7ff8e7af1be4,168739328,0,0x0,8
tick,0x7ff8e7af1be4,168755179,0,0x0,8
tick,0x7ff8e7af1be4,168764130,0,0x0,8
tick,0x7ff8e7af1be4,168776348,0,0x0,8
tick,0x7ff8e7af1be4,168788304,0,0x0,8
tick,0x7ff8e7af1be4,168796838,0,0x0,8
tick,0x7ff8e7af1be4,168812989,0,0x0,8
tick,0x7ff8e7af1be4,168821172,0,0x0,8
tick,0x7ff8e7af1be4,168837189,0,0x0,8
tick,0x7ff8e7af1be4,168845284,0,0x0,8
tick,0x7ff8e7af1be4,168861141,0,0x0,8
tick,0x7ff8e7af1be4,168877518,0,0x0,8
tick,0x7ff8e7af1be4,168892906,0,0x0,8
tick,0x7ff8e7af1be4,168908511,0,0x0,8
tick,0x7ff8e7af1be4,168916996,0,0x0,8
tick,0x7ff8e7af1be4,168933145,0,0x0,8
tick,0x7ff8e7af1be4,168949233,0,0x0,8
tick,0x7ff8e7af1be4,168965291,0,0x0,8
tick,0x7ff8e7af1be4,168981215,0,0x0,8
tick,0x7ff8e7af1be4,168990631,0,0x0,8
tick,0x7ff8e7af1be4,169001605,0,0x0,8
tick,0x7ff8e7af1be4,169018702,0,0x0,8
tick,0x7ff8e7af1be4,169034170,0,0x0,8
tick,0x7ff8e7af1be4,169057970,0,0x0,8
tick,0x7ff8e7af1be4,169073801,0,0x0,8
tick,0x7ff8e7af1be4,169089865,0,0x0,8
tick,0x7ff8e7af1be4,169106030,0,0x0,8
tick,0x7ff8e7af1be4,169122694,0,0x0,8
tick,0x7ff8e7af1be4,169138101,0,0x0,8
tick,0x7ff8e7af1be4,169154001,0,0x0,8
tick,0x7ff8e7af1be4,169169891,0,0x0,8
tick,0x7ff8e7af1be4,169185699,0,0x0,8
tick,0x7ff8e7af1be4,169201956,0,0x0,8
tick,0x7ff8e7af1be4,169217531,0,0x0,8
tick,0x7ff8e7af1be4,169232785,0,0x0,8
tick,0x7ff8e7af1be4,169248412,0,0x0,8
tick,0x7ff8e7af1be4,169264610,0,0x0,8
tick,0x7ff8e7af1be4,169280153,0,0x0,8
tick,0x7ff8e7af1be4,169296461,0,0x0,8
tick,0x7ff8e7af1be4,169312860,0,0x0,8
tick,0x7ff8e7af1be4,169328129,0,0x0,8
tick,0x7ff8e7af1be4,169343532,0,0x0,8
tick,0x7ff8e7af1be4,169347046,0,0x0,8
tick,0x7ff8e7af1be4,169363735,0,0x0,8
tick,0x7ff8e7af1be4,169379462,0,0x0,8
tick,0x7ff8e7af1be4,169395178,0,0x0,8
tick,0x7ff8e7af1be4,169411198,0,0x0,8
tick,0x7ff8e7af1be4,169426842,0,0x0,8
tick,0x7ff8e7af1be4,169442717,0,0x0,8
tick,0x7ff8e7af1be4,169458515,0,0x0,8
tick,0x7ff8e7af1be4,169474842,0,0x0,8
tick,0x7ff8e7af1be4,169490505,0,0x0,8
tick,0x7ff8e7af1be4,169506194,0,0x0,8
tick,0x7ff8e7af1be4,169521741,0,0x0,8
tick,0x7ff8e7af1be4,169538289,0,0x0,8
tick,0x7ff8e7af1be4,169553740,0,0x0,8
tick,0x7ff8e7af1be4,169569312,0,0x0,8
tick,0x7ff8e7af1be4,169585298,0,0x0,8
tick,0x7ff8e7af1be4,169601033,0,0x0,8
tick,0x7ff8e7af1be4,169617673,0,0x0,8
tick,0x7ff8e7af1be4,169633191,0,0x0,8
tick,0x7ff8e7af1be4,169648894,0,0x0,8
tick,0x7ff8e7af1be4,169664672,0,0x0,8
tick,0x7ff8e7af1be4,169680532,0,0x0,8
tick,0x7ff8e7af1be4,169696669,0,0x0,8
tick,0x7ff8e7af1be4,169713224,0,0x0,8
tick,0x7ff8e7af1be4,169728301,0,0x0,8
tick,0x7ff8e7af1be4,169744385,0,0x0,8
tick,0x7ff8e7af1be4,169759870,0,0x0,8
tick,0x7ff8e7af1be4,169775533,0,0x0,8
tick,0x7ff8e7af1be4,169791595,0,0x0,8
tick,0x7ff8e7af1be4,169807798,0,0x0,8
tick,0x7ff8e7af1be4,169823454,0,0x0,8
tick,0x7ff8e7af1be4,169839125,0,0x0,8
tick,0x7ff8e7af1be4,169855075,0,0x0,8
tick,0x7ff8e7af1be4,169871009,0,0x0,8
tick,0x7ff8e7af1be4,169886598,0,0x0,8
tick,0x7ff8e7af1be4,169902405,0,0x0,8
tick,0x7ff8e7af1be4,169911018,0,0x0,8
tick,0x7ff8e7af1be4,169927557,0,0x0,8
tick,0x7ff8e7af1be4,169942665,0,0x0,8
tick,0x7ff8e7af1be4,169958507,0,0x0,8
tick,0x7ff8e7af1be4,169974089,0,0x0,8
tick,0x7ff8e7af1be4,169990031,0,0x0,8
tick,0x7ff8e7af1be4,170005965,0,0x0,8
tick,0x7ff8e7af1be4,170021999,0,0x0,8
tick,0x7ff8e7af1be4,170037909,0,0x0,8
tick,0x7ff8e7af1be4,170053769,0,0x0,8
tick,0x7ff8e7af1be4,170070034,0,0x0,8
tick,0x7ff8e7af1be4,170085855,0,0x0,8
tick,0x7ff8e7af1be4,170095338,0,0x0,8
tick,0x7ff8e7af1be4,170102716,0,0x0,8
tick,0x7ff8e7af1be4,170119073,0,0x0,8
tick,0x7ff8e7af1be4,170134733,0,0x0,8
tick,0x7ff8e7af1be4,170150830,0,0x0,8
tick,0x7ff8e7af1be4,170166331,0,0x0,8
tick,0x7ff8e7af1be4,170169033,0,0x0,8
tick,0x7ff8e7af1be4,170182181,0,0x0,8
tick,0x7ff8e7af1be4,170198363,0,0x0,8
tick,0x7ff8e7af1be4,170214005,0,0x0,8
tick,0x7ff8e7af1be4,170230277,0,0x0,8
tick,0x7ff8e7af1be4,170245988,0,0x0,8
tick,0x7ff8e7af1be4,170254466,0,0x0,8
tick,0x7ff8e7af1be4,170270177,0,0x0,8
tick,0x7ff8e7af1be4,170286173,0,0x0,8
tick,0x7ff8e7af1be4,170298958,0,0x0,8
tick,0x7ff8e7af1be4,170315117,0,0x0,8
tick,0x7ff8e7af1be4,170323131,0,0x0,8
tick,0x7ff8e7af1be4,170331851,0,0x0,8
tick,0x7ff8e7af1be4,170347846,0,0x0,8
tick,0x7ff8e7af1be4,170363700,0,0x0,8
tick,0x7ff8e7af1be4,170379553,0,0x0,8
tick,0x7ff8e7af1be4,170395914,0,0x0,8
tick,0x7ff8e7af1be4,170412416,0,0x0,8
tick,0x7ff8e7af1be4,170420473,0,0x0,8
tick,0x7ff8e7af1be4,170433968,0,0x0,8
tick,0x7ff8e7af1be4,170444350,0,0x0,8
tick,0x7ff8e7af1be4,170452661,0,0x0,8
tick,0x7ff8e7af1be4,170468892,0,0x0,8
tick,0x7ff8e7af1be4,170476995,0,0x0,8
tick,0x7ff8e7af1be4,170485234,0,0x0,8
tick,0x7ff8e7af1be4,170501122,0,0x0,8
tick,0x7ff8e7af1be4,170524933,0,0x0,8
tick,0x7ff8e7af1be4,170533017,0,0x0,8
tick,0x7ff8e7af1be4,170549188,0,0x0,8
tick,0x7ff8e7af1be4,170557136,0,0x0,8
tick,0x7ff8e7af1be4,170573126,0,0x0,8
tick,0x7ff8e7af1be4,170589307,0,0x0,8
tick,0x7ff8e7af1be4,170601180,0,0x0,8
tick,0x7ff8e7af1be4,170617664,0,0x0,8
tick,0x7ff8e7af1be4,170627896,0,0x0,8
tick,0x7ff8e7af1be4,170639440,0,0x0,8
tick,0x7ff8e7af1be4,170655730,0,0x0,8
tick,0x7ff8e7af1be4,170671436,0,0x0,8
tick,0x7ff8e7af1be4,170687188,0,0x0,8
tick,0x7ff8e7af1be4,170696137,0,0x0,8
tick,0x7ff8e7af1be4,170711595,0,0x0,8
tick,0x7ff8e7af1be4,170727251,0,0x0,8
tick,0x7ff8e7af1be4,170743003,0,0x0,8
tick,0x7ff8e7af1be4,170758384,0,0x0,8
tick,0x7ff8e7af1be4,170774018,0,0x0,8
tick,0x7ff8e7af1be4,170789577,0,0x0,8
tick,0x7ff8e7af1be4,170805303,0,0x0,8
tick,0x7ff8e7af1be4,170821306,0,0x0,8
tick,0x7ff8e7af1be4,170837663,0,0x0,8
tick,0x7ff8e7af1be4,170854159,0,0x0,8
tick,0x7ff8e7af1be4,170870321,0,0x0,8
tick,0x7ff8e7af1be4,170878465,0,0x0,8
tick,0x7ff8e7af1be4,170886904,0,0x0,8
tick,0x7ff8e7af1be4,170895178,0,0x0,8
tick,0x7ff8e7af1be4,170907278,0,0x0,8
tick,0x7ff8e7af1be4,170919505,0,0x0,8
tick,0x7ff8e7af1be4,170935321,0,0x0,8
tick,0x7ff8e7af1be4,170951211,0,0x0,8
tick,0x7ff8e7af1be4,170967513,0,0x0,8
tick,0x7ff8e7af1be4,170983153,0,0x0,8
tick,0x7ff8e7af1be4,170992648,0,0x0,8
tick,0x7ff8e7af1be4,171008146,0,0x0,8
tick,0x7ff8e7af1be4,171024280,0,0x0,8
tick,0x7ff8e7af1be4,171033858,0,0x0,8
tick,0x7ff8e7af1be4,171050449,0,0x0,8
tick,0x7ff8e7af1be4,171066169,0,0x0,8
tick,0x7ff8e7af1be4,171082226,0,0x0,8
tick,0x7ff8e7af1be4,171098532,0,0x0,8
tick,0x7ff8e7af1be4,171114415,0,0x0,8
tick,0x7ff8e7af1be4,171130552,0,0x0,8
tick,0x7ff8e7af1be4,171146792,0,0x0,8
tick,0x7ff8e7af1be4,171162729,0,0x0,8
tick,0x7ff8e7af1be4,171178825,0,0x0,8
tick,0x7ff8e7af1be4,171195005,0,0x0,8
tick,0x7ff8e7af1be4,171210840,0,0x0,8
tick,0x7ff8e7af1be4,171226908,0,0x0,8
tick,0x7ff8e7af1be4,171235204,0,0x0,8
tick,0x7ff8e7af1be4,171251322,0,0x0,8
tick,0x7ff8e7af1be4,171267102,0,0x0,8
tick,0x7ff8e7af1be4,171282742,0,0x0,8
tick,0x7ff8e7af1be4,171291295,0,0x0,8
tick,0x7ff8e7af1be4,171307244,0,0x0,8
tick,0x7ff8e7af1be4,171323044,0,0x0,8
tick,0x7ff8e7af1be4,171331268,0,0x0,8
tick,0x7ff8e7af1be4,171355274,0,0x0,8
tick,0x7ff8e7af1be4,171368480,0,0x0,8
tick,0x7ff8e7af1be4,171379321,0,0x0,8
tick,0x7ff8e7af1be4,171388883,0,0x0,8
tick,0x7ff8e7af1be4,171403672,0,0x0,8
tick,0x7ff8e7af1be4,171412464,0,0x0,8
tick,0x7ff8e7af1be4,171420310,0,0x0,8
tick,0x7ff8e7af1be4,171436582,0,0x0,8
tick,0x7ff8e7af1be4,171453074,0,0x0,8
tick,0x7ff8e7af1be4,171468906,0,0x0,8
tick,0x7ff8e7af1be4,171476906,0,0x0,8
tick,0x7ff8e7af1be4,171493308,0,0x0,8
tick,0x7ff8e7af1be4,171509133,0,0x0,8
tick,0x7ff8e7af1be4,171517014,0,0x0,8
tick,0x7ff8e7af1be4,171542597,0,0x0,8
tick,0x7ff8e7af1be4,171557956,0,0x0,8
tick,0x7ff8e7af1be4,171581250,0,0x0,8
tick,0x7ff8e7af1be4,171589596,0,0x0,8
tick,0x7ff8e7af1be4,171597707,0,0x0,8
tick,0x7ff8e7af1be4,171622121,0,0x0,8
tick,0x7ff8e7af1be4,171629994,0,0x0,8
tick,0x7ff8e7af1be4,171648867,0,0x0,8
tick,0x7ff8e7af1be4,171665393,0,0x0,8
tick,0x7ff8e7af1be4,171681409,0,0x0,8
tick,0x7ff8e7af1be4,171697961,0,0x0,8
tick,0x7ff8e7af1be4,171708451,0,0x0,8
tick,0x7ff8e7af1be4,171721661,0,0x0,8
tick,0x7ff8e7af1be4,171737203,0,0x0,8
tick,0x7ff8e7af1be4,171753215,0,0x0,8
tick,0x7ff8e7af1be4,171769064,0,0x0,8
tick,0x7ff8e7af1be4,171784688,0,0x0,8
tick,0x7ff8e7af1be4,171801316,0,0x0,8
tick,0x7ff8e7af1be4,171808974,0,0x0,8
tick,0x7ff8e7af1be4,171825427,0,0x0,8
tick,0x7ff8e7af1be4,171841467,0,0x0,8
tick,0x7ff8e7af1be4,171857448,0,0x0,8
tick,0x7ff8e7af1be4,171881985,0,0x0,8
tick,0x7ff8e7af1be4,171897320,0,0x0,8
tick,0x7ff8e7af1be4,171913312,0,0x0,8
tick,0x7ff8e7af1be4,171929437,0,0x0,8
tick,0x7ff8e7af1be4,171945682,0,0x0,8
tick,0x7ff8e7af1be4,171961415,0,0x0,8
tick,0x7ff8e7af1be4,171976806,0,0x0,8
tick,0x7ff8e7af1be4,171985718,0,0x0,8
tick,0x7ff8e7af1be4,172001600,0,0x0,8
tick,0x7ff8e7af1be4,172025561,0,0x0,8
tick,0x7ff8e7af1be4,172041706,0,0x0,8
tick,0x7ff8e7af1be4,172057460,0,0x0,8
tick,0x7ff8e7af1be4,172073325,0,0x0,8
tick,0x7ff8e7af1be4,172089395,0,0x0,8
tick,0x7ff8e7af1be4,172097710,0,0x0,8
tick,0x7ff8e7af1be4,172111789,0,0x0,8
tick,0x7ff8e7af1be4,172121974,0,0x0,8
tick,0x7ff8e7af1be4,172137798,0,0x0,8
tick,0x7ff8e7af1be4,172153710,0,0x0,8
tick,0x7ff8e7af1be4,172169748,0,0x0,8
tick,0x7ff8e7af1be4,172185915,0,0x0,8
tick,0x7ff8e7af1be4,172202028,0,0x0,8
tick,0x7ff8e7af1be4,172217823,0,0x0,8
tick,0x7ff8e7af1be4,172233885,0,0x0,8
tick,0x7ff8e7af1be4,172250472,0,0x0,8
tick,0x7ff8e7af1be4,172265757,0,0x0,8
tick,0x7ff8e7af1be4,172281844,0,0x0,8
tick,0x7ff8e7af1be4,172298016,0,0x0,8
tick,0x7ff8e7af1be4,172313963,0,0x0,8
tick,0x7ff8e7af1be4,172321754,0,0x0,8
tick,0x7ff8e7af1be4,172337542,0,0x0,8
tick,0x7ff8e7af1be4,172353340,0,0x0,8
tick,0x7ff8e7af1be4,172369123,0,0x0,8
tick,0x7ff8e7af1be4,172384929,0,0x0,8
tick,0x7ff8e7af1be4,172399449,0,0x0,8
tick,0x7ff8e7af1be4,172409085,0,0x0,8
tick,0x7ff8e7af1be4,172425440,0,0x0,8
tick,0x7ff8e7af1be4,172441274,0,0x0,8
tick,0x7ff8e7af1be4,172457112,0,0x0,8
tick,0x7ff8e7af1be4,172473198,0,0x0,8
tick,0x7ff8e7af1be4,172489225,0,0x0,8
tick,0x7ff8e7af1be4,172505687,0,0x0,8
tick,0x7ff8e7af1be4,172514061,0,0x0,8
tick,0x7ff8e7af1be4,172530597,0,0x0,8
tick,0x7ff8e7af1be4,172546465,0,0x0,8
tick,0x7ff8e7af1be4,172562963,0,0x0,8
tick,0x7ff8e7af1be4,172578684,0,0x0,8
tick,0x7ff8e7af1be4,172586103,0,0x0,8
tick,0x7ff8e7af1be4,172595020,0,0x0,8
tick,0x7ff8e7af1be4,172611227,0,0x0,8
tick,0x7ff8e7af1be4,172627044,0,0x0,8
tick,0x7ff8e7af1be4,172635239,0,0x0,8
tick,0x7ff8e7af1be4,172650886,0,0x0,8
tick,0x7ff8e7af1be4,172666587,0,0x0,8
tick,0x7ff8e7af1be4,172682635,0,0x0,8
tick,0x7ff8e7af1be4,172698709,0,0x0,8
tick,0x7ff8e7af1be4,172715035,0,0x0,8
tick,0x7ff8e7af1be4,172730693,0,0x0,8
tick,0x7ff8e7af1be4,172746595,0,0x0,8
tick,0x7ff8e7af1be4,172762882,0,0x0,8
tick,0x7ff8e7af1be4,172779929,0,0x0,8
tick,0x7ff8e7af1be4,172794416,0,0x0,8
tick,0x7ff8e7af1be4,172810732,0,0x0,8
tick,0x7ff8e7af1be4,172826566,0,0x0,8
tick,0x7ff8e7af1be4,172842622,0,0x0,8
tick,0x7ff8e7af1be4,172858693,0,0x0,8
tick,0x7ff8e7af1be4,172874242,0,0x0,8
tick,0x7ff8e7af1be4,172883976,0,0x0,8
tick,0x7ff8e7af1be4,172897914,0,0x0,8
tick,0x7ff8e7af1be4,172913652,0,0x0,8
tick,0x7ff8e7af1be4,172921792,0,0x0,8
tick,0x7ff8e7af1be4,172937712,0,0x0,8
tick,0x7ff8e7af1be4,172953627,0,0x0,8
tick,0x7ff8e7af1be4,172969867,0,0x0,8
tick,0x7ff8e7af1be4,172977799,0,0x0,8
tick,0x7ff8e7af1be4,173070054,0,0x0,8
tick,0x7ff8e7af1be4,173086890,0,0x0,8
tick,0x7ff8e7af1be4,173108801,0,0x0,8
tick,0x7ff8e7af1be4,173110966,0,0x0,8
tick,0x7ff8e7af1be4,173119042,0,0x0,8
tick,0x7ff8e7af1be4,173135202,0,0x0,8
tick,0x7ff8e7af1be4,173151287,0,0x0,8
tick,0x7ff8e7af1be4,173167201,0,0x0,8
tick,0x7ff8e7af1be4,173183234,0,0x0,8
tick,0x7ff8e7af1be4,173198916,0,0x0,8
tick,0x7ff8e7af1be4,173214479,0,0x0,8
tick,0x7ff8e7af1be4,173230193,0,0x0,8
tick,0x7ff8e7af1be4,173245826,0,0x0,8
tick,0x7ff8e7af1be4,173262238,0,0x0,8
tick,0x7ff8e7af1be4,173277693,0,0x0,8
tick,0x7ff8e7af1be4,173293364,0,0x0,8
tick,0x7ff8e7af1be4,173309321,0,0x0,8
tick,0x7ff8e7af1be4,173325541,0,0x0,8
tick,0x7ff8e7af1be4,173340728,0,0x0,8
tick,0x7ff8e7af1be4,173356355,0,0x0,8
tick,0x7ff8e7af1be4,173372103,0,0x0,8
tick,0x7ff8e7af1be4,173388062,0,0x0,8
tick,0x7ff8e7af1be4,173403924,0,0x0,8
tick,0x7ff8e7af1be4,173419516,0,0x0,8
tick,0x7ff8e7af1be4,173435332,0,0x0,8
tick,0x7ff8e7af1be4,173451524,0,0x0,8
tick,0x7ff8e7af1be4,173467554,0,0x0,8
tick,0x7ff8e7af1be4,173483264,0,0x0,8
tick,0x7ff8e7af1be4,173500008,0,0x0,8
tick,0x7ff8e7af1be4,173508274,0,0x0,8
tick,0x7ff8e7af1be4,173515990,0,0x0,8
tick,0x7ff8e7af1be4,173531973,0,0x0,8
tick,0x7ff8e7af1be4,173548050,0,0x0,8
tick,0x7ff8e7af1be4,173564893,0,0x0,8
tick,0x7ff8e7af1be4,173579575,0,0x0,8
tick,0x7ff8e7af1be4,173587117,0,0x0,8
tick,0x7ff8e7af1be4,173603433,0,0x0,8
tick,0x7ff8e7af1be4,173619498,0,0x0,8
tick,0x7ff8e7af1be4,173635098,0,0x0,8
tick,0x7ff8e7af1be4,173650839,0,0x0,8
tick,0x7ff8e7af1be4,173666867,0,0x0,8
tick,0x7ff8e7af1be4,173676776,0,0x0,8
tick,0x7ff8e7af1be4,173691048,0,0x0,8
tick,0x7ff8e7af1be4,173707012,0,0x0,8
tick,0x7ff8e7af1be4,173723185,0,0x0,8
tick,0x7ff8e7af1be4,173738860,0,0x0,8
tick,0x7ff8e7af1be4,173754856,0,0x0,8
tick,0x7ff8e7af1be4,173770331,0,0x0,8
tick,0x7ff8e7af1be4,173786155,0,0x0,8
tick,0x7ff8e7af1be4,173801997,0,0x0,8
tick,0x7ff8e7af1be4,173818091,0,0x0,8
tick,0x7ff8e7af1be4,173833640,0,0x0,8
tick,0x7ff8e7af1be4,173849276,0,0x0,8
tick,0x7ff8e7af1be4,173865270,0,0x0,8
tick,0x7ff8e7af1be4,173873878,0,0x0,8
tick,0x7ff8e7af1be4,173883017,0,0x0,8
tick,0x7ff8e7af1be4,173897632,0,0x0,8
tick,0x7ff8e7af1be4,173905940,0,0x0,8
tick,0x7ff8e7af1be4,173922107,0,0x0,8
tick,0x7ff8e7af1be4,173924970,0,0x0,8
tick,0x7ff8e7af1be4,173939150,0,0x0,8
tick,0x7ff8e7af1be4,173950496,0,0x0,8
tick,0x7ff8e7af1be4,173971545,0,0x0,8
tick,0x7ff8e7af1be4,173979150,0,0x0,8
tick,0x7ff8e7af1be4,174009455,0,0x0,8
tick,0x7ff8e7af1be4,174019323,0,0x0,8
tick,0x7ff8e7af1be4,174035080,0,0x0,8
tick,0x7ff8e7af1be4,174051002,0,0x0,8
tick,0x7ff8e7af1be4,174066740,0,0x0,8
tick,0x7ff8e7af1be4,174082424,0,0x0,8
tick,0x7ff8e7af1be4,174098244,0,0x0,8
tick,0x7ff8e7af1be4,174114062,0,0x0,8
tick,0x7ff8e7af1be4,174129992,0,0x0,8
tick,0x7ff8e7af1be4,174145236,0,0x0,8
tick,0x7ff8e7af1be4,174161352,0,0x0,8
tick,0x7ff8e7af1be4,174177085,0,0x0,8
tick,0x7ff8e7af1be4,174201607,0,0x0,8
tick,0x7ff8e7af1be4,174217608,0,0x0,8
tick,0x7ff8e7af1be4,174233091,0,0x0,8
tick,0x7ff8e7af1be4,174249187,0,0x0,8
tick,0x7ff8e7af1be4,174264861,0,0x0,8
tick,0x7ff8e7af1be4,174280858,0,0x0,8
tick,0x7ff8e7af1be4,174296691,0,0x0,8
tick,0x7ff8e7af1be4,174312547,0,0x0,8
tick,0x7ff8e7af1be4,174328588,0,0x0,8
tick,0x7ff8e7af1be4,174344338,0,0x0,8
tick,0x7ff8e7af1be4,174360033,0,0x0,8
tick,0x7ff8e7af1be4,174376086,0,0x0,8
tick,0x7ff8e7af1be4,174391881,0,0x0,8
tick,0x7ff8e7af1be4,174396469,0,0x0,8
tick,0x7ff8e7af1be4,174398303,0,0x0,8
tick,0x7ff8e7af1be4,174399469,0,0x0,8
tick,0x7ff8e7af1be4,174415551,0,0x0,8
tick,0x7ff8e7af1be4,174431168,0,0x0,8
tick,0x7ff8e7af1be4,174446813,0,0x0,8
tick,0x7ff8e7af1be4,174448336,0,0x0,8
tick,0x7ff8e7af1be4,174464200,0,0x0,8
tick,0x7ff8e7af1be4,174479549,0,0x0,8
tick,0x7ff8e7af1be4,174495613,0,0x0,8
tick,0x7ff8e7af1be4,174511827,0,0x0,8
tick,0x7ff8e7af1be4,174527521,0,0x0,8
tick,0x7ff8e7af1be4,174543635,0,0x0,8
tick,0x7ff8e7af1be4,174559505,0,0x0,8
tick,0x7ff8e7af1be4,174577037,0,0x0,8
tick,0x7ff8e7af1be4,174581356,0,0x0,8
tick,0x7ff8e7af1be4,174591964,0,0x0,8
tick,0x7ff8e7af1be4,174607728,0,0x0,8
tick,0x7ff8e7af1be4,174623383,0,0x0,8
tick,0x7ff8e7af1be4,174639552,0,0x0,8
tick,0x7ff8e7af1be4,174655303,0,0x0,8
tick,0x7ff8e7af1be4,174671464,0,0x0,8
tick,0x7ff8e7af1be4,174687369,0,0x0,8
tick,0x7ff8e7af1be4,174695450,0,0x0,8
tick,0x7ff8e7af1be4,174711455,0,0x0,8
tick,0x7ff8e7af1be4,174727144,0,0x0,8
tick,0x7ff8e7af1be4,174743003,0,0x0,8
tick,0x7ff8e7af1be4,174759004,0,0x0,8
tick,0x7ff8e7af1be4,174775175,0,0x0,8
tick,0x7ff8e7af1be4,174791694,0,0x0,8
tick,0x7ff8e7af1be4,174806974,0,0x0,8
tick,0x7ff8e7af1be4,174822918,0,0x0,8
tick,0x7ff8e7af1be4,174838696,0,0x0,8
tick,0x7ff8e7af1be4,174855088,0,0x0,8
tick,0x7ff8e7af1be4,174871176,0,0x0,8
tick,0x7ff8e7af1be4,174887649,0,0x0,8
tick,0x7ff8e7af1be4,174902858,0,0x0,8
tick,0x7ff8e7af1be4,174913210,0,0x0,8
tick,0x7ff8e7af1be4,174917884,0,0x0,8
tick,0x7ff8e7af1be4,174932137,0,0x0,8
tick,0x7ff8e7af1be4,174941163,0,0x0,8
tick,0x7ff8e7af1be4,174956701,0,0x0,8
tick,0x7ff8e7af1be4,174972387,0,0x0,8
tick,0x7ff8e7af1be4,174988239,0,0x0,8
tick,0x7ff8e7af1be4,175004115,0,0x0,8
tick,0x7ff8e7af1be4,175019535,0,0x0,8
tick,0x7ff8e7af1be4,175035387,0,0x0,8
tick,0x7ff8e7af1be4,175037146,0,0x0,8
tick,0x7ff8e7af1be4,175052552,0,0x0,8
tick,0x7ff8e7af1be4,175060962,0,0x0,8
tick,0x7ff8e7af1be4,175077286,0,0x0,8
tick,0x7ff8e7af1be4,175092956,0,0x0,8
tick,0x7ff8e7af1be4,175108945,0,0x0,8
tick,0x7ff8e7af1be4,175124477,0,0x0,8
tick,0x7ff8e7af1be4,175140459,0,0x0,8
tick,0x7ff8e7af1be4,175156769,0,0x0,8
tick,0x7ff8e7af1be4,175172662,0,0x0,8
tick,0x7ff8e7af1be4,175188454,0,0x0,8
tick,0x7ff8e7af1be4,175204535,0,0x0,8
tick,0x7ff8e7af1be4,175220854,0,0x0,8
tick,0x7ff8e7af1be4,175236492,0,0x0,8
tick,0x7ff8e7af1be4,175252261,0,0x0,8
tick,0x7ff8e7af1be4,175268637,0,0x0,8
tick,0x7ff8e7af1be4,175277020,0,0x0,8
tick,0x7ff8e7af1be4,175293621,0,0x0,8
tick,0x7ff8e7af1be4,175309728,0,0x0,8
tick,0x7ff8e7af1be4,175325270,0,0x0,8
tick,0x7ff8e7af1be4,175341489,0,0x0,8
tick,0x7ff8e7af1be4,175350954,0,0x0,8
tick,0x7ff8e7af1be4,175368051,0,0x0,8
tick,0x7ff8e7af1be4,175383572,0,0x0,8
tick,0x7ff8e7af1be4,175391534,0,0x0,8
tick,0x7ff8e7af1be4,175416115,0,0x0,8
tick,0x7ff8e7af1be4,175424425,0,0x0,8
tick,0x7ff8e7af1be4,175436283,0,0x0,8
tick,0x7ff8e7af1be4,175460650,0,0x0,8
tick,0x7ff8e7af1be4,175476395,0,0x0,8
tick,0x7ff8e7af1be4,175492523,0,0x0,8
tick,0x7ff8e7af1be4,175508423,0,0x0,8
tick,0x7ff8e7af1be4,175525472,0,0x0,8
tick,0x7ff8e7af1be4,175540553,0,0x0,8
tick,0x7ff8e7af1be4,175565002,0,0x0,8
tick,0x7ff8e7af1be4,175581102,0,0x0,8
tick,0x7ff8e7af1be4,175597038,0,0x0,8
tick,0x7ff8e7af1be4,175612877,0,0x0,8
tick,0x7ff8e7af1be4,175628385,0,0x0,8
tick,0x7ff8e7af1be4,175644141,0,0x0,8
tick,0x7ff8e7af1be4,175659525,0,0x0,8
tick,0x7ff8e7af1be4,175675250,0,0x0,8
tick,0x7ff8e7af1be4,175691353,0,0x0,8
tick,0x7ff8e7af1be4,175707189,0,0x0,8
tick,0x7ff8e7af1be4,175723139,0,0x0,8
tick,0x7ff8e7af1be4,175740160,0,0x0,8
tick,0x7ff8e7af1be4,175755032,0,0x0,8
tick,0x7ff8e7af1be4,175771199,0,0x0,8
tick,0x7ff8e7af1be4,175787080,0,0x0,8
tick,0x7ff8e7af1be4,175803230,0,0x0,8
tick,0x7ff8e7af1be4,175819014,0,0x0,8
tick,0x7ff8e7af1be4,175834675,0,0x0,8
tick,0x7ff8e7af1be4,175850417,0,0x0,8
tick,0x7ff8e7af1be4,175866900,0,0x0,8
tick,0x7ff8e7af1be4,175882667,0,0x0,8
tick,0x7ff8e7af1be4,175897495,0,0x0,8
tick,0x7ff8e7af1be4,175913871,0,0x0,8
tick,0x7ff8e7af1be4,175924014,0,0x0,8
tick,0x7ff8e7af1be4,175938183,0,0x0,8
tick,0x7ff8e7af1be4,175953787,0,0x0,8
tick,0x7ff8e7af1be4,175969227,0,0x0,8
tick,0x7ff8e7af1be4,175984989,0,0x0,8
tick,0x7ff8e7af1be4,176000862,0,0x0,8
tick,0x7ff8e7af1be4,176016498,0,0x0,8
tick,0x7ff8e7af1be4,176032734,0,0x0,8
tick,0x7ff8e7af1be4,176048403,0,0x0,8
tick,0x7ff8e7af1be4,176064764,0,0x0,8
tick,0x7ff8e7af1be4,176080516,0,0x0,8
tick,0x7ff8e7af1be4,176095972,0,0x0,8
tick,0x7ff8e7af1be4,176111974,0,0x0,8
tick,0x7ff8e7af1be4,176128137,0,0x0,8
tick,0x7ff8e7af1be4,176143902,0,0x0,8
tick,0x7ff8e7af1be4,176160117,0,0x0,8
tick,0x7ff8e7af1be4,176175955,0,0x0,8
tick,0x7ff8e7af1be4,176192040,0,0x0,8
tick,0x7ff8e7af1be4,176208194,0,0x0,8
tick,0x7ff8e7af1be4,176224000,0,0x0,8
tick,0x7ff8e7af1be4,176241116,0,0x0,8
tick,0x7ff8e7af1be4,176256768,0,0x0,8
tick,0x7ff8e7af1be4,176272154,0,0x0,8
tick,0x7ff8e7af1be4,176288053,0,0x0,8
tick,0x7ff8e7af1be4,176303965,0,0x0,8
tick,0x7ff8e7af1be4,176320318,0,0x0,8
tick,0x7ff8e7af1be4,176336451,0,0x0,8
tick,0x7ff8e7af1be4,176351883,0,0x0,8
tick,0x7ff8e7af1be4,176367644,0,0x0,8
tick,0x7ff8e7af1be4,176383268,0,0x0,8
tick,0x7ff8e7af1be4,176399167,0,0x0,8
tick,0x7ff8e7af1be4,176415086,0,0x0,8
tick,0x7ff8e7af1be4,176423284,0,0x0,8
tick,0x7ff8e7af1be4,176432234,0,0x0,8
tick,0x7ff8e7af1be4,176436325,0,0x0,8
tick,0x7ff8e7af1be4,176439845,0,0x0,8
tick,0x7ff8e7af1be4,176443370,0,0x0,8
tick,0x7ff8e7af1be4,176455152,0,0x0,8
tick,0x7ff8e7af1be4,176459396,0,0x0,8
tick,0x7ff8e7af1be4,176471603,0,0x0,8
tick,0x7ff8e7af1be4,176487676,0,0x0,8
tick,0x7ff8e7af1be4,176503014,0,0x0,8
tick,0x7ff8e7af1be4,176519203,0,0x0,8
tick,0x7ff8e7af1be4,176535248,0,0x0,8
tick,0x7ff8e7af1be4,176550591,0,0x0,8
tick,0x7ff8e7af1be4,176566758,0,0x0,8
tick,0x7ff8e7af1be4,176571283,0,0x0,8
tick,0x7ff8e7af1be4,176587239,0,0x0,8
tick,0x7ff8e7af1be4,176595633,0,0x0,8
tick,0x7ff8e7af1be4,176611490,0,0x0,8
tick,0x7ff8e7af1be4,176628061,0,0x0,8
tick,0x7ff8e7af1be4,176643813,0,0x0,8
tick,0x7ff8e7af1be4,176660024,0,0x0,8
tick,0x7ff8e7af1be4,176676151,0,0x0,8
tick,0x7ff8e7af1be4,176690708,0,0x0,8
tick,0x7ff8e7af1be4,176707076,0,0x0,8
tick,0x7ff8e7af1be4,176722126,0,0x0,8
tick,0x7ff8e7af1be4,176739045,0,0x0,8
tick,0x7ff8e7af1be4,176754142,0,0x0,8
tick,0x7ff8e7af1be4,176769912,0,0x0,8
tick,0x7ff8e7af1be4,176785395,0,0x0,8
tick,0x7ff8e7af1be4,176801666,0,0x0,8
tick,0x7ff8e7af1be4,176817224,0,0x0,8
tick,0x7ff8e7af1be4,176832901,0,0x0,8
tick,0x7ff8e7af1be4,176848478,0,0x0,8
tick,0x7ff8e7af1be4,176864252,0,0x0,8
tick,0x7ff8e7af1be4,176874110,0,0x0,8
tick,0x7ff8e7af1be4,176889153,0,0x0,8
tick,0x7ff8e7af1be4,176904859,0,0x0,8
tick,0x7ff8e7af1be4,176920904,0,0x0,8
tick,0x7ff8e7af1be4,176936776,0,0x0,8
tick,0x7ff8e7af1be4,176939587,0,0x0,8
tick,0x7ff8e7af1be4,176947619,0,0x0,8
tick,0x7ff8e7af1be4,176949344,0,0x0,8
tick,0x7ff8e7af1be4,176950902,0,0x0,8
tick,0x7ff8e7af1be4,176967243,0,0x0,8
tick,0x7ff8e7af1be4,176982872,0,0x0,8
tick,0x7ff8e7af1be4,176999248,0,0x0,8
tick,0x7ff8e7af1be4,177015108,0,0x0,8
tick,0x7ff8e7af1be4,177031204,0,0x0,8
tick,0x7ff8e7af1be4,177047559,0,0x0,8
tick,0x7ff8e7af1be4,177063253,0,0x0,8
tick,0x7ff8e7af1be4,177078529,0,0x0,8
tick,0x7ff8e7af1be4,177094283,0,0x0,8
tick,0x7ff8e7af1be4,177111498,0,0x0,8
tick,0x7ff8e7af1be4,177126432,0,0x0,8
tick,0x7ff8e7af1be4,177142470,0,0x0,8
tick,0x7ff8e7af1be4,177158768,0,0x0,8
tick,0x7ff8e7af1be4,177174143,0,0x0,8
tick,0x7ff8e7af1be4,177190169,0,0x0,8
tick,0x7ff8e7af1be4,177206253,0,0x0,8
tick,0x7ff8e7af1be4,177222252,0,0x0,8
tick,0x7ff8e7af1be4,177238043,0,0x0,8
tick,0x7ff8e7af1be4,177253902,0,0x0,8
tick,0x7ff8e7af1be4,177269456,0,0x0,8
tick,0x7ff8e7af1be4,177285441,0,0x0,8
tick,0x7ff8e7af1be4,177301354,0,0x0,8
tick,0x7ff8e7af1be4,177317277,0,0x0,8
tick,0x7ff8e7af1be4,177333535,0,0x0,8
tick,0x7ff8e7af1be4,177349457,0,0x0,8
tick,0x7ff8e7af1be4,177365185,0,0x0,8
tick,0x7ff8e7af1be4,177380790,0,0x0,8
tick,0x7ff8e7af1be4,177396756,0,0x0,8
tick,0x7ff8e7af1be4,177413115,0,0x0,8
tick,0x7ff8e7af1be4,177428546,0,0x0,8
tick,0x7ff8e7af1be4,177444593,0,0x0,8
tick,0x7ff8e7af1be4,177446852,0,0x0,8
tick,0x7ff8e7af1be4,177455755,0,0x0,8
tick,0x7ff8e7af1be4,177457776,0,0x0,8
tick,0x7ff8e7af1be4,177474336,0,0x0,8
tick,0x7ff8e7af1be4,177490428,0,0x0,8
tick,0x7ff8e7af1be4,177506944,0,0x0,8
tick,0x7ff8e7af1be4,177522614,0,0x0,8
tick,0x7ff8e7af1be4,177538439,0,0x0,8
tick,0x7ff8e7af1be4,177554036,0,0x0,8
tick,0x7ff8e7af1be4,177569819,0,0x0,8
tick,0x7ff8e7af1be4,177585558,0,0x0,8
tick,0x7ff8e7af1be4,177601884,0,0x0,8
tick,0x7ff8e7af1be4,177617621,0,0x0,8
tick,0x7ff8e7af1be4,177633403,0,0x0,8
tick,0x7ff8e7af1be4,177643187,0,0x0,8
tick,0x7ff8e7af1be4,177656912,0,0x0,8
tick,0x7ff8e7af1be4,177673329,0,0x0,8
tick,0x7ff8e7af1be4,177689245,0,0x0,8
tick,0x7ff8e7af1be4,177705353,0,0x0,8
tick,0x7ff8e7af1be4,177720889,0,0x0,8
tick,0x7ff8e7af1be4,177736555,0,0x0,8
tick,0x7ff8e7af1be4,177752403,0,0x0,8
tick,0x7ff8e7af1be4,177768354,0,0x0,8
tick,0x7ff8e7af1be4,177784475,0,0x0,8
tick,0x7ff8e7af1be4,177800821,0,0x0,8
tick,0x7ff8e7af1be4,177816714,0,0x0,8
tick,0x7ff8e7af1be4,177824845,0,0x0,8
tick,0x7ff8e7af1be4,177840822,0,0x0,8
tick,0x7ff8e7af1be4,177856818,0,0x0,8
tick,0x7ff8e7af1be4,177872698,0,0x0,8
tick,0x7ff8e7af1be4,177888830,0,0x0,8
tick,0x7ff8e7af1be4,177904638,0,0x0,8
tick,0x7ff8e7af1be4,177920376,0,0x0,8
tick,0x7ff8e7af1be4,177936291,0,0x0,8
tick,0x7ff8e7af1be4,177952606,0,0x0,8
tick,0x7ff8e7af1be4,177960759,0,0x0,8
tick,0x7ff8e7af1be4,177962196,0,0x0,8
tick,0x7ff8e7af1be4,177964076,0,0x0,8
tick,0x7ff8e7af1be4,177965314,0,0x0,8
tick,0x7ff8e7af1be4,177982372,0,0x0,8
tick,0x7ff8e7af1be4,177998165,0,0x0,8
tick,0x7ff8e7af1be4,178014182,0,0x0,8
tick,0x7ff8e7af1be4,178023954,0,0x0,8
tick,0x7ff8e7af1be4,178037758,0,0x0,8
tick,0x7ff8e7af1be4,178053258,0,0x0,8
tick,0x7ff8e7af1be4,178068892,0,0x0,8
tick,0x7ff8e7af1be4,178084563,0,0x0,8
tick,0x7ff8e7af1be4,178100861,0,0x0,8
tick,0x7ff8e7af1be4,178116498,0,0x0,8
tick,0x7ff8e7af1be4,178132440,0,0x0,8
tick,0x7ff8e7af1be4,178148448,0,0x0,8
tick,0x7ff8e7af1be4,178164555,0,0x0,8
tick,0x7ff8e7af1be4,178172810,0,0x0,8
tick,0x7ff8e7af1be4,178180794,0,0x0,8
tick,0x7ff8e7af1be4,178189197,0,0x0,8
tick,0x7ff8e7af1be4,178197605,0,0x0,8
tick,0x7ff8e7af1be4,178205784,0,0x0,8
tick,0x7ff8e7af1be4,178214028,0,0x0,8
tick,0x7ff8e7af1be4,178230432,0,0x0,8
tick,0x7ff8e7af1be4,178246176,0,0x0,8
tick,0x7ff8e7af1be4,178254460,0,0x0,8
tick,0x7ff8e7af1be4,178270261,0,0x0,8
tick,0x7ff8e7af1be4,178289469,0,0x0,8
tick,0x7ff8e7af1be4,178301162,0,0x0,8
tick,0x7ff8e7af1be4,178310856,0,0x0,8
tick,0x7ff8e7af1be4,178320134,0,0x0,8
tick,0x7ff8e7af1be4,178333883,0,0x0,8
tick,0x7ff8e7af1be4,178344049,0,0x0,8
tick,0x7ff8e7af1be4,178352289,0,0x0,8
tick,0x7ff8e7af1be4,178369074,0,0x0,8
tick,0x7ff8e7af1be4,178385472,0,0x0,8
tick,0x7ff8e7af1be4,178401428,0,0x0,8
tick,0x7ff8e7af1be4,178417353,0,0x0,8
tick,0x7ff8e7af1be4,178441669,0,0x0,8
tick,0x7ff8e7af1be4,178457816,0,0x0,8
tick,0x7ff8e7af1be4,178473889,0,0x0,8
tick,0x7ff8e7af1be4,178478289,0,0x0,8
tick,0x7ff8e7af1be4,178479894,0,0x0,8
tick,0x7ff8e7af1be4,178481164,0,0x0,8
tick,0x7ff8e7af1be4,178496553,0,0x0,8
tick,0x7ff8e7af1be4,178512365,0,0x0,8
tick,0x7ff8e7af1be4,178528354,0,0x0,8
tick,0x7ff8e7af1be4,178545073,0,0x0,8
tick,0x7ff8e7af1be4,178560348,0,0x0,8
tick,0x7ff8e7af1be4,178575656,0,0x0,8
tick,0x7ff8e7af1be4,178592881,0,0x0,8
tick,0x7ff8e7af1be4,178604769,0,0x0,8
tick,0x7ff8e7af1be4,178620515,0,0x0,8
tick,0x7ff8e7af1be4,178632767,0,0x0,8
tick,0x7ff8e7af1be4,178645373,0,0x0,8
tick,0x7ff8e7af1be4,178653254,0,0x0,8
tick,0x7ff8e7af1be4,178662546,0,0x0,8
tick,0x7ff8e7af1be4,178671197,0,0x0,8
tick,0x7ff8e7af1be4,178686364,0,0x0,8
tick,0x7ff8e7af1be4,178701952,0,0x0,8
tick,0x7ff8e7af1be4,178718112,0,0x0,8
tick,0x7ff8e7af1be4,178726101,0,0x0,8
tick,0x7ff8e7af1be4,178736715,0,0x0,8
tick,0x7ff8e7af1be4,178745273,0,0x0,8
tick,0x7ff8e7af1be4,178759483,0,0x0,8
tick,0x7ff8e7af1be4,178771660,0,0x0,8
tick,0x7ff8e7af1be4,178783614,0,0x0,8
tick,0x7ff8e7af1be4,178799399,0,0x0,8
tick,0x7ff8e7af1be4,178815330,0,0x0,8
tick,0x7ff8e7af1be4,178823626,0,0x0,8
tick,0x7ff8e7af1be4,178840391,0,0x0,8
tick,0x7ff8e7af1be4,178855883,0,0x0,8
tick,0x7ff8e7af1be4,178871689,0,0x0,8
tick,0x7ff8e7af1be4,178887105,0,0x0,8
tick,0x7ff8e7af1be4,178902950,0,0x0,8
tick,0x7ff8e7af1be4,178911138,0,0x0,8
tick,0x7ff8e7af1be4,178927164,0,0x0,8
tick,0x7ff8e7af1be4,178942841,0,0x0,8
tick,0x7ff8e7af1be4,178958499,0,0x0,8
tick,0x7ff8e7af1be4,178974550,0,0x0,8
tick,0x7ff8e7af1be4,178987386,0,0x0,8
tick,0x7ff8e7af1be4,178996265,0,0x0,8
tick,0x7ff8e7af1be4,179010602,0,0x0,8
tick,0x7ff8e7af1be4,179026561,0,0x0,8
tick,0x7ff8e7af1be4,179042293,0,0x0,8
tick,0x7ff8e7af1be4,179058295,0,0x0,8
tick,0x7ff8e7af1be4,179074359,0,0x0,8
tick,0x7ff8e7af1be4,179090188,0,0x0,8
tick,0x7ff8e7af1be4,179106634,0,0x0,8
tick,0x7ff8e7af1be4,179116338,0,0x0,8
tick,0x7ff8e7af1be4,179130489,0,0x0,8
tick,0x7ff8e7af1be4,179146961,0,0x0,8
tick,0x7ff8e7af1be4,179162515,0,0x0,8
tick,0x7ff8e7af1be4,179171448,0,0x0,8
tick,0x7ff8e7af1be4,179186830,0,0x0,8
tick,0x7ff8e7af1be4,179189564,0,0x0,8
tick,0x7ff8e7af1be4,179203277,0,0x0,8
tick,0x7ff8e7af1be4,179219241,0,0x0,8
tick,0x7ff8e7af1be4,179235139,0,0x0,8
tick,0x7ff8e7af1be4,179250842,0,0x0,8
tick,0x7ff8e7af1be4,179267039,0,0x0,8
tick,0x7ff8e7af1be4,179282838,0,0x0,8
tick,0x7ff8e7af1be4,179299145,0,0x0,8
tick,0x7ff8e7af1be4,179315115,0,0x0,8
tick,0x7ff8e7af1be4,179331357,0,0x0,8
tick,0x7ff8e7af1be4,179346729,0,0x0,8
tick,0x7ff8e7af1be4,179362918,0,0x0,8
tick,0x7ff8e7af1be4,179378876,0,0x0,8
tick,0x7ff8e7af1be4,179395126,0,0x0,8
tick,0x7ff8e7af1be4,179411111,0,0x0,8
tick,0x7ff8e7af1be4,179427252,0,0x0,8
tick,0x7ff8e7af1be4,179443133,0,0x0,8
tick,0x7ff8e7af1be4,179459243,0,0x0,8
tick,0x7ff8e7af1be4,179474989,0,0x0,8
tick,0x7ff8e7af1be4,179485315,0,0x0,8
tick,0x7ff8e7af1be4,179496955,0,0x0,8
tick,0x7ff8e7af1be4,179505814,0,0x0,8
tick,0x7ff8e7af1be4,179515272,0,0x0,8
tick,0x7ff8e7af1be4,179523799,0,0x0,8
tick,0x7ff8e7af1be4,179538741,0,0x0,8
tick,0x7ff8e7af1be4,179546881,0,0x0,8
tick,0x7ff8e7af1be4,179556626,0,0x0,8
tick,0x7ff8e7af1be4,179566802,0,0x0,8
tick,0x7ff8e7af1be4,179581931,0,0x0,8
tick,0x7ff8e7af1be4,179598101,0,0x0,8
tick,0x7ff8e7af1be4,179607423,0,0x0,8
tick,0x7ff8e7af1be4,179623624,0,0x0,8
tick,0x7ff8e7af1be4,179636779,0,0x0,8
tick,0x7ff8e7af1be4,179646843,0,0x0,8
tick,0x7ff8e7af1be4,179657004,0,0x0,8
tick,0x7ff8e7af1be4,179674411,0,0x0,8
tick,0x7ff8e7af1be4,179691018,0,0x0,8
tick,0x7ff8e7af1be4,179698927,0,0x0,8
tick,0x7ff8e7af1be4,179722140,0,0x0,8
tick,0x7ff8e7af1be4,179733068,0,0x0,8
tick,0x7ff8e7af1be4,179746946,0,0x0,8
tick,0x7ff8e7af1be4,179763041,0,0x0,8
tick,0x7ff8e7af1be4,179771966,0,0x0,8
tick,0x7ff8e7af1be4,179786602,0,0x0,8
tick,0x7ff8e7af1be4,179796795,0,0x0,8
tick,0x7ff8e7af1be4,179813143,0,0x0,8
tick,0x7ff8e7af1be4,179829560,0,0x0,8
tick,0x7ff8e7af1be4,179845839,0,0x0,8
tick,0x7ff8e7af1be4,179861357,0,0x0,8
tick,0x7ff8e7af1be4,179877938,0,0x0,8
tick,0x7ff8e7af1be4,179886510,0,0x0,8
tick,0x7ff8e7af1be4,179894692,0,0x0,8
tick,0x7ff8e7af1be4,179903186,0,0x0,8
tick,0x7ff8e7af1be4,179911568,0,0x0,8
tick,0x7ff8e7af1be4,179927942,0,0x0,8
tick,0x7ff8e7af1be4,179936642,0,0x0,8
tick,0x7ff8e7af1be4,179946360,0,0x0,8
tick,0x7ff8e7af1be4,179961627,0,0x0,8
tick,0x7ff8e7af1be4,179969737,0,0x0,8
tick,0x7ff8e7af1be4,179981803,0,0x0,8
tick,0x7ff8e7af1be4,179995111,0,0x0,8
tick,0x7ff8e7af1be4,180011651,0,0x0,8
tick,0x7ff8e7af1be4,180020285,0,0x0,8
tick,0x7ff8e7af1be4,180029262,0,0x0,8
tick,0x7ff8e7af1be4,180045561,0,0x0,8
tick,0x7ff8e7af1be4,180061623,0,0x0,8
tick,0x7ff8e7af1be4,180077990,0,0x0,8
tick,0x7ff8e7af1be4,180094981,0,0x0,8
tick,0x7ff8e7af1be4,180111417,0,0x0,8
tick,0x7ff8e7af1be4,180119317,0,0x0,8
tick,0x7ff8e7af1be4,180131613,0,0x0,8
tick,0x7ff8e7af1be4,180143704,0,0x0,8
tick,0x7ff8e7af1be4,180159622,0,0x0,8
tick,0x7ff8e7af1be4,180176523,0,0x0,8
tick,0x7ff8e7af1be4,180194662,0,0x0,8
tick,0x7ff8e7af1be4,180211024,0,0x0,8
tick,0x7ff8e7af1be4,180227011,0,0x0,8
tick,0x7ff8e7af1be4,180235596,0,0x0,8
tick,0x7ff8e7af1be4,180247039,0,0x0,8
tick,0x7ff8e7af1be4,180260094,0,0x0,8
tick,0x7ff8e7af1be4,180276741,0,0x0,8
tick,0x7ff8e7af1be4,180285110,0,0x0,8
tick,0x7ff8e7af1be4,180294826,0,0x0,8
tick,0x7ff8e7af1be4,180303401,0,0x0,8
tick,0x7ff8e7af1be4,180313825,0,0x0,8
tick,0x7ff8e7af1be4,180321160,0,0x0,8
tick,0x7ff8e7af1be4,180336530,0,0x0,8
tick,0x7ff8e7af1be4,180346342,0,0x0,8
tick,0x7ff8e7af1be4,180354750,0,0x0,8
tick,0x7ff8e7af1be4,180366555,0,0x0,8
tick,0x7ff8e7af1be4,180381983,0,0x0,8
tick,0x7ff8e7af1be4,180398549,0,0x0,8
tick,0x7ff8e7af1be4,180414893,0,0x0,8
tick,0x7ff8e7af1be4,180432932,0,0x0,8
tick,0x7ff8e7af1be4,180447049,0,0x0,8
tick,0x7ff8e7af1be4,180456961,0,0x0,8
tick,0x7ff8e7af1be4,180474012,0,0x0,8
tick,0x7ff8e7af1be4,180490274,0,0x0,8
tick,0x7ff8e7af1be4,180506824,0,0x0,8
tick,0x7ff8e7af1be4,180523093,0,0x0,8
tick,0x7ff8e7af1be4,180531753,0,0x0,8
tick,0x7ff8e7af1be4,180548741,0,0x0,8
tick,0x7ff8e7af1be4,180565020,0,0x0,8
tick,0x7ff8e7af1be4,180581686,0,0x0,8
tick,0x7ff8e7af1be4,180589902,0,0x0,8
tick,0x7ff8e7af1be4,180607057,0,0x0,8
tick,0x7ff8e7af1be4,180615582,0,0x0,8
tick,0x7ff8e7af1be4,180632157,0,0x0,8
tick,0x7ff8e7af1be4,180649339,0,0x0,8
tick,0x7ff8e7af1be4,180665179,0,0x0,8
tick,0x7ff8e7af1be4,180673387,0,0x0,8
tick,0x7ff8e7af1be4,180689970,0,0x0,8
tick,0x7ff8e7af1be4,180706873,0,0x0,8
tick,0x7ff8e7af1be4,180714899,0,0x0,8
tick,0x7ff8e7af1be4,180723624,0,0x0,8
tick,0x7ff8e7af1be4,180740560,0,0x0,8
tick,0x7ff8e7af1be4,180756762,0,0x0,8
tick,0x7ff8e7af1be4,180773546,0,0x0,8
tick,0x7ff8e7af1be4,180789738,0,0x0,8
tick,0x7ff8e7af1be4,180806960,0,0x0,8
tick,0x7ff8e7af1be4,180823506,0,0x0,8
tick,0x7ff8e7af1be4,180831812,0,0x0,8
tick,0x7ff8e7af1be4,180848813,0,0x0,8
tick,0x7ff8e7af1be4,180865531,0,0x0,8
tick,0x7ff8e7af1be4,180882350,0,0x0,8
tick,0x7ff8e7af1be4,180890909,0,0x0,8
tick,0x7ff8e7af1be4,180899088,0,0x0,8
tick,0x7ff8e7af1be4,180914696,0,0x0,8
tick,0x7ff8e7af1be4,180922846,0,0x0,8
tick,0x7ff8e7af1be4,180931090,0,0x0,8
tick,0x7ff8e7af1be4,180946771,0,0x0,8
tick,0x7ff8e7af1be4,180955137,0,0x0,8
tick,0x7ff8e7af1be4,180965722,0,0x0,8
tick,0x7ff8e7af1be4,180980091,0,0x0,8
tick,0x7ff8e7af1be4,180988839,0,0x0,8
tick,0x7ff8e7af1be4,181005279,0,0x0,8
tick,0x7ff8e7af1be4,181022063,0,0x0,8
tick,0x7ff8e7af1be4,181033098,0,0x0,8
tick,0x7ff8e7af1be4,181041547,0,0x0,8
tick,0x7ff8e7af1be4,181053601,0,0x0,8
tick,0x7ff8e7af1be4,181066767,0,0x0,8
tick,0x7ff8e7af1be4,181076671,0,0x0,8
tick,0x7ff8e7af1be4,181086740,0,0x0,8
tick,0x7ff8e7af1be4,181095613,0,0x0,8
tick,0x7ff8e7af1be4,181103999,0,0x0,8
tick,0x7ff8e7af1be4,181111977,0,0x0,8
tick,0x7ff8e7af1be4,181128516,0,0x0,8
tick,0x7ff8e7af1be4,181146468,0,0x0,8
tick,0x7ff8e7af1be4,181161078,0,0x0,8
tick,0x7ff8e7af1be4,181169177,0,0x0,8
tick,0x7ff8e7af1be4,181185191,0,0x0,8
tick,0x7ff8e7af1be4,181194556,0,0x0,8
tick,0x7ff8e7af1be4,181211038,0,0x0,8
tick,0x7ff8e7af1be4,181219022,0,0x0,8
tick,0x7ff8e7af1be4,181235119,0,0x0,8
tick,0x7ff8e7af1be4,181247106,0,0x0,8
tick,0x7ff8e7af1be4,181259984,0,0x0,8
tick,0x7ff8e7af1be4,181268488,0,0x0,8
tick,0x7ff8e7af1be4,181284779,0,0x0,8
tick,0x7ff8e7af1be4,181296490,0,0x0,8
tick,0x7ff8e7af1be4,181309910,0,0x0,8
tick,0x7ff8e7af1be4,181326605,0,0x0,8
tick,0x7ff8e7af1be4,181334811,0,0x0,8
tick,0x7ff8e7af1be4,181350950,0,0x0,8
tick,0x7ff8e7af1be4,181367104,0,0x0,8
tick,0x7ff8e7af1be4,181375141,0,0x0,8
tick,0x7ff8e7af1be4,181391582,0,0x0,8
tick,0x7ff8e7af1be4,181406932,0,0x0,8
tick,0x7ff8e7af1be4,181416861,0,0x0,8
tick,0x7ff8e7af1be4,181426627,0,0x0,8
tick,0x7ff8e7af1be4,181441582,0,0x0,8
tick,0x7ff8e7af1be4,181450017,0,0x0,8
tick,0x7ff8e7af1be4,181466623,0,0x0,8
tick,0x7ff8e7af1be4,181476977,0,0x0,8
tick,0x7ff8e7af1be4,181495005,0,0x0,8
tick,0x7ff8e7af1be4,181511906,0,0x0,8
tick,0x7ff8e7af1be4,181527758,0,0x0,8
tick,0x7ff8e7af1be4,181536277,0,0x0,8
tick,0x7ff8e7af1be4,181545367,0,0x0,8
tick,0x7ff8e7af1be4,181556939,0,0x0,8
tick,0x7ff8e7af1be4,181566604,0,0x0,8
tick,0x7ff8e7af1be4,181576934,0,0x0,8
tick,0x7ff8e7af1be4,181592972,0,0x0,8
tick,0x7ff8e7af1be4,181603021,0,0x0,8
tick,0x7ff8e7af1be4,181614052,0,0x0,8
tick,0x7ff8e7af1be4,181631035,0,0x0,8
tick,0x7ff8e7af1be4,181647035,0,0x0,8
tick,0x7ff8e7af1be4,181663074,0,0x0,8
tick,0x7ff8e7af1be4,181671652,0,0x0,8
tick,0x7ff8e7af1be4,181681433,0,0x0,8
tick,0x7ff8e7af1be4,181696676,0,0x0,8
tick,0x7ff8e7af1be4,181706520,0,0x0,8
tick,0x7ff8e7af1be4,181714996,0,0x0,8
tick,0x7ff8e7af1be4,181731489,0,0x0,8
tick,0x7ff8e7af1be4,181739659,0,0x0,8
tick,0x7ff8e7af1be4,181757076,0,0x0,8
tick,0x7ff8e7af1be4,181765153,0,0x0,8
tick,0x7ff8e7af1be4,181773767,0,0x0,8
tick,0x7ff8e7af1be4,181789902,0,0x0,8
tick,0x7ff8e7af1be4,181798439,0,0x0,8
tick,0x7ff8e7af1be4,181814986,0,0x0,8
tick,0x7ff8e7af1be4,181831742,0,0x0,8
tick,0x7ff8e7af1be4,181840344,0,0x0,8
tick,0x7ff8e7af1be4,181857189,0,0x0,8
tick,0x7ff8e7af1be4,181873588,0,0x0,8
tick,0x7ff8e7af1be4,181886609,0,0x0,8
tick,0x7ff8e7af1be4,181897021,0,0x0,8
tick,0x7ff8e7af1be4,181907014,0,0x0,8
tick,0x7ff8e7af1be4,181923367,0,0x0,8
tick,0x7ff8e7af1be4,181940355,0,0x0,8
tick,0x7ff8e7af1be4,181948539,0,0x0,8
tick,0x7ff8e7af1be4,181965164,0,0x0,8
tick,0x7ff8e7af1be4,181981918,0,0x0,8
tick,0x7ff8e7af1be4,181996581,0,0x0,8
tick,0x7ff8e7af1be4,182006630,0,0x0,8
tick,0x7ff8e7af1be4,182023288,0,0x0,8
tick,0x7ff8e7af1be4,182040252,0,0x0,8
tick,0x7ff8e7af1be4,182056790,0,0x0,8
tick,0x7ff8e7af1be4,182066594,0,0x0,8
tick,0x7ff8e7af1be4,182077012,0,0x0,8
tick,0x7ff8e7af1be4,182087006,0,0x0,8
tick,0x7ff8e7af1be4,182103760,0,0x0,8
tick,0x7ff8e7af1be4,182113987,0,0x0,8
tick,0x7ff8e7af1be4,182128388,0,0x0,8
tick,0x7ff8e7af1be4,182144946,0,0x0,8
tick,0x7ff8e7af1be4,182153531,0,0x0,8
tick,0x7ff8e7af1be4,182166869,0,0x0,8
tick,0x7ff8e7af1be4,182176775,0,0x0,8
tick,0x7ff8e7af1be4,182186518,0,0x0,8
tick,0x7ff8e7af1be4,182194787,0,0x0,8
tick,0x7ff8e7af1be4,182203399,0,0x0,8
tick,0x7ff8e7af1be4,182214085,0,0x0,8
tick,0x7ff8e7af1be4,182226755,0,0x0,8
tick,0x7ff8e7af1be4,182243495,0,0x0,8
tick,0x7ff8e7af1be4,182261079,0,0x0,8
tick,0x7ff8e7af1be4,182268909,0,0x0,8
tick,0x7ff8e7af1be4,182284843,0,0x0,8
tick,0x7ff8e7af1be4,182295329,0,0x0,8
tick,0x7ff8e7af1be4,182311926,0,0x0,8
tick,0x7ff8e7af1be4,182327561,0,0x0,8
tick,0x7ff8e7af1be4,182337022,0,0x0,8
tick,0x7ff8e7af1be4,182346351,0,0x0,8
tick,0x7ff8e7af1be4,182362364,0,0x0,8
tick,0x7ff8e7af1be4,182379157,0,0x0,8
tick,0x7ff8e7af1be4,182394936,0,0x0,8
tick,0x7ff8e7af1be4,182403262,0,0x0,8
tick,0x7ff8e7af1be4,182417109,0,0x0,8
tick,0x7ff8e7af1be4,182426489,0,0x0,8
tick,0x7ff8e7af1be4,182436973,0,0x0,8
tick,0x7ff8e7af1be4,182446696,0,0x0,8
tick,0x7ff8e7af1be4,182464659,0,0x0,8
tick,0x7ff8e7af1be4,182479541,0,0x0,8
tick,0x7ff8e7af1be4,182496393,0,0x0,8
tick,0x7ff8e7af1be4,182512897,0,0x0,8
tick,0x7ff8e7af1be4,182521020,0,0x0,8
tick,0x7ff8e7af1be4,182537185,0,0x0,8
tick,0x7ff8e7af1be4,182552950,0,0x0,8
tick,0x7ff8e7af1be4,182560824,0,0x0,8
tick,0x7ff8e7af1be4,182575849,0,0x0,8
tick,0x7ff8e7af1be4,182596594,0,0x0,8
tick,0x7ff8e7af1be4,182598895,0,0x0,8
tick,0x7ff8e7af1be4,182615010,0,0x0,8
tick,0x7ff8e7af1be4,182631853,0,0x0,8
tick,0x7ff8e7af1be4,182646778,0,0x0,8
tick,0x7ff8e7af1be4,182662643,0,0x0,8
tick,0x7ff8e7af1be4,182679038,0,0x0,8
tick,0x7ff8e7af1be4,182694662,0,0x0,8
tick,0x7ff8e7af1be4,182710861,0,0x0,8
tick,0x7ff8e7af1be4,182726886,0,0x0,8
tick,0x7ff8e7af1be4,182743092,0,0x0,8
tick,0x7ff8e7af1be4,182759053,0,0x0,8
tick,0x7ff8e7af1be4,182774724,0,0x0,8
tick,0x7ff8e7af1be4,182783673,0,0x0,8
tick,0x7ff8e7af1be4,182799758,0,0x0,8
tick,0x7ff8e7af1be4,182815229,0,0x0,8
tick,0x7ff8e7af1be4,182831221,0,0x0,8
tick,0x7ff8e7af1be4,182846876,0,0x0,8
tick,0x7ff8e7af1be4,182863490,0,0x0,8
tick,0x7ff8e7af1be4,182879457,0,0x0,8
tick,0x7ff8e7af1be4,182895269,0,0x0,8
tick,0x7ff8e7af1be4,182911342,0,0x0,8
tick,0x7ff8e7af1be4,182927155,0,0x0,8
tick,0x7ff8e7af1be4,182935089,0,0x0,8
tick,0x7ff8e7af1be4,182950964,0,0x0,8
tick,0x7ff8e7af1be4,182967090,0,0x0,8
tick,0x7ff8e7af1be4,182982749,0,0x0,8
tick,0x7ff8e7af1be4,182998730,0,0x0,8
tick,0x7ff8e7af1be4,183014722,0,0x0,8
tick,0x7ff8e7af1be4,183030594,0,0x0,8
tick,0x7ff8e7af1be4,183047105,0,0x0,8
tick,0x7ff8e7af1be4,183063233,0,0x0,8
tick,0x7ff8e7af1be4,183065113,0,0x0,8
tick,0x7ff8e7af1be4,183070424,0,0x0,8
tick,0x7ff8e7af1be4,183071609,0,0x0,8
tick,0x7ff8e7af1be4,183072931,0,0x0,8
tick,0x7ff8e7af1be4,183074433,0,0x0,8
tick,0x7ff8e7af1be4,183075635,0,0x0,8
tick,0x7ff8e7af1be4,183091670,0,0x0,8
tick,0x7ff8e7af1be4,183106760,0,0x0,8
tick,0x7ff8e7af1be4,183122688,0,0x0,8
tick,0x7ff8e7af1be4,183138140,0,0x0,8
tick,0x7ff8e7af1be4,183154068,0,0x0,8
tick,0x7ff8e7af1be4,183170118,0,0x0,8
tick,0x7ff8e7af1be4,183186182,0,0x0,8
tick,0x7ff8e7af1be4,183202290,0,0x0,8
tick,0x7ff8e7af1be4,183218582,0,0x0,8
tick,0x7ff8e7af1be4,183234659,0,0x0,8
tick,0x7ff8e7af1be4,183250001,0,0x0,8
tick,0x7ff8e7af1be4,183266242,0,0x0,8
tick,0x7ff8e7af1be4,183282424,0,0x0,8
tick,0x7ff8e7af1be4,183297946,0,0x0,8
tick,0x7ff8e7af1be4,183314198,0,0x0,8
tick,0x7ff8e7af1be4,183330049,0,0x0,8
tick,0x7ff8e7af1be4,183345812,0,0x0,8
tick,0x7ff8e7af1be4,183362221,0,0x0,8
tick,0x7ff8e7af1be4,183378202,0,0x0,8
tick,0x7ff8e7af1be4,183393793,0,0x0,8
tick,0x7ff8e7af1be4,183410072,0,0x0,8
tick,0x7ff8e7af1be4,183426342,0,0x0,8
tick,0x7ff8e7af1be4,183442067,0,0x0,8
tick,0x7ff8e7af1be4,183458323,0,0x0,8
tick,0x7ff8e7af1be4,183473775,0,0x0,8
tick,0x7ff8e7af1be4,183490183,0,0x0,8
tick,0x7ff8e7af1be4,183505984,0,0x0,8
tick,0x7ff8e7af1be4,183515451,0,0x0,8
tick,0x7ff8e7af1be4,183530589,0,0x0,8
tick,0x7ff8e7af1be4,183546822,0,0x0,8
tick,0x7ff8e7af1be4,183554887,0,0x0,8
tick,0x7ff8e7af1be4,183566353,0,0x0,8
tick,0x7ff8e7af1be4,183574796,0,0x0,8
tick,0x7ff8e7af1be4,183592023,0,0x0,8
tick,0x7ff8e7af1be4,183600848,0,0x0,8
tick,0x7ff8e7af1be4,183617088,0,0x0,8
tick,0x7ff8e7af1be4,183625546,0,0x0,8
tick,0x7ff8e7af1be4,183648085,0,0x0,8
tick,0x7ff8e7af1be4,183656420,0,0x0,8
tick,0x7ff8e7af1be4,183666716,0,0x0,8
tick,0x7ff8e7af1be4,183673518,0,0x0,8
tick,0x7ff8e7af1be4,183683965,0,0x0,8
tick,0x7ff8e7af1be4,183700149,0,0x0,8
tick,0x7ff8e7af1be4,183715978,0,0x0,8
tick,0x7ff8e7af1be4,183732057,0,0x0,8
tick,0x7ff8e7af1be4,183748144,0,0x0,8
tick,0x7ff8e7af1be4,183764621,0,0x0,8
tick,0x7ff8e7af1be4,183780368,0,0x0,8
tick,0x7ff8e7af1be4,183796665,0,0x0,8
tick,0x7ff8e7af1be4,183812804,0,0x0,8
tick,0x7ff8e7af1be4,183828925,0,0x0,8
tick,0x7ff8e7af1be4,183844997,0,0x0,8
tick,0x7ff8e7af1be4,183861132,0,0x0,8
tick,0x7ff8e7af1be4,183877338,0,0x0,8
tick,0x7ff8e7af1be4,183893462,0,0x0,8
tick,0x7ff8e7af1be4,183909015,0,0x0,8
tick,0x7ff8e7af1be4,183925272,0,0x0,8
tick,0x7ff8e7af1be4,183941290,0,0x0,8
tick,0x7ff8e7af1be4,183956864,0,0x0,8
tick,0x7ff8e7af1be4,183973186,0,0x0,8
tick,0x7ff8e7af1be4,183988962,0,0x0,8
tick,0x7ff8e7af1be4,184004809,0,0x0,8
tick,0x7ff8e7af1be4,184020728,0,0x0,8
tick,0x7ff8e7af1be4,184036645,0,0x0,8
tick,0x7ff8e7af1be4,184052562,0,0x0,8
tick,0x7ff8e7af1be4,184068464,0,0x0,8
tick,0x7ff8e7af1be4,184070041,0,0x0,8
tick,0x7ff8e7af1be4,184074538,0,0x0,8
tick,0x7ff8e7af1be4,184076938,0,0x0,8
tick,0x7ff8e7af1be4,184078141,0,0x0,8
tick,0x7ff8e7af1be4,184086756,0,0x0,8
tick,0x7ff8e7af1be4,184095150,0,0x0,8
tick,0x7ff8e7af1be4,184110983,0,0x0,8
tick,0x7ff8e7af1be4,184127754,0,0x0,8
tick,0x7ff8e7af1be4,184143055,0,0x0,8
tick,0x7ff8e7af1be4,184152123,0,0x0,8
tick,0x7ff8e7af1be4,184167372,0,0x0,8
tick,0x7ff8e7af1be4,184182784,0,0x0,8
tick,0x7ff8e7af1be4,184198531,0,0x0,8
tick,0x7ff8e7af1be4,184214891,0,0x0,8
tick,0x7ff8e7af1be4,184230400,0,0x0,8
tick,0x7ff8e7af1be4,184246945,0,0x0,8
tick,0x7ff8e7af1be4,184262704,0,0x0,8
tick,0x7ff8e7af1be4,184278951,0,0x0,8
tick,0x7ff8e7af1be4,184294619,0,0x0,8
tick,0x7ff8e7af1be4,184310672,0,0x0,8
tick,0x7ff8e7af1be4,184326941,0,0x0,8
tick,0x7ff8e7af1be4,184342553,0,0x0,8
tick,0x7ff8e7af1be4,184358759,0,0x0,8
tick,0x7ff8e7af1be4,184375011,0,0x0,8
tick,0x7ff8e7af1be4,184391142,0,0x0,8
tick,0x7ff8e7af1be4,184407569,0,0x0,8
tick,0x7ff8e7af1be4,184423090,0,0x0,8
tick,0x7ff8e7af1be4,184439136,0,0x0,8
tick,0x7ff8e7af1be4,184455020,0,0x0,8
tick,0x7ff8e7af1be4,184470928,0,0x0,8
tick,0x7ff8e7af1be4,184486844,0,0x0,8
tick,0x7ff8e7af1be4,184503057,0,0x0,8
tick,0x7ff8e7af1be4,184519014,0,0x0,8
tick,0x7ff8e7af1be4,184534687,0,0x0,8
tick,0x7ff8e7af1be4,184550726,0,0x0,8
tick,0x7ff8e7af1be4,184566884,0,0x0,8
tick,0x7ff8e7af1be4,184583071,0,0x0,8
tick,0x7ff8e7af1be4,184591890,0,0x0,8
tick,0x7ff8e7af1be4,184594327,0,0x0,8
tick,0x7ff8e7af1be4,184595525,0,0x0,8
tick,0x7ff8e7af1be4,184596757,0,0x0,8
tick,0x7ff8e7af1be4,184612816,0,0x0,8
tick,0x7ff8e7af1be4,184628958,0,0x0,8
tick,0x7ff8e7af1be4,184645553,0,0x0,8
tick,0x7ff8e7af1be4,184661594,0,0x0,8
tick,0x7ff8e7af1be4,184677032,0,0x0,8
tick,0x7ff8e7af1be4,184685077,0,0x0,8
tick,0x7ff8e7af1be4,184697026,0,0x0,8
tick,0x7ff8e7af1be4,184706929,0,0x0,8
tick,0x7ff8e7af1be4,184717090,0,0x0,8
tick,0x7ff8e7af1be4,184726864,0,0x0,8
tick,0x7ff8e7af1be4,184746870,0,0x0,8
tick,0x7ff8e7af1be4,184756718,0,0x0,8
tick,0x7ff8e7af1be4,184764795,0,0x0,8
tick,0x7ff8e7af1be4,184776397,0,0x0,8
tick,0x7ff8e7af1be4,184784914,0,0x0,8
tick,0x7ff8e7af1be4,184800231,0,0x0,8
tick,0x7ff8e7af1be4,184816537,0,0x0,8
tick,0x7ff8e7af1be4,184832033,0,0x0,8
tick,0x7ff8e7af1be4,184848084,0,0x0,8
tick,0x7ff8e7af1be4,184863231,0,0x0,8
tick,0x7ff8e7af1be4,184879420,0,0x0,8
tick,0x7ff8e7af1be4,184895108,0,0x0,8
tick,0x7ff8e7af1be4,184911078,0,0x0,8
tick,0x7ff8e7af1be4,184926705,0,0x0,8
tick,0x7ff8e7af1be4,184942903,0,0x0,8
tick,0x7ff8e7af1be4,184958489,0,0x0,8
tick,0x7ff8e7af1be4,184974534,0,0x0,8
tick,0x7ff8e7af1be4,184990330,0,0x0,8
tick,0x7ff8e7af1be4,185006828,0,0x0,8
tick,0x7ff8e7af1be4,185022603,0,0x0,8
tick,0x7ff8e7af1be4,185038386,0,0x0,8
tick,0x7ff8e7af1be4,185054331,0,0x0,8
tick,0x7ff8e7af1be4,185070419,0,0x0,8
tick,0x7ff8e7af1be4,185086593,0,0x0,8
tick,0x7ff8e7af1be4,185102615,0,0x0,8
tick,0x7ff8e7af1be4,185104346,0,0x0,8
tick,0x7ff8e7af1be4,185110575,0,0x0,8
tick,0x7ff8e7af1be4,185113279,0,0x0,8
tick,0x7ff8e7af1be4,185114778,0,0x0,8
tick,0x7ff8e7af1be4,185116350,0,0x0,8
tick,0x7ff8e7af1be4,185117481,0,0x0,8
tick,0x7ff8e7af1be4,185133983,0,0x0,8
tick,0x7ff8e7af1be4,185149987,0,0x0,8
tick,0x7ff8e7af1be4,185165931,0,0x0,8
tick,0x7ff8e7af1be4,185181630,0,0x0,8
tick,0x7ff8e7af1be4,185197062,0,0x0,8
tick,0x7ff8e7af1be4,185213068,0,0x0,8
tick,0x7ff8e7af1be4,185229179,0,0x0,8
tick,0x7ff8e7af1be4,185245185,0,0x0,8
tick,0x7ff8e7af1be4,185260882,0,0x0,8
tick,0x7ff8e7af1be4,185276901,0,0x0,8
tick,0x7ff8e7af1be4,185292313,0,0x0,8
tick,0x7ff8e7af1be4,185307991,0,0x0,8
tick,0x7ff8e7af1be4,185324052,0,0x0,8
tick,0x7ff8e7af1be4,185339295,0,0x0,8
tick,0x7ff8e7af1be4,185355276,0,0x0,8
tick,0x7ff8e7af1be4,185371519,0,0x0,8
tick,0x7ff8e7af1be4,185386756,0,0x0,8
tick,0x7ff8e7af1be4,185403560,0,0x0,8
tick,0x7ff8e7af1be4,185419679,0,0x0,8
tick,0x7ff8e7af1be4,185434838,0,0x0,8
tick,0x7ff8e7af1be4,185451007,0,0x0,8
tick,0x7ff8e7af1be4,185466565,0,0x0,8
tick,0x7ff8e7af1be4,185482086,0,0x0,8
tick,0x7ff8e7af1be4,185497871,0,0x0,8
tick,0x7ff8e7af1be4,185513859,0,0x0,8
tick,0x7ff8e7af1be4,185529804,0,0x0,8
tick,0x7ff8e7af1be4,185546226,0,0x0,8
tick,0x7ff8e7af1be4,185562079,0,0x0,8
tick,0x7ff8e7af1be4,185577954,0,0x0,8
tick,0x7ff8e7af1be4,185594047,0,0x0,8
tick,0x7ff8e7af1be4,185609877,0,0x0,8
tick,0x7ff8e7af1be4,185625753,0,0x0,8
tick,0x7ff8e7af1be4,185635105,0,0x0,8
tick,0x7ff8e7af1be4,185636536,0,0x0,8
tick,0x7ff8e7af1be4,185638841,0,0x0,8
tick,0x7ff8e7af1be4,185640461,0,0x0,8
tick,0x7ff8e7af1be4,185656968,0,0x0,8
tick,0x7ff8e7af1be4,185672286,0,0x0,8
tick,0x7ff8e7af1be4,185688277,0,0x0,8
tick,0x7ff8e7af1be4,185704267,0,0x0,8
tick,0x7ff8e7af1be4,185719929,0,0x0,8
tick,0x7ff8e7af1be4,185735748,0,0x0,8
tick,0x7ff8e7af1be4,185751913,0,0x0,8
tick,0x7ff8e7af1be4,185766938,0,0x0,8
tick,0x7ff8e7af1be4,185783090,0,0x0,8
tick,0x7ff8e7af1be4,185798873,0,0x0,8
tick,0x7ff8e7af1be4,185815086,0,0x0,8
tick,0x7ff8e7af1be4,185830885,0,0x0,8
tick,0x7ff8e7af1be4,185846782,0,0x0,8
tick,0x7ff8e7af1be4,185863188,0,0x0,8
tick,0x7ff8e7af1be4,185879085,0,0x0,8
tick,0x7ff8e7af1be4,185895362,0,0x0,8
tick,0x7ff8e7af1be4,185911828,0,0x0,8
tick,0x7ff8e7af1be4,185927428,0,0x0,8
tick,0x7ff8e7af1be4,185944244,0,0x0,8
tick,0x7ff8e7af1be4,185958354,0,0x0,8
tick,0x7ff8e7af1be4,185975336,0,0x0,8
tick,0x7ff8e7af1be4,185991052,0,0x0,8
tick,0x7ff8e7af1be4,186006968,0,0x0,8
tick,0x7ff8e7af1be4,186023186,0,0x0,8
tick,0x7ff8e7af1be4,186039142,0,0x0,8
tick,0x7ff8e7af1be4,186055730,0,0x0,8
tick,0x7ff8e7af1be4,186071588,0,0x0,8
tick,0x7ff8e7af1be4,186087113,0,0x0,8
tick,0x7ff8e7af1be4,186103113,0,0x0,8
tick,0x7ff8e7af1be4,186119597,0,0x0,8
tick,0x7ff8e7af1be4,186126589,0,0x0,8
tick,0x7ff8e7af1be4,186128633,0,0x0,8
tick,0x7ff8e7af1be4,186130183,0,0x0,8
tick,0x7ff8e7af1be4,186131254,0,0x0,8
tick,0x7ff8e7af1be4,186132587,0,0x0,8
tick,0x7ff8e7af1be4,186148637,0,0x0,8
tick,0x7ff8e7af1be4,186164775,0,0x0,8
tick,0x7ff8e7af1be4,186180495,0,0x0,8
tick,0x7ff8e7af1be4,186197312,0,0x0,8
tick,0x7ff8e7af1be4,186213252,0,0x0,8
tick,0x7ff8e7af1be4,186229093,0,0x0,8
tick,0x7ff8e7af1be4,186245270,0,0x0,8
tick,0x7ff8e7af1be4,186261110,0,0x0,8
tick,0x7ff8e7af1be4,186276723,0,0x0,8
tick,0x7ff8e7af1be4,186292656,0,0x0,8
tick,0x7ff8e7af1be4,186308468,0,0x0,8
tick,0x7ff8e7af1be4,186324172,0,0x0,8
tick,0x7ff8e7af1be4,186340016,0,0x0,8
tick,0x7ff8e7af1be4,186356294,0,0x0,8
tick,0x7ff8e7af1be4,186371942,0,0x0,8
tick,0x7ff8e7af1be4,186387855,0,0x0,8
tick,0x7ff8e7af1be4,186403374,0,0x0,8
tick,0x7ff8e7af1be4,186419350,0,0x0,8
tick,0x7ff8e7af1be4,186435287,0,0x0,8
tick,0x7ff8e7af1be4,186451206,0,0x0,8
tick,0x7ff8e7af1be4,186466935,0,0x0,8
tick,0x7ff8e7af1be4,186482840,0,0x0,8
tick,0x7ff8e7af1be4,186499264,0,0x0,8
tick,0x7ff8e7af1be4,186515293,0,0x0,8
tick,0x7ff8e7af1be4,186530999,0,0x0,8
tick,0x7ff8e7af1be4,186546984,0,0x0,8
tick,0x7ff8e7af1be4,186562884,0,0x0,8
tick,0x7ff8e7af1be4,186578648,0,0x0,8
tick,0x7ff8e7af1be4,186594864,0,0x0,8
tick,0x7ff8e7af1be4,186610465,0,0x0,8
tick,0x7ff8e7af1be4,186626351,0,0x0,8
tick,0x7ff8e7af1be4,186633817,0,0x0,8
tick,0x7ff8e7af1be4,186635489,0,0x0,8
tick,0x7ff8e7af1be4,186651334,0,0x0,8
tick,0x7ff8e7af1be4,186666385,0,0x0,8
tick,0x7ff8e7af1be4,186682599,0,0x0,8
tick,0x7ff8e7af1be4,186698414,0,0x0,8
tick,0x7ff8e7af1be4,186714134,0,0x0,8
tick,0x7ff8e7af1be4,186730436,0,0x0,8
tick,0x7ff8e7af1be4,186746112,0,0x0,8
tick,0x7ff8e7af1be4,186762701,0,0x0,8
tick,0x7ff8e7af1be4,186778186,0,0x0,8
tick,0x7ff8e7af1be4,186794153,0,0x0,8
tick,0x7ff8e7af1be4,186809879,0,0x0,8
tick,0x7ff8e7af1be4,186825739,0,0x0,8
tick,0x7ff8e7af1be4,186841640,0,0x0,8
tick,0x7ff8e7af1be4,186856789,0,0x0,8
tick,0x7ff8e7af1be4,186872683,0,0x0,8
tick,0x7ff8e7af1be4,186888631,0,0x0,8
tick,0x7ff8e7af1be4,186904592,0,0x0,8
tick,0x7ff8e7af1be4,186920204,0,0x0,8
tick,0x7ff8e7af1be4,186936384,0,0x0,8
tick,0x7ff8e7af1be4,186951503,0,0x0,8
tick,0x7ff8e7af1be4,186967524,0,0x0,8
tick,0x7ff8e7af1be4,186983173,0,0x0,8
tick,0x7ff8e7af1be4,186998867,0,0x0,8
tick,0x7ff8e7af1be4,187014866,0,0x0,8
tick,0x7ff8e7af1be4,187030664,0,0x0,8
tick,0x7ff8e7af1be4,187046425,0,0x0,8
tick,0x7ff8e7af1be4,187062554,0,0x0,8
tick,0x7ff8e7af1be4,187077989,0,0x0,8
tick,0x7ff8e7af1be4,187093934,0,0x0,8
tick,0x7ff8e7af1be4,187110921,0,0x0,8
tick,0x7ff8e7af1be4,187127043,0,0x0,8
tick,0x7ff8e7af1be4,187143178,0,0x0,8
tick,0x7ff8e7af1be4,187144985,0,0x0,8
tick,0x7ff8e7af1be4,187149244,0,0x0,8
tick,0x7ff8e7af1be4,187150851,0,0x0,8
tick,0x7ff8e7af1be4,187152630,0,0x0,8
tick,0x7ff8e7af1be4,187168793,0,0x0,8
tick,0x7ff8e7af1be4,187184957,0,0x0,8
tick,0x7ff8e7af1be4,187200971,0,0x0,8
tick,0x7ff8e7af1be4,187217209,0,0x0,8
tick,0x7ff8e7af1be4,187232898,0,0x0,8
tick,0x7ff8e7af1be4,187249079,0,0x0,8
tick,0x7ff8e7af1be4,187265053,0,0x0,8
tick,0x7ff8e7af1be4,187280282,0,0x0,8
tick,0x7ff8e7af1be4,187297515,0,0x0,8
tick,0x7ff8e7af1be4,187312298,0,0x0,8
tick,0x7ff8e7af1be4,187329208,0,0x0,8
tick,0x7ff8e7af1be4,187342743,0,0x0,8
tick,0x7ff8e7af1be4,187359477,0,0x0,8
tick,0x7ff8e7af1be4,187375483,0,0x0,8
tick,0x7ff8e7af1be4,187390733,0,0x0,8
tick,0x7ff8e7af1be4,187407214,0,0x0,8
tick,0x7ff8e7af1be4,187422743,0,0x0,8
tick,0x7ff8e7af1be4,187439079,0,0x0,8
tick,0x7ff8e7af1be4,187455191,0,0x0,8
tick,0x7ff8e7af1be4,187470942,0,0x0,8
tick,0x7ff8e7af1be4,187487371,0,0x0,8
tick,0x7ff8e7af1be4,187503253,0,0x0,8
tick,0x7ff8e7af1be4,187519047,0,0x0,8
tick,0x7ff8e7af1be4,187535042,0,0x0,8
tick,0x7ff8e7af1be4,187550873,0,0x0,8
tick,0x7ff8e7af1be4,187566851,0,0x0,8
tick,0x7ff8e7af1be4,187582762,0,0x0,8
tick,0x7ff8e7af1be4,187598435,0,0x0,8
tick,0x7ff8e7af1be4,187614249,0,0x0,8
tick,0x7ff8e7af1be4,187630174,0,0x0,8
tick,0x7ff8e7af1be4,187646172,0,0x0,8
tick,0x7ff8e7af1be4,187647332,0,0x0,8
tick,0x7ff8e7af1be4,187651259,0,0x0,8
tick,0x7ff8e7af1be4,187666832,0,0x0,8
tick,0x7ff8e7af1be4,187682966,0,0x0,8
tick,0x7ff8e7af1be4,187698366,0,0x0,8
tick,0x7ff8e7af1be4,187714485,0,0x0,8
tick,0x7ff8e7af1be4,187730414,0,0x0,8
tick,0x7ff8e7af1be4,187746575,0,0x0,8
tick,0x7ff8e7af1be4,187762453,0,0x0,8
tick,0x7ff8e7af1be4,187778150,0,0x0,8
tick,0x7ff8e7af1be4,187793747,0,0x0,8
tick,0x7ff8e7af1be4,187809823,0,0x0,8
tick,0x7ff8e7af1be4,187825698,0,0x0,8
tick,0x7ff8e7af1be4,187841816,0,0x0,8
tick,0x7ff8e7af1be4,187856980,0,0x0,8
tick,0x7ff8e7af1be4,187872507,0,0x0,8
tick,0x7ff8e7af1be4,187888529,0,0x0,8
tick,0x7ff8e7af1be4,187904560,0,0x0,8
tick,0x7ff8e7af1be4,187921185,0,0x0,8
tick,0x7ff8e7af1be4,187937878,0,0x0,8
tick,0x7ff8e7af1be4,187953426,0,0x0,8
tick,0x7ff8e7af1be4,187968668,0,0x0,8
tick,0x7ff8e7af1be4,187984606,0,0x0,8
tick,0x7ff8e7af1be4,188000603,0,0x0,8
tick,0x7ff8e7af1be4,188016586,0,0x0,8
tick,0x7ff8e7af1be4,188032280,0,0x0,8
tick,0x7ff8e7af1be4,188048268,0,0x0,8
tick,0x7ff8e7af1be4,188064616,0,0x0,8
tick,0x7ff8e7af1be4,188080431,0,0x0,8
tick,0x7ff8e7af1be4,188096133,0,0x0,8
tick,0x7ff8e7af1be4,188098074,0,0x0,8
tick,0x7ff8e7af1be4,188114236,0,0x0,8
tick,0x7ff8e7af1be4,188130010,0,0x0,8
tick,0x7ff8e7af1be4,188145800,0,0x0,8
tick,0x7ff8e7af1be4,188167878,0,0x0,8
tick,0x7ff8e7af1be4,188169604,0,0x0,8
tick,0x7ff8e7af1be4,188171862,0,0x0,8
tick,0x7ff8e7af1be4,188176331,0,0x0,8
tick,0x7ff8e7af1be4,188188031,0,0x0,8
tick,0x7ff8e7af1be4,188204201,0,0x0,8
tick,0x7ff8e7af1be4,188219731,0,0x0,8
tick,0x7ff8e7af1be4,188235849,0,0x0,8
tick,0x7ff8e7af1be4,188251737,0,0x0,8
tick,0x7ff8e7af1be4,188268061,0,0x0,8
tick,0x7ff8e7af1be4,188283920,0,0x0,8
tick,0x7ff8e7af1be4,188299413,0,0x0,8
tick,0x7ff8e7af1be4,188315570,0,0x0,8
tick,0x7ff8e7af1be4,188332107,0,0x0,8
tick,0x7ff8e7af1be4,188346883,0,0x0,8
tick,0x7ff8e7af1be4,188362643,0,0x0,8
tick,0x7ff8e7af1be4,188378373,0,0x0,8
tick,0x7ff8e7af1be4,188394187,0,0x0,8
tick,0x7ff8e7af1be4,188409997,0,0x0,8
tick,0x7ff8e7af1be4,188425906,0,0x0,8
tick,0x7ff8e7af1be4,188441745,0,0x0,8
tick,0x7ff8e7af1be4,188456957,0,0x0,8
tick,0x7ff8e7af1be4,188472566,0,0x0,8
tick,0x7ff8e7af1be4,188488602,0,0x0,8
tick,0x7ff8e7af1be4,188504276,0,0x0,8
tick,0x7ff8e7af1be4,188520456,0,0x0,8
tick,0x7ff8e7af1be4,188536487,0,0x0,8
tick,0x7ff8e7af1be4,188552609,0,0x0,8
tick,0x7ff8e7af1be4,188568416,0,0x0,8
tick,0x7ff8e7af1be4,188584734,0,0x0,8
tick,0x7ff8e7af1be4,188601317,0,0x0,8
tick,0x7ff8e7af1be4,188619013,0,0x0,8
tick,0x7ff8e7af1be4,188632930,0,0x0,8
tick,0x7ff8e7af1be4,188648596,0,0x0,8
tick,0x7ff8e7af1be4,188664505,0,0x0,8
tick,0x7ff8e7af1be4,188668286,0,0x0,8
tick,0x7ff8e7af1be4,188685163,0,0x0,8
tick,0x7ff8e7af1be4,188700573,0,0x0,8
tick,0x7ff8e7af1be4,188716778,0,0x0,8
tick,0x7ff8e7af1be4,188732719,0,0x0,8
tick,0x7ff8e7af1be4,188748751,0,0x0,8
tick,0x7ff8e7af1be4,188764426,0,0x0,8
tick,0x7ff8e7af1be4,188780491,0,0x0,8
tick,0x7ff8e7af1be4,188796321,0,0x0,8
tick,0x7ff8e7af1be4,188812461,0,0x0,8
tick,0x7ff8e7af1be4,188820723,0,0x0,8
tick,0x7ff8e7af1be4,188836861,0,0x0,8
tick,0x7ff8e7af1be4,188852397,0,0x0,8
tick,0x7ff8e7af1be4,188868406,0,0x0,8
tick,0x7ff8e7af1be4,188884572,0,0x0,8
tick,0x7ff8e7af1be4,188900453,0,0x0,8
tick,0x7ff8e7af1be4,188916762,0,0x0,8
tick,0x7ff8e7af1be4,188927065,0,0x0,8
tick,0x7ff8e7af1be4,188930151,0,0x0,8
tick,0x7ff8e7af1be4,188946602,0,0x0,8
tick,0x7ff8e7af1be4,188963350,0,0x0,8
tick,0x7ff8e7af1be4,188978793,0,0x0,8
tick,0x7ff8e7af1be4,188994094,0,0x0,8
tick,0x7ff8e7af1be4,189009828,0,0x0,8
tick,0x7ff8e7af1be4,189025595,0,0x0,8
tick,0x7ff8e7af1be4,189041986,0,0x0,8
tick,0x7ff8e7af1be4,189057580,0,0x0,8
tick,0x7ff8e7af1be4,189073256,0,0x0,8
tick,0x7ff8e7af1be4,189089644,0,0x0,8
tick,0x7ff8e7af1be4,189105640,0,0x0,8
tick,0x7ff8e7af1be4,189120669,0,0x0,8
tick,0x7ff8e7af1be4,189137040,0,0x0,8
tick,0x7ff8e7af1be4,189153424,0,0x0,8
tick,0x7ff8e7af1be4,189168944,0,0x0,8
tick,0x7ff8e7af1be4,189185115,0,0x0,8
tick,0x7ff8e7af1be4,189197836,0,0x0,8
tick,0x7ff8e7af1be4,189199022,0,0x0,8
tick,0x7ff8e7af1be4,189216109,0,0x0,8
tick,0x7ff8e7af1be4,189231925,0,0x0,8
tick,0x7ff8e7af1be4,189247064,0,0x0,8
tick,0x7ff8e7af1be4,189263138,0,0x0,8
tick,0x7ff8e7af1be4,189278952,0,0x0,8
tick,0x7ff8e7af1be4,189294879,0,0x0,8
tick,0x7ff8e7af1be4,189321968,0,0x0,8
tick,0x7ff8e7af1be4,189331738,0,0x0,8
tick,0x7ff8e7af1be4,189342476,0,0x0,8
tick,0x7ff8e7af1be4,189356764,0,0x0,8
tick,0x7ff8e7af1be4,189366856,0,0x0,8
tick,0x7ff8e7af1be4,189375181,0,0x0,8
tick,0x7ff8e7af1be4,189391481,0,0x0,8
tick,0x7ff8e7af1be4,189399908,0,0x0,8
tick,0x7ff8e7af1be4,189408195,0,0x0,8
tick,0x7ff8e7af1be4,189424763,0,0x0,8
tick,0x7ff8e7af1be4,189441159,0,0x0,8
tick,0x7ff8e7af1be4,189449442,0,0x0,8
tick,0x7ff8e7af1be4,189460430,0,0x0,8
tick,0x7ff8e7af1be4,189473838,0,0x0,8
tick,0x7ff8e7af1be4,189489823,0,0x0,8
tick,0x7ff8e7af1be4,189499664,0,0x0,8
tick,0x7ff8e7af1be4,189507985,0,0x0,8
tick,0x7ff8e7af1be4,189523943,0,0x0,8
tick,0x7ff8e7af1be4,189539989,0,0x0,8
tick,0x7ff8e7af1be4,189555715,0,0x0,8
tick,0x7ff8e7af1be4,189571802,0,0x0,8
tick,0x7ff8e7af1be4,189587532,0,0x0,8
tick,0x7ff8e7af1be4,189603370,0,0x0,8
tick,0x7ff8e7af1be4,189620155,0,0x0,8
tick,0x7ff8e7af1be4,189627794,0,0x0,8
tick,0x7ff8e7af1be4,189645297,0,0x0,8
tick,0x7ff8e7af1be4,189658588,0,0x0,8
tick,0x7ff8e7af1be4,189674613,0,0x0,8
tick,0x7ff8e7af1be4,189682894,0,0x0,8
tick,0x7ff8e7af1be4,189708326,0,0x0,8
tick,0x7ff8e7af1be4,189708359,0,0x0,8
tick,0x7ff8e7af1be4,189722984,0,0x0,8
tick,0x7ff8e7af1be4,189761886,0,0x0,8
tick,0x7ff8e7af1be4,189765473,0,0x0,8
tick,0x7ff8e7af1be4,189779656,0,0x0,8
tick,0x7ff8e7af1be4,189796469,0,0x0,8
tick,0x7ff8e7af1be4,189806738,0,0x0,8
tick,0x7ff8e7af1be4,189816271,0,0x0,8
tick,0x7ff8e7af1be4,189826561,0,0x0,8
tick,0x7ff8e7af1be4,189842472,0,0x0,8
tick,0x7ff8e7af1be4,189850502,0,0x0,8
tick,0x7ff8e7af1be4,189866631,0,0x0,8
tick,0x7ff8e7af1be4,189874225,0,0x0,8
tick,0x7ff8e7af1be4,189886522,0,0x0,8
tick,0x7ff8e7af1be4,189898477,0,0x0,8
tick,0x7ff8e7af1be4,189914850,0,0x0,8
tick,0x7ff8e7af1be4,189923014,0,0x0,8
tick,0x7ff8e7af1be4,189931443,0,0x0,8
tick,0x7ff8e7af1be4,189941571,0,0x0,8
tick,0x7ff8e7af1be4,189957629,0,0x0,8
tick,0x7ff8e7af1be4,189973875,0,0x0,8
tick,0x7ff8e7af1be4,189994356,0,0x0,8
tick,0x7ff8e7af1be4,189999145,0,0x0,8
tick,0x7ff8e7af1be4,190015282,0,0x0,8
tick,0x7ff8e7af1be4,190031575,0,0x0,8
tick,0x7ff8e7af1be4,190046739,0,0x0,8
tick,0x7ff8e7af1be4,190055420,0,0x0,8
tick,0x7ff8e7af1be4,190070680,0,0x0,8
tick,0x7ff8e7af1be4,190086555,0,0x0,8
tick,0x7ff8e7af1be4,190102829,0,0x0,8
tick,0x7ff8e7af1be4,190112943,0,0x0,8
tick,0x7ff8e7af1be4,190126850,0,0x0,8
tick,0x7ff8e7af1be4,190135446,0,0x0,8
tick,0x7ff8e7af1be4,190151392,0,0x0,8
tick,0x7ff8e7af1be4,190166999,0,0x0,8
tick,0x7ff8e7af1be4,190176352,0,0x0,8
tick,0x7ff8e7af1be4,190186543,0,0x0,8
tick,0x7ff8e7af1be4,190199203,0,0x0,8
tick,0x7ff8e7af1be4,190208416,0,0x0,8
tick,0x7ff8e7af1be4,190220698,0,0x0,8
tick,0x7ff8e7af1be4,190236588,0,0x0,8
tick,0x7ff8e7af1be4,190245126,0,0x0,8
tick,0x7ff8e7af1be4,190254942,0,0x0,8
tick,0x7ff8e7af1be4,190275080,0,0x0,8
tick,0x7ff8e7af1be4,190286904,0,0x0,8
tick,0x7ff8e7af1be4,190299407,0,0x0,8
tick,0x7ff8e7af1be4,190315095,0,0x0,8
tick,0x7ff8e7af1be4,190324698,0,0x0,8
tick,0x7ff8e7af1be4,190333624,0,0x0,8
tick,0x7ff8e7af1be4,190349644,0,0x0,8
tick,0x7ff8e7af1be4,190365621,0,0x0,8
tick,0x7ff8e7af1be4,190381880,0,0x0,8
tick,0x7ff8e7af1be4,190398141,0,0x0,8
tick,0x7ff8e7af1be4,190416502,0,0x0,8
tick,0x7ff8e7af1be4,190431212,0,0x0,8
tick,0x7ff8e7af1be4,190444581,0,0x0,8
tick,0x7ff8e7af1be4,190460263,0,0x0,8
tick,0x7ff8e7af1be4,190476343,0,0x0,8
tick,0x7ff8e7af1be4,190484680,0,0x0,8
tick,0x7ff8e7af1be4,190501490,0,0x0,8
tick,0x7ff8e7af1be4,190511267,0,0x0,8
tick,0x7ff8e7af1be4,190521245,0,0x0,8
tick,0x7ff8e7af1be4,190534304,0,0x0,8
tick,0x7ff8e7af1be4,190542360,0,0x0,8
tick,0x7ff8e7af1be4,190556203,0,0x0,8
tick,0x7ff8e7af1be4,190566369,0,0x0,8
tick,0x7ff8e7af1be4,190576427,0,0x0,8
tick,0x7ff8e7af1be4,190586371,0,0x0,8
tick,0x7ff8e7af1be4,190599909,0,0x0,8
tick,0x7ff8e7af1be4,190611354,0,0x0,8
tick,0x7ff8e7af1be4,190624554,0,0x0,8
tick,0x7ff8e7af1be4,190641011,0,0x0,8
tick,0x7ff8e7af1be4,190648868,0,0x0,8
tick,0x7ff8e7af1be4,190664836,0,0x0,8
tick,0x7ff8e7af1be4,190672585,0,0x0,8
tick,0x7ff8e7af1be4,190681777,0,0x0,8
tick,0x7ff8e7af1be4,190711227,0,0x0,8
tick,0x7ff8e7af1be4,190711274,0,0x0,8
tick,0x7ff8e7af1be4,190711286,0,0x0,8
tick,0x7ff8e7af1be4,190711297,0,0x0,8
tick,0x7ff8e7af1be4,190716764,0,0x0,8
tick,0x7ff8e7af1be4,190732643,0,0x0,8
tick,0x7ff8e7af1be4,190748272,0,0x0,8
tick,0x7ff8e7af1be4,190764330,0,0x0,8
tick,0x7ff8e7af1be4,190780268,0,0x0,8
tick,0x7ff8e7af1be4,190795873,0,0x0,8
tick,0x7ff8e7af1be4,190811609,0,0x0,8
tick,0x7ff8e7af1be4,190827079,0,0x0,8
tick,0x7ff8e7af1be4,190842805,0,0x0,8
tick,0x7ff8e7af1be4,190858450,0,0x0,8
tick,0x7ff8e7af1be4,190874292,0,0x0,8
tick,0x7ff8e7af1be4,190886780,0,0x0,8
tick,0x7ff8e7af1be4,190895046,0,0x0,8
tick,0x7ff8e7af1be4,190903186,0,0x0,8
tick,0x7ff8e7af1be4,190911521,0,0x0,8
tick,0x7ff8e7af1be4,190928008,0,0x0,8
tick,0x7ff8e7af1be4,190936294,0,0x0,8
tick,0x7ff8e7af1be4,190944907,0,0x0,8
tick,0x7ff8e7af1be4,190952640,0,0x0,8
tick,0x7ff8e7af1be4,190976420,0,0x0,8
tick,0x7ff8e7af1be4,190992283,0,0x0,8
tick,0x7ff8e7af1be4,191008449,0,0x0,8
tick,0x7ff8e7af1be4,191016851,0,0x0,8
tick,0x7ff8e7af1be4,191033336,0,0x0,8
tick,0x7ff8e7af1be4,191041709,0,0x0,8
tick,0x7ff8e7af1be4,191057839,0,0x0,8
tick,0x7ff8e7af1be4,191073690,0,0x0,8
tick,0x7ff8e7af1be4,191081705,0,0x0,8
tick,0x7ff8e7af1be4,191089768,0,0x0,8
tick,0x7ff8e7af1be4,191114223,0,0x0,8
tick,0x7ff8e7af1be4,191130063,0,0x0,8
tick,0x7ff8e7af1be4,191145394,0,0x0,8
tick,0x7ff8e7af1be4,191161439,0,0x0,8
tick,0x7ff8e7af1be4,191178312,0,0x0,8
tick,0x7ff8e7af1be4,191194665,0,0x0,8
tick,0x7ff8e7af1be4,191202556,0,0x0,8
tick,0x7ff8e7af1be4,191209834,0,0x0,8
tick,0x7ff8e7af1be4,191225708,0,0x0,8
tick,0x7ff8e7af1be4,191242064,0,0x0,8
tick,0x7ff8e7af1be4,191252246,0,0x0,8
tick,0x7ff8e7af1be4,191266640,0,0x0,8
tick,0x7ff8e7af1be4,191274458,0,0x0,8
tick,0x7ff8e7af1be4,191291100,0,0x0,8
tick,0x7ff8e7af1be4,191307409,0,0x0,8
tick,0x7ff8e7af1be4,191315540,0,0x0,8
tick,0x7ff8e7af1be4,191331875,0,0x0,8
tick,0x7ff8e7af1be4,191348366,0,0x0,8
tick,0x7ff8e7af1be4,191364760,0,0x0,8
tick,0x7ff8e7af1be4,191380522,0,0x0,8
tick,0x7ff8e7af1be4,191388816,0,0x0,8
tick,0x7ff8e7af1be4,191405392,0,0x0,8
tick,0x7ff8e7af1be4,191422389,0,0x0,8
tick,0x7ff8e7af1be4,191438058,0,0x0,8
tick,0x7ff8e7af1be4,191446040,0,0x0,8
tick,0x7ff8e7af1be4,191462005,0,0x0,8
tick,0x7ff8e7af1be4,191478720,0,0x0,8
tick,0x7ff8e7af1be4,191494480,0,0x0,8
tick,0x7ff8e7af1be4,191510439,0,0x0,8
tick,0x7ff8e7af1be4,191527045,0,0x0,8
tick,0x7ff8e7af1be4,191542402,0,0x0,8
tick,0x7ff8e7af1be4,191558032,0,0x0,8
tick,0x7ff8e7af1be4,191574220,0,0x0,8
tick,0x7ff8e7af1be4,191590238,0,0x0,8
tick,0x7ff8e7af1be4,191602071,0,0x0,8
tick,0x7ff8e7af1be4,191618215,0,0x0,8
tick,0x7ff8e7af1be4,191634673,0,0x0,8
tick,0x7ff8e7af1be4,191650774,0,0x0,8
tick,0x7ff8e7af1be4,191667561,0,0x0,8
tick,0x7ff8e7af1be4,191683698,0,0x0,8
tick,0x7ff8e7af1be4,191700115,0,0x0,8
tick,0x7ff8e7af1be4,191708040,0,0x0,8
tick,0x7ff8e7af1be4,191717049,0,0x0,8
tick,0x7ff8e7af1be4,191732906,0,0x0,8
tick,0x7ff8e7af1be4,191741083,0,0x0,8
tick,0x7ff8e7af1be4,191757254,0,0x0,8
tick,0x7ff8e7af1be4,191773494,0,0x0,8
tick,0x7ff8e7af1be4,191786452,0,0x0,8
tick,0x7ff8e7af1be4,191797280,0,0x0,8
tick,0x7ff8e7af1be4,191809138,0,0x0,8
tick,0x7ff8e7af1be4,191824878,0,0x0,8
tick,0x7ff8e7af1be4,191841081,0,0x0,8
tick,0x7ff8e7af1be4,191856974,0,0x0,8
tick,0x7ff8e7af1be4,191873074,0,0x0,8
tick,0x7ff8e7af1be4,191888770,0,0x0,8
tick,0x7ff8e7af1be4,191904676,0,0x0,8
tick,0x7ff8e7af1be4,191920412,0,0x0,8
tick,0x7ff8e7af1be4,191936396,0,0x0,8
tick,0x7ff8e7af1be4,191952394,0,0x0,8
tick,0x7ff8e7af1be4,191969017,0,0x0,8
tick,0x7ff8e7af1be4,191984743,0,0x0,8
tick,0x7ff8e7af1be4,192000950,0,0x0,8
tick,0x7ff8e7af1be4,192016400,0,0x0,8
tick,0x7ff8e7af1be4,192032233,0,0x0,8
tick,0x7ff8e7af1be4,192048744,0,0x0,8
tick,0x7ff8e7af1be4,192063826,0,0x0,8
tick,0x7ff8e7af1be4,192079500,0,0x0,8
tick,0x7ff8e7af1be4,192095597,0,0x0,8
tick,0x7ff8e7af1be4,192111883,0,0x0,8
tick,0x7ff8e7af1be4,192127811,0,0x0,8
tick,0x7ff8e7af1be4,192142941,0,0x0,8
tick,0x7ff8e7af1be4,192158951,0,0x0,8
tick,0x7ff8e7af1be4,192174533,0,0x0,8
tick,0x7ff8e7af1be4,192190410,0,0x0,8
tick,0x7ff8e7af1be4,192205894,0,0x0,8
tick,0x7ff8e7af1be4,192221979,0,0x0,8
tick,0x7ff8e7af1be4,192237952,0,0x0,8
tick,0x7ff8e7af1be4,192253918,0,0x0,8
tick,0x7ff8e7af1be4,192270049,0,0x0,8
tick,0x7ff8e7af1be4,192285771,0,0x0,8
tick,0x7ff8e7af1be4,192289329,0,0x0,8
tick,0x7ff8e7af1be4,192291527,0,0x0,8
tick,0x7ff8e7af1be4,192292845,0,0x0,8
tick,0x7ff8e7af1be4,192297465,0,0x0,8
tick,0x7ff8e7af1be4,192308897,0,0x0,8
tick,0x7ff8e7af1be4,192325080,0,0x0,8
tick,0x7ff8e7af1be4,192340683,0,0x0,8
tick,0x7ff8e7af1be4,192356703,0,0x0,8
tick,0x7ff8e7af1be4,192372740,0,0x0,8
tick,0x7ff8e7af1be4,192388844,0,0x0,8
tick,0x7ff8e7af1be4,192405318,0,0x0,8
tick,0x7ff8e7af1be4,192421107,0,0x0,8
tick,0x7ff8e7af1be4,192435846,0,0x0,8
tick,0x7ff8e7af1be4,192451881,0,0x0,8
tick,0x7ff8e7af1be4,192462171,0,0x0,8
tick,0x7ff8e7af1be4,192475666,0,0x0,8
tick,0x7ff8e7af1be4,192491808,0,0x0,8
tick,0x7ff8e7af1be4,192507305,0,0x0,8
tick,0x7ff8e7af1be4,192523636,0,0x0,8
tick,0x7ff8e7af1be4,192539382,0,0x0,8
tick,0x7ff8e7af1be4,192555627,0,0x0,8
tick,0x7ff8e7af1be4,192571100,0,0x0,8
tick,0x7ff8e7af1be4,192586916,0,0x0,8
tick,0x7ff8e7af1be4,192602676,0,0x0,8
tick,0x7ff8e7af1be4,192618599,0,0x0,8
tick,0x7ff8e7af1be4,192634511,0,0x0,8
tick,0x7ff8e7af1be4,192650259,0,0x0,8
tick,0x7ff8e7af1be4,192666868,0,0x0,8
tick,0x7ff8e7af1be4,192682228,0,0x0,8
tick,0x7ff8e7af1be4,192698663,0,0x0,8
tick,0x7ff8e7af1be4,192714833,0,0x0,8
tick,0x7ff8e7af1be4,192730655,0,0x0,8
tick,0x7ff8e7af1be4,192746642,0,0x0,8
tick,0x7ff8e7af1be4,192751708,0,0x0,8
tick,0x7ff8e7af1be4,192753284,0,0x0,8
tick,0x7ff8e7af1be4,192755326,0,0x0,8
tick,0x7ff8e7af1be4,192772323,0,0x0,8
tick,0x7ff8e7af1be4,192788302,0,0x0,8
tick,0x7ff8e7af1be4,192798516,0,0x0,8
tick,0x7ff8e7af1be4,192815025,0,0x0,8
tick,0x7ff8e7af1be4,192839092,0,0x0,8
tick,0x7ff8e7af1be4,192847206,0,0x0,8
tick,0x7ff8e7af1be4,192863491,0,0x0,8
tick,0x7ff8e7af1be4,192879166,0,0x0,8
tick,0x7ff8e7af1be4,192887195,0,0x0,8
tick,0x7ff8e7af1be4,192894784,0,0x0,8
tick,0x7ff8e7af1be4,192906697,0,0x0,8
tick,0x7ff8e7af1be4,192915161,0,0x0,8
tick,0x7ff8e7af1be4,192931559,0,0x0,8
tick,0x7ff8e7af1be4,192947750,0,0x0,8
tick,0x7ff8e7af1be4,192963380,0,0x0,8
tick,0x7ff8e7af1be4,192979429,0,0x0,8
tick,0x7ff8e7af1be4,192995515,0,0x0,8
tick,0x7ff8e7af1be4,193011380,0,0x0,8
tick,0x7ff8e7af1be4,193027400,0,0x0,8
tick,0x7ff8e7af1be4,193042744,0,0x0,8
tick,0x7ff8e7af1be4,193058682,0,0x0,8
tick,0x7ff8e7af1be4,193074408,0,0x0,8
tick,0x7ff8e7af1be4,193090146,0,0x0,8
tick,0x7ff8e7af1be4,193106084,0,0x0,8
tick,0x7ff8e7af1be4,193121987,0,0x0,8
tick,0x7ff8e7af1be4,193137500,0,0x0,8
tick,0x7ff8e7af1be4,193153108,0,0x0,8
tick,0x7ff8e7af1be4,193169452,0,0x0,8
tick,0x7ff8e7af1be4,193185048,0,0x0,8
tick,0x7ff8e7af1be4,193201276,0,0x0,8
tick,0x7ff8e7af1be4,193216805,0,0x0,8
tick,0x7ff8e7af1be4,193232669,0,0x0,8
tick,0x7ff8e7af1be4,193248640,0,0x0,8
tick,0x7ff8e7af1be4,193264438,0,0x0,8
tick,0x7ff8e7af1be4,193268963,0,0x0,8
tick,0x7ff8e7af1be4,193270335,0,0x0,8
tick,0x7ff8e7af1be4,193286706,0,0x0,8
tick,0x7ff8e7af1be4,193302368,0,0x0,8
tick,0x7ff8e7af1be4,193318314,0,0x0,8
tick,0x7ff8e7af1be4,193333747,0,0x0,8
tick,0x7ff8e7af1be4,193349355,0,0x0,8
tick,0x7ff8e7af1be4,193364932,0,0x0,8
tick,0x7ff8e7af1be4,193380717,0,0x0,8
tick,0x7ff8e7af1be4,193396406,0,0x0,8
tick,0x7ff8e7af1be4,193412428,0,0x0,8
tick,0x7ff8e7af1be4,193428202,0,0x0,8
tick,0x7ff8e7af1be4,193443932,0,0x0,8
tick,0x7ff8e7af1be4,193459644,0,0x0,8
tick,0x7ff8e7af1be4,193475042,0,0x0,8
tick,0x7ff8e7af1be4,193490752,0,0x0,8
tick,0x7ff8e7af1be4,193507307,0,0x0,8
tick,0x7ff8e7af1be4,193522368,0,0x0,8
tick,0x7ff8e7af1be4,193538019,0,0x0,8
tick,0x7ff8e7af1be4,193554302,0,0x0,8
tick,0x7ff8e7af1be4,193570256,0,0x0,8
tick,0x7ff8e7af1be4,193586166,0,0x0,8
tick,0x7ff8e7af1be4,193602398,0,0x0,8
tick,0x7ff8e7af1be4,193617590,0,0x0,8
tick,0x7ff8e7af1be4,193633225,0,0x0,8
tick,0x7ff8e7af1be4,193649365,0,0x0,8
tick,0x7ff8e7af1be4,193665260,0,0x0,8
tick,0x7ff8e7af1be4,193680936,0,0x0,8
tick,0x7ff8e7af1be4,193697771,0,0x0,8
tick,0x7ff8e7af1be4,193713604,0,0x0,8
tick,0x7ff8e7af1be4,193728834,0,0x0,8
tick,0x7ff8e7af1be4,193743971,0,0x0,8
tick,0x7ff8e7af1be4,193759198,0,0x0,8
tick,0x7ff8e7af1be4,193774998,0,0x0,8
tick,0x7ff8e7af1be4,193776280,0,0x0,8
tick,0x7ff8e7af1be4,193778747,0,0x0,8
tick,0x7ff8e7af1be4,193779881,0,0x0,8
tick,0x7ff8e7af1be4,193796845,0,0x0,8
tick,0x7ff8e7af1be4,193812802,0,0x0,8
tick,0x7ff8e7af1be4,193828601,0,0x0,8
tick,0x7ff8e7af1be4,193844205,0,0x0,8
tick,0x7ff8e7af1be4,193860103,0,0x0,8
tick,0x7ff8e7af1be4,193876186,0,0x0,8
tick,0x7ff8e7af1be4,193892176,0,0x0,8
tick,0x7ff8e7af1be4,193908125,0,0x0,8
tick,0x7ff8e7af1be4,193923789,0,0x0,8
tick,0x7ff8e7af1be4,193939647,0,0x0,8
tick,0x7ff8e7af1be4,193947663,0,0x0,8
tick,0x7ff8e7af1be4,193956047,0,0x0,8
tick,0x7ff8e7af1be4,193964586,0,0x0,8
tick,0x7ff8e7af1be4,193980238,0,0x0,8
tick,0x7ff8e7af1be4,193996246,0,0x0,8
tick,0x7ff8e7af1be4,194012411,0,0x0,8
tick,0x7ff8e7af1be4,194028094,0,0x0,8
tick,0x7ff8e7af1be4,194043891,0,0x0,8
tick,0x7ff8e7af1be4,194059583,0,0x0,8
tick,0x7ff8e7af1be4,194075493,0,0x0,8
tick,0x7ff8e7af1be4,194091531,0,0x0,8
tick,0x7ff8e7af1be4,194107376,0,0x0,8
tick,0x7ff8e7af1be4,194123318,0,0x0,8
tick,0x7ff8e7af1be4,194139348,0,0x0,8
tick,0x7ff8e7af1be4,194155155,0,0x0,8
tick,0x7ff8e7af1be4,194170906,0,0x0,8
tick,0x7ff8e7af1be4,194179392,0,0x0,8
tick,0x7ff8e7af1be4,194187833,0,0x0,8
tick,0x7ff8e7af1be4,194196256,0,0x0,8
tick,0x7ff8e7af1be4,194212436,0,0x0,8
tick,0x7ff8e7af1be4,194228147,0,0x0,8
tick,0x7ff8e7af1be4,194243907,0,0x0,8
tick,0x7ff8e7af1be4,194254103,0,0x0,8
tick,0x7ff8e7af1be4,194268294,0,0x0,8
tick,0x7ff8e7af1be4,194284875,0,0x0,8
tick,0x7ff8e7af1be4,194292970,0,0x0,8
tick,0x7ff8e7af1be4,194309743,0,0x0,8
tick,0x7ff8e7af1be4,194325515,0,0x0,8
tick,0x7ff8e7af1be4,194341683,0,0x0,8
tick,0x7ff8e7af1be4,194357479,0,0x0,8
tick,0x7ff8e7af1be4,194373559,0,0x0,8
tick,0x7ff8e7af1be4,194389774,0,0x0,8
tick,0x7ff8e7af1be4,194399865,0,0x0,8
tick,0x7ff8e7af1be4,194422089,0,0x0,8
tick,0x7ff8e7af1be4,194438366,0,0x0,8
tick,0x7ff8e7af1be4,194454130,0,0x0,8
tick,0x7ff8e7af1be4,194462280,0,0x0,8
tick,0x7ff8e7af1be4,194477977,0,0x0,8
tick,0x7ff8e7af1be4,194493838,0,0x0,8
tick,0x7ff8e7af1be4,194509946,0,0x0,8
tick,0x7ff8e7af1be4,194526017,0,0x0,8
tick,0x7ff8e7af1be4,194542022,0,0x0,8
tick,0x7ff8e7af1be4,194557901,0,0x0,8
tick,0x7ff8e7af1be4,194573706,0,0x0,8
tick,0x7ff8e7af1be4,194589254,0,0x0,8
tick,0x7ff8e7af1be4,194605115,0,0x0,8
tick,0x7ff8e7af1be4,194621283,0,0x0,8
tick,0x7ff8e7af1be4,194637261,0,0x0,8
tick,0x7ff8e7af1be4,194652952,0,0x0,8
tick,0x7ff8e7af1be4,194668903,0,0x0,8
tick,0x7ff8e7af1be4,194684740,0,0x0,8
tick,0x7ff8e7af1be4,194700742,0,0x0,8
tick,0x7ff8e7af1be4,194710969,0,0x0,8
tick,0x7ff8e7af1be4,194724219,0,0x0,8
tick,0x7ff8e7af1be4,194740979,0,0x0,8
tick,0x7ff8e7af1be4,194753927,0,0x0,8
tick,0x7ff8e7af1be4,194764646,0,0x0,8
tick,0x7ff8e7af1be4,194789069,0,0x0,8
tick,0x7ff8e7af1be4,194791316,0,0x0,8
tick,0x7ff8e7af1be4,194795670,0,0x0,8
tick,0x7ff8e7af1be4,194797666,0,0x0,8
tick,0x7ff8e7af1be4,194799082,0,0x0,8
tick,0x7ff8e7af1be4,194800326,0,0x0,8
tick,0x7ff8e7af1be4,194816447,0,0x0,8
tick,0x7ff8e7af1be4,194832476,0,0x0,8
tick,0x7ff8e7af1be4,194848167,0,0x0,8
tick,0x7ff8e7af1be4,194863960,0,0x0,8
tick,0x7ff8e7af1be4,194879623,0,0x0,8
tick,0x7ff8e7af1be4,194895395,0,0x0,8
tick,0x7ff8e7af1be4,194911000,0,0x0,8
tick,0x7ff8e7af1be4,194926663,0,0x0,8
tick,0x7ff8e7af1be4,194942714,0,0x0,8
tick,0x7ff8e7af1be4,194958933,0,0x0,8
tick,0x7ff8e7af1be4,194974731,0,0x0,8
tick,0x7ff8e7af1be4,194990424,0,0x0,8
tick,0x7ff8e7af1be4,195007013,0,0x0,8
tick,0x7ff8e7af1be4,195023267,0,0x0,8
tick,0x7ff8e7af1be4,195038476,0,0x0,8
tick,0x7ff8e7af1be4,195054407,0,0x0,8
tick,0x7ff8e7af1be4,195070246,0,0x0,8
tick,0x7ff8e7af1be4,195086422,0,0x0,8
tick,0x7ff8e7af1be4,195101805,0,0x0,8
tick,0x7ff8e7af1be4,195117845,0,0x0,8
tick,0x7ff8e7af1be4,195133920,0,0x0,8
tick,0x7ff8e7af1be4,195149892,0,0x0,8
tick,0x7ff8e7af1be4,195165468,0,0x0,8
tick,0x7ff8e7af1be4,195181179,0,0x0,8
tick,0x7ff8e7af1be4,195198523,0,0x0,8
tick,0x7ff8e7af1be4,195213627,0,0x0,8
tick,0x7ff8e7af1be4,195229475,0,0x0,8
tick,0x7ff8e7af1be4,195245250,0,0x0,8
tick,0x7ff8e7af1be4,195261427,0,0x0,8
tick,0x7ff8e7af1be4,195276831,0,0x0,8
tick,0x7ff8e7af1be4,195292438,0,0x0,8
tick,0x7ff8e7af1be4,195295534,0,0x0,8
tick,0x7ff8e7af1be4,195297136,0,0x0,8
tick,0x7ff8e7af1be4,195313095,0,0x0,8
tick,0x7ff8e7af1be4,195328977,0,0x0,8
tick,0x7ff8e7af1be4,195344752,0,0x0,8
tick,0x7ff8e7af1be4,195353059,0,0x0,8
tick,0x7ff8e7af1be4,195361046,0,0x0,8
tick,0x7ff8e7af1be4,195369538,0,0x0,8
tick,0x7ff8e7af1be4,195386136,0,0x0,8
tick,0x7ff8e7af1be4,195401587,0,0x0,8
tick,0x7ff8e7af1be4,195411011,0,0x0,8
tick,0x7ff8e7af1be4,195427471,0,0x0,8
tick,0x7ff8e7af1be4,195443208,0,0x0,8
tick,0x7ff8e7af1be4,195451092,0,0x0,8
tick,0x7ff8e7af1be4,195459355,0,0x0,8
tick,0x7ff8e7af1be4,195475343,0,0x0,8
tick,0x7ff8e7af1be4,195490986,0,0x0,8
tick,0x7ff8e7af1be4,195506996,0,0x0,8
tick,0x7ff8e7af1be4,195522349,0,0x0,8
tick,0x7ff8e7af1be4,195538347,0,0x0,8
tick,0x7ff8e7af1be4,195557232,0,0x0,8
tick,0x7ff8e7af1be4,195581307,0,0x0,8
tick,0x7ff8e7af1be4,195597209,0,0x0,8
tick,0x7ff8e7af1be4,195613163,0,0x0,8
tick,0x7ff8e7af1be4,195628911,0,0x0,8
tick,0x7ff8e7af1be4,195644976,0,0x0,8
tick,0x7ff8e7af1be4,195660481,0,0x0,8
tick,0x7ff8e7af1be4,195676713,0,0x0,8
tick,0x7ff8e7af1be4,195692327,0,0x0,8
tick,0x7ff8e7af1be4,195708490,0,0x0,8
tick,0x7ff8e7af1be4,195723902,0,0x0,8
tick,0x7ff8e7af1be4,195739683,0,0x0,8
tick,0x7ff8e7af1be4,195755463,0,0x0,8
tick,0x7ff8e7af1be4,195770871,0,0x0,8
tick,0x7ff8e7af1be4,195786529,0,0x0,8
tick,0x7ff8e7af1be4,195802164,0,0x0,8
tick,0x7ff8e7af1be4,195806053,0,0x0,8
tick,0x7ff8e7af1be4,195822900,0,0x0,8
tick,0x7ff8e7af1be4,195838529,0,0x0,8
tick,0x7ff8e7af1be4,195854231,0,0x0,8
tick,0x7ff8e7af1be4,195870067,0,0x0,8
tick,0x7ff8e7af1be4,195871407,0,0x0,8
tick,0x7ff8e7af1be4,195888220,0,0x0,8
tick,0x7ff8e7af1be4,195904369,0,0x0,8
tick,0x7ff8e7af1be4,195920086,0,0x0,8
tick,0x7ff8e7af1be4,195936163,0,0x0,8
tick,0x7ff8e7af1be4,195947433,0,0x0,8
tick,0x7ff8e7af1be4,195963613,0,0x0,8
tick,0x7ff8e7af1be4,195979285,0,0x0,8
tick,0x7ff8e7af1be4,195994821,0,0x0,8
tick,0x7ff8e7af1be4,196011133,0,0x0,8
tick,0x7ff8e7af1be4,196026866,0,0x0,8
tick,0x7ff8e7af1be4,196042303,0,0x0,8
tick,0x7ff8e7af1be4,196058154,0,0x0,8
tick,0x7ff8e7af1be4,196074387,0,0x0,8
tick,0x7ff8e7af1be4,196089747,0,0x0,8
tick,0x7ff8e7af1be4,196105491,0,0x0,8
tick,0x7ff8e7af1be4,196121517,0,0x0,8
tick,0x7ff8e7af1be4,196136563,0,0x0,8
tick,0x7ff8e7af1be4,196152379,0,0x0,8
tick,0x7ff8e7af1be4,196168443,0,0x0,8
tick,0x7ff8e7af1be4,196184550,0,0x0,8
tick,0x7ff8e7af1be4,196199919,0,0x0,8
tick,0x7ff8e7af1be4,196219053,0,0x0,8
tick,0x7ff8e7af1be4,196219704,0,0x0,8
tick,0x7ff8e7af1be4,196236079,0,0x0,8
tick,0x7ff8e7af1be4,196251637,0,0x0,8
tick,0x7ff8e7af1be4,196266971,0,0x0,8
tick,0x7ff8e7af1be4,196282604,0,0x0,8
tick,0x7ff8e7af1be4,196298258,0,0x0,8
tick,0x7ff8e7af1be4,196314146,0,0x0,8
tick,0x7ff8e7af1be4,196321862,0,0x0,8
tick,0x7ff8e7af1be4,196323195,0,0x0,8
tick,0x7ff8e7af1be4,196324647,0,0x0,8
tick,0x7ff8e7af1be4,196340937,0,0x0,8
tick,0x7ff8e7af1be4,196356474,0,0x0,8
tick,0x7ff8e7af1be4,196372393,0,0x0,8
tick,0x7ff8e7af1be4,196388335,0,0x0,8
tick,0x7ff8e7af1be4,196403620,0,0x0,8
tick,0x7ff8e7af1be4,196419151,0,0x0,8
tick,0x7ff8e7af1be4,196435030,0,0x0,8
tick,0x7ff8e7af1be4,196450992,0,0x0,8
tick,0x7ff8e7af1be4,196466715,0,0x0,8
tick,0x7ff8e7af1be4,196482125,0,0x0,8
tick,0x7ff8e7af1be4,196498648,0,0x0,8
tick,0x7ff8e7af1be4,196513934,0,0x0,8
tick,0x7ff8e7af1be4,196530400,0,0x0,8
tick,0x7ff8e7af1be4,196545147,0,0x0,8
tick,0x7ff8e7af1be4,196560860,0,0x0,8
tick,0x7ff8e7af1be4,196576246,0,0x0,8
tick,0x7ff8e7af1be4,196591590,0,0x0,8
tick,0x7ff8e7af1be4,196608016,0,0x0,8
tick,0x7ff8e7af1be4,196623698,0,0x0,8
tick,0x7ff8e7af1be4,196639500,0,0x0,8
tick,0x7ff8e7af1be4,196654817,0,0x0,8
tick,0x7ff8e7af1be4,196670377,0,0x0,8
tick,0x7ff8e7af1be4,196686050,0,0x0,8
tick,0x7ff8e7af1be4,196702022,0,0x0,8
tick,0x7ff8e7af1be4,196718265,0,0x0,8
tick,0x7ff8e7af1be4,196733998,0,0x0,8
tick,0x7ff8e7af1be4,196749775,0,0x0,8
tick,0x7ff8e7af1be4,196765889,0,0x0,8
tick,0x7ff8e7af1be4,196780819,0,0x0,8
tick,0x7ff8e7af1be4,196796494,0,0x0,8
tick,0x7ff8e7af1be4,196812424,0,0x0,8
tick,0x7ff8e7af1be4,196828028,0,0x0,8
tick,0x7ff8e7af1be4,196829400,0,0x0,8
tick,0x7ff8e7af1be4,196832402,0,0x0,8
tick,0x7ff8e7af1be4,196834482,0,0x0,8
tick,0x7ff8e7af1be4,196835852,0,0x0,8
tick,0x7ff8e7af1be4,196851864,0,0x0,8
tick,0x7ff8e7af1be4,196867306,0,0x0,8
tick,0x7ff8e7af1be4,196883367,0,0x0,8
tick,0x7ff8e7af1be4,196898708,0,0x0,8
tick,0x7ff8e7af1be4,196914962,0,0x0,8
tick,0x7ff8e7af1be4,196930417,0,0x0,8
tick,0x7ff8e7af1be4,196946278,0,0x0,8
tick,0x7ff8e7af1be4,196961715,0,0x0,8
tick,0x7ff8e7af1be4,196977462,0,0x0,8
tick,0x7ff8e7af1be4,196993042,0,0x0,8
tick,0x7ff8e7af1be4,197009077,0,0x0,8
tick,0x7ff8e7af1be4,197024853,0,0x0,8
tick,0x7ff8e7af1be4,197040879,0,0x0,8
tick,0x7ff8e7af1be4,197056163,0,0x0,8
tick,0x7ff8e7af1be4,197071661,0,0x0,8
tick,0x7ff8e7af1be4,197087498,0,0x0,8
tick,0x7ff8e7af1be4,197103191,0,0x0,8
tick,0x7ff8e7af1be4,197119535,0,0x0,8
tick,0x7ff8e7af1be4,197135216,0,0x0,8
tick,0x7ff8e7af1be4,197150641,0,0x0,8
tick,0x7ff8e7af1be4,197165989,0,0x0,8
tick,0x7ff8e7af1be4,197182046,0,0x0,8
tick,0x7ff8e7af1be4,197197367,0,0x0,8
tick,0x7ff8e7af1be4,197213772,0,0x0,8
tick,0x7ff8e7af1be4,197229366,0,0x0,8
tick,0x7ff8e7af1be4,197245532,0,0x0,8
tick,0x7ff8e7af1be4,197261073,0,0x0,8
tick,0x7ff8e7af1be4,197277493,0,0x0,8
tick,0x7ff8e7af1be4,197292776,0,0x0,8
tick,0x7ff8e7af1be4,197308509,0,0x0,8
tick,0x7ff8e7af1be4,197324344,0,0x0,8
tick,0x7ff8e7af1be4,197339491,0,0x0,8
tick,0x7ff8e7af1be4,197344074,0,0x0,8
tick,0x7ff8e7af1be4,197345249,0,0x0,8
tick,0x7ff8e7af1be4,197346550,0,0x0,8
tick,0x7ff8e7af1be4,197347701,0,0x0,8
tick,0x7ff8e7af1be4,197363753,0,0x0,8
tick,0x7ff8e7af1be4,197379555,0,0x0,8
tick,0x7ff8e7af1be4,197395775,0,0x0,8
tick,0x7ff8e7af1be4,197411413,0,0x0,8
tick,0x7ff8e7af1be4,197427757,0,0x0,8
tick,0x7ff8e7af1be4,197442685,0,0x0,8
tick,0x7ff8e7af1be4,197458285,0,0x0,8
tick,0x7ff8e7af1be4,197473996,0,0x0,8
tick,0x7ff8e7af1be4,197489901,0,0x0,8
tick,0x7ff8e7af1be4,197506114,0,0x0,8
tick,0x7ff8e7af1be4,197521981,0,0x0,8
tick,0x7ff8e7af1be4,197537477,0,0x0,8
tick,0x7ff8e7af1be4,197552948,0,0x0,8
tick,0x7ff8e7af1be4,197568889,0,0x0,8
tick,0x7ff8e7af1be4,197584603,0,0x0,8
tick,0x7ff8e7af1be4,197600608,0,0x0,8
tick,0x7ff8e7af1be4,197616547,0,0x0,8
tick,0x7ff8e7af1be4,197632320,0,0x0,8
tick,0x7ff8e7af1be4,197648108,0,0x0,8
tick,0x7ff8e7af1be4,197663816,0,0x0,8
tick,0x7ff8e7af1be4,197679982,0,0x0,8
tick,0x7ff8e7af1be4,197695674,0,0x0,8
tick,0x7ff8e7af1be4,197711626,0,0x0,8
tick,0x7ff8e7af1be4,197727490,0,0x0,8
tick,0x7ff8e7af1be4,197742972,0,0x0,8
tick,0x7ff8e7af1be4,197759374,0,0x0,8
tick,0x7ff8e7af1be4,197775844,0,0x0,8
tick,0x7ff8e7af1be4,197791414,0,0x0,8
tick,0x7ff8e7af1be4,197807443,0,0x0,8
tick,0x7ff8e7af1be4,197822961,0,0x0,8
tick,0x7ff8e7af1be4,197838470,0,0x0,8
tick,0x7ff8e7af1be4,197856429,0,0x0,8
tick,0x7ff8e7af1be4,197862476,0,0x0,8
tick,0x7ff8e7af1be4,197863847,0,0x0,8
tick,0x7ff8e7af1be4,197865176,0,0x0,8
tick,0x7ff8e7af1be4,197881884,0,0x0,8
tick,0x7ff8e7af1be4,197898456,0,0x0,8
tick,0x7ff8e7af1be4,197914257,0,0x0,8
tick,0x7ff8e7af1be4,197930248,0,0x0,8
tick,0x7ff8e7af1be4,197946028,0,0x0,8
tick,0x7ff8e7af1be4,197962023,0,0x0,8
tick,0x7ff8e7af1be4,197977800,0,0x0,8
tick,0x7ff8e7af1be4,197993196,0,0x0,8
tick,0x7ff8e7af1be4,198009334,0,0x0,8
tick,0x7ff8e7af1be4,198025715,0,0x0,8
tick,0x7ff8e7af1be4,198041557,0,0x0,8
tick,0x7ff8e7af1be4,198057665,0,0x0,8
tick,0x7ff8e7af1be4,198073947,0,0x0,8
tick,0x7ff8e7af1be4,198089736,0,0x0,8
tick,0x7ff8e7af1be4,198105735,0,0x0,8
tick,0x7ff8e7af1be4,198121576,0,0x0,8
tick,0x7ff8e7af1be4,198137156,0,0x0,8
tick,0x7ff8e7af1be4,198152728,0,0x0,8
tick,0x7ff8e7af1be4,198168992,0,0x0,8
tick,0x7ff8e7af1be4,198184522,0,0x0,8
tick,0x7ff8e7af1be4,198201061,0,0x0,8
tick,0x7ff8e7af1be4,198216992,0,0x0,8
tick,0x7ff8e7af1be4,198232546,0,0x0,8
tick,0x7ff8e7af1be4,198248328,0,0x0,8
tick,0x7ff8e7af1be4,198264643,0,0x0,8
tick,0x7ff8e7af1be4,198280480,0,0x0,8
tick,0x7ff8e7af1be4,198295848,0,0x0,8
tick,0x7ff8e7af1be4,198311831,0,0x0,8
tick,0x7ff8e7af1be4,198327432,0,0x0,8
tick,0x7ff8e7af1be4,198343214,0,0x0,8
tick,0x7ff8e7af1be4,198359241,0,0x0,8
tick,0x7ff8e7af1be4,198362951,0,0x0,8
tick,0x7ff8e7af1be4,198364251,0,0x0,8
tick,0x7ff8e7af1be4,198366274,0,0x0,8
tick,0x7ff8e7af1be4,198380888,0,0x0,8
tick,0x7ff8e7af1be4,198396662,0,0x0,8
tick,0x7ff8e7af1be4,198412385,0,0x0,8
tick,0x7ff8e7af1be4,198428055,0,0x0,8
tick,0x7ff8e7af1be4,198443832,0,0x0,8
tick,0x7ff8e7af1be4,198459821,0,0x0,8
tick,0x7ff8e7af1be4,198475514,0,0x0,8
tick,0x7ff8e7af1be4,198491129,0,0x0,8
tick,0x7ff8e7af1be4,198506966,0,0x0,8
tick,0x7ff8e7af1be4,198522865,0,0x0,8
tick,0x7ff8e7af1be4,198538835,0,0x0,8
tick,0x7ff8e7af1be4,198554358,0,0x0,8
tick,0x7ff8e7af1be4,198570357,0,0x0,8
tick,0x7ff8e7af1be4,198585943,0,0x0,8
tick,0x7ff8e7af1be4,198601970,0,0x0,8
tick,0x7ff8e7af1be4,198617351,0,0x0,8
tick,0x7ff8e7af1be4,198626543,0,0x0,8
tick,0x7ff8e7af1be4,198640646,0,0x0,8
tick,0x7ff8e7af1be4,198651096,0,0x0,8
tick,0x7ff8e7af1be4,198675137,0,0x0,8
tick,0x7ff8e7af1be4,198690813,0,0x0,8
tick,0x7ff8e7af1be4,198707243,0,0x0,8
tick,0x7ff8e7af1be4,198722874,0,0x0,8
tick,0x7ff8e7af1be4,198738621,0,0x0,8
tick,0x7ff8e7af1be4,198754620,0,0x0,8
tick,0x7ff8e7af1be4,198770159,0,0x0,8
tick,0x7ff8e7af1be4,198786061,0,0x0,8
tick,0x7ff8e7af1be4,198801717,0,0x0,8
tick,0x7ff8e7af1be4,198817969,0,0x0,8
tick,0x7ff8e7af1be4,198833751,0,0x0,8
tick,0x7ff8e7af1be4,198849626,0,0x0,8
tick,0x7ff8e7af1be4,198865425,0,0x0,8
tick,0x7ff8e7af1be4,198866881,0,0x0,8
tick,0x7ff8e7af1be4,198883732,0,0x0,8
tick,0x7ff8e7af1be4,198899610,0,0x0,8
tick,0x7ff8e7af1be4,198915566,0,0x0,8
tick,0x7ff8e7af1be4,198931822,0,0x0,8
tick,0x7ff8e7af1be4,198934237,0,0x0,8
tick,0x7ff8e7af1be4,198949784,0,0x0,8
tick,0x7ff8e7af1be4,198965304,0,0x0,8
tick,0x7ff8e7af1be4,198981714,0,0x0,8
tick,0x7ff8e7af1be4,198998282,0,0x0,8
tick,0x7ff8e7af1be4,199013334,0,0x0,8
tick,0x7ff8e7af1be4,199029980,0,0x0,8
tick,0x7ff8e7af1be4,199044819,0,0x0,8
tick,0x7ff8e7af1be4,199060686,0,0x0,8
tick,0x7ff8e7af1be4,199076541,0,0x0,8
tick,0x7ff8e7af1be4,199093013,0,0x0,8
tick,0x7ff8e7af1be4,199108302,0,0x0,8
tick,0x7ff8e7af1be4,199124311,0,0x0,8
tick,0x7ff8e7af1be4,199140499,0,0x0,8
tick,0x7ff8e7af1be4,199156484,0,0x0,8
tick,0x7ff8e7af1be4,199171815,0,0x0,8
tick,0x7ff8e7af1be4,199187602,0,0x0,8
tick,0x7ff8e7af1be4,199202947,0,0x0,8
tick,0x7ff8e7af1be4,199219353,0,0x0,8
tick,0x7ff8e7af1be4,199235204,0,0x0,8
tick,0x7ff8e7af1be4,199251321,0,0x0,8
tick,0x7ff8e7af1be4,199267347,0,0x0,8
tick,0x7ff8e7af1be4,199282970,0,0x0,8
tick,0x7ff8e7af1be4,199299168,0,0x0,8
tick,0x7ff8e7af1be4,199315058,0,0x0,8
tick,0x7ff8e7af1be4,199330700,0,0x0,8
tick,0x7ff8e7af1be4,199346658,0,0x0,8
tick,0x7ff8e7af1be4,199354966,0,0x0,8
tick,0x7ff8e7af1be4,199363301,0,0x0,8
tick,0x7ff8e7af1be4,199372817,0,0x0,8
tick,0x7ff8e7af1be4,199385196,0,0x0,8
tick,0x7ff8e7af1be4,199393592,0,0x0,8
tick,0x7ff8e7af1be4,199409671,0,0x0,8
tick,0x7ff8e7af1be4,199425622,0,0x0,8
tick,0x7ff8e7af1be4,199441706,0,0x0,8
tick,0x7ff8e7af1be4,199457454,0,0x0,8
tick,0x7ff8e7af1be4,199473613,0,0x0,8
tick,0x7ff8e7af1be4,199489234,0,0x0,8
tick,0x7ff8e7af1be4,199504933,0,0x0,8
tick,0x7ff8e7af1be4,199521191,0,0x0,8
tick,0x7ff8e7af1be4,199536900,0,0x0,8
tick,0x7ff8e7af1be4,199552582,0,0x0,8
tick,0x7ff8e7af1be4,199568369,0,0x0,8
tick,0x7ff8e7af1be4,199583953,0,0x0,8
tick,0x7ff8e7af1be4,199592191,0,0x0,8
tick,0x7ff8e7af1be4,199608178,0,0x0,8
tick,0x7ff8e7af1be4,199624372,0,0x0,8
tick,0x7ff8e7af1be4,199632520,0,0x0,8
tick,0x7ff8e7af1be4,199648706,0,0x0,8
tick,0x7ff8e7af1be4,199656738,0,0x0,8
tick,0x7ff8e7af1be4,199672700,0,0x0,8
tick,0x7ff8e7af1be4,199688799,0,0x0,8
tick,0x7ff8e7af1be4,199704437,0,0x0,8
tick,0x7ff8e7af1be4,199720382,0,0x0,8
tick,0x7ff8e7af1be4,199728517,0,0x0,8
tick,0x7ff8e7af1be4,199744559,0,0x0,8
tick,0x7ff8e7af1be4,199768667,0,0x0,8
tick,0x7ff8e7af1be4,199784579,0,0x0,8
tick,0x7ff8e7af1be4,199800676,0,0x0,8
tick,0x7ff8e7af1be4,199808493,0,0x0,8
tick,0x7ff8e7af1be4,199824492,0,0x0,8
tick,0x7ff8e7af1be4,199840741,0,0x0,8
tick,0x7ff8e7af1be4,199856449,0,0x0,8
tick,0x7ff8e7af1be4,199872014,0,0x0,8
tick,0x7ff8e7af1be4,199887663,0,0x0,8
tick,0x7ff8e7af1be4,199893350,0,0x0,8
tick,0x7ff8e7af1be4,199909226,0,0x0,8
tick,0x7ff8e7af1be4,199924848,0,0x0,8
tick,0x7ff8e7af1be4,199940704,0,0x0,8
tick,0x7ff8e7af1be4,199956456,0,0x0,8
tick,0x7ff8e7af1be4,199972357,0,0x0,8
tick,0x7ff8e7af1be4,199989068,0,0x0,8
tick,0x7ff8e7af1be4,200004569,0,0x0,8
tick,0x7ff8e7af1be4,200020283,0,0x0,8
tick,0x7ff8e7af1be4,200036226,0,0x0,8
tick,0x7ff8e7af1be4,200052431,0,0x0,8
tick,0x7ff8e7af1be4,200067408,0,0x0,8
tick,0x7ff8e7af1be4,200083051,0,0x0,8
tick,0x7ff8e7af1be4,200099047,0,0x0,8
tick,0x7ff8e7af1be4,200114788,0,0x0,8
tick,0x7ff8e7af1be4,200123186,0,0x0,8
tick,0x7ff8e7af1be4,200139332,0,0x0,8
tick,0x7ff8e7af1be4,200154908,0,0x0,8
tick,0x7ff8e7af1be4,200170955,0,0x0,8
tick,0x7ff8e7af1be4,200186707,0,0x0,8
tick,0x7ff8e7af1be4,200202417,0,0x0,8
tick,0x7ff8e7af1be4,200218625,0,0x0,8
tick,0x7ff8e7af1be4,200234087,0,0x0,8
tick,0x7ff8e7af1be4,200250086,0,0x0,8
tick,0x7ff8e7af1be4,200259140,0,0x0,8
tick,0x7ff8e7af1be4,200267018,0,0x0,8
tick,0x7ff8e7af1be4,200275176,0,0x0,8
tick,0x7ff8e7af1be4,200291494,0,0x0,8
tick,0x7ff8e7af1be4,200307151,0,0x0,8
tick,0x7ff8e7af1be4,200322927,0,0x0,8
tick,0x7ff8e7af1be4,200338507,0,0x0,8
tick,0x7ff8e7af1be4,200355350,0,0x0,8
tick,0x7ff8e7af1be4,200370187,0,0x0,8
tick,0x7ff8e7af1be4,200386131,0,0x0,8
tick,0x7ff8e7af1be4,200401355,0,0x0,8
tick,0x7ff8e7af1be4,200403167,0,0x0,8
tick,0x7ff8e7af1be4,200419440,0,0x0,8
tick,0x7ff8e7af1be4,200435028,0,0x0,8
tick,0x7ff8e7af1be4,200450528,0,0x0,8
tick,0x7ff8e7af1be4,200466798,0,0x0,8
tick,0x7ff8e7af1be4,200478092,0,0x0,8
tick,0x7ff8e7af1be4,200487327,0,0x0,8
tick,0x7ff8e7af1be4,200495357,0,0x0,8
tick,0x7ff8e7af1be4,200511484,0,0x0,8
tick,0x7ff8e7af1be4,200527524,0,0x0,8
tick,0x7ff8e7af1be4,200543289,0,0x0,8
tick,0x7ff8e7af1be4,200559085,0,0x0,8
tick,0x7ff8e7af1be4,200574769,0,0x0,8
tick,0x7ff8e7af1be4,200590952,0,0x0,8
tick,0x7ff8e7af1be4,200606487,0,0x0,8
tick,0x7ff8e7af1be4,200622423,0,0x0,8
tick,0x7ff8e7af1be4,200638320,0,0x0,8
tick,0x7ff8e7af1be4,200654025,0,0x0,8
tick,0x7ff8e7af1be4,200670196,0,0x0,8
tick,0x7ff8e7af1be4,200685913,0,0x0,8
tick,0x7ff8e7af1be4,200701593,0,0x0,8
tick,0x7ff8e7af1be4,200717683,0,0x0,8
tick,0x7ff8e7af1be4,200726184,0,0x0,8
tick,0x7ff8e7af1be4,200750068,0,0x0,8
tick,0x7ff8e7af1be4,200765818,0,0x0,8
tick,0x7ff8e7af1be4,200781461,0,0x0,8
tick,0x7ff8e7af1be4,200797379,0,0x0,8
tick,0x7ff8e7af1be4,200813543,0,0x0,8
tick,0x7ff8e7af1be4,200829041,0,0x0,8
tick,0x7ff8e7af1be4,200837974,0,0x0,8
tick,0x7ff8e7af1be4,200845621,0,0x0,8
tick,0x7ff8e7af1be4,200860891,0,0x0,8
tick,0x7ff8e7af1be4,200870948,0,0x0,8
tick,0x7ff8e7af1be4,200887239,0,0x0,8
tick,0x7ff8e7af1be4,200903538,0,0x0,8
tick,0x7ff8e7af1be4,200911743,0,0x0,8
tick,0x7ff8e7af1be4,200925382,0,0x0,8
tick,0x7ff8e7af1be4,200933634,0,0x0,8
tick,0x7ff8e7af1be4,200950180,0,0x0,8
tick,0x7ff8e7af1be4,200965815,0,0x0,8
tick,0x7ff8e7af1be4,200975179,0,0x0,8
tick,0x7ff8e7af1be4,200991720,0,0x0,8
tick,0x7ff8e7af1be4,200999725,0,0x0,8
tick,0x7ff8e7af1be4,201007894,0,0x0,8
tick,0x7ff8e7af1be4,201024271,0,0x0,8
tick,0x7ff8e7af1be4,201032446,0,0x0,8
tick,0x7ff8e7af1be4,201048902,0,0x0,8
tick,0x7ff8e7af1be4,201065023,0,0x0,8
tick,0x7ff8e7af1be4,201073412,0,0x0,8
tick,0x7ff8e7af1be4,201090065,0,0x0,8
tick,0x7ff8e7af1be4,201106789,0,0x0,8
tick,0x7ff8e7af1be4,201115278,0,0x0,8
tick,0x7ff8e7af1be4,201131719,0,0x0,8
tick,0x7ff8e7af1be4,201147809,0,0x0,8
tick,0x7ff8e7af1be4,201163678,0,0x0,8
tick,0x7ff8e7af1be4,201171770,0,0x0,8
tick,0x7ff8e7af1be4,201189507,0,0x0,8
tick,0x7ff8e7af1be4,201197529,0,0x0,8
tick,0x7ff8e7af1be4,201205593,0,0x0,8
tick,0x7ff8e7af1be4,201222565,0,0x0,8
tick,0x7ff8e7af1be4,201238364,0,0x0,8
tick,0x7ff8e7af1be4,201246805,0,0x0,8
tick,0x7ff8e7af1be4,201264214,0,0x0,8
tick,0x7ff8e7af1be4,201274167,0,0x0,8
tick,0x7ff8e7af1be4,201295426,0,0x0,8
tick,0x7ff8e7af1be4,201306076,0,0x0,8
tick,0x7ff8e7af1be4,201319480,0,0x0,8
tick,0x7ff8e7af1be4,201335589,0,0x0,8
tick,0x7ff8e7af1be4,201343580,0,0x0,8
tick,0x7ff8e7af1be4,201360093,0,0x0,8
tick,0x7ff8e7af1be4,201376546,0,0x0,8
tick,0x7ff8e7af1be4,201384703,0,0x0,8
tick,0x7ff8e7af1be4,201392028,0,0x0,8
tick,0x7ff8e7af1be4,201409452,0,0x0,8
tick,0x7ff8e7af1be4,201418850,0,0x0,8
tick,0x7ff8e7af1be4,201428011,0,0x0,8
tick,0x7ff8e7af1be4,201444589,0,0x0,8
tick,0x7ff8e7af1be4,201460497,0,0x0,8
tick,0x7ff8e7af1be4,201468937,0,0x0,8
tick,0x7ff8e7af1be4,201484385,0,0x0,8
tick,0x7ff8e7af1be4,201500237,0,0x0,8
tick,0x7ff8e7af1be4,201508289,0,0x0,8
tick,0x7ff8e7af1be4,201524901,0,0x0,8
tick,0x7ff8e7af1be4,201540661,0,0x0,8
tick,0x7ff8e7af1be4,201548690,0,0x0,8
tick,0x7ff8e7af1be4,201564824,0,0x0,8
tick,0x7ff8e7af1be4,201572649,0,0x0,8
tick,0x7ff8e7af1be4,201588685,0,0x0,8
tick,0x7ff8e7af1be4,201604742,0,0x0,8
tick,0x7ff8e7af1be4,201612915,0,0x0,8
tick,0x7ff8e7af1be4,201629307,0,0x0,8
tick,0x7ff8e7af1be4,201638868,0,0x0,8
tick,0x7ff8e7af1be4,201654094,0,0x0,8
tick,0x7ff8e7af1be4,201669783,0,0x0,8
tick,0x7ff8e7af1be4,201686193,0,0x0,8
tick,0x7ff8e7af1be4,201701966,0,0x0,8
tick,0x7ff8e7af1be4,201717445,0,0x0,8
tick,0x7ff8e7af1be4,201733111,0,0x0,8
tick,0x7ff8e7af1be4,201748770,0,0x0,8
tick,0x7ff8e7af1be4,201765512,0,0x0,8
tick,0x7ff8e7af1be4,201780821,0,0x0,8
tick,0x7ff8e7af1be4,201796374,0,0x0,8
tick,0x7ff8e7af1be4,201812246,0,0x0,8
tick,0x7ff8e7af1be4,201830478,0,0x0,8
tick,0x7ff8e7af1be4,201843884,0,0x0,8
tick,0x7ff8e7af1be4,201860167,0,0x0,8
tick,0x7ff8e7af1be4,201875347,0,0x0,8
tick,0x7ff8e7af1be4,201891109,0,0x0,8
tick,0x7ff8e7af1be4,201907166,0,0x0,8
tick,0x7ff8e7af1be4,201922794,0,0x0,8
tick,0x7ff8e7af1be4,201938245,0,0x0,8
tick,0x7ff8e7af1be4,201941590,0,0x0,8
tick,0x7ff8e7af1be4,201942726,0,0x0,8
tick,0x7ff8e7af1be4,201944065,0,0x0,8
tick,0x7ff8e7af1be4,201960813,0,0x0,8
tick,0x7ff8e7af1be4,201977083,0,0x0,8
tick,0x7ff8e7af1be4,201992794,0,0x0,8
tick,0x7ff8e7af1be4,202007848,0,0x0,8
tick,0x7ff8e7af1be4,202024774,0,0x0,8
tick,0x7ff8e7af1be4,202040465,0,0x0,8
tick,0x7ff8e7af1be4,202056280,0,0x0,8
tick,0x7ff8e7af1be4,202071084,0,0x0,8
tick,0x7ff8e7af1be4,202086838,0,0x0,8
tick,0x7ff8e7af1be4,202102728,0,0x0,8
tick,0x7ff8e7af1be4,202118907,0,0x0,8
tick,0x7ff8e7af1be4,202134259,0,0x0,8
tick,0x7ff8e7af1be4,202150121,0,0x0,8
tick,0x7ff8e7af1be4,202166131,0,0x0,8
tick,0x7ff8e7af1be4,202181852,0,0x0,8
tick,0x7ff8e7af1be4,202197487,0,0x0,8
tick,0x7ff8e7af1be4,202213294,0,0x0,8
tick,0x7ff8e7af1be4,202228763,0,0x0,8
tick,0x7ff8e7af1be4,202244515,0,0x0,8
tick,0x7ff8e7af1be4,202259986,0,0x0,8
tick,0x7ff8e7af1be4,202276186,0,0x0,8
tick,0x7ff8e7af1be4,202291678,0,0x0,8
tick,0x7ff8e7af1be4,202307301,0,0x0,8
tick,0x7ff8e7af1be4,202331187,0,0x0,8
tick,0x7ff8e7af1be4,202346414,0,0x0,8
tick,0x7ff8e7af1be4,202362298,0,0x0,8
tick,0x7ff8e7af1be4,202377918,0,0x0,8
tick,0x7ff8e7af1be4,202394028,0,0x0,8
tick,0x7ff8e7af1be4,202403912,0,0x0,8
tick,0x7ff8e7af1be4,202415239,0,0x0,8
tick,0x7ff8e7af1be4,202426280,0,0x0,8
tick,0x7ff8e7af1be4,202435436,0,0x0,8
tick,0x7ff8e7af1be4,202445791,0,0x0,8
tick,0x7ff8e7af1be4,202461956,0,0x0,8
tick,0x7ff8e7af1be4,202477759,0,0x0,8
tick,0x7ff8e7af1be4,202494930,0,0x0,8
tick,0x7ff8e7af1be4,202509514,0,0x0,8
tick,0x7ff8e7af1be4,202525855,0,0x0,8
tick,0x7ff8e7af1be4,202541960,0,0x0,8
tick,0x7ff8e7af1be4,202558547,0,0x0,8
tick,0x7ff8e7af1be4,202574935,0,0x0,8
tick,0x7ff8e7af1be4,202591108,0,0x0,8
tick,0x7ff8e7af1be4,202599498,0,0x0,8
tick,0x7ff8e7af1be4,202616284,0,0x0,8
tick,0x7ff8e7af1be4,202632169,0,0x0,8
tick,0x7ff8e7af1be4,202648649,0,0x0,8
tick,0x7ff8e7af1be4,202664297,0,0x0,8
tick,0x7ff8e7af1be4,202681305,0,0x0,8
tick,0x7ff8e7af1be4,202694589,0,0x0,8
tick,0x7ff8e7af1be4,202704237,0,0x0,8
tick,0x7ff8e7af1be4,202728689,0,0x0,8
tick,0x7ff8e7af1be4,202744485,0,0x0,8
tick,0x7ff8e7af1be4,202760771,0,0x0,8
tick,0x7ff8e7af1be4,202768629,0,0x0,8
tick,0x7ff8e7af1be4,202776749,0,0x0,8
tick,0x7ff8e7af1be4,202792667,0,0x0,8
tick,0x7ff8e7af1be4,202801307,0,0x0,8
tick,0x7ff8e7af1be4,202817304,0,0x0,8
tick,0x7ff8e7af1be4,202825473,0,0x0,8
tick,0x7ff8e7af1be4,202842276,0,0x0,8
tick,0x7ff8e7af1be4,202858328,0,0x0,8
tick,0x7ff8e7af1be4,202874630,0,0x0,8
tick,0x7ff8e7af1be4,202890985,0,0x0,8
tick,0x7ff8e7af1be4,202907549,0,0x0,8
tick,0x7ff8e7af1be4,202923415,0,0x0,8
tick,0x7ff8e7af1be4,202931489,0,0x0,8
tick,0x7ff8e7af1be4,202944767,0,0x0,8
tick,0x7ff8e7af1be4,202960750,0,0x0,8
tick,0x7ff8e7af1be4,202969008,0,0x0,8
tick,0x7ff8e7af1be4,202985843,0,0x0,8
tick,0x7ff8e7af1be4,202993671,0,0x0,8
tick,0x7ff8e7af1be4,203010269,0,0x0,8
tick,0x7ff8e7af1be4,203026988,0,0x0,8
tick,0x7ff8e7af1be4,203043330,0,0x0,8
tick,0x7ff8e7af1be4,203060932,0,0x0,8
tick,0x7ff8e7af1be4,203075628,0,0x0,8
tick,0x7ff8e7af1be4,203091907,0,0x0,8
tick,0x7ff8e7af1be4,203108976,0,0x0,8
tick,0x7ff8e7af1be4,203124786,0,0x0,8
tick,0x7ff8e7af1be4,203140753,0,0x0,8
tick,0x7ff8e7af1be4,203157482,0,0x0,8
tick,0x7ff8e7af1be4,203165646,0,0x0,8
tick,0x7ff8e7af1be4,203173848,0,0x0,8
tick,0x7ff8e7af1be4,203189916,0,0x0,8
tick,0x7ff8e7af1be4,203205962,0,0x0,8
tick,0x7ff8e7af1be4,203222879,0,0x0,8
tick,0x7ff8e7af1be4,203239151,0,0x0,8
tick,0x7ff8e7af1be4,203255645,0,0x0,8
tick,0x7ff8e7af1be4,203271591,0,0x0,8
tick,0x7ff8e7af1be4,203295720,0,0x0,8
tick,0x7ff8e7af1be4,203311471,0,0x0,8
tick,0x7ff8e7af1be4,203327466,0,0x0,8
tick,0x7ff8e7af1be4,203343755,0,0x0,8
tick,0x7ff8e7af1be4,203359554,0,0x0,8
tick,0x7ff8e7af1be4,203375174,0,0x0,8
tick,0x7ff8e7af1be4,203391317,0,0x0,8
tick,0x7ff8e7af1be4,203407133,0,0x0,8
tick,0x7ff8e7af1be4,203423273,0,0x0,8
tick,0x7ff8e7af1be4,203439160,0,0x0,8
tick,0x7ff8e7af1be4,203446595,0,0x0,8
tick,0x7ff8e7af1be4,203448474,0,0x0,8
tick,0x7ff8e7af1be4,203449839,0,0x0,8
tick,0x7ff8e7af1be4,203465742,0,0x0,8
tick,0x7ff8e7af1be4,203481567,0,0x0,8
tick,0x7ff8e7af1be4,203497172,0,0x0,8
tick,0x7ff8e7af1be4,203513332,0,0x0,8
tick,0x7ff8e7af1be4,203529524,0,0x0,8
tick,0x7ff8e7af1be4,203545742,0,0x0,8
tick,0x7ff8e7af1be4,203561672,0,0x0,8
tick,0x7ff8e7af1be4,203577566,0,0x0,8
tick,0x7ff8e7af1be4,203593206,0,0x0,8
tick,0x7ff8e7af1be4,203609384,0,0x0,8
tick,0x7ff8e7af1be4,203625526,0,0x0,8
tick,0x7ff8e7af1be4,203641806,0,0x0,8
tick,0x7ff8e7af1be4,203659752,0,0x0,8
tick,0x7ff8e7af1be4,203674351,0,0x0,8
tick,0x7ff8e7af1be4,203690077,0,0x0,8
tick,0x7ff8e7af1be4,203706915,0,0x0,8
tick,0x7ff8e7af1be4,203722214,0,0x0,8
tick,0x7ff8e7af1be4,203738309,0,0x0,8
tick,0x7ff8e7af1be4,203755392,0,0x0,8
tick,0x7ff8e7af1be4,203770811,0,0x0,8
tick,0x7ff8e7af1be4,203786282,0,0x0,8
tick,0x7ff8e7af1be4,203801726,0,0x0,8
tick,0x7ff8e7af1be4,203816885,0,0x0,8
tick,0x7ff8e7af1be4,203833157,0,0x0,8
tick,0x7ff8e7af1be4,203849113,0,0x0,8
tick,0x7ff8e7af1be4,203857034,0,0x0,8
tick,0x7ff8e7af1be4,203873114,0,0x0,8
tick,0x7ff8e7af1be4,203889360,0,0x0,8
tick,0x7ff8e7af1be4,203905145,0,0x0,8
tick,0x7ff8e7af1be4,203920904,0,0x0,8
tick,0x7ff8e7af1be4,203936728,0,0x0,8
tick,0x7ff8e7af1be4,203944798,0,0x0,8
tick,0x7ff8e7af1be4,203953709,0,0x0,8
tick,0x7ff8e7af1be4,203964632,0,0x0,8
tick,0x7ff8e7af1be4,203980669,0,0x0,8
tick,0x7ff8e7af1be4,203996598,0,0x0,8
tick,0x7ff8e7af1be4,204005040,0,0x0,8
tick,0x7ff8e7af1be4,204021583,0,0x0,8
tick,0x7ff8e7af1be4,204038067,0,0x0,8
tick,0x7ff8e7af1be4,204045960,0,0x0,8
tick,0x7ff8e7af1be4,204070475,0,0x0,8
tick,0x7ff8e7af1be4,204094680,0,0x0,8
tick,0x7ff8e7af1be4,204110936,0,0x0,8
tick,0x7ff8e7af1be4,204127694,0,0x0,8
tick,0x7ff8e7af1be4,204143799,0,0x0,8
tick,0x7ff8e7af1be4,204159936,0,0x0,8
tick,0x7ff8e7af1be4,204175677,0,0x0,8
tick,0x7ff8e7af1be4,204191791,0,0x0,8
tick,0x7ff8e7af1be4,204207744,0,0x0,8
tick,0x7ff8e7af1be4,204224063,0,0x0,8
tick,0x7ff8e7af1be4,204244294,0,0x0,8
tick,0x7ff8e7af1be4,204252449,0,0x0,8
tick,0x7ff8e7af1be4,204276987,0,0x0,8
tick,0x7ff8e7af1be4,204293229,0,0x0,8
tick,0x7ff8e7af1be4,204317762,0,0x0,8
tick,0x7ff8e7af1be4,204334223,0,0x0,8
tick,0x7ff8e7af1be4,204342288,0,0x0,8
tick,0x7ff8e7af1be4,204358638,0,0x0,8
tick,0x7ff8e7af1be4,204369412,0,0x0,8
tick,0x7ff8e7af1be4,204382125,0,0x0,8
tick,0x7ff8e7af1be4,204398039,0,0x0,8
tick,0x7ff8e7af1be4,204414596,0,0x0,8
tick,0x7ff8e7af1be4,204423131,0,0x0,8
tick,0x7ff8e7af1be4,204438617,0,0x0,8
tick,0x7ff8e7af1be4,204454216,0,0x0,8
tick,0x7ff8e7af1be4,204469778,0,0x0,8
tick,0x7ff8e7af1be4,204476756,0,0x0,8
tick,0x7ff8e7af1be4,204477930,0,0x0,8
tick,0x7ff8e7af1be4,204479196,0,0x0,8
tick,0x7ff8e7af1be4,204480475,0,0x0,8
tick,0x7ff8e7af1be4,204496444,0,0x0,8
tick,0x7ff8e7af1be4,204512379,0,0x0,8
tick,0x7ff8e7af1be4,204528283,0,0x0,8
tick,0x7ff8e7af1be4,204543974,0,0x0,8
tick,0x7ff8e7af1be4,204552762,0,0x0,8
tick,0x7ff8e7af1be4,204567719,0,0x0,8
tick,0x7ff8e7af1be4,204584286,0,0x0,8
tick,0x7ff8e7af1be4,204599944,0,0x0,8
tick,0x7ff8e7af1be4,204615873,0,0x0,8
tick,0x7ff8e7af1be4,204632270,0,0x0,8
tick,0x7ff8e7af1be4,204648675,0,0x0,8
tick,0x7ff8e7af1be4,204664279,0,0x0,8
tick,0x7ff8e7af1be4,204680616,0,0x0,8
tick,0x7ff8e7af1be4,204688349,0,0x0,8
tick,0x7ff8e7af1be4,204699563,0,0x0,8
tick,0x7ff8e7af1be4,204713007,0,0x0,8
tick,0x7ff8e7af1be4,204728860,0,0x0,8
tick,0x7ff8e7af1be4,204744758,0,0x0,8
tick,0x7ff8e7af1be4,204760742,0,0x0,8
tick,0x7ff8e7af1be4,204768788,0,0x0,8
tick,0x7ff8e7af1be4,204785094,0,0x0,8
tick,0x7ff8e7af1be4,204793935,0,0x0,8
tick,0x7ff8e7af1be4,204818028,0,0x0,8
tick,0x7ff8e7af1be4,204834246,0,0x0,8
tick,0x7ff8e7af1be4,204850574,0,0x0,8
tick,0x7ff8e7af1be4,204866018,0,0x0,8
tick,0x7ff8e7af1be4,204882434,0,0x0,8
tick,0x7ff8e7af1be4,204898310,0,0x0,8
tick,0x7ff8e7af1be4,204906413,0,0x0,8
tick,0x7ff8e7af1be4,204922410,0,0x0,8
tick,0x7ff8e7af1be4,204938397,0,0x0,8
tick,0x7ff8e7af1be4,204954251,0,0x0,8
tick,0x7ff8e7af1be4,204962445,0,0x0,8
tick,0x7ff8e7af1be4,204970729,0,0x0,8
tick,0x7ff8e7af1be4,204986897,0,0x0,8
tick,0x7ff8e7af1be4,205002688,0,0x0,8
tick,0x7ff8e7af1be4,205010907,0,0x0,8
tick,0x7ff8e7af1be4,205027497,0,0x0,8
tick,0x7ff8e7af1be4,205044395,0,0x0,8
tick,0x7ff8e7af1be4,205060470,0,0x0,8
tick,0x7ff8e7af1be4,205069977,0,0x0,8
tick,0x7ff8e7af1be4,205086977,0,0x0,8
tick,0x7ff8e7af1be4,205097774,0,0x0,8
tick,0x7ff8e7af1be4,205114373,0,0x0,8
tick,0x7ff8e7af1be4,205127879,0,0x0,8
tick,0x7ff8e7af1be4,205135909,0,0x0,8
tick,0x7ff8e7af1be4,205153119,0,0x0,8
tick,0x7ff8e7af1be4,205168646,0,0x0,8
tick,0x7ff8e7af1be4,205180201,0,0x0,8
tick,0x7ff8e7af1be4,205188443,0,0x0,8
tick,0x7ff8e7af1be4,205196540,0,0x0,8
tick,0x7ff8e7af1be4,205205328,0,0x0,8
tick,0x7ff8e7af1be4,205220772,0,0x0,8
tick,0x7ff8e7af1be4,205228745,0,0x0,8
tick,0x7ff8e7af1be4,205253135,0,0x0,8
tick,0x7ff8e7af1be4,205262456,0,0x0,8
tick,0x7ff8e7af1be4,205270789,0,0x0,8
tick,0x7ff8e7af1be4,205286808,0,0x0,8
tick,0x7ff8e7af1be4,205302734,0,0x0,8
tick,0x7ff8e7af1be4,205318450,0,0x0,8
tick,0x7ff8e7af1be4,205334242,0,0x0,8
tick,0x7ff8e7af1be4,205342779,0,0x0,8
tick,0x7ff8e7af1be4,205359285,0,0x0,8
tick,0x7ff8e7af1be4,205375799,0,0x0,8
tick,0x7ff8e7af1be4,205383958,0,0x0,8
tick,0x7ff8e7af1be4,205400486,0,0x0,8
tick,0x7ff8e7af1be4,205408837,0,0x0,8
tick,0x7ff8e7af1be4,205425148,0,0x0,8
tick,0x7ff8e7af1be4,205433318,0,0x0,8
tick,0x7ff8e7af1be4,205441690,0,0x0,8
tick,0x7ff8e7af1be4,205457088,0,0x0,8
tick,0x7ff8e7af1be4,205466741,0,0x0,8
tick,0x7ff8e7af1be4,205474496,0,0x0,8
tick,0x7ff8e7af1be4,205481246,0,0x0,8
tick,0x7ff8e7af1be4,205481958,0,0x0,8
tick,0x7ff8e7af1be4,205498297,0,0x0,8
tick,0x7ff8e7af1be4,205514054,0,0x0,8
tick,0x7ff8e7af1be4,205522118,0,0x0,8
tick,0x7ff8e7af1be4,205530395,0,0x0,8
tick,0x7ff8e7af1be4,205544280,0,0x0,8
tick,0x7ff8e7af1be4,205555143,0,0x0,8
tick,0x7ff8e7af1be4,205565303,0,0x0,8
tick,0x7ff8e7af1be4,205573268,0,0x0,8
tick,0x7ff8e7af1be4,205588264,0,0x0,8
tick,0x7ff8e7af1be4,205596627,0,0x0,8
tick,0x7ff8e7af1be4,205612345,0,0x0,8
tick,0x7ff8e7af1be4,205628037,0,0x0,8
tick,0x7ff8e7af1be4,205644014,0,0x0,8
tick,0x7ff8e7af1be4,205659271,0,0x0,8
tick,0x7ff8e7af1be4,205669809,0,0x0,8
tick,0x7ff8e7af1be4,205684358,0,0x0,8
tick,0x7ff8e7af1be4,205692827,0,0x0,8
tick,0x7ff8e7af1be4,205710302,0,0x0,8
tick,0x7ff8e7af1be4,205725716,0,0x0,8
tick,0x7ff8e7af1be4,205741926,0,0x0,8
tick,0x7ff8e7af1be4,205749479,0,0x0,8
tick,0x7ff8e7af1be4,205757767,0,0x0,8
tick,0x7ff8e7af1be4,205769153,0,0x0,8
tick,0x7ff8e7af1be4,205777076,0,0x0,8
tick,0x7ff8e7af1be4,205790597,0,0x0,8
tick,0x7ff8e7af1be4,205806889,0,0x0,8
tick,0x7ff8e7af1be4,205823348,0,0x0,8
tick,0x7ff8e7af1be4,205832618,0,0x0,8
tick,0x7ff8e7af1be4,205843883,0,0x0,8
tick,0x7ff8e7af1be4,205856834,0,0x0,8
tick,0x7ff8e7af1be4,205872914,0,0x0,8
tick,0x7ff8e7af1be4,205888408,0,0x0,8
tick,0x7ff8e7af1be4,205896635,0,0x0,8
tick,0x7ff8e7af1be4,205904759,0,0x0,8
tick,0x7ff8e7af1be4,205920251,0,0x0,8
tick,0x7ff8e7af1be4,205928750,0,0x0,8
tick,0x7ff8e7af1be4,205937786,0,0x0,8
tick,0x7ff8e7af1be4,205953505,0,0x0,8
tick,0x7ff8e7af1be4,205961827,0,0x0,8
tick,0x7ff8e7af1be4,205970281,0,0x0,8
tick,0x7ff8e7af1be4,205986344,0,0x0,8
tick,0x7ff8e7af1be4,206002473,0,0x0,8
tick,0x7ff8e7af1be4,206011547,0,0x0,8
tick,0x7ff8e7af1be4,206027235,0,0x0,8
tick,0x7ff8e7af1be4,206033091,0,0x0,8
tick,0x7ff8e7af1be4,206049203,0,0x0,8
tick,0x7ff8e7af1be4,206064872,0,0x0,8
tick,0x7ff8e7af1be4,206080802,0,0x0,8
tick,0x7ff8e7af1be4,206096805,0,0x0,8
tick,0x7ff8e7af1be4,206112106,0,0x0,8
tick,0x7ff8e7af1be4,206128008,0,0x0,8
tick,0x7ff8e7af1be4,206144082,0,0x0,8
tick,0x7ff8e7af1be4,206160044,0,0x0,8
tick,0x7ff8e7af1be4,206176489,0,0x0,8
tick,0x7ff8e7af1be4,206192339,0,0x0,8
tick,0x7ff8e7af1be4,206208190,0,0x0,8
tick,0x7ff8e7af1be4,206224085,0,0x0,8
tick,0x7ff8e7af1be4,206240117,0,0x0,8
tick,0x7ff8e7af1be4,206256260,0,0x0,8
tick,0x7ff8e7af1be4,206273082,0,0x0,8
tick,0x7ff8e7af1be4,206287973,0,0x0,8
tick,0x7ff8e7af1be4,206304070,0,0x0,8
tick,0x7ff8e7af1be4,206320288,0,0x0,8
tick,0x7ff8e7af1be4,206336572,0,0x0,8
tick,0x7ff8e7af1be4,206352276,0,0x0,8
tick,0x7ff8e7af1be4,206368317,0,0x0,8
tick,0x7ff8e7af1be4,206384896,0,0x0,8
tick,0x7ff8e7af1be4,206400644,0,0x0,8
tick,0x7ff8e7af1be4,206417030,0,0x0,8
tick,0x7ff8e7af1be4,206433333,0,0x0,8
tick,0x7ff8e7af1be4,206449069,0,0x0,8
tick,0x7ff8e7af1be4,206464317,0,0x0,8
tick,0x7ff8e7af1be4,206481113,0,0x0,8
tick,0x7ff8e7af1be4,206497462,0,0x0,8
tick,0x7ff8e7af1be4,206512423,0,0x0,8
tick,0x7ff8e7af1be4,206527083,0,0x0,8
tick,0x7ff8e7af1be4,206545031,0,0x0,8
tick,0x7ff8e7af1be4,206561713,0,0x0,8
tick,0x7ff8e7af1be4,206577287,0,0x0,8
tick,0x7ff8e7af1be4,206586628,0,0x0,8
tick,0x7ff8e7af1be4,206596490,0,0x0,8
tick,0x7ff8e7af1be4,206605354,0,0x0,8
tick,0x7ff8e7af1be4,206621952,0,0x0,8
tick,0x7ff8e7af1be4,206636839,0,0x0,8
tick,0x7ff8e7af1be4,206646439,0,0x0,8
tick,0x7ff8e7af1be4,206662723,0,0x0,8
tick,0x7ff8e7af1be4,206675179,0,0x0,8
tick,0x7ff8e7af1be4,206691016,0,0x0,8
tick,0x7ff8e7af1be4,206700161,0,0x0,8
tick,0x7ff8e7af1be4,206706685,0,0x0,8
tick,0x7ff8e7af1be4,206722935,0,0x0,8
tick,0x7ff8e7af1be4,206739179,0,0x0,8
tick,0x7ff8e7af1be4,206747701,0,0x0,8
tick,0x7ff8e7af1be4,206756459,0,0x0,8
tick,0x7ff8e7af1be4,206772031,0,0x0,8
tick,0x7ff8e7af1be4,206780711,0,0x0,8
tick,0x7ff8e7af1be4,206796536,0,0x0,8
tick,0x7ff8e7af1be4,206806242,0,0x0,8
tick,0x7ff8e7af1be4,206821637,0,0x0,8
tick,0x7ff8e7af1be4,206829723,0,0x0,8
tick,0x7ff8e7af1be4,206846522,0,0x0,8
tick,0x7ff8e7af1be4,206861863,0,0x0,8
tick,0x7ff8e7af1be4,206870908,0,0x0,8
tick,0x7ff8e7af1be4,206886550,0,0x0,8
tick,0x7ff8e7af1be4,206896054,0,0x0,8
tick,0x7ff8e7af1be4,206904586,0,0x0,8
tick,0x7ff8e7af1be4,206913137,0,0x0,8
tick,0x7ff8e7af1be4,206921570,0,0x0,8
tick,0x7ff8e7af1be4,206930539,0,0x0,8
tick,0x7ff8e7af1be4,206946960,0,0x0,8
tick,0x7ff8e7af1be4,206956711,0,0x0,8
tick,0x7ff8e7af1be4,206973643,0,0x0,8
tick,0x7ff8e7af1be4,206981758,0,0x0,8
tick,0x7ff8e7af1be4,206990172,0,0x0,8
tick,0x7ff8e7af1be4,207006552,0,0x0,8
tick,0x7ff8e7af1be4,207014517,0,0x0,8
tick,0x7ff8e7af1be4,207026427,0,0x0,8
tick,0x7ff8e7af1be4,207038493,0,0x0,8
tick,0x7ff8e7af1be4,207046400,0,0x0,8
tick,0x7ff8e7af1be4,207062861,0,0x0,8
tick,0x7ff8e7af1be4,207079366,0,0x0,8
tick,0x7ff8e7af1be4,207096110,0,0x0,8
tick,0x7ff8e7af1be4,207112600,0,0x0,8
tick,0x7ff8e7af1be4,207120525,0,0x0,8
tick,0x7ff8e7af1be4,207136392,0,0x0,8
tick,0x7ff8e7af1be4,207144694,0,0x0,8
tick,0x7ff8e7af1be4,207161605,0,0x0,8
tick,0x7ff8e7af1be4,207178265,0,0x0,8
tick,0x7ff8e7af1be4,207194496,0,0x0,8
tick,0x7ff8e7af1be4,207206410,0,0x0,8
tick,0x7ff8e7af1be4,207216984,0,0x0,8
tick,0x7ff8e7af1be4,207225390,0,0x0,8
tick,0x7ff8e7af1be4,207233770,0,0x0,8
tick,0x7ff8e7af1be4,207244856,0,0x0,8
tick,0x7ff8e7af1be4,207262732,0,0x0,8
tick,0x7ff8e7af1be4,207278068,0,0x0,8
tick,0x7ff8e7af1be4,207286932,0,0x0,8
tick,0x7ff8e7af1be4,207295910,0,0x0,8
tick,0x7ff8e7af1be4,207304372,0,0x0,8
tick,0x7ff8e7af1be4,207320733,0,0x0,8
tick,0x7ff8e7af1be4,207329870,0,0x0,8
tick,0x7ff8e7af1be4,207345524,0,0x0,8
tick,0x7ff8e7af1be4,207353926,0,0x0,8
tick,0x7ff8e7af1be4,207362836,0,0x0,8
tick,0x7ff8e7af1be4,207379557,0,0x0,8
tick,0x7ff8e7af1be4,207395695,0,0x0,8
tick,0x7ff8e7af1be4,207404446,0,0x0,8
tick,0x7ff8e7af1be4,207412290,0,0x0,8
tick,0x7ff8e7af1be4,207427838,0,0x0,8
tick,0x7ff8e7af1be4,207446016,0,0x0,8
tick,0x7ff8e7af1be4,207455436,0,0x0,8
tick,0x7ff8e7af1be4,207464205,0,0x0,8
tick,0x7ff8e7af1be4,207480556,0,0x0,8
tick,0x7ff8e7af1be4,207494438,0,0x0,8
tick,0x7ff8e7af1be4,207505187,0,0x0,8
tick,0x7ff8e7af1be4,207520836,0,0x0,8
tick,0x7ff8e7af1be4,207536660,0,0x0,8
tick,0x7ff8e7af1be4,207546707,0,0x0,8
tick,0x7ff8e7af1be4,207556188,0,0x0,8
tick,0x7ff8e7af1be4,207573001,0,0x0,8
tick,0x7ff8e7af1be4,207588148,0,0x0,8
tick,0x7ff8e7af1be4,207596782,0,0x0,8
tick,0x7ff8e7af1be4,207606634,0,0x0,8
tick,0x7ff8e7af1be4,207615112,0,0x0,8
tick,0x7ff8e7af1be4,207623789,0,0x0,8
tick,0x7ff8e7af1be4,207646030,0,0x0,8
tick,0x7ff8e7af1be4,207654202,0,0x0,8
tick,0x7ff8e7af1be4,207671188,0,0x0,8
tick,0x7ff8e7af1be4,207686676,0,0x0,8
tick,0x7ff8e7af1be4,207695327,0,0x0,8
tick,0x7ff8e7af1be4,207712796,0,0x0,8
tick,0x7ff8e7af1be4,207721907,0,0x0,8
tick,0x7ff8e7af1be4,207737226,0,0x0,8
tick,0x7ff8e7af1be4,207746897,0,0x0,8
tick,0x7ff8e7af1be4,207755178,0,0x0,8
tick,0x7ff8e7af1be4,207763769,0,0x0,8
tick,0x7ff8e7af1be4,207776865,0,0x0,8
tick,0x7ff8e7af1be4,207788135,0,0x0,8
tick,0x7ff8e7af1be4,207804940,0,0x0,8
tick,0x7ff8e7af1be4,207821505,0,0x0,8
tick,0x7ff8e7af1be4,207834592,0,0x0,8
tick,0x7ff8e7af1be4,207846774,0,0x0,8
tick,0x7ff8e7af1be4,207854869,0,0x0,8
tick,0x7ff8e7af1be4,207870609,0,0x0,8
tick,0x7ff8e7af1be4,207880132,0,0x0,8
tick,0x7ff8e7af1be4,207887986,0,0x0,8
tick,0x7ff8e7af1be4,207896287,0,0x0,8
tick,0x7ff8e7af1be4,207904692,0,0x0,8
tick,0x7ff8e7af1be4,207913241,0,0x0,8
tick,0x7ff8e7af1be4,207921573,0,0x0,8
tick,0x7ff8e7af1be4,207937901,0,0x0,8
tick,0x7ff8e7af1be4,207954871,0,0x0,8
tick,0x7ff8e7af1be4,207963087,0,0x0,8
tick,0x7ff8e7af1be4,207980209,0,0x0,8
tick,0x7ff8e7af1be4,207996745,0,0x0,8
tick,0x7ff8e7af1be4,208006385,0,0x0,8
tick,0x7ff8e7af1be4,208024900,0,0x0,8
tick,0x7ff8e7af1be4,208033983,0,0x0,8
tick,0x7ff8e7af1be4,208043083,0,0x0,8
tick,0x7ff8e7af1be4,208060103,0,0x0,8
tick,0x7ff8e7af1be4,208076803,0,0x0,8
tick,0x7ff8e7af1be4,208086572,0,0x0,8
tick,0x7ff8e7af1be4,208103495,0,0x0,8
tick,0x7ff8e7af1be4,208120666,0,0x0,8
tick,0x7ff8e7af1be4,208136864,0,0x0,8
tick,0x7ff8e7af1be4,208153261,0,0x0,8
tick,0x7ff8e7af1be4,208169724,0,0x0,8
tick,0x7ff8e7af1be4,208185810,0,0x0,8
tick,0x7ff8e7af1be4,208193861,0,0x0,8
tick,0x7ff8e7af1be4,208206713,0,0x0,8
tick,0x7ff8e7af1be4,208218632,0,0x0,8
tick,0x7ff8e7af1be4,208234420,0,0x0,8
tick,0x7ff8e7af1be4,208246511,0,0x0,8
tick,0x7ff8e7af1be4,208256342,0,0x0,8
tick,0x7ff8e7af1be4,208267795,0,0x0,8
tick,0x7ff8e7af1be4,208284902,0,0x0,8
tick,0x7ff8e7af1be4,208301802,0,0x0,8
tick,0x7ff8e7af1be4,208311066,0,0x0,8
tick,0x7ff8e7af1be4,208326775,0,0x0,8
tick,0x7ff8e7af1be4,208335107,0,0x0,8
tick,0x7ff8e7af1be4,208346689,0,0x0,8
tick,0x7ff8e7af1be4,208356425,0,0x0,8
tick,0x7ff8e7af1be4,208368808,0,0x0,8
tick,0x7ff8e7af1be4,208385066,0,0x0,8
tick,0x7ff8e7af1be4,208396558,0,0x0,8
tick,0x7ff8e7af1be4,208409741,0,0x0,8
tick,0x7ff8e7af1be4,208426523,0,0x0,8
tick,0x7ff8e7af1be4,208442794,0,0x0,8
tick,0x7ff8e7af1be4,208459543,0,0x0,8
tick,0x7ff8e7af1be4,208467610,0,0x0,8
tick,0x7ff8e7af1be4,208475705,0,0x0,8
tick,0x7ff8e7af1be4,208486302,0,0x0,8
tick,0x7ff8e7af1be4,208500320,0,0x0,8
tick,0x7ff8e7af1be4,208516486,0,0x0,8
tick,0x7ff8e7af1be4,208524733,0,0x0,8
tick,0x7ff8e7af1be4,208541275,0,0x0,8
tick,0x7ff8e7af1be4,208555821,0,0x0,8
tick,0x7ff8e7af1be4,208572437,0,0x0,8
tick,0x7ff8e7af1be4,208580842,0,0x0,8
tick,0x7ff8e7af1be4,208596268,0,0x0,8
tick,0x7ff8e7af1be4,208605847,0,0x0,8
tick,0x7ff8e7af1be4,208614103,0,0x0,8
tick,0x7ff8e7af1be4,208626633,0,0x0,8
tick,0x7ff8e7af1be4,208638917,0,0x0,8
tick,0x7ff8e7af1be4,208654915,0,0x0,8
tick,0x7ff8e7af1be4,208663004,0,0x0,8
tick,0x7ff8e7af1be4,208676658,0,0x0,8
tick,0x7ff8e7af1be4,208688302,0,0x0,8
tick,0x7ff8e7af1be4,208696672,0,0x0,8
tick,0x7ff8e7af1be4,208704888,0,0x0,8
tick,0x7ff8e7af1be4,208721640,0,0x0,8
tick,0x7ff8e7af1be4,208729983,0,0x0,8
tick,0x7ff8e7af1be4,208746706,0,0x0,8
tick,0x7ff8e7af1be4,208754816,0,0x0,8
tick,0x7ff8e7af1be4,208763241,0,0x0,8
tick,0x7ff8e7af1be4,208771349,0,0x0,8
tick,0x7ff8e7af1be4,208787132,0,0x0,8
tick,0x7ff8e7af1be4,208796654,0,0x0,8
tick,0x7ff8e7af1be4,208804743,0,0x0,8
tick,0x7ff8e7af1be4,208812928,0,0x0,8
tick,0x7ff8e7af1be4,208829853,0,0x0,8
tick,0x7ff8e7af1be4,208847231,0,0x0,8
tick,0x7ff8e7af1be4,208854931,0,0x0,8
tick,0x7ff8e7af1be4,208863522,0,0x0,8
tick,0x7ff8e7af1be4,208872279,0,0x0,8
tick,0x7ff8e7af1be4,208879883,0,0x0,8
tick,0x7ff8e7af1be4,208896526,0,0x0,8
tick,0x7ff8e7af1be4,208906751,0,0x0,8
tick,0x7ff8e7af1be4,208924739,0,0x0,8
tick,0x7ff8e7af1be4,208944088,0,0x0,8
tick,0x7ff8e7af1be4,208960991,0,0x0,8
tick,0x7ff8e7af1be4,208973571,0,0x0,8
tick,0x7ff8e7af1be4,208982006,0,0x0,8
tick,0x7ff8e7af1be4,208991106,0,0x0,8
tick,0x7ff8e7af1be4,209006649,0,0x0,8
tick,0x7ff8e7af1be4,209022864,0,0x0,8
tick,0x7ff8e7af1be4,209038116,0,0x0,8
tick,0x7ff8e7af1be4,209047672,0,0x0,8
tick,0x7ff8e7af1be4,209056588,0,0x0,8
tick,0x7ff8e7af1be4,209071220,0,0x0,8
tick,0x7ff8e7af1be4,209086976,0,0x0,8
tick,0x7ff8e7af1be4,209095562,0,0x0,8
tick,0x7ff8e7af1be4,209104415,0,0x0,8
tick,0x7ff8e7af1be4,209122241,0,0x0,8
tick,0x7ff8e7af1be4,209136310,0,0x0,8
tick,0x7ff8e7af1be4,209145962,0,0x0,8
tick,0x7ff8e7af1be4,209156686,0,0x0,8
tick,0x7ff8e7af1be4,209169942,0,0x0,8
tick,0x7ff8e7af1be4,209186803,0,0x0,8
tick,0x7ff8e7af1be4,209195210,0,0x0,8
tick,0x7ff8e7af1be4,209204893,0,0x0,8
tick,0x7ff8e7af1be4,209221825,0,0x0,8
tick,0x7ff8e7af1be4,209236821,0,0x0,8
tick,0x7ff8e7af1be4,209246465,0,0x0,8
tick,0x7ff8e7af1be4,209256489,0,0x0,8
tick,0x7ff8e7af1be4,209264805,0,0x0,8
tick,0x7ff8e7af1be4,209272941,0,0x0,8
tick,0x7ff8e7af1be4,209289316,0,0x0,8
tick,0x7ff8e7af1be4,209306720,0,0x0,8
tick,0x7ff8e7af1be4,209324320,0,0x0,8
tick,0x7ff8e7af1be4,209344398,0,0x0,8
tick,0x7ff8e7af1be4,209361564,0,0x0,8
tick,0x7ff8e7af1be4,209377180,0,0x0,8
tick,0x7ff8e7af1be4,209385265,0,0x0,8
tick,0x7ff8e7af1be4,209402425,0,0x0,8
tick,0x7ff8e7af1be4,209416740,0,0x0,8
tick,0x7ff8e7af1be4,209426560,0,0x0,8
tick,0x7ff8e7af1be4,209438307,0,0x0,8
tick,0x7ff8e7af1be4,209455307,0,0x0,8
tick,0x7ff8e7af1be4,209470997,0,0x0,8
tick,0x7ff8e7af1be4,209480733,0,0x0,8
tick,0x7ff8e7af1be4,209492086,0,0x0,8
tick,0x7ff8e7af1be4,209510059,0,0x0,8
tick,0x7ff8e7af1be4,209528156,0,0x0,8
tick,0x7ff8e7af1be4,209543135,0,0x0,8
tick,0x7ff8e7af1be4,209559765,0,0x0,8
tick,0x7ff8e7af1be4,209568669,0,0x0,8
tick,0x7ff8e7af1be4,209584910,0,0x0,8
tick,0x7ff8e7af1be4,209594023,0,0x0,8
tick,0x7ff8e7af1be4,209604962,0,0x0,8
tick,0x7ff8e7af1be4,209620797,0,0x0,8
tick,0x7ff8e7af1be4,209629238,0,0x0,8
tick,0x7ff8e7af1be4,209645249,0,0x0,8
tick,0x7ff8e7af1be4,209666785,0,0x0,8
tick,0x7ff8e7af1be4,209669418,0,0x0,8
tick,0x7ff8e7af1be4,209685236,0,0x0,8
tick,0x7ff8e7af1be4,209702075,0,0x0,8
tick,0x7ff8e7af1be4,209718199,0,0x0,8
tick,0x7ff8e7af1be4,209733991,0,0x0,8
tick,0x7ff8e7af1be4,209750881,0,0x0,8
tick,0x7ff8e7af1be4,209765918,0,0x0,8
tick,0x7ff8e7af1be4,209782659,0,0x0,8
tick,0x7ff8e7af1be4,209798614,0,0x0,8
tick,0x7ff8e7af1be4,209814196,0,0x0,8
tick,0x7ff8e7af1be4,209830458,0,0x0,8
tick,0x7ff8e7af1be4,209845936,0,0x0,8
tick,0x7ff8e7af1be4,209862220,0,0x0,8
tick,0x7ff8e7af1be4,209878074,0,0x0,8
tick,0x7ff8e7af1be4,209894207,0,0x0,8
tick,0x7ff8e7af1be4,209909694,0,0x0,8
tick,0x7ff8e7af1be4,209926058,0,0x0,8
tick,0x7ff8e7af1be4,209941604,0,0x0,8
tick,0x7ff8e7af1be4,209957282,0,0x0,8
tick,0x7ff8e7af1be4,209972770,0,0x0,8
tick,0x7ff8e7af1be4,209988876,0,0x0,8
tick,0x7ff8e7af1be4,210004492,0,0x0,8
tick,0x7ff8e7af1be4,210020859,0,0x0,8
tick,0x7ff8e7af1be4,210036649,0,0x0,8
tick,0x7ff8e7af1be4,210052942,0,0x0,8
tick,0x7ff8e7af1be4,210069203,0,0x0,8
tick,0x7ff8e7af1be4,210070514,0,0x0,8
tick,0x7ff8e7af1be4,210079162,0,0x0,8
tick,0x7ff8e7af1be4,210096047,0,0x0,8
tick,0x7ff8e7af1be4,210111918,0,0x0,8
tick,0x7ff8e7af1be4,210127801,0,0x0,8
tick,0x7ff8e7af1be4,210143768,0,0x0,8
tick,0x7ff8e7af1be4,210159292,0,0x0,8
tick,0x7ff8e7af1be4,210175522,0,0x0,8
tick,0x7ff8e7af1be4,210191626,0,0x0,8
tick,0x7ff8e7af1be4,210206746,0,0x0,8
tick,0x7ff8e7af1be4,210222006,0,0x0,8
tick,0x7ff8e7af1be4,210238532,0,0x0,8
tick,0x7ff8e7af1be4,210254370,0,0x0,8
tick,0x7ff8e7af1be4,210270002,0,0x0,8
tick,0x7ff8e7af1be4,210285665,0,0x0,8
tick,0x7ff8e7af1be4,210298495,0,0x0,8
tick,0x7ff8e7af1be4,210315715,0,0x0,8
tick,0x7ff8e7af1be4,210324007,0,0x0,8
tick,0x7ff8e7af1be4,210341454,0,0x0,8
tick,0x7ff8e7af1be4,210357687,0,0x0,8
tick,0x7ff8e7af1be4,210364678,0,0x0,8
tick,0x7ff8e7af1be4,210375256,0,0x0,8
tick,0x7ff8e7af1be4,210385060,0,0x0,8
tick,0x7ff8e7af1be4,210393997,0,0x0,8
tick,0x7ff8e7af1be4,210406393,0,0x0,8
tick,0x7ff8e7af1be4,210417870,0,0x0,8
tick,0x7ff8e7af1be4,210433221,0,0x0,8
tick,0x7ff8e7af1be4,210449103,0,0x0,8
tick,0x7ff8e7af1be4,210465253,0,0x0,8
tick,0x7ff8e7af1be4,210480770,0,0x0,8
tick,0x7ff8e7af1be4,210497279,0,0x0,8
tick,0x7ff8e7af1be4,210513280,0,0x0,8
tick,0x7ff8e7af1be4,210521727,0,0x0,8
tick,0x7ff8e7af1be4,210546680,0,0x0,8
tick,0x7ff8e7af1be4,210553824,0,0x0,8
tick,0x7ff8e7af1be4,210577083,0,0x0,8
tick,0x7ff8e7af1be4,210586225,0,0x0,8
tick,0x7ff8e7af1be4,210596596,0,0x0,8
tick,0x7ff8e7af1be4,210616949,0,0x0,8
tick,0x7ff8e7af1be4,210620743,0,0x0,8
tick,0x7ff8e7af1be4,210636824,0,0x0,8
tick,0x7ff8e7af1be4,210652630,0,0x0,8
tick,0x7ff8e7af1be4,210669038,0,0x0,8
tick,0x7ff8e7af1be4,210684529,0,0x0,8
tick,0x7ff8e7af1be4,210701610,0,0x0,8
tick,0x7ff8e7af1be4,210717396,0,0x0,8
tick,0x7ff8e7af1be4,210732861,0,0x0,8
tick,0x7ff8e7af1be4,210749280,0,0x0,8
tick,0x7ff8e7af1be4,210765604,0,0x0,8
tick,0x7ff8e7af1be4,210773657,0,0x0,8
tick,0x7ff8e7af1be4,210797027,0,0x0,8
tick,0x7ff8e7af1be4,210806468,0,0x0,8
tick,0x7ff8e7af1be4,210827577,0,0x0,8
tick,0x7ff8e7af1be4,210835787,0,0x0,8
tick,0x7ff8e7af1be4,210852846,0,0x0,8
tick,0x7ff8e7af1be4,210868560,0,0x0,8
tick,0x7ff8e7af1be4,210884711,0,0x0,8
tick,0x7ff8e7af1be4,210900373,0,0x0,8
tick,0x7ff8e7af1be4,210917434,0,0x0,8
tick,0x7ff8e7af1be4,210932776,0,0x0,8
tick,0x7ff8e7af1be4,210948666,0,0x0,8
tick,0x7ff8e7af1be4,210959934,0,0x0,8
tick,0x7ff8e7af1be4,210976783,0,0x0,8
tick,0x7ff8e7af1be4,210986501,0,0x0,8
tick,0x7ff8e7af1be4,210995073,0,0x0,8
tick,0x7ff8e7af1be4,211010936,0,0x0,8
tick,0x7ff8e7af1be4,211026911,0,0x0,8
tick,0x7ff8e7af1be4,211042877,0,0x0,8
tick,0x7ff8e7af1be4,211059834,0,0x0,8
tick,0x7ff8e7af1be4,211075177,0,0x0,8
tick,0x7ff8e7af1be4,211091122,0,0x0,8
tick,0x7ff8e7af1be4,211092791,0,0x0,8
tick,0x7ff8e7af1be4,211098338,0,0x0,8
tick,0x7ff8e7af1be4,211102489,0,0x0,8
tick,0x7ff8e7af1be4,211104098,0,0x0,8
tick,0x7ff8e7af1be4,211106800,0,0x0,8
tick,0x7ff8e7af1be4,211121066,0,0x0,8
tick,0x7ff8e7af1be4,211136588,0,0x0,8
tick,0x7ff8e7af1be4,211152748,0,0x0,8
tick,0x7ff8e7af1be4,211168611,0,0x0,8
tick,0x7ff8e7af1be4,211184595,0,0x0,8
tick,0x7ff8e7af1be4,211200762,0,0x0,8
tick,0x7ff8e7af1be4,211217830,0,0x0,8
tick,0x7ff8e7af1be4,211233716,0,0x0,8
tick,0x7ff8e7af1be4,211248591,0,0x0,8
tick,0x7ff8e7af1be4,211264626,0,0x0,8
tick,0x7ff8e7af1be4,211280675,0,0x0,8
tick,0x7ff8e7af1be4,211297220,0,0x0,8
tick,0x7ff8e7af1be4,211313352,0,0x0,8
tick,0x7ff8e7af1be4,211328865,0,0x0,8
tick,0x7ff8e7af1be4,211345257,0,0x0,8
tick,0x7ff8e7af1be4,211361155,0,0x0,8
tick,0x7ff8e7af1be4,211376664,0,0x0,8
tick,0x7ff8e7af1be4,211393465,0,0x0,8
tick,0x7ff8e7af1be4,211409006,0,0x0,8
tick,0x7ff8e7af1be4,211424771,0,0x0,8
tick,0x7ff8e7af1be4,211441658,0,0x0,8
tick,0x7ff8e7af1be4,211458414,0,0x0,8
tick,0x7ff8e7af1be4,211472940,0,0x0,8
tick,0x7ff8e7af1be4,211488299,0,0x0,8
tick,0x7ff8e7af1be4,211504119,0,0x0,8
tick,0x7ff8e7af1be4,211520378,0,0x0,8
tick,0x7ff8e7af1be4,211537144,0,0x0,8
tick,0x7ff8e7af1be4,211552949,0,0x0,8
tick,0x7ff8e7af1be4,211569104,0,0x0,8
tick,0x7ff8e7af1be4,211584221,0,0x0,8
tick,0x7ff8e7af1be4,211600381,0,0x0,8
tick,0x7ff8e7af1be4,211601947,0,0x0,8
tick,0x7ff8e7af1be4,211607338,0,0x0,8
tick,0x7ff8e7af1be4,211608611,0,0x0,8
tick,0x7ff8e7af1be4,211610113,0,0x0,8
tick,0x7ff8e7af1be4,211612174,0,0x0,8
tick,0x7ff8e7af1be4,211628274,0,0x0,8
tick,0x7ff8e7af1be4,211644094,0,0x0,8
tick,0x7ff8e7af1be4,211660102,0,0x0,8
tick,0x7ff8e7af1be4,211676084,0,0x0,8
tick,0x7ff8e7af1be4,211692042,0,0x0,8
tick,0x7ff8e7af1be4,211707452,0,0x0,8
tick,0x7ff8e7af1be4,211723428,0,0x0,8
tick,0x7ff8e7af1be4,211739118,0,0x0,8
tick,0x7ff8e7af1be4,211755489,0,0x0,8
tick,0x7ff8e7af1be4,211771708,0,0x0,8
tick,0x7ff8e7af1be4,211786943,0,0x0,8
tick,0x7ff8e7af1be4,211803352,0,0x0,8
tick,0x7ff8e7af1be4,211819650,0,0x0,8
tick,0x7ff8e7af1be4,211834636,0,0x0,8
tick,0x7ff8e7af1be4,211851209,0,0x0,8
tick,0x7ff8e7af1be4,211866941,0,0x0,8
tick,0x7ff8e7af1be4,211883329,0,0x0,8
tick,0x7ff8e7af1be4,211898878,0,0x0,8
tick,0x7ff8e7af1be4,211915315,0,0x0,8
tick,0x7ff8e7af1be4,211930781,0,0x0,8
tick,0x7ff8e7af1be4,211947356,0,0x0,8
tick,0x7ff8e7af1be4,211964334,0,0x0,8
tick,0x7ff8e7af1be4,211979169,0,0x0,8
tick,0x7ff8e7af1be4,211994406,0,0x0,8
tick,0x7ff8e7af1be4,212011271,0,0x0,8
tick,0x7ff8e7af1be4,212027165,0,0x0,8
tick,0x7ff8e7af1be4,212043615,0,0x0,8
tick,0x7ff8e7af1be4,212059349,0,0x0,8
tick,0x7ff8e7af1be4,212075318,0,0x0,8
tick,0x7ff8e7af1be4,212092167,0,0x0,8
tick,0x7ff8e7af1be4,212108324,0,0x0,8
tick,0x7ff8e7af1be4,212112957,0,0x0,8
tick,0x7ff8e7af1be4,212115572,0,0x0,8
tick,0x7ff8e7af1be4,212118382,0,0x0,8
tick,0x7ff8e7af1be4,212119829,0,0x0,8
tick,0x7ff8e7af1be4,212135677,0,0x0,8
tick,0x7ff8e7af1be4,212151885,0,0x0,8
tick,0x7ff8e7af1be4,212168017,0,0x0,8
tick,0x7ff8e7af1be4,212183946,0,0x0,8
tick,0x7ff8e7af1be4,212200306,0,0x0,8
tick,0x7ff8e7af1be4,212216396,0,0x0,8
tick,0x7ff8e7af1be4,212232061,0,0x0,8
tick,0x7ff8e7af1be4,212247897,0,0x0,8
tick,0x7ff8e7af1be4,212264015,0,0x0,8
tick,0x7ff8e7af1be4,212280017,0,0x0,8
tick,0x7ff8e7af1be4,212296064,0,0x0,8
tick,0x7ff8e7af1be4,212312404,0,0x0,8
tick,0x7ff8e7af1be4,212328541,0,0x0,8
tick,0x7ff8e7af1be4,212343865,0,0x0,8
tick,0x7ff8e7af1be4,212359642,0,0x0,8
tick,0x7ff8e7af1be4,212376144,0,0x0,8
tick,0x7ff8e7af1be4,212391932,0,0x0,8
tick,0x7ff8e7af1be4,212409333,0,0x0,8
tick,0x7ff8e7af1be4,212423620,0,0x0,8
tick,0x7ff8e7af1be4,212439439,0,0x0,8
tick,0x7ff8e7af1be4,212455531,0,0x0,8
tick,0x7ff8e7af1be4,212471625,0,0x0,8
tick,0x7ff8e7af1be4,212486777,0,0x0,8
tick,0x7ff8e7af1be4,212502735,0,0x0,8
tick,0x7ff8e7af1be4,212519855,0,0x0,8
tick,0x7ff8e7af1be4,212534755,0,0x0,8
tick,0x7ff8e7af1be4,212551216,0,0x0,8
tick,0x7ff8e7af1be4,212567024,0,0x0,8
tick,0x7ff8e7af1be4,212582535,0,0x0,8
tick,0x7ff8e7af1be4,212598631,0,0x0,8
tick,0x7ff8e7af1be4,212614699,0,0x0,8
tick,0x7ff8e7af1be4,212616141,0,0x0,8
tick,0x7ff8e7af1be4,212621769,0,0x0,8
tick,0x7ff8e7af1be4,212623391,0,0x0,8
tick,0x7ff8e7af1be4,212625396,0,0x0,8
tick,0x7ff8e7af1be4,212641634,0,0x0,8
tick,0x7ff8e7af1be4,212659008,0,0x0,8
tick,0x7ff8e7af1be4,212673675,0,0x0,8
tick,0x7ff8e7af1be4,212689597,0,0x0,8
tick,0x7ff8e7af1be4,212706085,0,0x0,8
tick,0x7ff8e7af1be4,212721364,0,0x0,8
tick,0x7ff8e7af1be4,212736879,0,0x0,8
tick,0x7ff8e7af1be4,212752755,0,0x0,8
tick,0x7ff8e7af1be4,212769050,0,0x0,8
tick,0x7ff8e7af1be4,212784474,0,0x0,8
tick,0x7ff8e7af1be4,212800691,0,0x0,8
tick,0x7ff8e7af1be4,212816414,0,0x0,8
tick,0x7ff8e7af1be4,212832728,0,0x0,8
tick,0x7ff8e7af1be4,212848553,0,0x0,8
tick,0x7ff8e7af1be4,212864335,0,0x0,8
tick,0x7ff8e7af1be4,212880311,0,0x0,8
tick,0x7ff8e7af1be4,212897801,0,0x0,8
tick,0x7ff8e7af1be4,212913760,0,0x0,8
tick,0x7ff8e7af1be4,212929093,0,0x0,8
tick,0x7ff8e7af1be4,212945308,0,0x0,8
tick,0x7ff8e7af1be4,212961116,0,0x0,8
tick,0x7ff8e7af1be4,212976846,0,0x0,8
tick,0x7ff8e7af1be4,212992601,0,0x0,8
tick,0x7ff8e7af1be4,213008617,0,0x0,8
tick,0x7ff8e7af1be4,213025351,0,0x0,8
tick,0x7ff8e7af1be4,213040586,0,0x0,8
tick,0x7ff8e7af1be4,213058093,0,0x0,8
tick,0x7ff8e7af1be4,213074035,0,0x0,8
tick,0x7ff8e7af1be4,213088805,0,0x0,8
tick,0x7ff8e7af1be4,213104675,0,0x0,8
tick,0x7ff8e7af1be4,213121008,0,0x0,8
tick,0x7ff8e7af1be4,213128052,0,0x0,8
tick,0x7ff8e7af1be4,213129407,0,0x0,8
tick,0x7ff8e7af1be4,213131011,0,0x0,8
tick,0x7ff8e7af1be4,213132249,0,0x0,8
tick,0x7ff8e7af1be4,213148540,0,0x0,8
tick,0x7ff8e7af1be4,213164428,0,0x0,8
tick,0x7ff8e7af1be4,213180187,0,0x0,8
tick,0x7ff8e7af1be4,213195945,0,0x0,8
tick,0x7ff8e7af1be4,213211992,0,0x0,8
tick,0x7ff8e7af1be4,213227975,0,0x0,8
tick,0x7ff8e7af1be4,213244097,0,0x0,8
tick,0x7ff8e7af1be4,213259780,0,0x0,8
tick,0x7ff8e7af1be4,213276234,0,0x0,8
tick,0x7ff8e7af1be4,213293374,0,0x0,8
tick,0x7ff8e7af1be4,213308894,0,0x0,8
tick,0x7ff8e7af1be4,213323308,0,0x0,8
tick,0x7ff8e7af1be4,213339321,0,0x0,8
tick,0x7ff8e7af1be4,213355397,0,0x0,8
tick,0x7ff8e7af1be4,213371674,0,0x0,8
tick,0x7ff8e7af1be4,213387389,0,0x0,8
tick,0x7ff8e7af1be4,213402784,0,0x0,8
tick,0x7ff8e7af1be4,213418941,0,0x0,8
tick,0x7ff8e7af1be4,213435138,0,0x0,8
tick,0x7ff8e7af1be4,213450940,0,0x0,8
tick,0x7ff8e7af1be4,213467094,0,0x0,8
tick,0x7ff8e7af1be4,213482985,0,0x0,8
tick,0x7ff8e7af1be4,213499009,0,0x0,8
tick,0x7ff8e7af1be4,213515338,0,0x0,8
tick,0x7ff8e7af1be4,213531064,0,0x0,8
tick,0x7ff8e7af1be4,213546910,0,0x0,8
tick,0x7ff8e7af1be4,213563364,0,0x0,8
tick,0x7ff8e7af1be4,213578903,0,0x0,8
tick,0x7ff8e7af1be4,213594667,0,0x0,8
tick,0x7ff8e7af1be4,213610391,0,0x0,8
tick,0x7ff8e7af1be4,213626614,0,0x0,8
tick,0x7ff8e7af1be4,213632191,0,0x0,8
tick,0x7ff8e7af1be4,213633781,0,0x0,8
tick,0x7ff8e7af1be4,213634948,0,0x0,8
tick,0x7ff8e7af1be4,213636756,0,0x0,8
tick,0x7ff8e7af1be4,213651273,0,0x0,8
tick,0x7ff8e7af1be4,213666548,0,0x0,8
tick,0x7ff8e7af1be4,213681937,0,0x0,8
tick,0x7ff8e7af1be4,213698000,0,0x0,8
tick,0x7ff8e7af1be4,213714040,0,0x0,8
tick,0x7ff8e7af1be4,213729749,0,0x0,8
tick,0x7ff8e7af1be4,213745930,0,0x0,8
tick,0x7ff8e7af1be4,213761756,0,0x0,8
tick,0x7ff8e7af1be4,213776803,0,0x0,8
tick,0x7ff8e7af1be4,213792093,0,0x0,8
tick,0x7ff8e7af1be4,213808071,0,0x0,8
tick,0x7ff8e7af1be4,213823756,0,0x0,8
tick,0x7ff8e7af1be4,213839580,0,0x0,8
tick,0x7ff8e7af1be4,213855805,0,0x0,8
tick,0x7ff8e7af1be4,213872210,0,0x0,8
tick,0x7ff8e7af1be4,213888031,0,0x0,8
tick,0x7ff8e7af1be4,213904821,0,0x0,8
tick,0x7ff8e7af1be4,213920597,0,0x0,8
tick,0x7ff8e7af1be4,213936266,0,0x0,8
tick,0x7ff8e7af1be4,213952861,0,0x0,8
tick,0x7ff8e7af1be4,213968282,0,0x0,8
tick,0x7ff8e7af1be4,213984413,0,0x0,8
tick,0x7ff8e7af1be4,214000633,0,0x0,8
tick,0x7ff8e7af1be4,214017074,0,0x0,8
tick,0x7ff8e7af1be4,214032865,0,0x0,8
tick,0x7ff8e7af1be4,214048680,0,0x0,8
tick,0x7ff8e7af1be4,214064910,0,0x0,8
tick,0x7ff8e7af1be4,214081083,0,0x0,8
tick,0x7ff8e7af1be4,214097014,0,0x0,8
tick,0x7ff8e7af1be4,214113744,0,0x0,8
tick,0x7ff8e7af1be4,214129274,0,0x0,8
tick,0x7ff8e7af1be4,214130623,0,0x0,8
tick,0x7ff8e7af1be4,214133203,0,0x0,8
tick,0x7ff8e7af1be4,214134964,0,0x0,8
tick,0x7ff8e7af1be4,214136482,0,0x0,8
tick,0x7ff8e7af1be4,214137627,0,0x0,8
tick,0x7ff8e7af1be4,214146715,0,0x0,8
tick,0x7ff8e7af1be4,214154606,0,0x0,8
tick,0x7ff8e7af1be4,214170995,0,0x0,8
tick,0x7ff8e7af1be4,214186615,0,0x0,8
tick,0x7ff8e7af1be4,214202859,0,0x0,8
tick,0x7ff8e7af1be4,214218698,0,0x0,8
tick,0x7ff8e7af1be4,214234515,0,0x0,8
tick,0x7ff8e7af1be4,214250338,0,0x0,8
tick,0x7ff8e7af1be4,214267277,0,0x0,8
tick,0x7ff8e7af1be4,214282869,0,0x0,8
tick,0x7ff8e7af1be4,214298783,0,0x0,8
tick,0x7ff8e7af1be4,214314763,0,0x0,8
tick,0x7ff8e7af1be4,214331320,0,0x0,8
tick,0x7ff8e7af1be4,214347649,0,0x0,8
tick,0x7ff8e7af1be4,214363147,0,0x0,8
tick,0x7ff8e7af1be4,214379395,0,0x0,8
tick,0x7ff8e7af1be4,214394456,0,0x0,8
tick,0x7ff8e7af1be4,214410793,0,0x0,8
tick,0x7ff8e7af1be4,214428111,0,0x0,8
tick,0x7ff8e7af1be4,214441953,0,0x0,8
tick,0x7ff8e7af1be4,214457896,0,0x0,8
tick,0x7ff8e7af1be4,214473993,0,0x0,8
tick,0x7ff8e7af1be4,214490104,0,0x0,8
tick,0x7ff8e7af1be4,214505666,0,0x0,8
tick,0x7ff8e7af1be4,214521871,0,0x0,8
tick,0x7ff8e7af1be4,214537558,0,0x0,8
tick,0x7ff8e7af1be4,214554058,0,0x0,8
tick,0x7ff8e7af1be4,214569727,0,0x0,8
tick,0x7ff8e7af1be4,214585712,0,0x0,8
tick,0x7ff8e7af1be4,214601654,0,0x0,8
tick,0x7ff8e7af1be4,214617394,0,0x0,8
tick,0x7ff8e7af1be4,214633227,0,0x0,8
tick,0x7ff8e7af1be4,214640794,0,0x0,8
tick,0x7ff8e7af1be4,214641811,0,0x0,8
tick,0x7ff8e7af1be4,214659281,0,0x0,8
tick,0x7ff8e7af1be4,214675229,0,0x0,8
tick,0x7ff8e7af1be4,214691523,0,0x0,8
tick,0x7ff8e7af1be4,214706275,0,0x0,8
tick,0x7ff8e7af1be4,214714558,0,0x0,8
tick,0x7ff8e7af1be4,214731410,0,0x0,8
tick,0x7ff8e7af1be4,214743229,0,0x0,8
tick,0x7ff8e7af1be4,214754972,0,0x0,8
tick,0x7ff8e7af1be4,214771088,0,0x0,8
tick,0x7ff8e7af1be4,214786373,0,0x0,8
tick,0x7ff8e7af1be4,214791299,0,0x0,8
tick,0x7ff8e7af1be4,214808617,0,0x0,8
tick,0x7ff8e7af1be4,214811843,0,0x0,8
tick,0x7ff8e7af1be4,214827676,0,0x0,8
tick,0x7ff8e7af1be4,214843405,0,0x0,8
tick,0x7ff8e7af1be4,214851357,0,0x0,8
tick,0x7ff8e7af1be4,214871353,0,0x0,8
tick,0x7ff8e7af1be4,214875355,0,0x0,8
tick,0x7ff8e7af1be4,214891468,0,0x0,8
tick,0x7ff8e7af1be4,214907907,0,0x0,8
tick,0x7ff8e7af1be4,214916588,0,0x0,8
tick,0x7ff8e7af1be4,214925283,0,0x0,8
tick,0x7ff8e7af1be4,214941068,0,0x0,8
tick,0x7ff8e7af1be4,214956357,0,0x0,8
tick,0x7ff8e7af1be4,214971720,0,0x0,8
tick,0x7ff8e7af1be4,214987477,0,0x0,8
tick,0x7ff8e7af1be4,215003484,0,0x0,8
tick,0x7ff8e7af1be4,215019419,0,0x0,8
tick,0x7ff8e7af1be4,215035305,0,0x0,8
tick,0x7ff8e7af1be4,215051218,0,0x0,8
tick,0x7ff8e7af1be4,215066452,0,0x0,8
tick,0x7ff8e7af1be4,215082525,0,0x0,8
tick,0x7ff8e7af1be4,215098381,0,0x0,8
tick,0x7ff8e7af1be4,215114409,0,0x0,8
tick,0x7ff8e7af1be4,215130450,0,0x0,8
tick,0x7ff8e7af1be4,215146488,0,0x0,8
tick,0x7ff8e7af1be4,215148315,0,0x0,8
tick,0x7ff8e7af1be4,215153478,0,0x0,8
tick,0x7ff8e7af1be4,215154748,0,0x0,8
tick,0x7ff8e7af1be4,215170937,0,0x0,8
tick,0x7ff8e7af1be4,215186201,0,0x0,8
tick,0x7ff8e7af1be4,215202082,0,0x0,8
tick,0x7ff8e7af1be4,215218158,0,0x0,8
tick,0x7ff8e7af1be4,215233798,0,0x0,8
tick,0x7ff8e7af1be4,215249813,0,0x0,8
tick,0x7ff8e7af1be4,215265562,0,0x0,8
tick,0x7ff8e7af1be4,215281331,0,0x0,8
tick,0x7ff8e7af1be4,215296448,0,0x0,8
tick,0x7ff8e7af1be4,215312223,0,0x0,8
tick,0x7ff8e7af1be4,215314596,0,0x0,8
tick,0x7ff8e7af1be4,215330587,0,0x0,8
tick,0x7ff8e7af1be4,215346469,0,0x0,8
tick,0x7ff8e7af1be4,215354870,0,0x0,8
tick,0x7ff8e7af1be4,215371064,0,0x0,8
tick,0x7ff8e7af1be4,215379207,0,0x0,8
tick,0x7ff8e7af1be4,215395236,0,0x0,8
tick,0x7ff8e7af1be4,215411311,0,0x0,8
tick,0x7ff8e7af1be4,215426546,0,0x0,8
tick,0x7ff8e7af1be4,215442438,0,0x0,8
tick,0x7ff8e7af1be4,215458254,0,0x0,8
tick,0x7ff8e7af1be4,215474280,0,0x0,8
tick,0x7ff8e7af1be4,215489975,0,0x0,8
tick,0x7ff8e7af1be4,215506275,0,0x0,8
tick,0x7ff8e7af1be4,215521540,0,0x0,8
tick,0x7ff8e7af1be4,215537511,0,0x0,8
tick,0x7ff8e7af1be4,215553045,0,0x0,8
tick,0x7ff8e7af1be4,215568855,0,0x0,8
tick,0x7ff8e7af1be4,215584493,0,0x0,8
tick,0x7ff8e7af1be4,215600476,0,0x0,8
tick,0x7ff8e7af1be4,215616580,0,0x0,8
tick,0x7ff8e7af1be4,215632521,0,0x0,8
tick,0x7ff8e7af1be4,215648254,0,0x0,8
tick,0x7ff8e7af1be4,215664020,0,0x0,8
tick,0x7ff8e7af1be4,215679834,0,0x0,8
tick,0x7ff8e7af1be4,215696518,0,0x0,8
tick,0x7ff8e7af1be4,215712836,0,0x0,8
tick,0x7ff8e7af1be4,215728418,0,0x0,8
tick,0x7ff8e7af1be4,215744487,0,0x0,8
tick,0x7ff8e7af1be4,215760235,0,0x0,8
tick,0x7ff8e7af1be4,215776889,0,0x0,8
tick,0x7ff8e7af1be4,215792582,0,0x0,8
tick,0x7ff8e7af1be4,215809720,0,0x0,8
tick,0x7ff8e7af1be4,215823940,0,0x0,8
tick,0x7ff8e7af1be4,215839485,0,0x0,8
tick,0x7ff8e7af1be4,215855485,0,0x0,8
tick,0x7ff8e7af1be4,215872245,0,0x0,8
tick,0x7ff8e7af1be4,215887463,0,0x0,8
tick,0x7ff8e7af1be4,215903280,0,0x0,8
tick,0x7ff8e7af1be4,215923956,0,0x0,8
tick,0x7ff8e7af1be4,215927514,0,0x0,8
tick,0x7ff8e7af1be4,215943552,0,0x0,8
tick,0x7ff8e7af1be4,215959866,0,0x0,8
tick,0x7ff8e7af1be4,215976050,0,0x0,8
tick,0x7ff8e7af1be4,215991868,0,0x0,8
tick,0x7ff8e7af1be4,216007833,0,0x0,8
tick,0x7ff8e7af1be4,216019812,0,0x0,8
tick,0x7ff8e7af1be4,216028906,0,0x0,8
tick,0x7ff8e7af1be4,216044974,0,0x0,8
tick,0x7ff8e7af1be4,216056633,0,0x0,8
tick,0x7ff8e7af1be4,216068989,0,0x0,8
tick,0x7ff8e7af1be4,216084991,0,0x0,8
tick,0x7ff8e7af1be4,216100887,0,0x0,8
tick,0x7ff8e7af1be4,216116930,0,0x0,8
tick,0x7ff8e7af1be4,216132998,0,0x0,8
tick,0x7ff8e7af1be4,216149147,0,0x0,8
tick,0x7ff8e7af1be4,216164976,0,0x0,8
tick,0x7ff8e7af1be4,216180846,0,0x0,8
tick,0x7ff8e7af1be4,216196818,0,0x0,8
tick,0x7ff8e7af1be4,216213449,0,0x0,8
tick,0x7ff8e7af1be4,216229168,0,0x0,8
tick,0x7ff8e7af1be4,216245071,0,0x0,8
tick,0x7ff8e7af1be4,216261363,0,0x0,8
tick,0x7ff8e7af1be4,216276610,0,0x0,8
tick,0x7ff8e7af1be4,216285047,0,0x0,8
tick,0x7ff8e7af1be4,216301031,0,0x0,8
tick,0x7ff8e7af1be4,216316895,0,0x0,8
tick,0x7ff8e7af1be4,216331767,0,0x0,8
tick,0x7ff8e7af1be4,216347746,0,0x0,8
tick,0x7ff8e7af1be4,216364088,0,0x0,8
tick,0x7ff8e7af1be4,216379969,0,0x0,8
tick,0x7ff8e7af1be4,216396788,0,0x0,8
tick,0x7ff8e7af1be4,216399422,0,0x0,8
tick,0x7ff8e7af1be4,216415074,0,0x0,8
tick,0x7ff8e7af1be4,216431442,0,0x0,8
tick,0x7ff8e7af1be4,216439147,0,0x0,8
tick,0x7ff8e7af1be4,216455116,0,0x0,8
tick,0x7ff8e7af1be4,216470932,0,0x0,8
tick,0x7ff8e7af1be4,216486915,0,0x0,8
tick,0x7ff8e7af1be4,216502657,0,0x0,8
tick,0x7ff8e7af1be4,216518436,0,0x0,8
tick,0x7ff8e7af1be4,216534253,0,0x0,8
tick,0x7ff8e7af1be4,216550192,0,0x0,8
tick,0x7ff8e7af1be4,216566273,0,0x0,8
tick,0x7ff8e7af1be4,216581830,0,0x0,8
tick,0x7ff8e7af1be4,216597927,0,0x0,8
tick,0x7ff8e7af1be4,216613619,0,0x0,8
tick,0x7ff8e7af1be4,216629696,0,0x0,8
tick,0x7ff8e7af1be4,216645822,0,0x0,8
tick,0x7ff8e7af1be4,216661630,0,0x0,8
tick,0x7ff8e7af1be4,216676941,0,0x0,8
tick,0x7ff8e7af1be4,216693068,0,0x0,8
tick,0x7ff8e7af1be4,216709019,0,0x0,8
tick,0x7ff8e7af1be4,216724890,0,0x0,8
tick,0x7ff8e7af1be4,216741017,0,0x0,8
tick,0x7ff8e7af1be4,216757328,0,0x0,8
tick,0x7ff8e7af1be4,216773017,0,0x0,8
tick,0x7ff8e7af1be4,216788997,0,0x0,8
tick,0x7ff8e7af1be4,216805017,0,0x0,8
tick,0x7ff8e7af1be4,216821453,0,0x0,8
tick,0x7ff8e7af1be4,216838152,0,0x0,8
tick,0x7ff8e7af1be4,216851853,0,0x0,8
tick,0x7ff8e7af1be4,216860437,0,0x0,8
tick,0x7ff8e7af1be4,216868527,0,0x0,8
tick,0x7ff8e7af1be4,216887364,0,0x0,8
tick,0x7ff8e7af1be4,216892527,0,0x0,8
tick,0x7ff8e7af1be4,216908308,0,0x0,8
tick,0x7ff8e7af1be4,216923756,0,0x0,8
tick,0x7ff8e7af1be4,216940894,0,0x0,8
tick,0x7ff8e7af1be4,216947499,0,0x0,8
tick,0x7ff8e7af1be4,216966770,0,0x0,8
tick,0x7ff8e7af1be4,216971452,0,0x0,8
tick,0x7ff8e7af1be4,216986921,0,0x0,8
tick,0x7ff8e7af1be4,217003109,0,0x0,8
tick,0x7ff8e7af1be4,217019096,0,0x0,8
tick,0x7ff8e7af1be4,217035075,0,0x0,8
tick,0x7ff8e7af1be4,217051527,0,0x0,8
tick,0x7ff8e7af1be4,217066710,0,0x0,8
tick,0x7ff8e7af1be4,217082712,0,0x0,8
tick,0x7ff8e7af1be4,217099007,0,0x0,8
tick,0x7ff8e7af1be4,217114912,0,0x0,8
tick,0x7ff8e7af1be4,217131130,0,0x0,8
tick,0x7ff8e7af1be4,217146594,0,0x0,8
tick,0x7ff8e7af1be4,217162792,0,0x0,8
tick,0x7ff8e7af1be4,217178652,0,0x0,8
tick,0x7ff8e7af1be4,217194613,0,0x0,8
tick,0x7ff8e7af1be4,217211355,0,0x0,8
tick,0x7ff8e7af1be4,217226086,0,0x0,8
tick,0x7ff8e7af1be4,217241825,0,0x0,8
tick,0x7ff8e7af1be4,217258055,0,0x0,8
tick,0x7ff8e7af1be4,217273780,0,0x0,8
tick,0x7ff8e7af1be4,217290015,0,0x0,8
tick,0x7ff8e7af1be4,217305861,0,0x0,8
tick,0x7ff8e7af1be4,217321584,0,0x0,8
tick,0x7ff8e7af1be4,217337056,0,0x0,8
tick,0x7ff8e7af1be4,217353168,0,0x0,8
tick,0x7ff8e7af1be4,217369284,0,0x0,8
tick,0x7ff8e7af1be4,217384875,0,0x0,8
tick,0x7ff8e7af1be4,217400891,0,0x0,8
tick,0x7ff8e7af1be4,217417487,0,0x0,8
tick,0x7ff8e7af1be4,217432946,0,0x0,8
tick,0x7ff8e7af1be4,217449103,0,0x0,8
tick,0x7ff8e7af1be4,217464485,0,0x0,8
tick,0x7ff8e7af1be4,217480251,0,0x0,8
tick,0x7ff8e7af1be4,217495225,0,0x0,8
tick,0x7ff8e7af1be4,217504180,0,0x0,8
tick,0x7ff8e7af1be4,217520013,0,0x0,8
tick,0x7ff8e7af1be4,217535637,0,0x0,8
tick,0x7ff8e7af1be4,217551779,0,0x0,8
tick,0x7ff8e7af1be4,217567196,0,0x0,8
tick,0x7ff8e7af1be4,217583349,0,0x0,8
tick,0x7ff8e7af1be4,217599157,0,0x0,8
tick,0x7ff8e7af1be4,217615306,0,0x0,8
tick,0x7ff8e7af1be4,217631333,0,0x0,8
tick,0x7ff8e7af1be4,217646683,0,0x0,8
tick,0x7ff8e7af1be4,217662937,0,0x0,8
tick,0x7ff8e7af1be4,217678665,0,0x0,8
tick,0x7ff8e7af1be4,217694935,0,0x0,8
tick,0x7ff8e7af1be4,217710853,0,0x0,8
tick,0x7ff8e7af1be4,217726985,0,0x0,8
tick,0x7ff8e7af1be4,217742097,0,0x0,8
tick,0x7ff8e7af1be4,217757958,0,0x0,8
tick,0x7ff8e7af1be4,217774194,0,0x0,8
tick,0x7ff8e7af1be4,217790385,0,0x0,8
tick,0x7ff8e7af1be4,217806522,0,0x0,8
tick,0x7ff8e7af1be4,217822179,0,0x0,8
tick,0x7ff8e7af1be4,217838101,0,0x0,8
tick,0x7ff8e7af1be4,217853885,0,0x0,8
tick,0x7ff8e7af1be4,217869868,0,0x0,8
tick,0x7ff8e7af1be4,217885550,0,0x0,8
tick,0x7ff8e7af1be4,217901436,0,0x0,8
tick,0x7ff8e7af1be4,217917396,0,0x0,8
tick,0x7ff8e7af1be4,217933492,0,0x0,8
tick,0x7ff8e7af1be4,217949811,0,0x0,8
tick,0x7ff8e7af1be4,217965372,0,0x0,8
tick,0x7ff8e7af1be4,217981577,0,0x0,8
tick,0x7ff8e7af1be4,217997035,0,0x0,8
tick,0x7ff8e7af1be4,218005643,0,0x0,8
tick,0x7ff8e7af1be4,218021488,0,0x0,8
tick,0x7ff8e7af1be4,218037619,0,0x0,8
tick,0x7ff8e7af1be4,218054130,0,0x0,8
tick,0x7ff8e7af1be4,218069928,0,0x0,8
tick,0x7ff8e7af1be4,218085948,0,0x0,8
tick,0x7ff8e7af1be4,218101317,0,0x0,8
tick,0x7ff8e7af1be4,218117285,0,0x0,8
tick,0x7ff8e7af1be4,218133186,0,0x0,8
tick,0x7ff8e7af1be4,218149118,0,0x0,8
tick,0x7ff8e7af1be4,218165085,0,0x0,8
tick,0x7ff8e7af1be4,218181470,0,0x0,8
tick,0x7ff8e7af1be4,218197150,0,0x0,8
tick,0x7ff8e7af1be4,218212696,0,0x0,8
tick,0x7ff8e7af1be4,218227815,0,0x0,8
tick,0x7ff8e7af1be4,218244061,0,0x0,8
tick,0x7ff8e7af1be4,218259861,0,0x0,8
tick,0x7ff8e7af1be4,218275726,0,0x0,8
tick,0x7ff8e7af1be4,218291617,0,0x0,8
tick,0x7ff8e7af1be4,218307827,0,0x0,8
tick,0x7ff8e7af1be4,218324008,0,0x0,8
tick,0x7ff8e7af1be4,218339701,0,0x0,8
tick,0x7ff8e7af1be4,218355620,0,0x0,8
tick,0x7ff8e7af1be4,218371387,0,0x0,8
tick,0x7ff8e7af1be4,218387554,0,0x0,8
tick,0x7ff8e7af1be4,218402712,0,0x0,8
tick,0x7ff8e7af1be4,218418822,0,0x0,8
tick,0x7ff8e7af1be4,218434792,0,0x0,8
tick,0x7ff8e7af1be4,218451032,0,0x0,8
tick,0x7ff8e7af1be4,218466853,0,0x0,8
tick,0x7ff8e7af1be4,218483147,0,0x0,8
tick,0x7ff8e7af1be4,218498987,0,0x0,8
tick,0x7ff8e7af1be4,218515874,0,0x0,8
tick,0x7ff8e7af1be4,218530156,0,0x0,8
tick,0x7ff8e7af1be4,218554900,0,0x0,8
tick,0x7ff8e7af1be4,218571059,0,0x0,8
tick,0x7ff8e7af1be4,218587060,0,0x0,8
tick,0x7ff8e7af1be4,218602581,0,0x0,8
tick,0x7ff8e7af1be4,218618440,0,0x0,8
tick,0x7ff8e7af1be4,218634199,0,0x0,8
tick,0x7ff8e7af1be4,218650202,0,0x0,8
tick,0x7ff8e7af1be4,218666395,0,0x0,8
tick,0x7ff8e7af1be4,218682960,0,0x0,8
tick,0x7ff8e7af1be4,218698174,0,0x0,8
tick,0x7ff8e7af1be4,218714451,0,0x0,8
tick,0x7ff8e7af1be4,218729717,0,0x0,8
tick,0x7ff8e7af1be4,218745596,0,0x0,8
tick,0x7ff8e7af1be4,218761461,0,0x0,8
tick,0x7ff8e7af1be4,218777316,0,0x0,8
tick,0x7ff8e7af1be4,218793556,0,0x0,8
tick,0x7ff8e7af1be4,218809363,0,0x0,8
tick,0x7ff8e7af1be4,218825001,0,0x0,8
tick,0x7ff8e7af1be4,218840857,0,0x0,8
tick,0x7ff8e7af1be4,218857132,0,0x0,8
tick,0x7ff8e7af1be4,218873335,0,0x0,8
tick,0x7ff8e7af1be4,218889338,0,0x0,8
tick,0x7ff8e7af1be4,218905963,0,0x0,8
tick,0x7ff8e7af1be4,218921295,0,0x0,8
tick,0x7ff8e7af1be4,218937665,0,0x0,8
tick,0x7ff8e7af1be4,218953306,0,0x0,8
tick,0x7ff8e7af1be4,218968609,0,0x0,8
tick,0x7ff8e7af1be4,218984062,0,0x0,8
tick,0x7ff8e7af1be4,218999826,0,0x0,8
tick,0x7ff8e7af1be4,219015725,0,0x0,8
tick,0x7ff8e7af1be4,219031910,0,0x0,8
tick,0x7ff8e7af1be4,219048631,0,0x0,8
tick,0x7ff8e7af1be4,219064412,0,0x0,8
tick,0x7ff8e7af1be4,219073287,0,0x0,8
tick,0x7ff8e7af1be4,219089106,0,0x0,8
tick,0x7ff8e7af1be4,219105201,0,0x0,8
tick,0x7ff8e7af1be4,219121265,0,0x0,8
tick,0x7ff8e7af1be4,219137373,0,0x0,8
tick,0x7ff8e7af1be4,219153152,0,0x0,8
tick,0x7ff8e7af1be4,219169827,0,0x0,8
tick,0x7ff8e7af1be4,219184404,0,0x0,8
tick,0x7ff8e7af1be4,219200812,0,0x0,8
tick,0x7ff8e7af1be4,219216999,0,0x0,8
tick,0x7ff8e7af1be4,219233363,0,0x0,8
tick,0x7ff8e7af1be4,219248941,0,0x0,8
tick,0x7ff8e7af1be4,219264999,0,0x0,8
tick,0x7ff8e7af1be4,219280535,0,0x0,8
tick,0x7ff8e7af1be4,219296279,0,0x0,8
tick,0x7ff8e7af1be4,219312774,0,0x0,8
tick,0x7ff8e7af1be4,219328436,0,0x0,8
tick,0x7ff8e7af1be4,219344539,0,0x0,8
tick,0x7ff8e7af1be4,219361704,0,0x0,8
tick,0x7ff8e7af1be4,219377506,0,0x0,8
tick,0x7ff8e7af1be4,219393599,0,0x0,8
tick,0x7ff8e7af1be4,219409985,0,0x0,8
tick,0x7ff8e7af1be4,219425646,0,0x0,8
tick,0x7ff8e7af1be4,219441832,0,0x0,8
tick,0x7ff8e7af1be4,219457845,0,0x0,8
tick,0x7ff8e7af1be4,219473474,0,0x0,8
tick,0x7ff8e7af1be4,219489341,0,0x0,8
tick,0x7ff8e7af1be4,219505817,0,0x0,8
tick,0x7ff8e7af1be4,219521702,0,0x0,8
tick,0x7ff8e7af1be4,219537481,0,0x0,8
tick,0x7ff8e7af1be4,219553471,0,0x0,8
tick,0x7ff8e7af1be4,219569882,0,0x0,8
tick,0x7ff8e7af1be4,219580901,0,0x0,8
tick,0x7ff8e7af1be4,219594301,0,0x0,8
tick,0x7ff8e7af1be4,219602290,0,0x0,8
tick,0x7ff8e7af1be4,219618533,0,0x0,8
tick,0x7ff8e7af1be4,219634276,0,0x0,8
tick,0x7ff8e7af1be4,219650013,0,0x0,8
tick,0x7ff8e7af1be4,219665923,0,0x0,8
tick,0x7ff8e7af1be4,219681758,0,0x0,8
tick,0x7ff8e7af1be4,219698090,0,0x0,8
tick,0x7ff8e7af1be4,219714146,0,0x0,8
tick,0x7ff8e7af1be4,219729882,0,0x0,8
tick,0x7ff8e7af1be4,219745748,0,0x0,8
tick,0x7ff8e7af1be4,219761813,0,0x0,8
tick,0x7ff8e7af1be4,219777734,0,0x0,8
tick,0x7ff8e7af1be4,219793715,0,0x0,8
tick,0x7ff8e7af1be4,219809824,0,0x0,8
tick,0x7ff8e7af1be4,219827370,0,0x0,8
tick,0x7ff8e7af1be4,219842091,0,0x0,8
tick,0x7ff8e7af1be4,219858347,0,0x0,8
tick,0x7ff8e7af1be4,219874626,0,0x0,8
tick,0x7ff8e7af1be4,219890812,0,0x0,8
tick,0x7ff8e7af1be4,219907103,0,0x0,8
tick,0x7ff8e7af1be4,219923152,0,0x0,8
tick,0x7ff8e7af1be4,219938900,0,0x0,8
tick,0x7ff8e7af1be4,219955583,0,0x0,8
tick,0x7ff8e7af1be4,219970509,0,0x0,8
tick,0x7ff8e7af1be4,219986523,0,0x0,8
tick,0x7ff8e7af1be4,220002467,0,0x0,8
tick,0x7ff8e7af1be4,220018613,0,0x0,8
tick,0x7ff8e7af1be4,220033404,0,0x0,8
tick,0x7ff8e7af1be4,220049701,0,0x0,8
tick,0x7ff8e7af1be4,220065866,0,0x0,8
tick,0x7ff8e7af1be4,220081707,0,0x0,8
tick,0x7ff8e7af1be4,220097781,0,0x0,8
tick,0x7ff8e7af1be4,220114332,0,0x0,8
tick,0x7ff8e7af1be4,220116744,0,0x0,8
tick,0x7ff8e7af1be4,220132447,0,0x0,8
tick,0x7ff8e7af1be4,220140515,0,0x0,8
tick,0x7ff8e7af1be4,220156776,0,0x0,8
tick,0x7ff8e7af1be4,220165258,0,0x0,8
tick,0x7ff8e7af1be4,220169019,0,0x0,8
tick,0x7ff8e7af1be4,220170462,0,0x0,8
tick,0x7ff8e7af1be4,220171975,0,0x0,8
tick,0x7ff8e7af1be4,220189070,0,0x0,8
tick,0x7ff8e7af1be4,220204476,0,0x0,8
tick,0x7ff8e7af1be4,220220874,0,0x0,8
tick,0x7ff8e7af1be4,220236211,0,0x0,8
tick,0x7ff8e7af1be4,220252303,0,0x0,8
tick,0x7ff8e7af1be4,220267777,0,0x0,8
tick,0x7ff8e7af1be4,220283654,0,0x0,8
tick,0x7ff8e7af1be4,220299496,0,0x0,8
tick,0x7ff8e7af1be4,220315682,0,0x0,8
tick,0x7ff8e7af1be4,220331818,0,0x0,8
tick,0x7ff8e7af1be4,220348073,0,0x0,8
tick,0x7ff8e7af1be4,220364625,0,0x0,8
tick,0x7ff8e7af1be4,220380460,0,0x0,8
tick,0x7ff8e7af1be4,220396834,0,0x0,8
tick,0x7ff8e7af1be4,220412737,0,0x0,8
tick,0x7ff8e7af1be4,220428943,0,0x0,8
tick,0x7ff8e7af1be4,220444816,0,0x0,8
tick,0x7ff8e7af1be4,220461218,0,0x0,8
tick,0x7ff8e7af1be4,220476874,0,0x0,8
tick,0x7ff8e7af1be4,220493007,0,0x0,8
tick,0x7ff8e7af1be4,220509355,0,0x0,8
tick,0x7ff8e7af1be4,220524885,0,0x0,8
tick,0x7ff8e7af1be4,220541204,0,0x0,8
tick,0x7ff8e7af1be4,220557502,0,0x0,8
tick,0x7ff8e7af1be4,220573181,0,0x0,8
tick,0x7ff8e7af1be4,220589534,0,0x0,8
tick,0x7ff8e7af1be4,220605261,0,0x0,8
tick,0x7ff8e7af1be4,220620859,0,0x0,8
tick,0x7ff8e7af1be4,220636525,0,0x0,8
tick,0x7ff8e7af1be4,220653335,0,0x0,8
tick,0x7ff8e7af1be4,220668583,0,0x0,8
tick,0x7ff8e7af1be4,220684741,0,0x0,8
tick,0x7ff8e7af1be4,220700760,0,0x0,8
tick,0x7ff8e7af1be4,220716711,0,0x0,8
tick,0x7ff8e7af1be4,220733258,0,0x0,8
tick,0x7ff8e7af1be4,220748803,0,0x0,8
tick,0x7ff8e7af1be4,220765320,0,0x0,8
tick,0x7ff8e7af1be4,220781087,0,0x0,8
tick,0x7ff8e7af1be4,220797064,0,0x0,8
tick,0x7ff8e7af1be4,220812963,0,0x0,8
tick,0x7ff8e7af1be4,220828693,0,0x0,8
tick,0x7ff8e7af1be4,220844638,0,0x0,8
tick,0x7ff8e7af1be4,220860400,0,0x0,8
tick,0x7ff8e7af1be4,220875913,0,0x0,8
tick,0x7ff8e7af1be4,220892177,0,0x0,8
tick,0x7ff8e7af1be4,220908334,0,0x0,8
tick,0x7ff8e7af1be4,220917658,0,0x0,8
tick,0x7ff8e7af1be4,220936003,0,0x0,8
tick,0x7ff8e7af1be4,220941119,0,0x0,8
tick,0x7ff8e7af1be4,220957312,0,0x0,8
tick,0x7ff8e7af1be4,220972580,0,0x0,8
tick,0x7ff8e7af1be4,220988160,0,0x0,8
tick,0x7ff8e7af1be4,221004276,0,0x0,8
tick,0x7ff8e7af1be4,221019533,0,0x0,8
tick,0x7ff8e7af1be4,221034916,0,0x0,8
tick,0x7ff8e7af1be4,221051077,0,0x0,8
tick,0x7ff8e7af1be4,221067105,0,0x0,8
tick,0x7ff8e7af1be4,221082641,0,0x0,8
tick,0x7ff8e7af1be4,221098167,0,0x0,8
tick,0x7ff8e7af1be4,221114143,0,0x0,8
tick,0x7ff8e7af1be4,221130399,0,0x0,8
tick,0x7ff8e7af1be4,221147048,0,0x0,8
tick,0x7ff8e7af1be4,221162999,0,0x0,8
tick,0x7ff8e7af1be4,221178270,0,0x0,8
tick,0x7ff8e7af1be4,221203025,0,0x0,8
tick,0x7ff8e7af1be4,221218688,0,0x0,8
tick,0x7ff8e7af1be4,221234606,0,0x0,8
tick,0x7ff8e7af1be4,221250718,0,0x0,8
tick,0x7ff8e7af1be4,221266826,0,0x0,8
tick,0x7ff8e7af1be4,221282889,0,0x0,8
tick,0x7ff8e7af1be4,221300054,0,0x0,8
tick,0x7ff8e7af1be4,221313782,0,0x0,8
tick,0x7ff8e7af1be4,221329245,0,0x0,8
tick,0x7ff8e7af1be4,221344979,0,0x0,8
tick,0x7ff8e7af1be4,221361309,0,0x0,8
tick,0x7ff8e7af1be4,221376428,0,0x0,8
tick,0x7ff8e7af1be4,221392195,0,0x0,8
tick,0x7ff8e7af1be4,221408132,0,0x0,8
tick,0x7ff8e7af1be4,221424066,0,0x0,8
tick,0x7ff8e7af1be4,221439518,0,0x0,8
tick,0x7ff8e7af1be4,221455629,0,0x0,8
tick,0x7ff8e7af1be4,221471048,0,0x0,8
tick,0x7ff8e7af1be4,221486892,0,0x0,8
tick,0x7ff8e7af1be4,221502418,0,0x0,8
tick,0x7ff8e7af1be4,221518563,0,0x0,8
tick,0x7ff8e7af1be4,221533485,0,0x0,8
tick,0x7ff8e7af1be4,221549523,0,0x0,8
tick,0x7ff8e7af1be4,221565326,0,0x0,8
tick,0x7ff8e7af1be4,221580732,0,0x0,8
tick,0x7ff8e7af1be4,221596426,0,0x0,8
tick,0x7ff8e7af1be4,221612202,0,0x0,8
tick,0x7ff8e7af1be4,221627938,0,0x0,8
tick,0x7ff8e7af1be4,221643801,0,0x0,8
tick,0x7ff8e7af1be4,221660369,0,0x0,8
tick,0x7ff8e7af1be4,221676431,0,0x0,8
tick,0x7ff8e7af1be4,221692017,0,0x0,8
tick,0x7ff8e7af1be4,221708299,0,0x0,8
tick,0x7ff8e7af1be4,221716324,0,0x0,8
tick,0x7ff8e7af1be4,221725121,0,0x0,8
tick,0x7ff8e7af1be4,221740898,0,0x0,8
tick,0x7ff8e7af1be4,221757162,0,0x0,8
tick,0x7ff8e7af1be4,221773344,0,0x0,8
tick,0x7ff8e7af1be4,221789462,0,0x0,8
tick,0x7ff8e7af1be4,221805583,0,0x0,8
tick,0x7ff8e7af1be4,221821233,0,0x0,8
tick,0x7ff8e7af1be4,221836924,0,0x0,8
tick,0x7ff8e7af1be4,221853086,0,0x0,8
tick,0x7ff8e7af1be4,221869685,0,0x0,8
tick,0x7ff8e7af1be4,221886103,0,0x0,8
tick,0x7ff8e7af1be4,221902775,0,0x0,8
tick,0x7ff8e7af1be4,221919082,0,0x0,8
tick,0x7ff8e7af1be4,221934318,0,0x0,8
tick,0x7ff8e7af1be4,221950320,0,0x0,8
tick,0x7ff8e7af1be4,221967303,0,0x0,8
tick,0x7ff8e7af1be4,221982558,0,0x0,8
tick,0x7ff8e7af1be4,221998447,0,0x0,8
tick,0x7ff8e7af1be4,222014979,0,0x0,8
tick,0x7ff8e7af1be4,222030298,0,0x0,8
tick,0x7ff8e7af1be4,222046431,0,0x0,8
tick,0x7ff8e7af1be4,222063030,0,0x0,8
tick,0x7ff8e7af1be4,222078821,0,0x0,8
tick,0x7ff8e7af1be4,222094674,0,0x0,8
tick,0x7ff8e7af1be4,222110836,0,0x0,8
tick,0x7ff8e7af1be4,222126687,0,0x0,8
tick,0x7ff8e7af1be4,222142654,0,0x0,8
tick,0x7ff8e7af1be4,222159162,0,0x0,8
tick,0x7ff8e7af1be4,222174920,0,0x0,8
tick,0x7ff8e7af1be4,222190931,0,0x0,8
tick,0x7ff8e7af1be4,222207992,0,0x0,8
tick,0x7ff8e7af1be4,222222894,0,0x0,8
tick,0x7ff8e7af1be4,222239879,0,0x0,8
tick,0x7ff8e7af1be4,222254963,0,0x0,8
tick,0x7ff8e7af1be4,222271383,0,0x0,8
tick,0x7ff8e7af1be4,222287462,0,0x0,8
tick,0x7ff8e7af1be4,222303376,0,0x0,8
tick,0x7ff8e7af1be4,222319370,0,0x0,8
tick,0x7ff8e7af1be4,222335090,0,0x0,8
tick,0x7ff8e7af1be4,222350778,0,0x0,8
tick,0x7ff8e7af1be4,222367396,0,0x0,8
tick,0x7ff8e7af1be4,222383703,0,0x0,8
tick,0x7ff8e7af1be4,222399033,0,0x0,8
tick,0x7ff8e7af1be4,222415590,0,0x0,8
tick,0x7ff8e7af1be4,222431262,0,0x0,8
tick,0x7ff8e7af1be4,222446828,0,0x0,8
tick,0x7ff8e7af1be4,222463273,0,0x0,8
tick,0x7ff8e7af1be4,222478808,0,0x0,8
tick,0x7ff8e7af1be4,222494969,0,0x0,8
tick,0x7ff8e7af1be4,222510946,0,0x0,8
tick,0x7ff8e7af1be4,222526875,0,0x0,8
tick,0x7ff8e7af1be4,222543069,0,0x0,8
tick,0x7ff8e7af1be4,222559260,0,0x0,8
tick,0x7ff8e7af1be4,222575114,0,0x0,8
tick,0x7ff8e7af1be4,222591344,0,0x0,8
tick,0x7ff8e7af1be4,222607166,0,0x0,8
tick,0x7ff8e7af1be4,222622733,0,0x0,8
tick,0x7ff8e7af1be4,222638746,0,0x0,8
tick,0x7ff8e7af1be4,222654826,0,0x0,8
tick,0x7ff8e7af1be4,222670639,0,0x0,8
tick,0x7ff8e7af1be4,222686378,0,0x0,8
tick,0x7ff8e7af1be4,222702288,0,0x0,8
tick,0x7ff8e7af1be4,222718522,0,0x0,8
tick,0x7ff8e7af1be4,222734306,0,0x0,8
tick,0x7ff8e7af1be4,222750738,0,0x0,8
tick,0x7ff8e7af1be4,222767122,0,0x0,8
tick,0x7ff8e7af1be4,222784073,0,0x0,8
tick,0x7ff8e7af1be4,222799282,0,0x0,8
tick,0x7ff8e7af1be4,222815115,0,0x0,8
tick,0x7ff8e7af1be4,222830875,0,0x0,8
tick,0x7ff8e7af1be4,222846569,0,0x0,8
tick,0x7ff8e7af1be4,222862776,0,0x0,8
tick,0x7ff8e7af1be4,222879361,0,0x0,8
tick,0x7ff8e7af1be4,222895006,0,0x0,8
tick,0x7ff8e7af1be4,222911056,0,0x0,8
tick,0x7ff8e7af1be4,222927431,0,0x0,8
tick,0x7ff8e7af1be4,222942824,0,0x0,8
tick,0x7ff8e7af1be4,222959388,0,0x0,8
tick,0x7ff8e7af1be4,222974745,0,0x0,8
tick,0x7ff8e7af1be4,222990553,0,0x0,8
tick,0x7ff8e7af1be4,223007157,0,0x0,8
tick,0x7ff8e7af1be4,223023054,0,0x0,8
tick,0x7ff8e7af1be4,223038782,0,0x0,8
tick,0x7ff8e7af1be4,223054993,0,0x0,8
tick,0x7ff8e7af1be4,223070933,0,0x0,8
tick,0x7ff8e7af1be4,223086870,0,0x0,8
tick,0x7ff8e7af1be4,223103188,0,0x0,8
tick,0x7ff8e7af1be4,223118984,0,0x0,8
tick,0x7ff8e7af1be4,223135155,0,0x0,8
tick,0x7ff8e7af1be4,223151162,0,0x0,8
tick,0x7ff8e7af1be4,223166738,0,0x0,8
tick,0x7ff8e7af1be4,223183022,0,0x0,8
tick,0x7ff8e7af1be4,223198823,0,0x0,8
tick,0x7ff8e7af1be4,223214943,0,0x0,8
tick,0x7ff8e7af1be4,223230892,0,0x0,8
tick,0x7ff8e7af1be4,223246749,0,0x0,8
tick,0x7ff8e7af1be4,223262880,0,0x0,8
tick,0x7ff8e7af1be4,223278734,0,0x0,8
tick,0x7ff8e7af1be4,223296266,0,0x0,8
tick,0x7ff8e7af1be4,223311377,0,0x0,8
tick,0x7ff8e7af1be4,223336002,0,0x0,8
tick,0x7ff8e7af1be4,223352037,0,0x0,8
tick,0x7ff8e7af1be4,223368143,0,0x0,8
tick,0x7ff8e7af1be4,223383730,0,0x0,8
tick,0x7ff8e7af1be4,223400092,0,0x0,8
tick,0x7ff8e7af1be4,223415680,0,0x0,8
tick,0x7ff8e7af1be4,223418089,0,0x0,8
tick,0x7ff8e7af1be4,223432476,0,0x0,8
tick,0x7ff8e7af1be4,223448138,0,0x0,8
tick,0x7ff8e7af1be4,223464339,0,0x0,8
tick,0x7ff8e7af1be4,223479947,0,0x0,8
tick,0x7ff8e7af1be4,223496171,0,0x0,8
tick,0x7ff8e7af1be4,223512270,0,0x0,8
tick,0x7ff8e7af1be4,223527659,0,0x0,8
tick,0x7ff8e7af1be4,223544371,0,0x0,8
tick,0x7ff8e7af1be4,223560050,0,0x0,8
tick,0x7ff8e7af1be4,223575732,0,0x0,8
tick,0x7ff8e7af1be4,223591466,0,0x0,8
tick,0x7ff8e7af1be4,223607134,0,0x0,8
tick,0x7ff8e7af1be4,223622572,0,0x0,8
tick,0x7ff8e7af1be4,223639210,0,0x0,8
tick,0x7ff8e7af1be4,223654733,0,0x0,8
tick,0x7ff8e7af1be4,223670126,0,0x0,8
tick,0x7ff8e7af1be4,223686165,0,0x0,8
tick,0x7ff8e7af1be4,223702580,0,0x0,8
tick,0x7ff8e7af1be4,223718564,0,0x0,8
tick,0x7ff8e7af1be4,223734432,0,0x0,8
tick,0x7ff8e7af1be4,223750026,0,0x0,8
tick,0x7ff8e7af1be4,223766061,0,0x0,8
tick,0x7ff8e7af1be4,223781980,0,0x0,8
tick,0x7ff8e7af1be4,223797671,0,0x0,8
tick,0x7ff8e7af1be4,223813987,0,0x0,8
tick,0x7ff8e7af1be4,223830069,0,0x0,8
tick,0x7ff8e7af1be4,223845208,0,0x0,8
tick,0x7ff8e7af1be4,223869826,0,0x0,8
tick,0x7ff8e7af1be4,223886015,0,0x0,8
tick,0x7ff8e7af1be4,223901649,0,0x0,8
tick,0x7ff8e7af1be4,223917587,0,0x0,8
tick,0x7ff8e7af1be4,223933300,0,0x0,8
tick,0x7ff8e7af1be4,223949441,0,0x0,8
tick,0x7ff8e7af1be4,223966273,0,0x0,8
tick,0x7ff8e7af1be4,223982166,0,0x0,8
tick,0x7ff8e7af1be4,223991198,0,0x0,8
tick,0x7ff8e7af1be4,224006473,0,0x0,8
tick,0x7ff8e7af1be4,224031028,0,0x0,8
tick,0x7ff8e7af1be4,224046493,0,0x0,8
tick,0x7ff8e7af1be4,224062299,0,0x0,8
tick,0x7ff8e7af1be4,224077817,0,0x0,8
tick,0x7ff8e7af1be4,224093830,0,0x0,8
tick,0x7ff8e7af1be4,224110118,0,0x0,8
tick,0x7ff8e7af1be4,224126034,0,0x0,8
tick,0x7ff8e7af1be4,224141858,0,0x0,8
tick,0x7ff8e7af1be4,224158065,0,0x0,8
tick,0x7ff8e7af1be4,224174110,0,0x0,8
tick,0x7ff8e7af1be4,224189864,0,0x0,8
tick,0x7ff8e7af1be4,224205672,0,0x0,8
tick,0x7ff8e7af1be4,224221657,0,0x0,8
tick,0x7ff8e7af1be4,224237486,0,0x0,8
tick,0x7ff8e7af1be4,224253465,0,0x0,8
tick,0x7ff8e7af1be4,224269448,0,0x0,8
tick,0x7ff8e7af1be4,224285304,0,0x0,8
tick,0x7ff8e7af1be4,224301534,0,0x0,8
tick,0x7ff8e7af1be4,224317001,0,0x0,8
tick,0x7ff8e7af1be4,224332946,0,0x0,8
tick,0x7ff8e7af1be4,224348517,0,0x0,8
tick,0x7ff8e7af1be4,224356858,0,0x0,8
tick,0x7ff8e7af1be4,224373217,0,0x0,8
tick,0x7ff8e7af1be4,224389345,0,0x0,8
tick,0x7ff8e7af1be4,224405858,0,0x0,8
tick,0x7ff8e7af1be4,224421185,0,0x0,8
tick,0x7ff8e7af1be4,224437257,0,0x0,8
tick,0x7ff8e7af1be4,224453296,0,0x0,8
tick,0x7ff8e7af1be4,224469330,0,0x0,8
tick,0x7ff8e7af1be4,224485482,0,0x0,8
tick,0x7ff8e7af1be4,224501802,0,0x0,8
tick,0x7ff8e7af1be4,224517566,0,0x0,8
tick,0x7ff8e7af1be4,224519546,0,0x0,8
tick,0x7ff8e7af1be4,224535415,0,0x0,8
tick,0x7ff8e7af1be4,224551669,0,0x0,8
tick,0x7ff8e7af1be4,224567597,0,0x0,8
tick,0x7ff8e7af1be4,224583437,0,0x0,8
tick,0x7ff8e7af1be4,224599144,0,0x0,8
tick,0x7ff8e7af1be4,224615073,0,0x0,8
tick,0x7ff8e7af1be4,224631424,0,0x0,8
tick,0x7ff8e7af1be4,224647350,0,0x0,8
tick,0x7ff8e7af1be4,224663783,0,0x0,8
tick,0x7ff8e7af1be4,224679134,0,0x0,8
tick,0x7ff8e7af1be4,224695222,0,0x0,8
tick,0x7ff8e7af1be4,224711227,0,0x0,8
tick,0x7ff8e7af1be4,224726869,0,0x0,8
tick,0x7ff8e7af1be4,224742781,0,0x0,8
tick,0x7ff8e7af1be4,224758588,0,0x0,8
tick,0x7ff8e7af1be4,224774809,0,0x0,8
tick,0x7ff8e7af1be4,224790620,0,0x0,8
tick,0x7ff8e7af1be4,224799167,0,0x0,8
tick,0x7ff8e7af1be4,224815077,0,0x0,8
tick,0x7ff8e7af1be4,224830763,0,0x0,8
tick,0x7ff8e7af1be4,224846633,0,0x0,8
tick,0x7ff8e7af1be4,224863071,0,0x0,8
tick,0x7ff8e7af1be4,224878935,0,0x0,8
tick,0x7ff8e7af1be4,224895229,0,0x0,8
tick,0x7ff8e7af1be4,224911191,0,0x0,8
tick,0x7ff8e7af1be4,224927375,0,0x0,8
tick,0x7ff8e7af1be4,224943384,0,0x0,8
tick,0x7ff8e7af1be4,224959358,0,0x0,8
tick,0x7ff8e7af1be4,224975283,0,0x0,8
tick,0x7ff8e7af1be4,224992677,0,0x0,8
tick,0x7ff8e7af1be4,225004539,0,0x0,8
tick,0x7ff8e7af1be4,225015367,0,0x0,8
tick,0x7ff8e7af1be4,225027015,0,0x0,8
tick,0x7ff8e7af1be4,225042980,0,0x0,8
tick,0x7ff8e7af1be4,225067581,0,0x0,8
tick,0x7ff8e7af1be4,225083358,0,0x0,8
tick,0x7ff8e7af1be4,225099186,0,0x0,8
tick,0x7ff8e7af1be4,225115287,0,0x0,8
tick,0x7ff8e7af1be4,225131013,0,0x0,8
tick,0x7ff8e7af1be4,225146523,0,0x0,8
tick,0x7ff8e7af1be4,225162912,0,0x0,8
tick,0x7ff8e7af1be4,225164122,0,0x0,8
tick,0x7ff8e7af1be4,225168864,0,0x0,8
tick,0x7ff8e7af1be4,225170819,0,0x0,8
tick,0x7ff8e7af1be4,225172258,0,0x0,8
tick,0x7ff8e7af1be4,225173672,0,0x0,8
tick,0x7ff8e7af1be4,225175825,0,0x0,8
tick,0x7ff8e7af1be4,225178130,0,0x0,8
tick,0x7ff8e7af1be4,225194558,0,0x0,8
tick,0x7ff8e7af1be4,225211107,0,0x0,8
tick,0x7ff8e7af1be4,225226812,0,0x0,8
tick,0x7ff8e7af1be4,225235121,0,0x0,8
tick,0x7ff8e7af1be4,225248537,0,0x0,8
tick,0x7ff8e7af1be4,225259625,0,0x0,8
tick,0x7ff8e7af1be4,225268018,0,0x0,8
tick,0x7ff8e7af1be4,225276277,0,0x0,8
tick,0x7ff8e7af1be4,225292240,0,0x0,8
tick,0x7ff8e7af1be4,225307910,0,0x0,8
tick,0x7ff8e7af1be4,225323684,0,0x0,8
tick,0x7ff8e7af1be4,225339443,0,0x0,8
tick,0x7ff8e7af1be4,225355407,0,0x0,8
tick,0x7ff8e7af1be4,225371238,0,0x0,8
tick,0x7ff8e7af1be4,225387084,0,0x0,8
tick,0x7ff8e7af1be4,225402799,0,0x0,8
tick,0x7ff8e7af1be4,225506939,0,0x0,8
tick,0x7ff8e7af1be4,225521750,0,0x0,8
tick,0x7ff8e7af1be4,225538242,0,0x0,8
tick,0x7ff8e7af1be4,225553635,0,0x0,8
tick,0x7ff8e7af1be4,225569406,0,0x0,8
tick,0x7ff8e7af1be4,225585345,0,0x0,8
tick,0x7ff8e7af1be4,225594640,0,0x0,8
tick,0x7ff8e7af1be4,225618581,0,0x0,8
tick,0x7ff8e7af1be4,225627646,0,0x0,8
tick,0x7ff8e7af1be4,225644184,0,0x0,8
tick,0x7ff8e7af1be4,225668583,0,0x0,8
tick,0x7ff8e7af1be4,225684650,0,0x0,8
tick,0x7ff8e7af1be4,225700265,0,0x0,8
tick,0x7ff8e7af1be4,225715978,0,0x0,8
tick,0x7ff8e7af1be4,225731427,0,0x0,8
tick,0x7ff8e7af1be4,225748003,0,0x0,8
tick,0x7ff8e7af1be4,225763715,0,0x0,8
tick,0x7ff8e7af1be4,225779636,0,0x0,8
tick,0x7ff8e7af1be4,225795774,0,0x0,8
tick,0x7ff8e7af1be4,225811918,0,0x0,8
tick,0x7ff8e7af1be4,225836192,0,0x0,8
tick,0x7ff8e7af1be4,225851905,0,0x0,8
tick,0x7ff8e7af1be4,225867760,0,0x0,8
tick,0x7ff8e7af1be4,225883339,0,0x0,8
tick,0x7ff8e7af1be4,225898865,0,0x0,8
tick,0x7ff8e7af1be4,225914899,0,0x0,8
tick,0x7ff8e7af1be4,225931112,0,0x0,8
tick,0x7ff8e7af1be4,225946982,0,0x0,8
tick,0x7ff8e7af1be4,225962455,0,0x0,8
tick,0x7ff8e7af1be4,225978567,0,0x0,8
tick,0x7ff8e7af1be4,225995067,0,0x0,8
tick,0x7ff8e7af1be4,226010269,0,0x0,8
tick,0x7ff8e7af1be4,226025963,0,0x0,8
tick,0x7ff8e7af1be4,226042113,0,0x0,8
tick,0x7ff8e7af1be4,226058721,0,0x0,8
tick,0x7ff8e7af1be4,226074596,0,0x0,8
tick,0x7ff8e7af1be4,226090736,0,0x0,8
tick,0x7ff8e7af1be4,226106871,0,0x0,8
tick,0x7ff8e7af1be4,226122607,0,0x0,8
tick,0x7ff8e7af1be4,226139094,0,0x0,8
tick,0x7ff8e7af1be4,226155188,0,0x0,8
tick,0x7ff8e7af1be4,226170414,0,0x0,8
tick,0x7ff8e7af1be4,226187179,0,0x0,8
tick,0x7ff8e7af1be4,226203644,0,0x0,8
tick,0x7ff8e7af1be4,226219409,0,0x0,8
tick,0x7ff8e7af1be4,226236102,0,0x0,8
tick,0x7ff8e7af1be4,226252115,0,0x0,8
tick,0x7ff8e7af1be4,226268563,0,0x0,8
tick,0x7ff8e7af1be4,226284962,0,0x0,8
tick,0x7ff8e7af1be4,226300661,0,0x0,8
tick,0x7ff8e7af1be4,226315526,0,0x0,8
tick,0x7ff8e7af1be4,226331389,0,0x0,8
tick,0x7ff8e7af1be4,226343711,0,0x0,8
tick,0x7ff8e7af1be4,226352396,0,0x0,8
tick,0x7ff8e7af1be4,226368063,0,0x0,8
tick,0x7ff8e7af1be4,226383843,0,0x0,8
tick,0x7ff8e7af1be4,226399537,0,0x0,8
tick,0x7ff8e7af1be4,226415504,0,0x0,8
tick,0x7ff8e7af1be4,226431081,0,0x0,8
tick,0x7ff8e7af1be4,226447441,0,0x0,8
tick,0x7ff8e7af1be4,226463554,0,0x0,8
tick,0x7ff8e7af1be4,226478807,0,0x0,8
tick,0x7ff8e7af1be4,226491520,0,0x0,8
tick,0x7ff8e7af1be4,226507271,0,0x0,8
tick,0x7ff8e7af1be4,226523292,0,0x0,8
tick,0x7ff8e7af1be4,226539029,0,0x0,8
tick,0x7ff8e7af1be4,226555106,0,0x0,8
tick,0x7ff8e7af1be4,226571412,0,0x0,8
tick,0x7ff8e7af1be4,226587487,0,0x0,8
tick,0x7ff8e7af1be4,226603491,0,0x0,8
tick,0x7ff8e7af1be4,226619167,0,0x0,8
tick,0x7ff8e7af1be4,226635241,0,0x0,8
tick,0x7ff8e7af1be4,226651105,0,0x0,8
tick,0x7ff8e7af1be4,226667121,0,0x0,8
tick,0x7ff8e7af1be4,226682954,0,0x0,8
tick,0x7ff8e7af1be4,226698671,0,0x0,8
tick,0x7ff8e7af1be4,226714781,0,0x0,8
tick,0x7ff8e7af1be4,226730554,0,0x0,8
tick,0x7ff8e7af1be4,226746364,0,0x0,8
tick,0x7ff8e7af1be4,226762545,0,0x0,8
tick,0x7ff8e7af1be4,226778400,0,0x0,8
tick,0x7ff8e7af1be4,226794180,0,0x0,8
tick,0x7ff8e7af1be4,226809806,0,0x0,8
tick,0x7ff8e7af1be4,226825871,0,0x0,8
tick,0x7ff8e7af1be4,226841765,0,0x0,8
tick,0x7ff8e7af1be4,226857806,0,0x0,8
tick,0x7ff8e7af1be4,226873650,0,0x0,8
tick,0x7ff8e7af1be4,226882524,0,0x0,8
tick,0x7ff8e7af1be4,226898258,0,0x0,8
tick,0x7ff8e7af1be4,226914027,0,0x0,8
tick,0x7ff8e7af1be4,226930260,0,0x0,8
tick,0x7ff8e7af1be4,226945905,0,0x0,8
tick,0x7ff8e7af1be4,226961923,0,0x0,8
tick,0x7ff8e7af1be4,226977433,0,0x0,8
tick,0x7ff8e7af1be4,226993453,0,0x0,8
tick,0x7ff8e7af1be4,227009801,0,0x0,8
tick,0x7ff8e7af1be4,227025080,0,0x0,8
tick,0x7ff8e7af1be4,227041360,0,0x0,8
tick,0x7ff8e7af1be4,227057503,0,0x0,8
tick,0x7ff8e7af1be4,227072783,0,0x0,8
tick,0x7ff8e7af1be4,227087076,0,0x0,8
tick,0x7ff8e7af1be4,227096135,0,0x0,8
tick,0x7ff8e7af1be4,227112713,0,0x0,8
tick,0x7ff8e7af1be4,227128369,0,0x0,8
tick,0x7ff8e7af1be4,227144346,0,0x0,8
tick,0x7ff8e7af1be4,227160032,0,0x0,8
tick,0x7ff8e7af1be4,227175925,0,0x0,8
tick,0x7ff8e7af1be4,227192635,0,0x0,8
tick,0x7ff8e7af1be4,227208322,0,0x0,8
tick,0x7ff8e7af1be4,227224438,0,0x0,8
tick,0x7ff8e7af1be4,227240140,0,0x0,8
tick,0x7ff8e7af1be4,227256382,0,0x0,8
tick,0x7ff8e7af1be4,227272275,0,0x0,8
tick,0x7ff8e7af1be4,227287801,0,0x0,8
tick,0x7ff8e7af1be4,227303514,0,0x0,8
tick,0x7ff8e7af1be4,227319162,0,0x0,8
tick,0x7ff8e7af1be4,227334809,0,0x0,8
tick,0x7ff8e7af1be4,227350605,0,0x0,8
tick,0x7ff8e7af1be4,227366811,0,0x0,8
tick,0x7ff8e7af1be4,227382885,0,0x0,8
tick,0x7ff8e7af1be4,227398949,0,0x0,8
tick,0x7ff8e7af1be4,227414496,0,0x0,8
tick,0x7ff8e7af1be4,227430732,0,0x0,8
tick,0x7ff8e7af1be4,227446357,0,0x0,8
tick,0x7ff8e7af1be4,227461828,0,0x0,8
tick,0x7ff8e7af1be4,227477688,0,0x0,8
tick,0x7ff8e7af1be4,227493240,0,0x0,8
tick,0x7ff8e7af1be4,227508756,0,0x0,8
tick,0x7ff8e7af1be4,227519360,0,0x0,8
tick,0x7ff8e7af1be4,227529461,0,0x0,8
tick,0x7ff8e7af1be4,227541426,0,0x0,8
tick,0x7ff8e7af1be4,227565955,0,0x0,8
tick,0x7ff8e7af1be4,227575186,0,0x0,8
tick,0x7ff8e7af1be4,227599489,0,0x0,8
tick,0x7ff8e7af1be4,227615468,0,0x0,8
tick,0x7ff8e7af1be4,227631272,0,0x0,8
tick,0x7ff8e7af1be4,227647432,0,0x0,8
tick,0x7ff8e7af1be4,227663105,0,0x0,8
tick,0x7ff8e7af1be4,227678427,0,0x0,8
tick,0x7ff8e7af1be4,227694750,0,0x0,8
tick,0x7ff8e7af1be4,227709797,0,0x0,8
tick,0x7ff8e7af1be4,227725860,0,0x0,8
tick,0x7ff8e7af1be4,227742242,0,0x0,8
tick,0x7ff8e7af1be4,227758006,0,0x0,8
tick,0x7ff8e7af1be4,227773762,0,0x0,8
tick,0x7ff8e7af1be4,227789823,0,0x0,8
tick,0x7ff8e7af1be4,227806429,0,0x0,8
tick,0x7ff8e7af1be4,227822203,0,0x0,8
tick,0x7ff8e7af1be4,227838235,0,0x0,8
tick,0x7ff8e7af1be4,227854269,0,0x0,8
tick,0x7ff8e7af1be4,227866304,0,0x0,8
tick,0x7ff8e7af1be4,227876572,0,0x0,8
tick,0x7ff8e7af1be4,227890707,0,0x0,8
tick,0x7ff8e7af1be4,227914953,0,0x0,8
tick,0x7ff8e7af1be4,227931601,0,0x0,8
tick,0x7ff8e7af1be4,227947522,0,0x0,8
tick,0x7ff8e7af1be4,227963351,0,0x0,8
tick,0x7ff8e7af1be4,227979428,0,0x0,8
tick,0x7ff8e7af1be4,227994992,0,0x0,8
tick,0x7ff8e7af1be4,228011801,0,0x0,8
tick,0x7ff8e7af1be4,228026986,0,0x0,8
tick,0x7ff8e7af1be4,228043139,0,0x0,8
tick,0x7ff8e7af1be4,228059400,0,0x0,8
tick,0x7ff8e7af1be4,228075276,0,0x0,8
tick,0x7ff8e7af1be4,228090757,0,0x0,8
tick,0x7ff8e7af1be4,228106774,0,0x0,8
tick,0x7ff8e7af1be4,228122037,0,0x0,8
tick,0x7ff8e7af1be4,228137497,0,0x0,8
tick,0x7ff8e7af1be4,228153391,0,0x0,8
tick,0x7ff8e7af1be4,228168841,0,0x0,8
tick,0x7ff8e7af1be4,228177085,0,0x0,8
tick,0x7ff8e7af1be4,228201217,0,0x0,8
tick,0x7ff8e7af1be4,228213009,0,0x0,8
tick,0x7ff8e7af1be4,228229094,0,0x0,8
tick,0x7ff8e7af1be4,228244898,0,0x0,8
tick,0x7ff8e7af1be4,228260731,0,0x0,8
tick,0x7ff8e7af1be4,228276696,0,0x0,8
tick,0x7ff8e7af1be4,228292715,0,0x0,8
tick,0x7ff8e7af1be4,228308721,0,0x0,8
tick,0x7ff8e7af1be4,228324401,0,0x0,8
tick,0x7ff8e7af1be4,228340512,0,0x0,8
tick,0x7ff8e7af1be4,228351810,0,0x0,8
tick,0x7ff8e7af1be4,228362818,0,0x0,8
tick,0x7ff8e7af1be4,228375912,0,0x0,8
tick,0x7ff8e7af1be4,228391529,0,0x0,8
tick,0x7ff8e7af1be4,228400013,0,0x0,8
tick,0x7ff8e7af1be4,228415734,0,0x0,8
tick,0x7ff8e7af1be4,228431479,0,0x0,8
tick,0x7ff8e7af1be4,228447152,0,0x0,8
tick,0x7ff8e7af1be4,228463561,0,0x0,8
tick,0x7ff8e7af1be4,228478951,0,0x0,8
tick,0x7ff8e7af1be4,228495385,0,0x0,8
tick,0x7ff8e7af1be4,228510909,0,0x0,8
tick,0x7ff8e7af1be4,228527019,0,0x0,8
tick,0x7ff8e7af1be4,228543319,0,0x0,8
tick,0x7ff8e7af1be4,228559240,0,0x0,8
tick,0x7ff8e7af1be4,228575236,0,0x0,8
tick,0x7ff8e7af1be4,228591653,0,0x0,8
tick,0x7ff8e7af1be4,228608338,0,0x0,8
tick,0x7ff8e7af1be4,228623632,0,0x0,8
tick,0x7ff8e7af1be4,228639443,0,0x0,8
tick,0x7ff8e7af1be4,228655592,0,0x0,8
tick,0x7ff8e7af1be4,228671370,0,0x0,8
tick,0x7ff8e7af1be4,228687117,0,0x0,8
tick,0x7ff8e7af1be4,228703606,0,0x0,8
tick,0x7ff8e7af1be4,228719169,0,0x0,8
tick,0x7ff8e7af1be4,228735249,0,0x0,8
tick,0x7ff8e7af1be4,228751423,0,0x0,8
tick,0x7ff8e7af1be4,228767410,0,0x0,8
tick,0x7ff8e7af1be4,228783732,0,0x0,8
tick,0x7ff8e7af1be4,228799458,0,0x0,8
tick,0x7ff8e7af1be4,228815252,0,0x0,8
tick,0x7ff8e7af1be4,228831347,0,0x0,8
tick,0x7ff8e7af1be4,228847197,0,0x0,8
tick,0x7ff8e7af1be4,228863735,0,0x0,8
tick,0x7ff8e7af1be4,228879815,0,0x0,8
tick,0x7ff8e7af1be4,228895710,0,0x0,8
tick,0x7ff8e7af1be4,228910943,0,0x0,8
tick,0x7ff8e7af1be4,228926904,0,0x0,8
tick,0x7ff8e7af1be4,228935147,0,0x0,8
tick,0x7ff8e7af1be4,228951112,0,0x0,8
tick,0x7ff8e7af1be4,228967420,0,0x0,8
tick,0x7ff8e7af1be4,228983155,0,0x0,8
tick,0x7ff8e7af1be4,228998942,0,0x0,8
tick,0x7ff8e7af1be4,229015518,0,0x0,8
tick,0x7ff8e7af1be4,229031297,0,0x0,8
tick,0x7ff8e7af1be4,229047144,0,0x0,8
tick,0x7ff8e7af1be4,229063148,0,0x0,8
tick,0x7ff8e7af1be4,229078932,0,0x0,8
tick,0x7ff8e7af1be4,229094805,0,0x0,8
tick,0x7ff8e7af1be4,229110573,0,0x0,8
tick,0x7ff8e7af1be4,229126376,0,0x0,8
tick,0x7ff8e7af1be4,229142238,0,0x0,8
tick,0x7ff8e7af1be4,229157857,0,0x0,8
tick,0x7ff8e7af1be4,229173649,0,0x0,8
tick,0x7ff8e7af1be4,229189334,0,0x0,8
tick,0x7ff8e7af1be4,229205068,0,0x0,8
tick,0x7ff8e7af1be4,229220872,0,0x0,8
tick,0x7ff8e7af1be4,229236588,0,0x0,8
tick,0x7ff8e7af1be4,229252460,0,0x0,8
tick,0x7ff8e7af1be4,229268396,0,0x0,8
tick,0x7ff8e7af1be4,229284072,0,0x0,8
tick,0x7ff8e7af1be4,229299800,0,0x0,8
tick,0x7ff8e7af1be4,229315628,0,0x0,8
tick,0x7ff8e7af1be4,229331276,0,0x0,8
tick,0x7ff8e7af1be4,229346771,0,0x0,8
tick,0x7ff8e7af1be4,229363159,0,0x0,8
tick,0x7ff8e7af1be4,229380849,0,0x0,8
tick,0x7ff8e7af1be4,229394919,0,0x0,8
tick,0x7ff8e7af1be4,229410998,0,0x0,8
tick,0x7ff8e7af1be4,229427684,0,0x0,8
tick,0x7ff8e7af1be4,229442764,0,0x0,8
tick,0x7ff8e7af1be4,229458697,0,0x0,8
tick,0x7ff8e7af1be4,229482874,0,0x0,8
tick,0x7ff8e7af1be4,229498404,0,0x0,8
tick,0x7ff8e7af1be4,229514234,0,0x0,8
tick,0x7ff8e7af1be4,229529756,0,0x0,8
tick,0x7ff8e7af1be4,229545561,0,0x0,8
tick,0x7ff8e7af1be4,229561228,0,0x0,8
tick,0x7ff8e7af1be4,229577092,0,0x0,8
tick,0x7ff8e7af1be4,229592894,0,0x0,8
tick,0x7ff8e7af1be4,229608840,0,0x0,8
tick,0x7ff8e7af1be4,229621266,0,0x0,8
tick,0x7ff8e7af1be4,229645499,0,0x0,8
tick,0x7ff8e7af1be4,229658245,0,0x0,8
tick,0x7ff8e7af1be4,229678694,0,0x0,8
tick,0x7ff8e7af1be4,229694531,0,0x0,8
tick,0x7ff8e7af1be4,229710862,0,0x0,8
tick,0x7ff8e7af1be4,229726389,0,0x0,8
tick,0x7ff8e7af1be4,229741882,0,0x0,8
tick,0x7ff8e7af1be4,229758198,0,0x0,8
tick,0x7ff8e7af1be4,229773998,0,0x0,8
tick,0x7ff8e7af1be4,229790147,0,0x0,8
tick,0x7ff8e7af1be4,229805782,0,0x0,8
tick,0x7ff8e7af1be4,229821740,0,0x0,8
tick,0x7ff8e7af1be4,229837440,0,0x0,8
tick,0x7ff8e7af1be4,229853162,0,0x0,8
tick,0x7ff8e7af1be4,229869174,0,0x0,8
tick,0x7ff8e7af1be4,229884952,0,0x0,8
tick,0x7ff8e7af1be4,229901016,0,0x0,8
tick,0x7ff8e7af1be4,229916627,0,0x0,8
tick,0x7ff8e7af1be4,229924987,0,0x0,8
tick,0x7ff8e7af1be4,229941055,0,0x0,8
tick,0x7ff8e7af1be4,229957344,0,0x0,8
tick,0x7ff8e7af1be4,229973530,0,0x0,8
tick,0x7ff8e7af1be4,229989979,0,0x0,8
tick,0x7ff8e7af1be4,230006248,0,0x0,8
tick,0x7ff8e7af1be4,230022285,0,0x0,8
tick,0x7ff8e7af1be4,230030168,0,0x0,8
tick,0x7ff8e7af1be4,230046360,0,0x0,8
tick,0x7ff8e7af1be4,230058417,0,0x0,8
tick,0x7ff8e7af1be4,230070561,0,0x0,8
tick,0x7ff8e7af1be4,230091759,0,0x0,8
tick,0x7ff8e7af1be4,230102794,0,0x0,8
tick,0x7ff8e7af1be4,230118376,0,0x0,8
tick,0x7ff8e7af1be4,230134080,0,0x0,8
tick,0x7ff8e7af1be4,230149616,0,0x0,8
tick,0x7ff8e7af1be4,230165582,0,0x0,8
tick,0x7ff8e7af1be4,230181345,0,0x0,8
tick,0x7ff8e7af1be4,230197427,0,0x0,8
tick,0x7ff8e7af1be4,230213412,0,0x0,8
tick,0x7ff8e7af1be4,230229221,0,0x0,8
tick,0x7ff8e7af1be4,230245071,0,0x0,8
tick,0x7ff8e7af1be4,230260915,0,0x0,8
tick,0x7ff8e7af1be4,230276784,0,0x0,8
tick,0x7ff8e7af1be4,230292940,0,0x0,8
tick,0x7ff8e7af1be4,230308673,0,0x0,8
tick,0x7ff8e7af1be4,230324354,0,0x0,8
tick,0x7ff8e7af1be4,230340151,0,0x0,8
tick,0x7ff8e7af1be4,230355823,0,0x0,8
tick,0x7ff8e7af1be4,230371874,0,0x0,8
tick,0x7ff8e7af1be4,230387548,0,0x0,8
tick,0x7ff8e7af1be4,230388898,0,0x0,8
tick,0x7ff8e7af1be4,230390900,0,0x0,8
tick,0x7ff8e7af1be4,230392758,0,0x0,8
tick,0x7ff8e7af1be4,230408578,0,0x0,8
tick,0x7ff8e7af1be4,230424584,0,0x0,8
tick,0x7ff8e7af1be4,230440393,0,0x0,8
tick,0x7ff8e7af1be4,230456414,0,0x0,8
tick,0x7ff8e7af1be4,230471870,0,0x0,8
tick,0x7ff8e7af1be4,230487932,0,0x0,8
tick,0x7ff8e7af1be4,230503396,0,0x0,8
tick,0x7ff8e7af1be4,230519075,0,0x0,8
tick,0x7ff8e7af1be4,230534645,0,0x0,8
tick,0x7ff8e7af1be4,230550313,0,0x0,8
tick,0x7ff8e7af1be4,230566356,0,0x0,8
tick,0x7ff8e7af1be4,230582094,0,0x0,8
tick,0x7ff8e7af1be4,230598247,0,0x0,8
tick,0x7ff8e7af1be4,230614006,0,0x0,8
tick,0x7ff8e7af1be4,230629595,0,0x0,8
tick,0x7ff8e7af1be4,230645386,0,0x0,8
tick,0x7ff8e7af1be4,230661295,0,0x0,8
tick,0x7ff8e7af1be4,230677034,0,0x0,8
tick,0x7ff8e7af1be4,230693129,0,0x0,8
tick,0x7ff8e7af1be4,230708799,0,0x0,8
tick,0x7ff8e7af1be4,230724813,0,0x0,8
tick,0x7ff8e7af1be4,230749312,0,0x0,8
tick,0x7ff8e7af1be4,230765029,0,0x0,8
tick,0x7ff8e7af1be4,230780992,0,0x0,8
tick,0x7ff8e7af1be4,230796991,0,0x0,8
tick,0x7ff8e7af1be4,230812776,0,0x0,8
tick,0x7ff8e7af1be4,230828926,0,0x0,8
tick,0x7ff8e7af1be4,230844524,0,0x0,8
tick,0x7ff8e7af1be4,230859857,0,0x0,8
tick,0x7ff8e7af1be4,230875896,0,0x0,8
tick,0x7ff8e7af1be4,230891604,0,0x0,8
tick,0x7ff8e7af1be4,230907330,0,0x0,8
tick,0x7ff8e7af1be4,230923253,0,0x0,8
tick,0x7ff8e7af1be4,230938927,0,0x0,8
tick,0x7ff8e7af1be4,230955003,0,0x0,8
tick,0x7ff8e7af1be4,230971104,0,0x0,8
tick,0x7ff8e7af1be4,230986946,0,0x0,8
tick,0x7ff8e7af1be4,231002603,0,0x0,8
tick,0x7ff8e7af1be4,231018296,0,0x0,8
tick,0x7ff8e7af1be4,231034258,0,0x0,8
tick,0x7ff8e7af1be4,231050145,0,0x0,8
tick,0x7ff8e7af1be4,231065282,0,0x0,8
tick,0x7ff8e7af1be4,231080955,0,0x0,8
tick,0x7ff8e7af1be4,231096861,0,0x0,8
tick,0x7ff8e7af1be4,231112798,0,0x0,8
tick,0x7ff8e7af1be4,231128486,0,0x0,8
tick,0x7ff8e7af1be4,231144281,0,0x0,8
tick,0x7ff8e7af1be4,231159756,0,0x0,8
tick,0x7ff8e7af1be4,231176073,0,0x0,8
tick,0x7ff8e7af1be4,231191871,0,0x0,8
tick,0x7ff8e7af1be4,231207445,0,0x0,8
tick,0x7ff8e7af1be4,231223519,0,0x0,8
tick,0x7ff8e7af1be4,231231701,0,0x0,8
tick,0x7ff8e7af1be4,231247971,0,0x0,8
tick,0x7ff8e7af1be4,231263323,0,0x0,8
tick,0x7ff8e7af1be4,231279032,0,0x0,8
tick,0x7ff8e7af1be4,231294702,0,0x0,8
tick,0x7ff8e7af1be4,231310266,0,0x0,8
tick,0x7ff8e7af1be4,231326025,0,0x0,8
tick,0x7ff8e7af1be4,231341639,0,0x0,8
tick,0x7ff8e7af1be4,231357865,0,0x0,8
tick,0x7ff8e7af1be4,231373541,0,0x0,8
tick,0x7ff8e7af1be4,231382081,0,0x0,8
tick,0x7ff8e7af1be4,231398114,0,0x0,8
tick,0x7ff8e7af1be4,231406765,0,0x0,8
tick,0x7ff8e7af1be4,231414820,0,0x0,8
tick,0x7ff8e7af1be4,231430817,0,0x0,8
tick,0x7ff8e7af1be4,231446950,0,0x0,8
tick,0x7ff8e7af1be4,231462828,0,0x0,8
tick,0x7ff8e7af1be4,231478891,0,0x0,8
tick,0x7ff8e7af1be4,231494325,0,0x0,8
tick,0x7ff8e7af1be4,231510112,0,0x0,8
tick,0x7ff8e7af1be4,231525822,0,0x0,8
tick,0x7ff8e7af1be4,231541624,0,0x0,8
tick,0x7ff8e7af1be4,231557533,0,0x0,8
tick,0x7ff8e7af1be4,231573741,0,0x0,8
tick,0x7ff8e7af1be4,231589358,0,0x0,8
tick,0x7ff8e7af1be4,231604823,0,0x0,8
tick,0x7ff8e7af1be4,231620510,0,0x0,8
tick,0x7ff8e7af1be4,231636000,0,0x0,8
tick,0x7ff8e7af1be4,231651942,0,0x0,8
tick,0x7ff8e7af1be4,231668006,0,0x0,8
tick,0x7ff8e7af1be4,231683614,0,0x0,8
tick,0x7ff8e7af1be4,231692171,0,0x0,8
tick,0x7ff8e7af1be4,231700217,0,0x0,8
tick,0x7ff8e7af1be4,231716067,0,0x0,8
tick,0x7ff8e7af1be4,231731909,0,0x0,8
tick,0x7ff8e7af1be4,231747686,0,0x0,8
tick,0x7ff8e7af1be4,231763271,0,0x0,8
tick,0x7ff8e7af1be4,231779427,0,0x0,8
tick,0x7ff8e7af1be4,231794853,0,0x0,8
tick,0x7ff8e7af1be4,231810872,0,0x0,8
tick,0x7ff8e7af1be4,231826456,0,0x0,8
tick,0x7ff8e7af1be4,231842983,0,0x0,8
tick,0x7ff8e7af1be4,231858462,0,0x0,8
tick,0x7ff8e7af1be4,231874840,0,0x0,8
tick,0x7ff8e7af1be4,231889791,0,0x0,8
tick,0x7ff8e7af1be4,231905988,0,0x0,8
tick,0x7ff8e7af1be4,231922765,0,0x0,8
tick,0x7ff8e7af1be4,231930253,0,0x0,8
tick,0x7ff8e7af1be4,231938398,0,0x0,8
tick,0x7ff8e7af1be4,231962400,0,0x0,8
tick,0x7ff8e7af1be4,231979328,0,0x0,8
tick,0x7ff8e7af1be4,231995193,0,0x0,8
tick,0x7ff8e7af1be4,232011243,0,0x0,8
tick,0x7ff8e7af1be4,232026823,0,0x0,8
tick,0x7ff8e7af1be4,232043816,0,0x0,8
tick,0x7ff8e7af1be4,232059234,0,0x0,8
tick,0x7ff8e7af1be4,232075326,0,0x0,8
tick,0x7ff8e7af1be4,232090619,0,0x0,8
tick,0x7ff8e7af1be4,232106576,0,0x0,8
tick,0x7ff8e7af1be4,232122095,0,0x0,8
tick,0x7ff8e7af1be4,232137773,0,0x0,8
tick,0x7ff8e7af1be4,232153885,0,0x0,8
tick,0x7ff8e7af1be4,232169947,0,0x0,8
tick,0x7ff8e7af1be4,232185614,0,0x0,8
tick,0x7ff8e7af1be4,232201372,0,0x0,8
tick,0x7ff8e7af1be4,232217193,0,0x0,8
tick,0x7ff8e7af1be4,232233021,0,0x0,8
tick,0x7ff8e7af1be4,232249104,0,0x0,8
tick,0x7ff8e7af1be4,232265210,0,0x0,8
tick,0x7ff8e7af1be4,232281242,0,0x0,8
tick,0x7ff8e7af1be4,232297174,0,0x0,8
tick,0x7ff8e7af1be4,232313221,0,0x0,8
tick,0x7ff8e7af1be4,232329137,0,0x0,8
tick,0x7ff8e7af1be4,232345228,0,0x0,8
tick,0x7ff8e7af1be4,232360658,0,0x0,8
tick,0x7ff8e7af1be4,232376508,0,0x0,8
tick,0x7ff8e7af1be4,232392480,0,0x0,8
tick,0x7ff8e7af1be4,232408240,0,0x0,8
tick,0x7ff8e7af1be4,232424957,0,0x0,8
tick,0x7ff8e7af1be4,232440579,0,0x0,8
tick,0x7ff8e7af1be4,232456450,0,0x0,8
tick,0x7ff8e7af1be4,232472285,0,0x0,8
tick,0x7ff8e7af1be4,232480760,0,0x0,8
tick,0x7ff8e7af1be4,232496826,0,0x0,8
tick,0x7ff8e7af1be4,232512476,0,0x0,8
tick,0x7ff8e7af1be4,232528404,0,0x0,8
tick,0x7ff8e7af1be4,232544572,0,0x0,8
tick,0x7ff8e7af1be4,232560372,0,0x0,8
tick,0x7ff8e7af1be4,232576054,0,0x0,8
tick,0x7ff8e7af1be4,232591789,0,0x0,8
tick,0x7ff8e7af1be4,232608003,0,0x0,8
tick,0x7ff8e7af1be4,232623761,0,0x0,8
tick,0x7ff8e7af1be4,232639609,0,0x0,8
tick,0x7ff8e7af1be4,232655736,0,0x0,8
tick,0x7ff8e7af1be4,232663481,0,0x0,8
tick,0x7ff8e7af1be4,232679943,0,0x0,8
tick,0x7ff8e7af1be4,232696333,0,0x0,8
tick,0x7ff8e7af1be4,232720759,0,0x0,8
tick,0x7ff8e7af1be4,232736350,0,0x0,8
tick,0x7ff8e7af1be4,232752248,0,0x0,8
tick,0x7ff8e7af1be4,232768354,0,0x0,8
tick,0x7ff8e7af1be4,232784422,0,0x0,8
tick,0x7ff8e7af1be4,232800131,0,0x0,8
tick,0x7ff8e7af1be4,232815945,0,0x0,8
tick,0x7ff8e7af1be4,232831785,0,0x0,8
tick,0x7ff8e7af1be4,232847872,0,0x0,8
tick,0x7ff8e7af1be4,232863938,0,0x0,8
tick,0x7ff8e7af1be4,232879699,0,0x0,8
tick,0x7ff8e7af1be4,232895428,0,0x0,8
tick,0x7ff8e7af1be4,232911222,0,0x0,8
tick,0x7ff8e7af1be4,232927002,0,0x0,8
tick,0x7ff8e7af1be4,232942973,0,0x0,8
tick,0x7ff8e7af1be4,232959003,0,0x0,8
tick,0x7ff8e7af1be4,232974998,0,0x0,8
tick,0x7ff8e7af1be4,232991020,0,0x0,8
tick,0x7ff8e7af1be4,232999302,0,0x0,8
tick,0x7ff8e7af1be4,233007209,0,0x0,8
tick,0x7ff8e7af1be4,233031667,0,0x0,8
tick,0x7ff8e7af1be4,233047718,0,0x0,8
tick,0x7ff8e7af1be4,233063427,0,0x0,8
tick,0x7ff8e7af1be4,233079398,0,0x0,8
tick,0x7ff8e7af1be4,233095044,0,0x0,8
tick,0x7ff8e7af1be4,233110611,0,0x0,8
tick,0x7ff8e7af1be4,233126404,0,0x0,8
tick,0x7ff8e7af1be4,233141825,0,0x0,8
tick,0x7ff8e7af1be4,233157638,0,0x0,8
tick,0x7ff8e7af1be4,233173797,0,0x0,8
tick,0x7ff8e7af1be4,233189037,0,0x0,8
tick,0x7ff8e7af1be4,233204834,0,0x0,8
tick,0x7ff8e7af1be4,233220442,0,0x0,8
tick,0x7ff8e7af1be4,233236208,0,0x0,8
tick,0x7ff8e7af1be4,233252005,0,0x0,8
tick,0x7ff8e7af1be4,233267602,0,0x0,8
tick,0x7ff8e7af1be4,233283676,0,0x0,8
tick,0x7ff8e7af1be4,233299740,0,0x0,8
tick,0x7ff8e7af1be4,233315537,0,0x0,8
tick,0x7ff8e7af1be4,233331162,0,0x0,8
tick,0x7ff8e7af1be4,233346890,0,0x0,8
tick,0x7ff8e7af1be4,233362615,0,0x0,8
tick,0x7ff8e7af1be4,233378259,0,0x0,8
tick,0x7ff8e7af1be4,233394236,0,0x0,8
tick,0x7ff8e7af1be4,233403407,0,0x0,8
tick,0x7ff8e7af1be4,233427468,0,0x0,8
tick,0x7ff8e7af1be4,233435592,0,0x0,8
tick,0x7ff8e7af1be4,233459502,0,0x0,8
tick,0x7ff8e7af1be4,233475549,0,0x0,8
tick,0x7ff8e7af1be4,233491758,0,0x0,8
tick,0x7ff8e7af1be4,233507467,0,0x0,8
tick,0x7ff8e7af1be4,233523183,0,0x0,8
tick,0x7ff8e7af1be4,233538780,0,0x0,8
tick,0x7ff8e7af1be4,233547187,0,0x0,8
tick,0x7ff8e7af1be4,233562956,0,0x0,8
tick,0x7ff8e7af1be4,233578701,0,0x0,8
tick,0x7ff8e7af1be4,233594600,0,0x0,8
tick,0x7ff8e7af1be4,233610305,0,0x0,8
tick,0x7ff8e7af1be4,233626084,0,0x0,8
tick,0x7ff8e7af1be4,233641750,0,0x0,8
tick,0x7ff8e7af1be4,233657391,0,0x0,8
tick,0x7ff8e7af1be4,233673534,0,0x0,8
tick,0x7ff8e7af1be4,233689137,0,0x0,8
tick,0x7ff8e7af1be4,233704955,0,0x0,8
tick,0x7ff8e7af1be4,233720602,0,0x0,8
tick,0x7ff8e7af1be4,233736289,0,0x0,8
tick,0x7ff8e7af1be4,233752201,0,0x0,8
tick,0x7ff8e7af1be4,233768091,0,0x0,8
tick,0x7ff8e7af1be4,233784024,0,0x0,8
tick,0x7ff8e7af1be4,233799571,0,0x0,8
tick,0x7ff8e7af1be4,233815519,0,0x0,8
tick,0x7ff8e7af1be4,233831510,0,0x0,8
tick,0x7ff8e7af1be4,233847310,0,0x0,8
tick,0x7ff8e7af1be4,233863264,0,0x0,8
tick,0x7ff8e7af1be4,233879034,0,0x0,8
tick,0x7ff8e7af1be4,233894715,0,0x0,8
tick,0x7ff8e7af1be4,233910339,0,0x0,8
tick,0x7ff8e7af1be4,233926318,0,0x0,8
tick,0x7ff8e7af1be4,233942246,0,0x0,8
tick,0x7ff8e7af1be4,233958022,0,0x0,8
tick,0x7ff8e7af1be4,233973956,0,0x0,8
tick,0x7ff8e7af1be4,233990100,0,0x0,8
tick,0x7ff8e7af1be4,234005824,0,0x0,8
tick,0x7ff8e7af1be4,234021515,0,0x0,8
tick,0x7ff8e7af1be4,234037388,0,0x0,8
tick,0x7ff8e7af1be4,234054394,0,0x0,8
tick,0x7ff8e7af1be4,234078002,0,0x0,8
tick,0x7ff8e7af1be4,234093647,0,0x0,8
tick,0x7ff8e7af1be4,234109575,0,0x0,8
tick,0x7ff8e7af1be4,234125285,0,0x0,8
tick,0x7ff8e7af1be4,234141070,0,0x0,8
tick,0x7ff8e7af1be4,234157007,0,0x0,8
tick,0x7ff8e7af1be4,234172876,0,0x0,8
tick,0x7ff8e7af1be4,234188818,0,0x0,8
tick,0x7ff8e7af1be4,234204798,0,0x0,8
tick,0x7ff8e7af1be4,234220935,0,0x0,8
tick,0x7ff8e7af1be4,234236756,0,0x0,8
tick,0x7ff8e7af1be4,234252649,0,0x0,8
tick,0x7ff8e7af1be4,234268708,0,0x0,8
tick,0x7ff8e7af1be4,234284519,0,0x0,8
tick,0x7ff8e7af1be4,234300989,0,0x0,8
tick,0x7ff8e7af1be4,234316324,0,0x0,8
tick,0x7ff8e7af1be4,234332522,0,0x0,8
tick,0x7ff8e7af1be4,234348584,0,0x0,8
tick,0x7ff8e7af1be4,234364102,0,0x0,8
tick,0x7ff8e7af1be4,234380008,0,0x0,8
tick,0x7ff8e7af1be4,234396041,0,0x0,8
tick,0x7ff8e7af1be4,234411608,0,0x0,8
tick,0x7ff8e7af1be4,234427253,0,0x0,8
tick,0x7ff8e7af1be4,234442914,0,0x0,8
tick,0x7ff8e7af1be4,234459016,0,0x0,8
tick,0x7ff8e7af1be4,234475479,0,0x0,8
tick,0x7ff8e7af1be4,234491113,0,0x0,8
tick,0x7ff8e7af1be4,234506853,0,0x0,8
tick,0x7ff8e7af1be4,234522807,0,0x0,8
tick,0x7ff8e7af1be4,234538920,0,0x0,8
tick,0x7ff8e7af1be4,234554968,0,0x0,8
tick,0x7ff8e7af1be4,234571066,0,0x0,8
tick,0x7ff8e7af1be4,234582322,0,0x0,8
tick,0x7ff8e7af1be4,234591347,0,0x0,8
tick,0x7ff8e7af1be4,234607170,0,0x0,8
tick,0x7ff8e7af1be4,234622967,0,0x0,8
tick,0x7ff8e7af1be4,234638508,0,0x0,8
tick,0x7ff8e7af1be4,234654620,0,0x0,8
tick,0x7ff8e7af1be4,234670346,0,0x0,8
tick,0x7ff8e7af1be4,234686402,0,0x0,8
tick,0x7ff8e7af1be4,234702065,0,0x0,8
tick,0x7ff8e7af1be4,234717735,0,0x0,8
tick,0x7ff8e7af1be4,234733196,0,0x0,8
tick,0x7ff8e7af1be4,234749148,0,0x0,8
tick,0x7ff8e7af1be4,234765206,0,0x0,8
tick,0x7ff8e7af1be4,234780799,0,0x0,8
tick,0x7ff8e7af1be4,234796678,0,0x0,8
tick,0x7ff8e7af1be4,234812202,0,0x0,8
tick,0x7ff8e7af1be4,234828278,0,0x0,8
tick,0x7ff8e7af1be4,234844235,0,0x0,8
tick,0x7ff8e7af1be4,234860488,0,0x0,8
tick,0x7ff8e7af1be4,234876162,0,0x0,8
tick,0x7ff8e7af1be4,234892110,0,0x0,8
tick,0x7ff8e7af1be4,234908021,0,0x0,8
tick,0x7ff8e7af1be4,234924109,0,0x0,8
tick,0x7ff8e7af1be4,234940134,0,0x0,8
tick,0x7ff8e7af1be4,234955564,0,0x0,8
tick,0x7ff8e7af1be4,234971740,0,0x0,8
tick,0x7ff8e7af1be4,234987087,0,0x0,8
tick,0x7ff8e7af1be4,234995640,0,0x0,8
tick,0x7ff8e7af1be4,235008102,0,0x0,8
tick,0x7ff8e7af1be4,235020083,0,0x0,8
tick,0x7ff8e7af1be4,235036585,0,0x0,8
tick,0x7ff8e7af1be4,235052935,0,0x0,8
tick,0x7ff8e7af1be4,235068942,0,0x0,8
tick,0x7ff8e7af1be4,235084682,0,0x0,8
tick,0x7ff8e7af1be4,235100808,0,0x0,8
tick,0x7ff8e7af1be4,235116552,0,0x0,8
tick,0x7ff8e7af1be4,235132375,0,0x0,8
tick,0x7ff8e7af1be4,235148361,0,0x0,8
tick,0x7ff8e7af1be4,235164508,0,0x0,8
tick,0x7ff8e7af1be4,235173276,0,0x0,8
tick,0x7ff8e7af1be4,235182566,0,0x0,8
tick,0x7ff8e7af1be4,235193838,0,0x0,8
tick,0x7ff8e7af1be4,235202896,0,0x0,8
tick,0x7ff8e7af1be4,235218100,0,0x0,8
tick,0x7ff8e7af1be4,235233651,0,0x0,8
tick,0x7ff8e7af1be4,235249392,0,0x0,8
tick,0x7ff8e7af1be4,235265232,0,0x0,8
tick,0x7ff8e7af1be4,235281348,0,0x0,8
tick,0x7ff8e7af1be4,235297209,0,0x0,8
tick,0x7ff8e7af1be4,235313091,0,0x0,8
tick,0x7ff8e7af1be4,235328752,0,0x0,8
tick,0x7ff8e7af1be4,235345329,0,0x0,8
tick,0x7ff8e7af1be4,235360863,0,0x0,8
tick,0x7ff8e7af1be4,235376995,0,0x0,8
tick,0x7ff8e7af1be4,235392794,0,0x0,8
tick,0x7ff8e7af1be4,235408726,0,0x0,8
tick,0x7ff8e7af1be4,235416625,0,0x0,8
tick,0x7ff8e7af1be4,235424592,0,0x0,8
tick,0x7ff8e7af1be4,235440541,0,0x0,8
tick,0x7ff8e7af1be4,235456438,0,0x0,8
tick,0x7ff8e7af1be4,235469888,0,0x0,8
tick,0x7ff8e7af1be4,235489072,0,0x0,8
tick,0x7ff8e7af1be4,235504572,0,0x0,8
tick,0x7ff8e7af1be4,235512995,0,0x0,8
tick,0x7ff8e7af1be4,235530674,0,0x0,8
tick,0x7ff8e7af1be4,235626158,0,0x0,8
tick,0x7ff8e7af1be4,235626217,0,0x0,8
tick,0x7ff8e7af1be4,235626225,0,0x0,8
tick,0x7ff8e7af1be4,235641452,0,0x0,8
tick,0x7ff8e7af1be4,235656624,0,0x0,8
tick,0x7ff8e7af1be4,235672389,0,0x0,8
tick,0x7ff8e7af1be4,235688500,0,0x0,8
tick,0x7ff8e7af1be4,235704189,0,0x0,8
tick,0x7ff8e7af1be4,235720430,0,0x0,8
tick,0x7ff8e7af1be4,235736249,0,0x0,8
tick,0x7ff8e7af1be4,235752322,0,0x0,8
tick,0x7ff8e7af1be4,235768216,0,0x0,8
tick,0x7ff8e7af1be4,235783990,0,0x0,8
tick,0x7ff8e7af1be4,235800080,0,0x0,8
tick,0x7ff8e7af1be4,235815684,0,0x0,8
tick,0x7ff8e7af1be4,235831500,0,0x0,8
tick,0x7ff8e7af1be4,235847288,0,0x0,8
tick,0x7ff8e7af1be4,235863340,0,0x0,8
tick,0x7ff8e7af1be4,235879321,0,0x0,8
tick,0x7ff8e7af1be4,235895220,0,0x0,8
tick,0x7ff8e7af1be4,235911368,0,0x0,8
tick,0x7ff8e7af1be4,235927055,0,0x0,8
tick,0x7ff8e7af1be4,235942769,0,0x0,8
tick,0x7ff8e7af1be4,235958369,0,0x0,8
tick,0x7ff8e7af1be4,235974333,0,0x0,8
tick,0x7ff8e7af1be4,235990022,0,0x0,8
tick,0x7ff8e7af1be4,236004324,0,0x0,8
tick,0x7ff8e7af1be4,236020612,0,0x0,8
tick,0x7ff8e7af1be4,236036423,0,0x0,8
tick,0x7ff8e7af1be4,236052255,0,0x0,8
tick,0x7ff8e7af1be4,236071005,0,0x0,8
tick,0x7ff8e7af1be4,236076013,0,0x0,8
tick,0x7ff8e7af1be4,236092047,0,0x0,8
tick,0x7ff8e7af1be4,236108079,0,0x0,8
tick,0x7ff8e7af1be4,236116324,0,0x0,8
tick,0x7ff8e7af1be4,236132231,0,0x0,8
tick,0x7ff8e7af1be4,236140378,0,0x0,8
tick,0x7ff8e7af1be4,236156162,0,0x0,8
tick,0x7ff8e7af1be4,236172085,0,0x0,8
tick,0x7ff8e7af1be4,236187908,0,0x0,8
tick,0x7ff8e7af1be4,236203563,0,0x0,8
tick,0x7ff8e7af1be4,236218999,0,0x0,8
tick,0x7ff8e7af1be4,236234745,0,0x0,8
tick,0x7ff8e7af1be4,236250380,0,0x0,8
tick,0x7ff8e7af1be4,236266652,0,0x0,8
tick,0x7ff8e7af1be4,236282414,0,0x0,8
tick,0x7ff8e7af1be4,236298160,0,0x0,8
tick,0x7ff8e7af1be4,236314332,0,0x0,8
tick,0x7ff8e7af1be4,236330108,0,0x0,8
tick,0x7ff8e7af1be4,236345871,0,0x0,8
tick,0x7ff8e7af1be4,236361167,0,0x0,8
tick,0x7ff8e7af1be4,236373094,0,0x0,8
tick,0x7ff8e7af1be4,236389094,0,0x0,8
tick,0x7ff8e7af1be4,236399192,0,0x0,8
tick,0x7ff8e7af1be4,236421936,0,0x0,8
tick,0x7ff8e7af1be4,236446257,0,0x0,8
tick,0x7ff8e7af1be4,236462738,0,0x0,8
tick,0x7ff8e7af1be4,236479293,0,0x0,8
tick,0x7ff8e7af1be4,236495347,0,0x0,8
tick,0x7ff8e7af1be4,236511722,0,0x0,8
tick,0x7ff8e7af1be4,236528084,0,0x0,8
tick,0x7ff8e7af1be4,236544401,0,0x0,8
tick,0x7ff8e7af1be4,236568871,0,0x0,8
tick,0x7ff8e7af1be4,236585189,0,0x0,8
tick,0x7ff8e7af1be4,236601144,0,0x0,8
tick,0x7ff8e7af1be4,236609028,0,0x0,8
tick,0x7ff8e7af1be4,236633220,0,0x0,8
tick,0x7ff8e7af1be4,236657228,0,0x0,8
tick,0x7ff8e7af1be4,236665510,0,0x0,8
tick,0x7ff8e7af1be4,236681804,0,0x0,8
tick,0x7ff8e7af1be4,236706785,0,0x0,8
tick,0x7ff8e7af1be4,236723778,0,0x0,8
tick,0x7ff8e7af1be4,236739559,0,0x0,8
tick,0x7ff8e7af1be4,236755466,0,0x0,8
tick,0x7ff8e7af1be4,236765570,0,0x0,8
tick,0x7ff8e7af1be4,236789893,0,0x0,8
tick,0x7ff8e7af1be4,236806481,0,0x0,8
tick,0x7ff8e7af1be4,236823257,0,0x0,8
tick,0x7ff8e7af1be4,236839403,0,0x0,8
tick,0x7ff8e7af1be4,236851003,0,0x0,8
tick,0x7ff8e7af1be4,236863477,0,0x0,8
tick,0x7ff8e7af1be4,236879241,0,0x0,8
tick,0x7ff8e7af1be4,236895287,0,0x0,8
tick,0x7ff8e7af1be4,236906339,0,0x0,8
tick,0x7ff8e7af1be4,236913731,0,0x0,8
tick,0x7ff8e7af1be4,236938358,0,0x0,8
tick,0x7ff8e7af1be4,236949620,0,0x0,8
tick,0x7ff8e7af1be4,236962825,0,0x0,8
tick,0x7ff8e7af1be4,236972444,0,0x0,8
tick,0x7ff8e7af1be4,236981732,0,0x0,8
tick,0x7ff8e7af1be4,237000159,0,0x0,8
tick,0x7ff8e7af1be4,237007022,0,0x0,8
tick,0x7ff8e7af1be4,237014670,0,0x0,8
tick,0x7ff8e7af1be4,237028403,0,0x0,8
tick,0x7ff8e7af1be4,237038979,0,0x0,8
tick,0x7ff8e7af1be4,237054742,0,0x0,8
tick,0x7ff8e7af1be4,237070906,0,0x0,8
tick,0x7ff8e7af1be4,237086776,0,0x0,8
tick,0x7ff8e7af1be4,237094937,0,0x0,8
tick,0x7ff8e7af1be4,237110930,0,0x0,8
tick,0x7ff8e7af1be4,237119107,0,0x0,8
tick,0x7ff8e7af1be4,237144031,0,0x0,8
tick,0x7ff8e7af1be4,237159597,0,0x0,8
tick,0x7ff8e7af1be4,237175314,0,0x0,8
tick,0x7ff8e7af1be4,237191569,0,0x0,8
tick,0x7ff8e7af1be4,237207654,0,0x0,8
tick,0x7ff8e7af1be4,237223346,0,0x0,8
tick,0x7ff8e7af1be4,237239132,0,0x0,8
tick,0x7ff8e7af1be4,237248440,0,0x0,8
tick,0x7ff8e7af1be4,237257018,0,0x0,8
tick,0x7ff8e7af1be4,237271260,0,0x0,8
tick,0x7ff8e7af1be4,237280705,0,0x0,8
tick,0x7ff8e7af1be4,237288861,0,0x0,8
tick,0x7ff8e7af1be4,237297232,0,0x0,8
tick,0x7ff8e7af1be4,237308519,0,0x0,8
tick,0x7ff8e7af1be4,237322234,0,0x0,8
tick,0x7ff8e7af1be4,237338505,0,0x0,8
tick,0x7ff8e7af1be4,237355067,0,0x0,8
tick,0x7ff8e7af1be4,237371690,0,0x0,8
tick,0x7ff8e7af1be4,237388072,0,0x0,8
tick,0x7ff8e7af1be4,237398925,0,0x0,8
tick,0x7ff8e7af1be4,237412729,0,0x0,8
tick,0x7ff8e7af1be4,237425247,0,0x0,8
tick,0x7ff8e7af1be4,237437723,0,0x0,8
tick,0x7ff8e7af1be4,237445765,0,0x0,8
tick,0x7ff8e7af1be4,237460266,0,0x0,8
tick,0x7ff8e7af1be4,237470048,0,0x0,8
tick,0x7ff8e7af1be4,237479942,0,0x0,8
tick,0x7ff8e7af1be4,237487304,0,0x0,8
tick,0x7ff8e7af1be4,237502897,0,0x0,8
tick,0x7ff8e7af1be4,237519501,0,0x0,8
tick,0x7ff8e7af1be4,237527800,0,0x0,8
tick,0x7ff8e7af1be4,237535737,0,0x0,8
tick,0x7ff8e7af1be4,237551680,0,0x0,8
tick,0x7ff8e7af1be4,237559816,0,0x0,8
tick,0x7ff8e7af1be4,237567964,0,0x0,8
tick,0x7ff8e7af1be4,237583962,0,0x0,8
tick,0x7ff8e7af1be4,237592337,0,0x0,8
tick,0x7ff8e7af1be4,237608465,0,0x0,8
tick,0x7ff8e7af1be4,237624716,0,0x0,8
tick,0x7ff8e7af1be4,237635908,0,0x0,8
tick,0x7ff8e7af1be4,237649359,0,0x0,8
tick,0x7ff8e7af1be4,237665758,0,0x0,8
tick,0x7ff8e7af1be4,237681542,0,0x0,8
tick,0x7ff8e7af1be4,237689723,0,0x0,8
tick,0x7ff8e7af1be4,237699369,0,0x0,8
tick,0x7ff8e7af1be4,237714303,0,0x0,8
tick,0x7ff8e7af1be4,237730428,0,0x0,8
tick,0x7ff8e7af1be4,237746713,0,0x0,8
tick,0x7ff8e7af1be4,237755260,0,0x0,8
tick,0x7ff8e7af1be4,237770858,0,0x0,8
tick,0x7ff8e7af1be4,237786797,0,0x0,8
tick,0x7ff8e7af1be4,237802758,0,0x0,8
tick,0x7ff8e7af1be4,237818848,0,0x0,8
tick,0x7ff8e7af1be4,237826927,0,0x0,8
tick,0x7ff8e7af1be4,237843062,0,0x0,8
tick,0x7ff8e7af1be4,237856672,0,0x0,8
tick,0x7ff8e7af1be4,237865550,0,0x0,8
tick,0x7ff8e7af1be4,237884245,0,0x0,8
tick,0x7ff8e7af1be4,237905685,0,0x0,8
tick,0x7ff8e7af1be4,237908424,0,0x0,8
tick,0x7ff8e7af1be4,237917804,0,0x0,8
tick,0x7ff8e7af1be4,237933109,0,0x0,8
tick,0x7ff8e7af1be4,237949056,0,0x0,8
tick,0x7ff8e7af1be4,237964988,0,0x0,8
tick,0x7ff8e7af1be4,237973118,0,0x0,8
tick,0x7ff8e7af1be4,237989147,0,0x0,8
tick,0x7ff8e7af1be4,238004370,0,0x0,8
tick,0x7ff8e7af1be4,238020623,0,0x0,8
tick,0x7ff8e7af1be4,238036583,0,0x0,8
tick,0x7ff8e7af1be4,238052399,0,0x0,8
tick,0x7ff8e7af1be4,238068491,0,0x0,8
tick,0x7ff8e7af1be4,238084472,0,0x0,8
tick,0x7ff8e7af1be4,238100502,0,0x0,8
tick,0x7ff8e7af1be4,238116191,0,0x0,8
tick,0x7ff8e7af1be4,238131747,0,0x0,8
tick,0x7ff8e7af1be4,238147507,0,0x0,8
tick,0x7ff8e7af1be4,238170618,0,0x0,8
tick,0x7ff8e7af1be4,238186778,0,0x0,8
tick,0x7ff8e7af1be4,238202432,0,0x0,8
tick,0x7ff8e7af1be4,238218838,0,0x0,8
tick,0x7ff8e7af1be4,238234857,0,0x0,8
tick,0x7ff8e7af1be4,238251070,0,0x0,8
tick,0x7ff8e7af1be4,238267136,0,0x0,8
tick,0x7ff8e7af1be4,238283067,0,0x0,8
tick,0x7ff8e7af1be4,238298608,0,0x0,8
tick,0x7ff8e7af1be4,238314281,0,0x0,8
tick,0x7ff8e7af1be4,238330265,0,0x0,8
tick,0x7ff8e7af1be4,238345956,0,0x0,8
tick,0x7ff8e7af1be4,238347703,0,0x0,8
tick,0x7ff8e7af1be4,238353899,0,0x0,8
tick,0x7ff8e7af1be4,238356659,0,0x0,8
tick,0x7ff8e7af1be4,238358041,0,0x0,8
tick,0x7ff8e7af1be4,238374165,0,0x0,8
tick,0x7ff8e7af1be4,238390069,0,0x0,8
tick,0x7ff8e7af1be4,238406110,0,0x0,8
tick,0x7ff8e7af1be4,238421961,0,0x0,8
tick,0x7ff8e7af1be4,238437566,0,0x0,8
tick,0x7ff8e7af1be4,238453628,0,0x0,8
tick,0x7ff8e7af1be4,238470720,0,0x0,8
tick,0x7ff8e7af1be4,238472890,0,0x0,8
tick,0x7ff8e7af1be4,238488528,0,0x0,8
tick,0x7ff8e7af1be4,238504236,0,0x0,8
tick,0x7ff8e7af1be4,238520362,0,0x0,8
tick,0x7ff8e7af1be4,238535948,0,0x0,8
tick,0x7ff8e7af1be4,238551799,0,0x0,8
tick,0x7ff8e7af1be4,238567704,0,0x0,8
tick,0x7ff8e7af1be4,238583733,0,0x0,8
tick,0x7ff8e7af1be4,238599798,0,0x0,8
tick,0x7ff8e7af1be4,238615130,0,0x0,8
tick,0x7ff8e7af1be4,238631232,0,0x0,8
tick,0x7ff8e7af1be4,238647108,0,0x0,8
tick,0x7ff8e7af1be4,238663126,0,0x0,8
tick,0x7ff8e7af1be4,238679103,0,0x0,8
tick,0x7ff8e7af1be4,238694733,0,0x0,8
tick,0x7ff8e7af1be4,238711493,0,0x0,8
tick,0x7ff8e7af1be4,238726224,0,0x0,8
tick,0x7ff8e7af1be4,238741915,0,0x0,8
tick,0x7ff8e7af1be4,238758711,0,0x0,8
tick,0x7ff8e7af1be4,238773333,0,0x0,8
tick,0x7ff8e7af1be4,238789698,0,0x0,8
tick,0x7ff8e7af1be4,238805563,0,0x0,8
tick,0x7ff8e7af1be4,238821818,0,0x0,8
tick,0x7ff8e7af1be4,238836894,0,0x0,8
tick,0x7ff8e7af1be4,238852467,0,0x0,8
tick,0x7ff8e7af1be4,238860190,0,0x0,8
tick,0x7ff8e7af1be4,238861517,0,0x0,8
tick,0x7ff8e7af1be4,238862825,0,0x0,8
tick,0x7ff8e7af1be4,238864236,0,0x0,8
tick,0x7ff8e7af1be4,238880274,0,0x0,8
tick,0x7ff8e7af1be4,238895911,0,0x0,8
tick,0x7ff8e7af1be4,238911473,0,0x0,8
tick,0x7ff8e7af1be4,238927097,0,0x0,8
tick,0x7ff8e7af1be4,238942676,0,0x0,8
tick,0x7ff8e7af1be4,238958356,0,0x0,8
tick,0x7ff8e7af1be4,238974118,0,0x0,8
tick,0x7ff8e7af1be4,238989899,0,0x0,8
tick,0x7ff8e7af1be4,239005766,0,0x0,8
tick,0x7ff8e7af1be4,239021560,0,0x0,8
tick,0x7ff8e7af1be4,239037716,0,0x0,8
tick,0x7ff8e7af1be4,239053562,0,0x0,8
tick,0x7ff8e7af1be4,239069524,0,0x0,8
tick,0x7ff8e7af1be4,239085121,0,0x0,8
tick,0x7ff8e7af1be4,239100497,0,0x0,8
tick,0x7ff8e7af1be4,239116265,0,0x0,8
tick,0x7ff8e7af1be4,239131847,0,0x0,8
tick,0x7ff8e7af1be4,239147511,0,0x0,8
tick,0x7ff8e7af1be4,239163194,0,0x0,8
tick,0x7ff8e7af1be4,239179636,0,0x0,8
tick,0x7ff8e7af1be4,239194822,0,0x0,8
tick,0x7ff8e7af1be4,239210617,0,0x0,8
tick,0x7ff8e7af1be4,239226732,0,0x0,8
tick,0x7ff8e7af1be4,239243439,0,0x0,8
tick,0x7ff8e7af1be4,239259705,0,0x0,8
tick,0x7ff8e7af1be4,239275038,0,0x0,8
tick,0x7ff8e7af1be4,239284192,0,0x0,8
tick,0x7ff8e7af1be4,239292285,0,0x0,8
tick,0x7ff8e7af1be4,239308582,0,0x0,8
tick,0x7ff8e7af1be4,239325979,0,0x0,8
tick,0x7ff8e7af1be4,239341547,0,0x0,8
tick,0x7ff8e7af1be4,239349927,0,0x0,8
tick,0x7ff8e7af1be4,239357988,0,0x0,8
tick,0x7ff8e7af1be4,239366679,0,0x0,8
tick,0x7ff8e7af1be4,239375415,0,0x0,8
tick,0x7ff8e7af1be4,239383925,0,0x0,8
tick,0x7ff8e7af1be4,239399878,0,0x0,8
tick,0x7ff8e7af1be4,239415915,0,0x0,8
tick,0x7ff8e7af1be4,239432039,0,0x0,8
tick,0x7ff8e7af1be4,239447955,0,0x0,8
tick,0x7ff8e7af1be4,239463924,0,0x0,8
tick,0x7ff8e7af1be4,239480155,0,0x0,8
tick,0x7ff8e7af1be4,239495772,0,0x0,8
tick,0x7ff8e7af1be4,239511476,0,0x0,8
tick,0x7ff8e7af1be4,239527447,0,0x0,8
tick,0x7ff8e7af1be4,239542796,0,0x0,8
tick,0x7ff8e7af1be4,239558800,0,0x0,8
tick,0x7ff8e7af1be4,239575101,0,0x0,8
tick,0x7ff8e7af1be4,239591021,0,0x0,8
tick,0x7ff8e7af1be4,239606584,0,0x0,8
tick,0x7ff8e7af1be4,239622188,0,0x0,8
tick,0x7ff8e7af1be4,239637883,0,0x0,8
tick,0x7ff8e7af1be4,239653816,0,0x0,8
tick,0x7ff8e7af1be4,239669565,0,0x0,8
tick,0x7ff8e7af1be4,239685355,0,0x0,8
tick,0x7ff8e7af1be4,239700899,0,0x0,8
tick,0x7ff8e7af1be4,239716879,0,0x0,8
tick,0x7ff8e7af1be4,239732550,0,0x0,8
tick,0x7ff8e7af1be4,239748407,0,0x0,8
tick,0x7ff8e7af1be4,239764079,0,0x0,8
tick,0x7ff8e7af1be4,239779802,0,0x0,8
tick,0x7ff8e7af1be4,239795459,0,0x0,8
tick,0x7ff8e7af1be4,239811317,0,0x0,8
tick,0x7ff8e7af1be4,239826976,0,0x0,8
tick,0x7ff8e7af1be4,239842418,0,0x0,8
tick,0x7ff8e7af1be4,239858076,0,0x0,8
tick,0x7ff8e7af1be4,239874215,0,0x0,8
tick,0x7ff8e7af1be4,239890278,0,0x0,8
tick,0x7ff8e7af1be4,239891569,0,0x0,8
tick,0x7ff8e7af1be4,239893824,0,0x0,8
tick,0x7ff8e7af1be4,239895911,0,0x0,8
tick,0x7ff8e7af1be4,239897582,0,0x0,8
tick,0x7ff8e7af1be4,239913612,0,0x0,8
tick,0x7ff8e7af1be4,239929339,0,0x0,8
tick,0x7ff8e7af1be4,239944937,0,0x0,8
tick,0x7ff8e7af1be4,239982188,0,0x0,8
tick,0x7ff8e7af1be4,239985036,0,0x0,8
tick,0x7ff8e7af1be4,240000951,0,0x0,8
tick,0x7ff8e7af1be4,240016708,0,0x0,8
tick,0x7ff8e7af1be4,240032564,0,0x0,8
tick,0x7ff8e7af1be4,240048842,0,0x0,8
tick,0x7ff8e7af1be4,240064891,0,0x0,8
tick,0x7ff8e7af1be4,240080531,0,0x0,8
tick,0x7ff8e7af1be4,240097875,0,0x0,8
tick,0x7ff8e7af1be4,240112489,0,0x0,8
tick,0x7ff8e7af1be4,240128005,0,0x0,8
tick,0x7ff8e7af1be4,240143736,0,0x0,8
tick,0x7ff8e7af1be4,240159588,0,0x0,8
tick,0x7ff8e7af1be4,240176066,0,0x0,8
tick,0x7ff8e7af1be4,240191455,0,0x0,8
tick,0x7ff8e7af1be4,240208062,0,0x0,8
tick,0x7ff8e7af1be4,240222860,0,0x0,8
tick,0x7ff8e7af1be4,240239000,0,0x0,8
tick,0x7ff8e7af1be4,240253787,0,0x0,8
tick,0x7ff8e7af1be4,240269763,0,0x0,8
tick,0x7ff8e7af1be4,240277743,0,0x0,8
tick,0x7ff8e7af1be4,240294150,0,0x0,8
tick,0x7ff8e7af1be4,240304868,0,0x0,8
tick,0x7ff8e7af1be4,240319020,0,0x0,8
tick,0x7ff8e7af1be4,240329862,0,0x0,8
tick,0x7ff8e7af1be4,240343696,0,0x0,8
tick,0x7ff8e7af1be4,240359682,0,0x0,8
tick,0x7ff8e7af1be4,240370198,0,0x0,8
tick,0x7ff8e7af1be4,240384499,0,0x0,8
tick,0x7ff8e7af1be4,240400764,0,0x0,8
tick,0x7ff8e7af1be4,240415981,0,0x0,8
tick,0x7ff8e7af1be4,240424423,0,0x0,8
tick,0x7ff8e7af1be4,240440798,0,0x0,8
tick,0x7ff8e7af1be4,240465042,0,0x0,8
tick,0x7ff8e7af1be4,240481052,0,0x0,8
tick,0x7ff8e7af1be4,240496758,0,0x0,8
tick,0x7ff8e7af1be4,240512343,0,0x0,8
tick,0x7ff8e7af1be4,240528005,0,0x0,8
tick,0x7ff8e7af1be4,240543647,0,0x0,8
tick,0x7ff8e7af1be4,240559290,0,0x0,8
tick,0x7ff8e7af1be4,240574913,0,0x0,8
tick,0x7ff8e7af1be4,240590945,0,0x0,8
tick,0x7ff8e7af1be4,240606853,0,0x0,8
tick,0x7ff8e7af1be4,240623110,0,0x0,8
tick,0x7ff8e7af1be4,240638497,0,0x0,8
tick,0x7ff8e7af1be4,240654708,0,0x0,8
tick,0x7ff8e7af1be4,240671247,0,0x0,8
tick,0x7ff8e7af1be4,240685662,0,0x0,8
tick,0x7ff8e7af1be4,240701910,0,0x0,8
tick,0x7ff8e7af1be4,240717827,0,0x0,8
